<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (5,990 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.05%)</title><rect x="10.4" y="931.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.4" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.05%)</title><rect x="10.4" y="915.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (3 samples, 0.05%)</title><rect x="10.4" y="899.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.05%)</title><rect x="10.4" y="883.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.4" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.03%)</title><rect x="10.4" y="867.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.4" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.10%)</title><rect x="11.2" y="931.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.2" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="11.2" y="915.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.2" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="11.6" y="915.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="11.6" y="899.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.6" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="12.0" y="915.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.15%)</title><rect x="12.4" y="931.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="15.4" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.05%)</title><rect x="12.4" y="915.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="15.4" y="926.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="13.2" y="915.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="16.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="13.5" y="899.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="13.5" y="883.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="13.5" y="867.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.5" y="878.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="13.5" y="851.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.5" y="862.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.05%)</title><rect x="13.5" y="835.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.5" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="13.5" y="819.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.5" y="830.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="13.5" y="803.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.5" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="13.7" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="16.7" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="13.7" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.7" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.15%)</title><rect x="14.1" y="931.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="17.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="14.3" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.3" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="14.7" y="915.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.7" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.05%)</title><rect x="15.1" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,147 samples, 69.23%)</title><rect x="16.1" y="931.0" width="816.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.1" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,145 samples, 69.20%)</title><rect x="16.1" y="915.0" width="816.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.1" y="926.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,145 samples, 69.20%)</title><rect x="16.1" y="899.0" width="816.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="910.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (32 samples, 0.53%)</title><rect x="18.1" y="883.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (30 samples, 0.50%)</title><rect x="18.5" y="867.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.5" y="878.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (21 samples, 0.35%)</title><rect x="19.3" y="851.0" width="4.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="22.3" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="20.2" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.2" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="21.2" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.2" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="21.8" y="835.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.8" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="22.4" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.4" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="22.8" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="25.8" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="23.4" y="851.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.05%)</title><rect x="24.4" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (2 samples, 0.03%)</title><rect x="24.6" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="24.6" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="24.6" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.6" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="24.6" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="24.6" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (13 samples, 0.22%)</title><rect x="25.0" y="883.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.22%)</title><rect x="25.0" y="867.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.05%)</title><rect x="26.5" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.03%)</title><rect x="27.1" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (12 samples, 0.20%)</title><rect x="27.5" y="883.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.5" y="894.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.08%)</title><rect x="27.9" y="867.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="30.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="29.1" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$66/300860225.run (2 samples, 0.03%)</title><rect x="29.5" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.beforeExecute (3 samples, 0.05%)</title><rect x="30.1" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,011 samples, 16.88%)</title><rect x="30.7" y="883.0" width="199.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.7" y="894.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (992 samples, 16.56%)</title><rect x="33.4" y="867.0" width="195.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.4" y="878.0">java/util/concurrent/Arra..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (746 samples, 12.45%)</title><rect x="34.8" y="851.0" width="147.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.8" y="862.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (48 samples, 0.80%)</title><rect x="36.2" y="835.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.2" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="37.4" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="40.4" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="37.4" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.4" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="37.4" y="787.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="40.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="37.4" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="40.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (39 samples, 0.65%)</title><rect x="37.8" y="819.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (16 samples, 0.27%)</title><rect x="38.2" y="803.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (20 samples, 0.33%)</title><rect x="41.3" y="803.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="44.9" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (2 samples, 0.03%)</title><rect x="45.7" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.03%)</title><rect x="45.7" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="45.7" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.7" y="814.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.03%)</title><rect x="45.7" y="787.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="48.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="46.1" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (38 samples, 0.63%)</title><rect x="46.4" y="835.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.58%)</title><rect x="47.0" y="819.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.58%)</title><rect x="47.0" y="803.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.37%)</title><rect x="49.6" y="787.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.37%)</title><rect x="49.6" y="771.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.6" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.10%)</title><rect x="49.6" y="755.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="52.6" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="50.0" y="739.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="53.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.27%)</title><rect x="50.8" y="755.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="53.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.20%)</title><rect x="51.6" y="739.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="54.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.18%)</title><rect x="51.8" y="723.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.18%)</title><rect x="51.8" y="707.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="54.8" y="718.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.18%)</title><rect x="51.8" y="691.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="54.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.18%)</title><rect x="51.8" y="675.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="54.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.17%)</title><rect x="52.0" y="659.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="55.0" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.17%)</title><rect x="52.0" y="643.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.0" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.17%)</title><rect x="52.0" y="627.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="55.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (5 samples, 0.08%)</title><rect x="53.9" y="835.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.03%)</title><rect x="54.5" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (644 samples, 10.75%)</title><rect x="54.9" y="835.0" width="126.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.9" y="846.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (643 samples, 10.73%)</title><rect x="55.1" y="819.0" width="126.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.1" y="830.0">jdk/internal/mis..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="56.7" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="59.7" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.05%)</title><rect x="57.3" y="803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="60.3" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (246 samples, 4.11%)</title><rect x="57.9" y="803.0" width="48.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="60.9" y="814.0">Unsa..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (5 samples, 0.08%)</title><rect x="60.2" y="787.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="63.2" y="798.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (6 samples, 0.10%)</title><rect x="61.2" y="787.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="64.2" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (52 samples, 0.87%)</title><rect x="62.4" y="787.0" width="10.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="65.4" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (14 samples, 0.23%)</title><rect x="67.1" y="771.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="70.1" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.03%)</title><rect x="69.5" y="755.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="72.5" y="766.0"></text>
</g>
<g>
<title>Monitor::unlock() (6 samples, 0.10%)</title><rect x="69.9" y="771.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="72.9" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.12%)</title><rect x="71.1" y="771.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="74.1" y="782.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="72.6" y="787.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="75.6" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (8 samples, 0.13%)</title><rect x="73.0" y="787.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="76.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (7 samples, 0.12%)</title><rect x="74.6" y="787.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="77.6" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (9 samples, 0.15%)</title><rect x="76.0" y="787.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="79.0" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (119 samples, 1.99%)</title><rect x="78.0" y="787.0" width="23.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.0" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.83%)</title><rect x="91.6" y="771.0" width="9.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="94.6" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="91.6" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="94.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.78%)</title><rect x="92.1" y="755.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="95.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.45%)</title><rect x="95.9" y="739.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.9" y="750.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.40%)</title><rect x="95.9" y="723.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="98.9" y="734.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.32%)</title><rect x="96.1" y="707.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.1" y="718.0"></text>
</g>
<g>
<title>get_futex_key (9 samples, 0.15%)</title><rect x="97.9" y="691.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="100.9" y="702.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (8 samples, 0.13%)</title><rect x="98.1" y="675.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.1" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="99.8" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="102.8" y="718.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="100.2" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="103.2" y="718.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="100.6" y="723.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="101.4" y="787.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="104.4" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (5 samples, 0.08%)</title><rect x="102.4" y="787.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="105.4" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (8 samples, 0.13%)</title><rect x="103.4" y="787.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="106.4" y="798.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.05%)</title><rect x="105.0" y="787.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="108.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (2 samples, 0.03%)</title><rect x="105.5" y="787.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="108.5" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.03%)</title><rect x="105.9" y="787.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="108.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (379 samples, 6.33%)</title><rect x="106.3" y="803.0" width="74.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="109.3" y="814.0">[unknown]</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (11 samples, 0.18%)</title><rect x="106.3" y="787.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="109.3" y="798.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (7 samples, 0.12%)</title><rect x="108.5" y="787.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="111.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (344 samples, 5.74%)</title><rect x="109.9" y="787.0" width="67.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="112.9" y="798.0">__pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (210 samples, 3.51%)</title><rect x="136.3" y="771.0" width="41.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="139.3" y="782.0">ent..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="136.3" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (208 samples, 3.47%)</title><rect x="136.7" y="755.0" width="40.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="139.7" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (176 samples, 2.94%)</title><rect x="142.6" y="739.0" width="34.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="145.6" y="750.0">__..</text>
</g>
<g>
<title>do_futex (166 samples, 2.77%)</title><rect x="144.0" y="723.0" width="32.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="147.0" y="734.0">do..</text>
</g>
<g>
<title>futex_wait (160 samples, 2.67%)</title><rect x="144.5" y="707.0" width="31.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.5" y="718.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (119 samples, 1.99%)</title><rect x="147.7" y="691.0" width="23.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="150.7" y="702.0">f..</text>
</g>
<g>
<title>schedule (104 samples, 1.74%)</title><rect x="150.7" y="675.0" width="20.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="153.7" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (104 samples, 1.74%)</title><rect x="150.7" y="659.0" width="20.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="153.7" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (87 samples, 1.45%)</title><rect x="154.0" y="643.0" width="17.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="157.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (19 samples, 0.32%)</title><rect x="171.1" y="691.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="174.1" y="702.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="171.9" y="675.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="174.9" y="686.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.03%)</title><rect x="172.5" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="175.5" y="686.0"></text>
</g>
<g>
<title>get_futex_value_locked (10 samples, 0.17%)</title><rect x="172.9" y="675.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.9" y="686.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.05%)</title><rect x="174.9" y="691.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="177.9" y="702.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="175.5" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="178.5" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="176.3" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.3" y="718.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.05%)</title><rect x="176.7" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.7" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="177.2" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="180.2" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.12%)</title><rect x="177.6" y="787.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="180.6" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="179.0" y="787.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="182.0" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (7 samples, 0.12%)</title><rect x="179.4" y="787.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="182.4" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.07%)</title><rect x="181.0" y="803.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="184.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (34 samples, 0.57%)</title><rect x="181.8" y="851.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (33 samples, 0.55%)</title><rect x="182.0" y="835.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (9 samples, 0.15%)</title><rect x="182.0" y="819.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (19 samples, 0.32%)</title><rect x="183.7" y="819.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.08%)</title><rect x="184.9" y="803.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.08%)</title><rect x="184.9" y="787.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.08%)</title><rect x="184.9" y="771.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.07%)</title><rect x="184.9" y="755.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="187.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.10%)</title><rect x="186.1" y="803.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.10%)</title><rect x="186.1" y="787.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.05%)</title><rect x="186.3" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="186.9" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.08%)</title><rect x="187.5" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.08%)</title><rect x="187.5" y="803.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (4 samples, 0.07%)</title><rect x="187.7" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (205 samples, 3.42%)</title><rect x="188.5" y="851.0" width="40.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.5" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (205 samples, 3.42%)</title><rect x="188.5" y="835.0" width="40.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.5" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (205 samples, 3.42%)</title><rect x="188.5" y="819.0" width="40.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.5" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (205 samples, 3.42%)</title><rect x="188.5" y="803.0" width="40.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.5" y="814.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (198 samples, 3.31%)</title><rect x="189.9" y="787.0" width="39.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.9" y="798.0">jdk..</text>
</g>
<g>
<title>Unsafe_Unpark (31 samples, 0.52%)</title><rect x="190.1" y="771.0" width="6.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="193.1" y="782.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.03%)</title><rect x="190.8" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="193.8" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="191.6" y="755.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="194.6" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.13%)</title><rect x="192.0" y="755.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="195.0" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.05%)</title><rect x="193.6" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="196.6" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.17%)</title><rect x="194.2" y="755.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="197.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (163 samples, 2.72%)</title><rect x="196.2" y="771.0" width="32.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="199.2" y="782.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 2.15%)</title><rect x="202.9" y="755.0" width="25.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.9" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (129 samples, 2.15%)</title><rect x="202.9" y="739.0" width="25.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.9" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (121 samples, 2.02%)</title><rect x="204.4" y="723.0" width="23.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="207.4" y="734.0">_..</text>
</g>
<g>
<title>do_futex (119 samples, 1.99%)</title><rect x="204.8" y="707.0" width="23.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.8" y="718.0">d..</text>
</g>
<g>
<title>futex_wake (118 samples, 1.97%)</title><rect x="205.0" y="691.0" width="23.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="208.0" y="702.0">f..</text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="207.4" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="210.4" y="686.0"></text>
</g>
<g>
<title>wake_up_q (103 samples, 1.72%)</title><rect x="208.0" y="675.0" width="20.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.0" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (102 samples, 1.70%)</title><rect x="208.2" y="659.0" width="20.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="211.2" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (101 samples, 1.69%)</title><rect x="208.4" y="643.0" width="19.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="211.4" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.05%)</title><rect x="228.3" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="231.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$66/300860225.run (3 samples, 0.05%)</title><rect x="229.3" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (2 samples, 0.03%)</title><rect x="229.5" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (2 samples, 0.03%)</title><rect x="229.5" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="229.5" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="229.8" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$66/300860225.run (3,058 samples, 51.05%)</title><rect x="230.2" y="883.0" width="602.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.2" y="894.0">ru/mail/polis/service/boriskin/NewService$$Lambda$66/300860225.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="231.8" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,048 samples, 50.88%)</title><rect x="232.2" y="867.0" width="600.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.2" y="878.0">ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,097 samples, 18.31%)</title><rect x="232.4" y="851.0" width="216.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.4" y="862.0">ru/mail/polis/service/borisk..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.22%)</title><rect x="234.0" y="835.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.22%)</title><rect x="234.0" y="819.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.0" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="234.0" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="237.0" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="234.2" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="237.2" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.15%)</title><rect x="234.8" y="803.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.15%)</title><rect x="234.8" y="787.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.8" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="235.2" y="771.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="238.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.05%)</title><rect x="235.8" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doUpsert (1,075 samples, 17.95%)</title><rect x="236.7" y="835.0" width="211.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.7" y="846.0">ru/mail/polis/service/borisk..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (187 samples, 3.12%)</title><rect x="236.7" y="819.0" width="36.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.7" y="830.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (20 samples, 0.33%)</title><rect x="236.7" y="803.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (20 samples, 0.33%)</title><rect x="236.7" y="787.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (20 samples, 0.33%)</title><rect x="236.7" y="771.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="239.7" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.7" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="240.3" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="243.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="240.3" y="739.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="243.3" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="240.3" y="723.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="243.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (166 samples, 2.77%)</title><rect x="240.9" y="803.0" width="32.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.9" y="814.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.20%)</title><rect x="241.5" y="787.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.5" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.08%)</title><rect x="242.3" y="771.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="245.3" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.08%)</title><rect x="242.3" y="755.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="245.3" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.07%)</title><rect x="242.5" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="245.5" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="242.7" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="245.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="243.2" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="243.2" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (151 samples, 2.52%)</title><rect x="243.8" y="787.0" width="29.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.8" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (150 samples, 2.50%)</title><rect x="243.8" y="771.0" width="29.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.8" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.03%)</title><rect x="250.1" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (2 samples, 0.03%)</title><rect x="250.1" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64.getProbe (2 samples, 0.03%)</title><rect x="250.1" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (115 samples, 1.92%)</title><rect x="250.5" y="755.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.5" y="766.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (115 samples, 1.92%)</title><rect x="250.5" y="739.0" width="22.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.5" y="750.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (115 samples, 1.92%)</title><rect x="250.5" y="723.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.5" y="734.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (115 samples, 1.92%)</title><rect x="250.5" y="707.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.5" y="718.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (888 samples, 14.82%)</title><rect x="273.6" y="819.0" width="174.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.6" y="830.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (875 samples, 14.61%)</title><rect x="274.0" y="803.0" width="172.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.0" y="814.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.15%)</title><rect x="275.5" y="787.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="278.5" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.13%)</title><rect x="275.7" y="771.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="278.7" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.13%)</title><rect x="275.7" y="755.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="278.7" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (6 samples, 0.10%)</title><rect x="275.7" y="739.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="278.7" y="750.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="276.9" y="739.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="279.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (15 samples, 0.25%)</title><rect x="277.3" y="787.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.25%)</title><rect x="277.3" y="771.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.25%)</title><rect x="277.3" y="755.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="279.5" y="739.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="282.5" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="279.9" y="739.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="282.9" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="279.9" y="723.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="282.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (837 samples, 13.97%)</title><rect x="280.3" y="787.0" width="164.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.3" y="798.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 0.63%)</title><rect x="280.5" y="771.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="283.8" y="755.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.8" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="283.8" y="739.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="286.8" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="284.2" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="287.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="284.2" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="287.2" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="284.2" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="287.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.28%)</title><rect x="284.6" y="755.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.28%)</title><rect x="284.6" y="739.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.28%)</title><rect x="284.6" y="723.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (798 samples, 13.32%)</title><rect x="288.0" y="771.0" width="157.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.0" y="782.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session.write (797 samples, 13.31%)</title><rect x="288.2" y="755.0" width="157.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.2" y="766.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.05%)</title><rect x="288.6" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (792 samples, 13.22%)</title><rect x="289.1" y="739.0" width="156.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="292.1" y="750.0">one/nio/net/Session$..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="289.7" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (787 samples, 13.14%)</title><rect x="290.1" y="723.0" width="155.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.1" y="734.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (30 samples, 0.50%)</title><rect x="291.9" y="707.0" width="5.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="294.9" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.07%)</title><rect x="292.9" y="691.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="295.9" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.07%)</title><rect x="293.7" y="691.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="296.7" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="294.7" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="297.7" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.17%)</title><rect x="295.2" y="691.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="298.2" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.08%)</title><rect x="296.2" y="675.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="299.2" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="296.8" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="299.8" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="297.4" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="300.4" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="297.8" y="707.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="300.8" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="298.2" y="707.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="301.2" y="718.0"></text>
</g>
<g>
<title>__send (742 samples, 12.39%)</title><rect x="298.8" y="707.0" width="146.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="301.8" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (702 samples, 11.72%)</title><rect x="306.7" y="691.0" width="138.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.7" y="702.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.05%)</title><rect x="306.7" y="675.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="309.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (698 samples, 11.65%)</title><rect x="307.5" y="675.0" width="137.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="310.5" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (678 samples, 11.32%)</title><rect x="310.6" y="659.0" width="133.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.6" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (677 samples, 11.30%)</title><rect x="310.6" y="643.0" width="133.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="313.6" y="654.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (3 samples, 0.05%)</title><rect x="311.4" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.4" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (656 samples, 10.95%)</title><rect x="312.0" y="627.0" width="129.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="315.0" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.10%)</title><rect x="312.4" y="611.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="315.4" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (643 samples, 10.73%)</title><rect x="313.6" y="611.0" width="126.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.6" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (643 samples, 10.73%)</title><rect x="313.6" y="595.0" width="126.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.6" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="313.6" y="579.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="316.6" y="590.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="314.6" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="317.6" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="314.9" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="317.9" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (629 samples, 10.50%)</title><rect x="315.3" y="579.0" width="124.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="318.3" y="590.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (10 samples, 0.17%)</title><rect x="318.1" y="563.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="321.1" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.13%)</title><rect x="318.5" y="547.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="321.5" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.12%)</title><rect x="320.5" y="563.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="323.5" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.10%)</title><rect x="320.5" y="547.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="323.5" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.07%)</title><rect x="322.4" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="325.4" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.07%)</title><rect x="322.4" y="547.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="325.4" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.57%)</title><rect x="323.2" y="563.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="326.2" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (33 samples, 0.55%)</title><rect x="323.4" y="547.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (13 samples, 0.22%)</title><rect x="323.8" y="531.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="326.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.17%)</title><rect x="323.8" y="515.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.8" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="325.0" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.0" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="325.4" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="328.4" y="510.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="325.8" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.15%)</title><rect x="326.6" y="531.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="329.6" y="542.0"></text>
</g>
<g>
<title>ksize (7 samples, 0.12%)</title><rect x="328.3" y="531.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="331.3" y="542.0"></text>
</g>
<g>
<title>__ksize (7 samples, 0.12%)</title><rect x="328.3" y="515.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="331.3" y="526.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.10%)</title><rect x="329.9" y="563.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.9" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="330.7" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="333.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (537 samples, 8.96%)</title><rect x="331.5" y="563.0" width="105.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="334.5" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (536 samples, 8.95%)</title><rect x="331.5" y="547.0" width="105.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="334.5" y="558.0">__tcp_push_pe..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="331.7" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="334.7" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (533 samples, 8.90%)</title><rect x="332.1" y="531.0" width="105.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="335.1" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (489 samples, 8.16%)</title><rect x="334.3" y="515.0" width="96.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="337.3" y="526.0">__tcp_trans..</text>
</g>
<g>
<title>__skb_clone (4 samples, 0.07%)</title><rect x="336.8" y="499.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.8" y="510.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="337.6" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="340.6" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (459 samples, 7.66%)</title><rect x="338.2" y="499.0" width="90.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.2" y="510.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (456 samples, 7.61%)</title><rect x="338.4" y="483.0" width="89.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="341.4" y="494.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (445 samples, 7.43%)</title><rect x="340.2" y="467.0" width="87.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="343.2" y="478.0">ip_local_out</text>
</g>
<g>
<title>ip_output (443 samples, 7.40%)</title><rect x="340.4" y="451.0" width="87.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="343.4" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (439 samples, 7.33%)</title><rect x="341.1" y="435.0" width="86.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="344.1" y="446.0">ip_finish_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="341.3" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="344.3" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (432 samples, 7.21%)</title><rect x="341.9" y="419.0" width="85.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.9" y="430.0">__ip_finis..</text>
</g>
<g>
<title>ip_finish_output2 (428 samples, 7.15%)</title><rect x="342.5" y="403.0" width="84.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="345.5" y="414.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (376 samples, 6.28%)</title><rect x="345.3" y="387.0" width="74.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.3" y="398.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (375 samples, 6.26%)</title><rect x="345.5" y="371.0" width="73.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="348.5" y="382.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (372 samples, 6.21%)</title><rect x="346.1" y="355.0" width="73.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.1" y="366.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (372 samples, 6.21%)</title><rect x="346.1" y="339.0" width="73.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="349.1" y="350.0">__softir..</text>
</g>
<g>
<title>net_rx_action (364 samples, 6.08%)</title><rect x="347.5" y="323.0" width="71.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.5" y="334.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (358 samples, 5.98%)</title><rect x="348.6" y="307.0" width="70.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.6" y="318.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (355 samples, 5.93%)</title><rect x="349.0" y="291.0" width="70.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="352.0" y="302.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (354 samples, 5.91%)</title><rect x="349.0" y="275.0" width="69.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="352.0" y="286.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.10%)</title><rect x="349.8" y="259.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="352.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv (342 samples, 5.71%)</title><rect x="351.0" y="259.0" width="67.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.0" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.05%)</title><rect x="351.2" y="243.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="354.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (336 samples, 5.61%)</title><rect x="351.8" y="243.0" width="66.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="354.8" y="254.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (330 samples, 5.51%)</title><rect x="352.0" y="227.0" width="65.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.0" y="238.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (327 samples, 5.46%)</title><rect x="352.0" y="211.0" width="64.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.0" y="222.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (325 samples, 5.43%)</title><rect x="352.0" y="195.0" width="64.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.0" y="206.0">ip_prot..</text>
</g>
<g>
<title>sock_put (3 samples, 0.05%)</title><rect x="353.6" y="179.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="356.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (314 samples, 5.24%)</title><rect x="354.2" y="179.0" width="61.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="357.2" y="190.0">tcp_v4..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="355.1" y="163.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="358.1" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (16 samples, 0.27%)</title><rect x="355.5" y="163.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="358.5" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="358.1" y="147.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="361.1" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.10%)</title><rect x="359.1" y="163.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.1" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="359.1" y="147.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.1" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (3 samples, 0.05%)</title><rect x="359.5" y="147.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (282 samples, 4.71%)</title><rect x="360.5" y="163.0" width="55.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.5" y="174.0">tcp_v..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="360.7" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="363.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (278 samples, 4.64%)</title><rect x="361.2" y="147.0" width="54.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.2" y="158.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (19 samples, 0.32%)</title><rect x="362.6" y="131.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.6" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.28%)</title><rect x="363.0" y="115.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="366.0" y="126.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="363.0" y="99.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.0" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.20%)</title><rect x="364.0" y="99.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="367.0" y="110.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.15%)</title><rect x="364.6" y="83.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="367.6" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.10%)</title><rect x="365.2" y="67.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="368.2" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="366.4" y="131.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="369.4" y="142.0"></text>
</g>
<g>
<title>tcp_ack (73 samples, 1.22%)</title><rect x="367.0" y="131.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="370.0" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="369.3" y="115.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="372.3" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="369.9" y="115.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.9" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (46 samples, 0.77%)</title><rect x="370.7" y="115.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.7" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.45%)</title><rect x="372.1" y="99.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="375.1" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.07%)</title><rect x="372.1" y="83.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.1" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.07%)</title><rect x="372.1" y="67.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="375.1" y="78.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.33%)</title><rect x="373.1" y="83.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="376.1" y="94.0"></text>
</g>
<g>
<title>skb_release_data (19 samples, 0.32%)</title><rect x="373.3" y="67.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="376.3" y="78.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.08%)</title><rect x="376.0" y="51.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="379.0" y="62.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.08%)</title><rect x="376.0" y="35.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.0" y="46.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="377.0" y="83.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="380.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="377.8" y="99.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="380.8" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.08%)</title><rect x="378.2" y="99.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="381.2" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (5 samples, 0.08%)</title><rect x="379.8" y="115.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="382.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (166 samples, 2.77%)</title><rect x="381.5" y="131.0" width="32.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.5" y="142.0">tc..</text>
</g>
<g>
<title>sock_def_readable (166 samples, 2.77%)</title><rect x="381.5" y="115.0" width="32.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.5" y="126.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="381.9" y="99.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (162 samples, 2.70%)</title><rect x="382.3" y="99.0" width="31.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.3" y="110.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (162 samples, 2.70%)</title><rect x="382.3" y="83.0" width="31.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="385.3" y="94.0">__..</text>
</g>
<g>
<title>__lock_text_start (160 samples, 2.67%)</title><rect x="382.7" y="67.0" width="31.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.7" y="78.0">__..</text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.07%)</title><rect x="414.2" y="131.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="417.2" y="142.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="414.4" y="115.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="417.4" y="126.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="416.0" y="195.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="419.0" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.05%)</title><rect x="416.4" y="211.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="419.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="417.0" y="227.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="420.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="417.6" y="227.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="418.0" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="421.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="418.4" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="421.4" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (38 samples, 0.63%)</title><rect x="419.4" y="387.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="422.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.63%)</title><rect x="419.4" y="371.0" width="7.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (18 samples, 0.30%)</title><rect x="420.5" y="355.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.22%)</title><rect x="420.9" y="339.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.15%)</title><rect x="421.3" y="323.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="424.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="421.3" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="424.3" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.12%)</title><rect x="421.7" y="307.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="424.7" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.12%)</title><rect x="421.7" y="291.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.7" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="423.7" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="426.7" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.10%)</title><rect x="424.1" y="355.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="427.1" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.08%)</title><rect x="425.7" y="355.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.7" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="427.0" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="430.0" y="430.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.13%)</title><rect x="428.6" y="499.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="431.6" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="428.8" y="483.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="431.8" y="494.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.07%)</title><rect x="429.4" y="483.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.4" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="430.2" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.2" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="430.8" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.8" y="526.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="431.4" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.4" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.15%)</title><rect x="432.2" y="515.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="435.2" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="432.2" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="435.2" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.12%)</title><rect x="432.6" y="499.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="435.6" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.10%)</title><rect x="432.8" y="483.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="435.8" y="494.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="432.9" y="467.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="435.9" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.08%)</title><rect x="432.9" y="451.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="435.9" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="434.3" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="437.3" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.13%)</title><rect x="434.7" y="515.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.7" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="436.5" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="439.5" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.17%)</title><rect x="437.3" y="563.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.3" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.07%)</title><rect x="437.5" y="547.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.5" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.08%)</title><rect x="438.3" y="547.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="438.7" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.7" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="439.3" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.3" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (3 samples, 0.05%)</title><rect x="439.6" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.6" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.08%)</title><rect x="440.2" y="611.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.2" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="440.2" y="595.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.2" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="440.6" y="579.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="443.6" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.23%)</title><rect x="441.2" y="627.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.2" y="638.0"></text>
</g>
<g>
<title>__fdget (12 samples, 0.20%)</title><rect x="441.2" y="611.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="444.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.20%)</title><rect x="441.2" y="595.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="444.2" y="606.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.20%)</title><rect x="441.2" y="579.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="444.2" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="443.6" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="444.2" y="659.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.2" y="670.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.07%)</title><rect x="444.2" y="643.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="447.2" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="444.2" y="627.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="447.2" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="444.4" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="447.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.10%)</title><rect x="445.2" y="787.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="445.8" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="445.8" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.17%)</title><rect x="446.3" y="803.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.3" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.08%)</title><rect x="447.1" y="787.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.1" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.07%)</title><rect x="447.3" y="771.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="450.3" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.07%)</title><rect x="447.3" y="755.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="450.3" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="447.3" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="450.3" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="447.3" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="450.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (1,950 samples, 32.55%)</title><rect x="448.5" y="851.0" width="384.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.5" y="862.0">ru/mail/polis/service/boriskin/NewService.proxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.60%)</title><rect x="449.3" y="835.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (36 samples, 0.60%)</title><rect x="449.3" y="819.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.43%)</title><rect x="449.7" y="803.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (5 samples, 0.08%)</title><rect x="450.5" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.07%)</title><rect x="450.5" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="451.5" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (13 samples, 0.22%)</title><rect x="451.9" y="787.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.13%)</title><rect x="452.8" y="771.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/476800120.invoke (8 samples, 0.13%)</title><rect x="454.8" y="803.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.13%)</title><rect x="454.8" y="787.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (8 samples, 0.13%)</title><rect x="454.8" y="771.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.13%)</title><rect x="454.8" y="755.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.13%)</title><rect x="456.4" y="835.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.07%)</title><rect x="456.6" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.07%)</title><rect x="456.6" y="803.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.03%)</title><rect x="457.0" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.05%)</title><rect x="457.4" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,279 samples, 21.35%)</title><rect x="458.0" y="835.0" width="251.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.0" y="846.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,278 samples, 21.34%)</title><rect x="458.2" y="819.0" width="251.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.2" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (462 samples, 7.71%)</title><rect x="459.1" y="803.0" width="91.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.1" y="814.0">one/nio/htt..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (16 samples, 0.27%)</title><rect x="460.1" y="787.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="463.1" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (13 samples, 0.22%)</title><rect x="460.7" y="771.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="463.7" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (13 samples, 0.22%)</title><rect x="460.7" y="755.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="463.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.20%)</title><rect x="460.9" y="739.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="463.9" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.05%)</title><rect x="461.1" y="723.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="464.1" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (4 samples, 0.07%)</title><rect x="462.1" y="723.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="465.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (13 samples, 0.22%)</title><rect x="463.5" y="787.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (426 samples, 7.11%)</title><rect x="466.0" y="787.0" width="84.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.0" y="798.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (37 samples, 0.62%)</title><rect x="466.4" y="771.0" width="7.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="469.4" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.07%)</title><rect x="467.6" y="755.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="470.6" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.07%)</title><rect x="468.4" y="755.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="471.4" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.08%)</title><rect x="469.2" y="755.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="472.2" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (16 samples, 0.27%)</title><rect x="470.2" y="755.0" width="3.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="473.2" y="766.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="471.2" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="474.2" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="471.8" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="474.8" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.10%)</title><rect x="472.2" y="739.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="475.2" y="750.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="472.9" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="475.9" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="473.7" y="771.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="476.7" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="474.1" y="771.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="477.1" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.05%)</title><rect x="474.9" y="771.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="477.9" y="782.0"></text>
</g>
<g>
<title>recv (378 samples, 6.31%)</title><rect x="475.5" y="771.0" width="74.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="478.5" y="782.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (343 samples, 5.73%)</title><rect x="482.2" y="755.0" width="67.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="485.2" y="766.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (342 samples, 5.71%)</title><rect x="482.4" y="739.0" width="67.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.4" y="750.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (335 samples, 5.59%)</title><rect x="483.8" y="723.0" width="66.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.8" y="734.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (333 samples, 5.56%)</title><rect x="483.8" y="707.0" width="65.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.8" y="718.0">__sys_r..</text>
</g>
<g>
<title>fput_many (3 samples, 0.05%)</title><rect x="484.8" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="487.8" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (322 samples, 5.38%)</title><rect x="485.3" y="691.0" width="63.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.3" y="702.0">sock_re..</text>
</g>
<g>
<title>inet6_recvmsg (320 samples, 5.34%)</title><rect x="485.3" y="675.0" width="63.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.3" y="686.0">inet6_r..</text>
</g>
<g>
<title>tcp_recvmsg (317 samples, 5.29%)</title><rect x="485.9" y="659.0" width="62.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="488.9" y="670.0">tcp_re..</text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.13%)</title><rect x="488.9" y="643.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="491.9" y="654.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.12%)</title><rect x="489.1" y="627.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="492.1" y="638.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="489.1" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="492.1" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="489.5" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="492.5" y="622.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.05%)</title><rect x="489.5" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.5" y="606.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="490.1" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.1" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="491.1" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="494.1" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="491.5" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.5" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="491.5" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.5" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (82 samples, 1.37%)</title><rect x="491.8" y="643.0" width="16.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="493.2" y="627.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="496.2" y="638.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="494.2" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="497.2" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="494.2" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="497.2" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="494.6" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="497.6" y="638.0"></text>
</g>
<g>
<title>remove_wait_queue (2 samples, 0.03%)</title><rect x="495.2" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.2" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="495.2" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.2" y="622.0"></text>
</g>
<g>
<title>wait_woken (63 samples, 1.05%)</title><rect x="495.6" y="627.0" width="12.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="498.6" y="638.0"></text>
</g>
<g>
<title>schedule_timeout (62 samples, 1.04%)</title><rect x="495.8" y="611.0" width="12.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.8" y="622.0"></text>
</g>
<g>
<title>__mod_timer (12 samples, 0.20%)</title><rect x="496.8" y="595.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.15%)</title><rect x="497.2" y="579.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="500.2" y="590.0"></text>
</g>
<g>
<title>del_timer_sync (4 samples, 0.07%)</title><rect x="499.1" y="595.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.1" y="606.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (4 samples, 0.07%)</title><rect x="499.1" y="579.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="502.1" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="499.3" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.3" y="574.0"></text>
</g>
<g>
<title>schedule (40 samples, 0.67%)</title><rect x="499.9" y="595.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="502.9" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (38 samples, 0.63%)</title><rect x="500.3" y="579.0" width="7.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.3" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (33 samples, 0.55%)</title><rect x="501.3" y="563.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="504.3" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (16 samples, 0.27%)</title><rect x="508.0" y="643.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="511.0" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.25%)</title><rect x="508.2" y="627.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="511.2" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.13%)</title><rect x="509.6" y="611.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.6" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.12%)</title><rect x="509.8" y="595.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.8" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.12%)</title><rect x="509.8" y="579.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="512.8" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (184 samples, 3.07%)</title><rect x="511.2" y="643.0" width="36.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="514.2" y="654.0">tcp..</text>
</g>
<g>
<title>tcp_send_ack (179 samples, 2.99%)</title><rect x="512.1" y="627.0" width="35.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="515.1" y="638.0">tcp..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (179 samples, 2.99%)</title><rect x="512.1" y="611.0" width="35.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="515.1" y="622.0">__t..</text>
</g>
<g>
<title>__alloc_skb (17 samples, 0.28%)</title><rect x="512.3" y="595.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="515.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (9 samples, 0.15%)</title><rect x="512.7" y="579.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="515.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.08%)</title><rect x="512.7" y="563.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.7" y="574.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="513.7" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="516.7" y="574.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="514.1" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="517.1" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="514.5" y="579.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="517.5" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (156 samples, 2.60%)</title><rect x="515.7" y="595.0" width="30.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="518.7" y="606.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (147 samples, 2.45%)</title><rect x="517.5" y="579.0" width="28.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="520.5" y="590.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (145 samples, 2.42%)</title><rect x="517.5" y="563.0" width="28.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="520.5" y="574.0">__..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.07%)</title><rect x="517.5" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.5" y="558.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="517.7" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="520.7" y="542.0"></text>
</g>
<g>
<title>ip_local_out (141 samples, 2.35%)</title><rect x="518.2" y="547.0" width="27.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.2" y="558.0">i..</text>
</g>
<g>
<title>ip_output (141 samples, 2.35%)</title><rect x="518.2" y="531.0" width="27.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.2" y="542.0">i..</text>
</g>
<g>
<title>ip_finish_output (140 samples, 2.34%)</title><rect x="518.4" y="515.0" width="27.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="521.4" y="526.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="518.4" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="521.4" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (137 samples, 2.29%)</title><rect x="518.8" y="499.0" width="27.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="521.8" y="510.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (135 samples, 2.25%)</title><rect x="519.0" y="483.0" width="26.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.0" y="494.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (98 samples, 1.64%)</title><rect x="520.2" y="467.0" width="19.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="523.2" y="478.0"></text>
</g>
<g>
<title>do_softirq.part.0 (97 samples, 1.62%)</title><rect x="520.4" y="451.0" width="19.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="523.4" y="462.0"></text>
</g>
<g>
<title>do_softirq_own_stack (96 samples, 1.60%)</title><rect x="520.6" y="435.0" width="18.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.6" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (95 samples, 1.59%)</title><rect x="520.6" y="419.0" width="18.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.6" y="430.0"></text>
</g>
<g>
<title>net_rx_action (85 samples, 1.42%)</title><rect x="522.4" y="403.0" width="16.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="525.4" y="414.0"></text>
</g>
<g>
<title>process_backlog (83 samples, 1.39%)</title><rect x="522.8" y="387.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.8" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (81 samples, 1.35%)</title><rect x="523.2" y="371.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.2" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (79 samples, 1.32%)</title><rect x="523.4" y="355.0" width="15.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="526.4" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 0.17%)</title><rect x="523.4" y="339.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.4" y="350.0"></text>
</g>
<g>
<title>ip_rcv (66 samples, 1.10%)</title><rect x="525.3" y="339.0" width="13.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (64 samples, 1.07%)</title><rect x="525.7" y="323.0" width="12.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.7" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (62 samples, 1.04%)</title><rect x="525.7" y="307.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.7" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (62 samples, 1.04%)</title><rect x="525.7" y="291.0" width="12.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="528.7" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (59 samples, 0.98%)</title><rect x="525.7" y="275.0" width="11.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.7" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (58 samples, 0.97%)</title><rect x="525.9" y="259.0" width="11.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="528.9" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.08%)</title><rect x="527.1" y="243.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="530.1" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.15%)</title><rect x="528.5" y="243.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="531.5" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="528.9" y="227.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="531.9" y="238.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="529.5" y="227.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="532.5" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="529.9" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (36 samples, 0.60%)</title><rect x="530.3" y="243.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="533.3" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (36 samples, 0.60%)</title><rect x="530.3" y="227.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="533.3" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.05%)</title><rect x="530.9" y="211.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="533.9" y="222.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="530.9" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="533.9" y="206.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="530.9" y="179.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="533.9" y="190.0"></text>
</g>
<g>
<title>tcp_ack (28 samples, 0.47%)</title><rect x="531.4" y="211.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="534.4" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.27%)</title><rect x="533.0" y="195.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="536.0" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.17%)</title><rect x="533.6" y="179.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="536.6" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="533.6" y="163.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="536.6" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="533.6" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="536.6" y="158.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.12%)</title><rect x="534.2" y="163.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="537.2" y="174.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.08%)</title><rect x="534.4" y="147.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="537.4" y="158.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="535.0" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="538.0" y="142.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="535.0" y="115.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="538.0" y="126.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="535.0" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.0" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="535.6" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.6" y="190.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="536.2" y="195.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="539.2" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="537.0" y="211.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="540.0" y="222.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="537.0" y="195.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="540.0" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.05%)</title><rect x="537.4" y="275.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="540.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="537.9" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="540.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="538.3" y="339.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="541.3" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (30 samples, 0.50%)</title><rect x="539.5" y="467.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="542.5" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 0.48%)</title><rect x="539.5" y="451.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="542.5" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.25%)</title><rect x="539.9" y="435.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.9" y="446.0"></text>
</g>
<g>
<title>__sock_wfree (3 samples, 0.05%)</title><rect x="540.3" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="543.3" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.12%)</title><rect x="541.1" y="419.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="544.1" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.05%)</title><rect x="541.1" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="544.1" y="414.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.07%)</title><rect x="541.7" y="403.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.7" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.07%)</title><rect x="541.7" y="387.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.7" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.07%)</title><rect x="541.7" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.7" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="542.5" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.5" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="542.9" y="435.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.9" y="446.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="543.5" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.5" y="446.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.12%)</title><rect x="543.9" y="435.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.9" y="446.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.05%)</title><rect x="544.4" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.4" y="430.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.07%)</title><rect x="546.4" y="595.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.4" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.07%)</title><rect x="547.4" y="643.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="550.4" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="548.4" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="551.4" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="548.8" y="691.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="551.8" y="702.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="549.4" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="552.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (94 samples, 1.57%)</title><rect x="550.2" y="803.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.23%)</title><rect x="551.7" y="787.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.23%)</title><rect x="551.7" y="771.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="552.9" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="552.9" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.9" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.03%)</title><rect x="552.9" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.10%)</title><rect x="553.3" y="755.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.15%)</title><rect x="554.5" y="787.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.15%)</title><rect x="554.5" y="771.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.15%)</title><rect x="554.5" y="755.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (9 samples, 0.15%)</title><rect x="554.5" y="739.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (9 samples, 0.15%)</title><rect x="554.5" y="723.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.5" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (8 samples, 0.13%)</title><rect x="554.7" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.7" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (4 samples, 0.07%)</title><rect x="555.5" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.5" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.05%)</title><rect x="555.5" y="675.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="558.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="556.3" y="787.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="556.3" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.3" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="556.3" y="755.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="559.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (45 samples, 0.75%)</title><rect x="557.3" y="787.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.38%)</title><rect x="561.0" y="771.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.38%)</title><rect x="561.0" y="755.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3 samples, 0.05%)</title><rect x="565.5" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (13 samples, 0.22%)</title><rect x="566.1" y="787.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.15%)</title><rect x="566.9" y="771.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.15%)</title><rect x="566.9" y="755.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (56 samples, 0.93%)</title><rect x="568.7" y="803.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.13%)</title><rect x="570.3" y="787.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.05%)</title><rect x="571.2" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.2" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="571.2" y="755.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="574.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (32 samples, 0.53%)</title><rect x="571.8" y="787.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.13%)</title><rect x="572.2" y="771.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (4 samples, 0.07%)</title><rect x="573.0" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.07%)</title><rect x="573.8" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.07%)</title><rect x="573.8" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="574.0" y="739.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="577.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (18 samples, 0.30%)</title><rect x="574.6" y="771.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (17 samples, 0.28%)</title><rect x="574.8" y="755.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.27%)</title><rect x="575.0" y="739.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.07%)</title><rect x="577.3" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.13%)</title><rect x="578.1" y="787.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="579.3" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="579.3" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.08%)</title><rect x="579.7" y="803.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="579.9" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.07%)</title><rect x="579.9" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (168 samples, 2.80%)</title><rect x="580.7" y="803.0" width="33.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.7" y="814.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.03%)</title><rect x="581.5" y="787.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="584.5" y="798.0"></text>
</g>
<g>
<title>setsockopt (161 samples, 2.69%)</title><rect x="581.9" y="787.0" width="31.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="584.9" y="798.0">se..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 1.47%)</title><rect x="596.3" y="771.0" width="17.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="599.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (3 samples, 0.05%)</title><rect x="596.3" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="599.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (85 samples, 1.42%)</title><rect x="596.8" y="755.0" width="16.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (63 samples, 1.05%)</title><rect x="601.2" y="739.0" width="12.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="604.2" y="750.0"></text>
</g>
<g>
<title>__sys_setsockopt (62 samples, 1.04%)</title><rect x="601.2" y="723.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="604.2" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (2 samples, 0.03%)</title><rect x="602.2" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.2" y="718.0"></text>
</g>
<g>
<title>__get_user_4 (3 samples, 0.05%)</title><rect x="602.8" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="605.8" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (4 samples, 0.07%)</title><rect x="603.3" y="707.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="606.3" y="718.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.05%)</title><rect x="604.5" y="707.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="607.5" y="718.0"></text>
</g>
<g>
<title>security_socket_setsockopt (8 samples, 0.13%)</title><rect x="605.1" y="707.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.1" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (4 samples, 0.07%)</title><rect x="605.9" y="691.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="608.9" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.07%)</title><rect x="605.9" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="608.9" y="686.0"></text>
</g>
<g>
<title>sock_setsockopt (18 samples, 0.30%)</title><rect x="606.9" y="707.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="609.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="607.3" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.3" y="702.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="607.9" y="691.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="610.9" y="702.0"></text>
</g>
<g>
<title>sock_set_timeout (8 samples, 0.13%)</title><rect x="608.5" y="691.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="611.5" y="702.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.05%)</title><rect x="608.9" y="675.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="611.9" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="609.5" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="612.5" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="610.0" y="691.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.0" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.25%)</title><rect x="610.4" y="707.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="613.4" y="718.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.17%)</title><rect x="610.6" y="691.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.6" y="702.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.17%)</title><rect x="610.6" y="675.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.6" y="686.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.17%)</title><rect x="610.6" y="659.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="612.6" y="691.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="615.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (483 samples, 8.06%)</title><rect x="613.8" y="803.0" width="95.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.8" y="814.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (18 samples, 0.30%)</title><rect x="614.2" y="787.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="617.2" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="615.4" y="771.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="618.4" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="615.8" y="771.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="618.8" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.10%)</title><rect x="616.4" y="771.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="619.4" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="616.7" y="755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="619.7" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="617.7" y="787.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="620.7" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="618.1" y="787.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="621.1" y="798.0"></text>
</g>
<g>
<title>__send (458 samples, 7.65%)</title><rect x="618.5" y="787.0" width="90.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="621.5" y="798.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (438 samples, 7.31%)</title><rect x="622.5" y="771.0" width="86.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="625.5" y="782.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (438 samples, 7.31%)</title><rect x="622.5" y="755.0" width="86.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="625.5" y="766.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (421 samples, 7.03%)</title><rect x="624.8" y="739.0" width="83.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="627.8" y="750.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (421 samples, 7.03%)</title><rect x="624.8" y="723.0" width="83.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="627.8" y="734.0">__sys_sen..</text>
</g>
<g>
<title>sock_sendmsg (417 samples, 6.96%)</title><rect x="625.0" y="707.0" width="82.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="628.0" y="718.0">sock_send..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.07%)</title><rect x="625.0" y="691.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.0" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (409 samples, 6.83%)</title><rect x="625.8" y="691.0" width="80.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.8" y="702.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (406 samples, 6.78%)</title><rect x="626.4" y="675.0" width="80.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="629.4" y="686.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="626.8" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="629.8" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (394 samples, 6.58%)</title><rect x="628.0" y="659.0" width="77.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="631.0" y="670.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="629.9" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="632.9" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="629.9" y="627.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="632.9" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.05%)</title><rect x="630.7" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.7" y="654.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6 samples, 0.10%)</title><rect x="631.7" y="643.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.7" y="654.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.08%)</title><rect x="631.9" y="627.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="634.9" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (26 samples, 0.43%)</title><rect x="632.9" y="643.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="635.9" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.37%)</title><rect x="633.7" y="627.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.7" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.17%)</title><rect x="633.9" y="611.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.9" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.15%)</title><rect x="633.9" y="595.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.9" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.10%)</title><rect x="636.2" y="611.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.2" y="622.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="637.4" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="640.4" y="622.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="637.4" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.4" y="606.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="638.0" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="641.0" y="654.0"></text>
</g>
<g>
<title>tcp_push (334 samples, 5.58%)</title><rect x="638.4" y="643.0" width="65.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="641.4" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (333 samples, 5.56%)</title><rect x="638.4" y="627.0" width="65.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="641.4" y="638.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (331 samples, 5.53%)</title><rect x="638.8" y="611.0" width="65.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="641.8" y="622.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (310 samples, 5.18%)</title><rect x="640.2" y="595.0" width="61.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="643.2" y="606.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (293 samples, 4.89%)</title><rect x="642.2" y="579.0" width="57.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="645.2" y="590.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (290 samples, 4.84%)</title><rect x="642.2" y="563.0" width="57.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="645.2" y="574.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (284 samples, 4.74%)</title><rect x="643.1" y="547.0" width="56.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="646.1" y="558.0">ip_lo..</text>
</g>
<g>
<title>ip_output (283 samples, 4.72%)</title><rect x="643.3" y="531.0" width="55.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="646.3" y="542.0">ip_ou..</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.03%)</title><rect x="643.9" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="646.9" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (278 samples, 4.64%)</title><rect x="644.3" y="515.0" width="54.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="647.3" y="526.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="644.7" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="647.7" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (273 samples, 4.56%)</title><rect x="645.1" y="499.0" width="53.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.1" y="510.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (271 samples, 4.52%)</title><rect x="645.3" y="483.0" width="53.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.3" y="494.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (234 samples, 3.91%)</title><rect x="646.9" y="467.0" width="46.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="649.9" y="478.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (233 samples, 3.89%)</title><rect x="647.1" y="451.0" width="45.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="650.1" y="462.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (233 samples, 3.89%)</title><rect x="647.1" y="435.0" width="45.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.1" y="446.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (233 samples, 3.89%)</title><rect x="647.1" y="419.0" width="45.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="650.1" y="430.0">__so..</text>
</g>
<g>
<title>net_rx_action (224 samples, 3.74%)</title><rect x="648.5" y="403.0" width="44.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="651.5" y="414.0">net_..</text>
</g>
<g>
<title>process_backlog (221 samples, 3.69%)</title><rect x="649.1" y="387.0" width="43.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.1" y="398.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (220 samples, 3.67%)</title><rect x="649.2" y="371.0" width="43.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.2" y="382.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (220 samples, 3.67%)</title><rect x="649.2" y="355.0" width="43.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.2" y="366.0">__ne..</text>
</g>
<g>
<title>ip_rcv (213 samples, 3.56%)</title><rect x="649.6" y="339.0" width="42.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="652.6" y="350.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="649.6" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.6" y="334.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.05%)</title><rect x="650.0" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="653.0" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (208 samples, 3.47%)</title><rect x="650.6" y="323.0" width="41.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="653.6" y="334.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (204 samples, 3.41%)</title><rect x="650.8" y="307.0" width="40.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="653.8" y="318.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (204 samples, 3.41%)</title><rect x="650.8" y="291.0" width="40.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="653.8" y="302.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (202 samples, 3.37%)</title><rect x="651.0" y="275.0" width="39.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.0" y="286.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (196 samples, 3.27%)</title><rect x="652.2" y="259.0" width="38.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.2" y="270.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.07%)</title><rect x="653.2" y="243.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="656.2" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.12%)</title><rect x="654.4" y="243.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.4" y="254.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.07%)</title><rect x="654.6" y="227.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="657.6" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="655.4" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (174 samples, 2.90%)</title><rect x="655.9" y="243.0" width="34.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="658.9" y="254.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (172 samples, 2.87%)</title><rect x="656.3" y="227.0" width="33.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="659.3" y="238.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.12%)</title><rect x="656.7" y="211.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.7" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.10%)</title><rect x="656.9" y="195.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.9" y="206.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="657.1" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="660.1" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="657.5" y="179.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="660.5" y="190.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="657.5" y="163.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="660.5" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="658.3" y="211.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.3" y="222.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.28%)</title><rect x="658.7" y="211.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="661.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.17%)</title><rect x="660.1" y="195.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="663.1" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.12%)</title><rect x="660.3" y="179.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="663.3" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="660.3" y="163.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="663.3" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="660.3" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="663.3" y="158.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.05%)</title><rect x="660.9" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="663.9" y="174.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.05%)</title><rect x="660.9" y="147.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="663.9" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (134 samples, 2.24%)</title><rect x="662.1" y="211.0" width="26.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="665.1" y="222.0">t..</text>
</g>
<g>
<title>sock_def_readable (134 samples, 2.24%)</title><rect x="662.1" y="195.0" width="26.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="665.1" y="206.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (133 samples, 2.22%)</title><rect x="662.3" y="179.0" width="26.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.3" y="190.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (133 samples, 2.22%)</title><rect x="662.3" y="163.0" width="26.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="665.3" y="174.0">_..</text>
</g>
<g>
<title>__lock_text_start (133 samples, 2.22%)</title><rect x="662.3" y="147.0" width="26.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="665.3" y="158.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.10%)</title><rect x="688.5" y="211.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="691.5" y="222.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="689.6" y="211.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="692.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="690.2" y="243.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="693.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="691.0" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.0" y="318.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.05%)</title><rect x="691.6" y="339.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="694.6" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="692.2" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="695.2" y="350.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="692.6" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="695.6" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (29 samples, 0.48%)</title><rect x="693.0" y="467.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="696.0" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (27 samples, 0.45%)</title><rect x="693.0" y="451.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="696.0" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (18 samples, 0.30%)</title><rect x="693.8" y="435.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="696.8" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.23%)</title><rect x="694.2" y="419.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.2" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="694.4" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="697.4" y="414.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.15%)</title><rect x="694.8" y="403.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="697.8" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.13%)</title><rect x="695.0" y="387.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="698.0" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.13%)</title><rect x="695.0" y="371.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.0" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="696.9" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.9" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="697.7" y="435.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="700.7" y="446.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="699.5" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.5" y="574.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.08%)</title><rect x="699.9" y="579.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.9" y="590.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.07%)</title><rect x="700.1" y="563.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="703.1" y="574.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="701.5" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.5" y="606.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="701.8" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.8" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.07%)</title><rect x="702.4" y="595.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="705.4" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.07%)</title><rect x="702.4" y="579.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.4" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.07%)</title><rect x="702.4" y="563.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="705.4" y="574.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.07%)</title><rect x="702.4" y="547.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="705.4" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="702.8" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.8" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="703.6" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="706.6" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.10%)</title><rect x="704.2" y="643.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="707.2" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="704.8" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="707.8" y="638.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="705.6" y="659.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="708.6" y="670.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.05%)</title><rect x="706.4" y="691.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.4" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="706.4" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.4" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="706.4" y="659.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="709.4" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="707.2" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="710.2" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="707.4" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="707.4" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="710.4" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="707.4" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="707.8" y="739.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.8" y="750.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="708.2" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="711.2" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="708.2" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="711.2" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="708.2" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="711.2" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.07%)</title><rect x="708.9" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (616 samples, 10.28%)</title><rect x="709.9" y="835.0" width="121.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.9" y="846.0">one/nio/http/Ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (11 samples, 0.18%)</title><rect x="711.1" y="819.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.18%)</title><rect x="711.1" y="803.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.18%)</title><rect x="711.1" y="787.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="711.3" y="771.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="714.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.07%)</title><rect x="711.3" y="755.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="714.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="712.1" y="771.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="715.1" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="712.7" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="715.7" y="782.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="712.9" y="755.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="715.9" y="766.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="712.9" y="739.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="715.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (591 samples, 9.87%)</title><rect x="713.3" y="819.0" width="116.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.3" y="830.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.33%)</title><rect x="713.3" y="803.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.12%)</title><rect x="715.8" y="787.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.12%)</title><rect x="715.8" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.12%)</title><rect x="715.8" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (571 samples, 9.53%)</title><rect x="717.2" y="803.0" width="112.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.2" y="814.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (571 samples, 9.53%)</title><rect x="717.2" y="787.0" width="112.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.2" y="798.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (570 samples, 9.52%)</title><rect x="717.4" y="771.0" width="112.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.4" y="782.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.08%)</title><rect x="717.6" y="755.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (564 samples, 9.42%)</title><rect x="718.6" y="755.0" width="111.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.6" y="766.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.23%)</title><rect x="720.0" y="739.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="723.0" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="722.1" y="723.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="725.1" y="734.0"></text>
</g>
<g>
<title>__send (540 samples, 9.02%)</title><rect x="722.7" y="739.0" width="106.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="725.7" y="750.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (506 samples, 8.45%)</title><rect x="729.4" y="723.0" width="99.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.4" y="734.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.07%)</title><rect x="729.4" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (502 samples, 8.38%)</title><rect x="730.2" y="707.0" width="98.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="733.2" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (490 samples, 8.18%)</title><rect x="731.8" y="691.0" width="96.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="734.8" y="702.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (488 samples, 8.15%)</title><rect x="731.8" y="675.0" width="96.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.8" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="732.4" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.4" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (471 samples, 7.86%)</title><rect x="732.8" y="659.0" width="92.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="735.8" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="733.0" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="736.0" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (467 samples, 7.80%)</title><rect x="733.4" y="643.0" width="92.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="736.4" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="733.4" y="627.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="736.4" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (464 samples, 7.75%)</title><rect x="734.0" y="627.0" width="91.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="737.0" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="734.5" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="737.5" y="622.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.07%)</title><rect x="735.1" y="611.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="738.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="735.5" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (448 samples, 7.48%)</title><rect x="736.9" y="611.0" width="88.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.9" y="622.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="739.1" y="595.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="742.1" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="739.1" y="579.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.1" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.12%)</title><rect x="739.7" y="595.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.7" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="739.7" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="742.7" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="740.7" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="743.7" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.08%)</title><rect x="741.2" y="595.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="744.2" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.08%)</title><rect x="741.2" y="579.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="744.2" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.33%)</title><rect x="742.2" y="595.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.2" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.30%)</title><rect x="742.6" y="579.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="745.6" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="742.8" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="745.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.08%)</title><rect x="743.2" y="563.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="746.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.07%)</title><rect x="743.2" y="547.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="746.2" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="744.4" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="747.4" y="574.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.05%)</title><rect x="745.2" y="563.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="748.2" y="574.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.05%)</title><rect x="745.2" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="748.2" y="558.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="746.2" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="749.2" y="606.0"></text>
</g>
<g>
<title>tcp_push (394 samples, 6.58%)</title><rect x="746.6" y="595.0" width="77.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="749.6" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (387 samples, 6.46%)</title><rect x="746.6" y="579.0" width="76.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.6" y="590.0">__tcp_pu..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.03%)</title><rect x="746.6" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="749.6" y="574.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="747.0" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="750.0" y="574.0"></text>
</g>
<g>
<title>tcp_mtu_probe (2 samples, 0.03%)</title><rect x="747.5" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="750.5" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (380 samples, 6.34%)</title><rect x="747.9" y="563.0" width="74.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.9" y="574.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (350 samples, 5.84%)</title><rect x="750.1" y="547.0" width="69.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="753.1" y="558.0">__tcp_t..</text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="751.5" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="754.5" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="751.9" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="754.9" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (333 samples, 5.56%)</title><rect x="752.3" y="531.0" width="65.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="755.3" y="542.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (332 samples, 5.54%)</title><rect x="752.3" y="515.0" width="65.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.3" y="526.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (327 samples, 5.46%)</title><rect x="752.5" y="499.0" width="64.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="755.5" y="510.0">ip_loca..</text>
</g>
<g>
<title>ip_output (325 samples, 5.43%)</title><rect x="752.9" y="483.0" width="64.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.9" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (324 samples, 5.41%)</title><rect x="753.1" y="467.0" width="63.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="756.1" y="478.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="753.3" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="756.3" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (319 samples, 5.33%)</title><rect x="753.9" y="451.0" width="62.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="756.9" y="462.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (318 samples, 5.31%)</title><rect x="754.1" y="435.0" width="62.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="757.1" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (292 samples, 4.87%)</title><rect x="755.8" y="419.0" width="57.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="758.8" y="430.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (292 samples, 4.87%)</title><rect x="755.8" y="403.0" width="57.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.8" y="414.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (289 samples, 4.82%)</title><rect x="756.4" y="387.0" width="56.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.4" y="398.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (289 samples, 4.82%)</title><rect x="756.4" y="371.0" width="56.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.4" y="382.0">__soft..</text>
</g>
<g>
<title>net_rx_action (279 samples, 4.66%)</title><rect x="758.2" y="355.0" width="54.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="761.2" y="366.0">net_r..</text>
</g>
<g>
<title>process_backlog (277 samples, 4.62%)</title><rect x="758.6" y="339.0" width="54.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="761.6" y="350.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (273 samples, 4.56%)</title><rect x="759.4" y="323.0" width="53.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="762.4" y="334.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (272 samples, 4.54%)</title><rect x="759.4" y="307.0" width="53.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="762.4" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.08%)</title><rect x="759.4" y="291.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="762.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv (267 samples, 4.46%)</title><rect x="760.4" y="291.0" width="52.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="763.4" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="760.6" y="275.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (263 samples, 4.39%)</title><rect x="761.1" y="275.0" width="51.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="764.1" y="286.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (261 samples, 4.36%)</title><rect x="761.1" y="259.0" width="51.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="764.1" y="270.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (260 samples, 4.34%)</title><rect x="761.3" y="243.0" width="51.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="764.3" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (259 samples, 4.32%)</title><rect x="761.3" y="227.0" width="51.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="764.3" y="238.0">ip_pr..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="761.9" y="211.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.9" y="222.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="762.3" y="211.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="765.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (252 samples, 4.21%)</title><rect x="762.7" y="211.0" width="49.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="765.7" y="222.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (16 samples, 0.27%)</title><rect x="763.1" y="195.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="766.1" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="765.9" y="179.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="768.9" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="766.7" y="195.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="769.7" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.05%)</title><rect x="766.7" y="179.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="769.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (229 samples, 3.82%)</title><rect x="767.2" y="195.0" width="45.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="770.2" y="206.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.07%)</title><rect x="767.4" y="179.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="770.4" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.03%)</title><rect x="768.2" y="179.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (222 samples, 3.71%)</title><rect x="768.6" y="179.0" width="43.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="771.6" y="190.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (19 samples, 0.32%)</title><rect x="770.4" y="163.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.4" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (19 samples, 0.32%)</title><rect x="770.4" y="147.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.4" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="770.6" y="131.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="773.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (16 samples, 0.27%)</title><rect x="771.0" y="131.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.27%)</title><rect x="771.0" y="115.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="774.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.22%)</title><rect x="771.0" y="99.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="774.0" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.05%)</title><rect x="773.6" y="99.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.6" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.07%)</title><rect x="774.3" y="163.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="777.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (39 samples, 0.65%)</title><rect x="775.1" y="163.0" width="7.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="778.1" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.35%)</title><rect x="777.5" y="147.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.23%)</title><rect x="777.7" y="131.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="780.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.10%)</title><rect x="777.7" y="115.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="778.3" y="99.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.3" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="778.5" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="781.5" y="94.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.12%)</title><rect x="778.9" y="115.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="781.9" y="126.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.12%)</title><rect x="778.9" y="99.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="781.9" y="110.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.07%)</title><rect x="779.5" y="83.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="782.5" y="94.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.07%)</title><rect x="779.5" y="67.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="782.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="780.6" y="131.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="783.6" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="781.0" y="131.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="784.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (138 samples, 2.30%)</title><rect x="782.8" y="163.0" width="27.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="785.8" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (137 samples, 2.29%)</title><rect x="783.0" y="147.0" width="27.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="786.0" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="783.2" y="131.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="786.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (134 samples, 2.24%)</title><rect x="783.6" y="131.0" width="26.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.6" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (134 samples, 2.24%)</title><rect x="783.6" y="115.0" width="26.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.6" y="126.0">_..</text>
</g>
<g>
<title>__lock_text_start (134 samples, 2.24%)</title><rect x="783.6" y="99.0" width="26.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.6" y="110.0">_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.10%)</title><rect x="810.2" y="163.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.2" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="810.2" y="147.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="813.2" y="158.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="810.8" y="147.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.8" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="811.4" y="163.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.4" y="174.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="812.0" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="815.0" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="812.6" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="815.6" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.28%)</title><rect x="813.3" y="419.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="816.3" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.28%)</title><rect x="813.3" y="403.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.3" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.20%)</title><rect x="813.3" y="387.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="816.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.13%)</title><rect x="813.5" y="371.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="816.5" y="382.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="813.9" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="816.9" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="813.9" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="816.9" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="813.9" y="323.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.9" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.05%)</title><rect x="814.5" y="355.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="817.5" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="815.3" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="818.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.07%)</title><rect x="815.9" y="387.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.9" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="816.1" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.1" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="817.1" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="820.1" y="510.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.07%)</title><rect x="817.9" y="531.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="820.9" y="542.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.07%)</title><rect x="817.9" y="515.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="820.9" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.23%)</title><rect x="819.3" y="547.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="822.3" y="558.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="819.5" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="822.5" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (10 samples, 0.17%)</title><rect x="820.0" y="531.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="823.0" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.15%)</title><rect x="820.2" y="515.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="823.2" y="526.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.15%)</title><rect x="820.2" y="499.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="823.2" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.13%)</title><rect x="820.4" y="483.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="823.4" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="822.2" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="825.2" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (7 samples, 0.12%)</title><rect x="822.8" y="579.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="825.8" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.07%)</title><rect x="824.2" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="827.2" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.05%)</title><rect x="824.4" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="827.4" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.20%)</title><rect x="825.6" y="659.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="828.6" y="670.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.13%)</title><rect x="825.6" y="643.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="828.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.13%)</title><rect x="825.6" y="627.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.6" y="638.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.13%)</title><rect x="825.6" y="611.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="828.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="827.1" y="643.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="830.1" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="828.3" y="691.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.3" y="702.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.07%)</title><rect x="828.3" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="831.3" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="828.3" y="659.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="831.3" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="828.5" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.5" y="654.0"></text>
</g>
<g>
<title>send@plt (3 samples, 0.05%)</title><rect x="829.1" y="739.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="832.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.13%)</title><rect x="829.7" y="819.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.10%)</title><rect x="830.1" y="803.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.10%)</title><rect x="830.1" y="787.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.07%)</title><rect x="831.3" y="835.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$66/300860225.run (2 samples, 0.03%)</title><rect x="832.7" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.7" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,684 samples, 28.11%)</title><rect x="833.0" y="931.0" width="331.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.0" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="836.8" y="915.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="839.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="836.8" y="899.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="839.8" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="836.8" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="839.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.07%)</title><rect x="837.2" y="915.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.10%)</title><rect x="838.2" y="915.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.07%)</title><rect x="838.6" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.07%)</title><rect x="838.6" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (460 samples, 7.68%)</title><rect x="839.5" y="915.0" width="90.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.5" y="926.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (440 samples, 7.35%)</title><rect x="843.5" y="899.0" width="86.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.5" y="910.0">one/nio/ne..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.18%)</title><rect x="847.2" y="883.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="850.2" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.08%)</title><rect x="849.4" y="883.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="852.4" y="894.0"></text>
</g>
<g>
<title>clock_gettime (18 samples, 0.30%)</title><rect x="850.6" y="883.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="853.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.10%)</title><rect x="852.9" y="867.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="855.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="853.3" y="851.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="856.3" y="862.0"></text>
</g>
<g>
<title>epoll_wait (386 samples, 6.44%)</title><rect x="854.1" y="883.0" width="76.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="857.1" y="894.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (293 samples, 4.89%)</title><rect x="872.2" y="867.0" width="57.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="875.2" y="878.0">entry_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 0.10%)</title><rect x="872.2" y="851.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="875.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (286 samples, 4.77%)</title><rect x="873.6" y="851.0" width="56.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="876.6" y="862.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (271 samples, 4.52%)</title><rect x="876.6" y="835.0" width="53.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="879.6" y="846.0">__x64..</text>
</g>
<g>
<title>do_epoll_wait (271 samples, 4.52%)</title><rect x="876.6" y="819.0" width="53.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="879.6" y="830.0">do_ep..</text>
</g>
<g>
<title>__fdget (7 samples, 0.12%)</title><rect x="877.4" y="803.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.4" y="814.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.12%)</title><rect x="877.4" y="787.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.4" y="798.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.12%)</title><rect x="877.4" y="771.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.4" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="878.7" y="803.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="881.7" y="814.0"></text>
</g>
<g>
<title>ep_poll (247 samples, 4.12%)</title><rect x="879.5" y="803.0" width="48.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.5" y="814.0">ep_p..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (109 samples, 1.82%)</title><rect x="883.1" y="787.0" width="21.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="886.1" y="798.0">e..</text>
</g>
<g>
<title>ep_send_events_proc (76 samples, 1.27%)</title><rect x="885.6" y="771.0" width="15.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="888.6" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (47 samples, 0.78%)</title><rect x="888.4" y="755.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="891.4" y="766.0"></text>
</g>
<g>
<title>sock_poll (30 samples, 0.50%)</title><rect x="891.0" y="739.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="894.0" y="750.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.13%)</title><rect x="894.5" y="723.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="897.5" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="896.1" y="723.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="899.1" y="734.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.07%)</title><rect x="896.9" y="739.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.9" y="750.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.25%)</title><rect x="897.7" y="755.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.7" y="766.0"></text>
</g>
<g>
<title>mutex_lock (20 samples, 0.33%)</title><rect x="900.6" y="771.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="903.6" y="782.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.05%)</title><rect x="904.0" y="755.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="907.0" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.08%)</title><rect x="904.9" y="787.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (113 samples, 1.89%)</title><rect x="905.9" y="787.0" width="22.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="908.9" y="798.0">s..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (112 samples, 1.87%)</title><rect x="906.1" y="771.0" width="22.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="909.1" y="782.0">s..</text>
</g>
<g>
<title>schedule (95 samples, 1.59%)</title><rect x="909.5" y="755.0" width="18.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="912.5" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (88 samples, 1.47%)</title><rect x="910.9" y="739.0" width="17.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="913.9" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (77 samples, 1.29%)</title><rect x="913.0" y="723.0" width="15.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="916.0" y="734.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.13%)</title><rect x="928.4" y="803.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="931.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,187 samples, 19.82%)</title><rect x="930.2" y="915.0" width="233.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.2" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.03%)</title><rect x="932.5" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,171 samples, 19.55%)</title><rect x="932.9" y="899.0" width="230.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.9" y="910.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (715 samples, 11.94%)</title><rect x="933.1" y="883.0" width="140.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.1" y="894.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (14 samples, 0.23%)</title><rect x="936.9" y="867.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="939.9" y="878.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.15%)</title><rect x="939.6" y="867.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="942.6" y="878.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="941.4" y="867.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="944.4" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="941.8" y="867.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="944.8" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="942.8" y="867.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="945.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (508 samples, 8.48%)</title><rect x="943.8" y="867.0" width="100.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.8" y="878.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (508 samples, 8.48%)</title><rect x="943.8" y="851.0" width="100.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.8" y="862.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (491 samples, 8.20%)</title><rect x="943.8" y="835.0" width="96.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.8" y="846.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.43%)</title><rect x="943.8" y="819.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.43%)</title><rect x="943.8" y="803.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="945.3" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="945.3" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="946.1" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="946.1" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="946.1" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (10 samples, 0.17%)</title><rect x="946.9" y="787.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.08%)</title><rect x="947.9" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.08%)</title><rect x="947.9" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.08%)</title><rect x="947.9" y="739.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.put (465 samples, 7.76%)</title><rect x="948.9" y="819.0" width="91.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.9" y="830.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.08%)</title><rect x="950.7" y="803.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.08%)</title><rect x="950.7" y="787.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (2 samples, 0.03%)</title><rect x="951.2" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.10%)</title><rect x="951.6" y="803.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (445 samples, 7.43%)</title><rect x="952.8" y="803.0" width="87.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.8" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/897554165.linkToTargetMethod (4 samples, 0.07%)</title><rect x="952.8" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="952.8" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$66/300860225.get$Lambda (4 samples, 0.07%)</title><rect x="952.8" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.05%)</title><rect x="953.0" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (432 samples, 7.21%)</title><rect x="953.6" y="787.0" width="85.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.6" y="798.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (415 samples, 6.93%)</title><rect x="957.0" y="771.0" width="81.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.0" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (20 samples, 0.33%)</title><rect x="957.9" y="755.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (20 samples, 0.33%)</title><rect x="957.9" y="739.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (20 samples, 0.33%)</title><rect x="957.9" y="723.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (20 samples, 0.33%)</title><rect x="957.9" y="707.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (20 samples, 0.33%)</title><rect x="957.9" y="691.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (27 samples, 0.45%)</title><rect x="961.9" y="755.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.45%)</title><rect x="961.9" y="739.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (20 samples, 0.33%)</title><rect x="961.9" y="723.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (17 samples, 0.28%)</title><rect x="962.3" y="707.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.28%)</title><rect x="962.3" y="691.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.28%)</title><rect x="962.3" y="675.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.3" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.17%)</title><rect x="962.5" y="659.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="965.5" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.05%)</title><rect x="962.9" y="643.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="965.9" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="963.5" y="643.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="966.5" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="963.7" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="966.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="963.7" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="966.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="964.4" y="659.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="967.4" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.08%)</title><rect x="964.4" y="643.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="967.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="965.0" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="965.0" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="968.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.12%)</title><rect x="965.8" y="723.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.12%)</title><rect x="965.8" y="707.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (3 samples, 0.05%)</title><rect x="965.8" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="965.8" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.07%)</title><rect x="966.4" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.07%)</title><rect x="966.4" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.07%)</title><rect x="966.4" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (363 samples, 6.06%)</title><rect x="967.2" y="755.0" width="71.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.2" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (362 samples, 6.04%)</title><rect x="967.4" y="739.0" width="71.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.4" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (361 samples, 6.03%)</title><rect x="967.4" y="723.0" width="71.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.4" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (360 samples, 6.01%)</title><rect x="967.6" y="707.0" width="70.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.6" y="718.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (360 samples, 6.01%)</title><rect x="967.6" y="691.0" width="70.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.6" y="702.0">jdk/inte..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.05%)</title><rect x="968.2" y="675.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="971.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.03%)</title><rect x="969.0" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="972.0" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="969.6" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="972.6" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="970.0" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="973.0" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (54 samples, 0.90%)</title><rect x="970.4" y="675.0" width="10.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="973.4" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (4 samples, 0.07%)</title><rect x="972.3" y="659.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="975.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.05%)</title><rect x="973.3" y="659.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="976.3" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (6 samples, 0.10%)</title><rect x="973.9" y="659.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="976.9" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.10%)</title><rect x="975.1" y="659.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="978.1" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="976.5" y="659.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="979.5" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.08%)</title><rect x="976.9" y="659.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.9" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (6 samples, 0.10%)</title><rect x="977.8" y="659.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="980.8" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.17%)</title><rect x="979.0" y="659.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="982.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="981.0" y="675.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="984.0" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.03%)</title><rect x="981.0" y="659.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="984.0" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (281 samples, 4.69%)</title><rect x="981.4" y="675.0" width="55.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="984.4" y="686.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (225 samples, 3.76%)</title><rect x="992.4" y="659.0" width="44.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.4" y="670.0">entr..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="992.4" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="995.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (222 samples, 3.71%)</title><rect x="993.0" y="643.0" width="43.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="996.0" y="654.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (201 samples, 3.36%)</title><rect x="996.9" y="627.0" width="39.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.9" y="638.0">__x..</text>
</g>
<g>
<title>do_futex (198 samples, 3.31%)</title><rect x="997.5" y="611.0" width="39.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1000.5" y="622.0">do_..</text>
</g>
<g>
<title>futex_wake (194 samples, 3.24%)</title><rect x="997.7" y="595.0" width="38.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.7" y="606.0">fut..</text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.17%)</title><rect x="999.9" y="579.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.9" y="590.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.05%)</title><rect x="1001.3" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1004.3" y="574.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.03%)</title><rect x="1001.9" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.9" y="590.0"></text>
</g>
<g>
<title>wake_up_q (171 samples, 2.85%)</title><rect x="1002.3" y="579.0" width="33.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1005.3" y="590.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (170 samples, 2.84%)</title><rect x="1002.5" y="563.0" width="33.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1005.5" y="574.0">tr..</text>
</g>
<g>
<title>__lock_text_start (169 samples, 2.82%)</title><rect x="1002.7" y="547.0" width="33.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1005.7" y="558.0">__..</text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="1036.1" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1039.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="1036.7" y="675.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1039.7" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.05%)</title><rect x="1037.9" y="675.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewModularTopology.primaryFor (9 samples, 0.15%)</title><rect x="1038.7" y="787.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewModularTopology.primaryFor (9 samples, 0.15%)</title><rect x="1038.7" y="771.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (9 samples, 0.15%)</title><rect x="1038.7" y="755.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (17 samples, 0.28%)</title><rect x="1040.5" y="835.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.28%)</title><rect x="1040.5" y="819.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.12%)</title><rect x="1040.5" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.17%)</title><rect x="1041.9" y="803.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (10 samples, 0.17%)</title><rect x="1041.9" y="787.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (10 samples, 0.17%)</title><rect x="1041.9" y="771.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (47 samples, 0.78%)</title><rect x="1043.8" y="867.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.23%)</title><rect x="1043.8" y="851.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.23%)</title><rect x="1043.8" y="835.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.23%)</title><rect x="1043.8" y="819.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.23%)</title><rect x="1043.8" y="803.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.13%)</title><rect x="1045.0" y="787.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.37%)</title><rect x="1046.6" y="851.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.32%)</title><rect x="1047.2" y="835.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.2" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1050.3" y="819.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1053.3" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1050.3" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (11 samples, 0.18%)</title><rect x="1050.9" y="851.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (27 samples, 0.45%)</title><rect x="1053.1" y="867.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.20%)</title><rect x="1054.1" y="851.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1057.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.20%)</title><rect x="1054.1" y="835.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.15%)</title><rect x="1056.4" y="851.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1059.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.15%)</title><rect x="1056.4" y="835.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (79 samples, 1.32%)</title><rect x="1058.4" y="867.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 0.65%)</title><rect x="1066.3" y="851.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1069.3" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1072.2" y="835.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1075.2" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1072.4" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1075.4" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1072.4" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1075.4" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1072.4" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1075.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1073.2" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1073.2" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.05%)</title><rect x="1073.2" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.2" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1073.2" y="787.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.2" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1073.2" y="771.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.2" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1073.2" y="755.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.2" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="1073.2" y="739.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1076.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.05%)</title><rect x="1074.0" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (452 samples, 7.55%)</title><rect x="1074.6" y="883.0" width="89.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.6" y="894.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (445 samples, 7.43%)</title><rect x="1075.9" y="867.0" width="87.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.9" y="878.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (58 samples, 0.97%)</title><rect x="1077.7" y="851.0" width="11.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1080.7" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.15%)</title><rect x="1078.5" y="835.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1081.5" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1080.3" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.3" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.10%)</title><rect x="1080.7" y="835.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.7" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="1082.0" y="835.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1085.0" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1082.6" y="835.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1085.6" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (27 samples, 0.45%)</title><rect x="1083.0" y="835.0" width="5.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1086.0" y="846.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="1084.0" y="819.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.0" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.08%)</title><rect x="1084.8" y="819.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.8" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (13 samples, 0.22%)</title><rect x="1085.8" y="819.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1088.8" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.12%)</title><rect x="1087.0" y="803.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.0" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="1088.5" y="835.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1091.5" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="1089.3" y="851.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1092.3" y="862.0"></text>
</g>
<g>
<title>recv (371 samples, 6.19%)</title><rect x="1090.1" y="851.0" width="73.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1093.1" y="862.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (281 samples, 4.69%)</title><rect x="1107.9" y="835.0" width="55.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1110.9" y="846.0">entry..</text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 0.10%)</title><rect x="1107.9" y="819.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1110.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (275 samples, 4.59%)</title><rect x="1109.0" y="819.0" width="54.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1112.0" y="830.0">do_sy..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.05%)</title><rect x="1114.4" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1117.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (245 samples, 4.09%)</title><rect x="1114.9" y="803.0" width="48.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1117.9" y="814.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (235 samples, 3.92%)</title><rect x="1114.9" y="787.0" width="46.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1117.9" y="798.0">__sy..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1115.5" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1118.5" y="782.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.05%)</title><rect x="1115.9" y="771.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1118.9" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (202 samples, 3.37%)</title><rect x="1116.5" y="771.0" width="39.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1119.5" y="782.0">soc..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.08%)</title><rect x="1116.7" y="755.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1119.7" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (171 samples, 2.85%)</title><rect x="1117.7" y="755.0" width="33.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1120.7" y="766.0">in..</text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="1118.5" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1121.5" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="1119.1" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1122.1" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (161 samples, 2.69%)</title><rect x="1119.7" y="739.0" width="31.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1122.7" y="750.0">tc..</text>
</g>
<g>
<title>__kfree_skb (32 samples, 0.53%)</title><rect x="1126.0" y="723.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1129.0" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1126.2" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1129.2" y="718.0"></text>
</g>
<g>
<title>skb_release_all (29 samples, 0.48%)</title><rect x="1126.6" y="707.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1129.6" y="718.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="1126.6" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1129.6" y="702.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="1127.0" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1130.0" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (12 samples, 0.20%)</title><rect x="1127.4" y="691.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1130.4" y="702.0"></text>
</g>
<g>
<title>dst_release (12 samples, 0.20%)</title><rect x="1127.4" y="675.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1130.4" y="686.0"></text>
</g>
<g>
<title>sock_rfree (13 samples, 0.22%)</title><rect x="1129.7" y="691.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1132.7" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="1132.3" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1135.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (10 samples, 0.17%)</title><rect x="1132.7" y="723.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1135.7" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1134.8" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1137.8" y="734.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.08%)</title><rect x="1135.2" y="723.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1138.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1135.6" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1138.6" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (62 samples, 1.04%)</title><rect x="1136.2" y="723.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.2" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (61 samples, 1.02%)</title><rect x="1136.4" y="707.0" width="12.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1139.4" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (42 samples, 0.70%)</title><rect x="1140.2" y="691.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1143.2" y="702.0"></text>
</g>
<g>
<title>__check_object_size (19 samples, 0.32%)</title><rect x="1140.2" y="675.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1143.2" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.18%)</title><rect x="1141.7" y="659.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1144.7" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (20 samples, 0.33%)</title><rect x="1144.1" y="675.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1147.1" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (18 samples, 0.30%)</title><rect x="1144.1" y="659.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1147.1" y="670.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="1147.6" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1150.6" y="670.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="1148.0" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1151.0" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.07%)</title><rect x="1148.4" y="723.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1151.4" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="1149.2" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1152.2" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.10%)</title><rect x="1149.6" y="723.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1152.6" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="1150.4" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1150.4" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="1150.8" y="723.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.8" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (24 samples, 0.40%)</title><rect x="1151.4" y="755.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.4" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (19 samples, 0.32%)</title><rect x="1152.4" y="739.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.4" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (18 samples, 0.30%)</title><rect x="1152.6" y="723.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.6" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (25 samples, 0.42%)</title><rect x="1156.3" y="771.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.3" y="782.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.27%)</title><rect x="1156.3" y="755.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.27%)</title><rect x="1156.3" y="739.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1159.3" y="750.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.27%)</title><rect x="1156.3" y="723.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.3" y="734.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.15%)</title><rect x="1159.5" y="755.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1162.5" y="766.0"></text>
</g>
<g>
<title>import_single_range (10 samples, 0.17%)</title><rect x="1161.2" y="787.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1164.2" y="798.0"></text>
</g>
<g>
<title>recv@plt (2 samples, 0.03%)</title><rect x="1163.2" y="851.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1166.2" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1163.6" y="899.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.6" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.07%)</title><rect x="1164.0" y="915.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.0" y="926.0"></text>
</g>
<g>
<title>start_thread (128 samples, 2.14%)</title><rect x="1164.8" y="931.0" width="25.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1167.8" y="942.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (128 samples, 2.14%)</title><rect x="1164.8" y="915.0" width="25.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1167.8" y="926.0">t..</text>
</g>
<g>
<title>Thread::call_run() (128 samples, 2.14%)</title><rect x="1164.8" y="899.0" width="25.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.8" y="910.0">T..</text>
</g>
<g>
<title>GangWorker::loop() (45 samples, 0.75%)</title><rect x="1164.8" y="883.0" width="8.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.8" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (44 samples, 0.73%)</title><rect x="1164.8" y="867.0" width="8.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.8" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (40 samples, 0.67%)</title><rect x="1164.8" y="851.0" width="7.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.8" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.10%)</title><rect x="1165.4" y="835.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.07%)</title><rect x="1165.8" y="819.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.8" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.05%)</title><rect x="1166.0" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.0" y="814.0"></text>
</g>
<g>
<title>SpinPause (31 samples, 0.52%)</title><rect x="1166.6" y="835.0" width="6.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1169.6" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1172.7" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.7" y="862.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1172.7" y="835.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.7" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.03%)</title><rect x="1172.7" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.7" y="830.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.03%)</title><rect x="1172.7" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.7" y="814.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.03%)</title><rect x="1172.7" y="787.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.7" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1173.1" y="851.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.1" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.03%)</title><rect x="1173.1" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.1" y="846.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1173.1" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.1" y="830.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1173.1" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.1" y="814.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (2 samples, 0.03%)</title><rect x="1173.1" y="787.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.1" y="798.0"></text>
</g>
<g>
<title>JavaThread::run() (81 samples, 1.35%)</title><rect x="1173.6" y="883.0" width="16.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.6" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (81 samples, 1.35%)</title><rect x="1173.6" y="867.0" width="16.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.6" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (81 samples, 1.35%)</title><rect x="1173.6" y="851.0" width="16.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.6" y="862.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (80 samples, 1.34%)</title><rect x="1173.6" y="835.0" width="15.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.6" y="846.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (80 samples, 1.34%)</title><rect x="1173.6" y="819.0" width="15.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.6" y="830.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (49 samples, 0.82%)</title><rect x="1173.6" y="803.0" width="9.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.6" y="814.0"></text>
</g>
<g>
<title>Compile::Output() (4 samples, 0.07%)</title><rect x="1173.6" y="787.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.6" y="798.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.05%)</title><rect x="1173.8" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.8" y="782.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.05%)</title><rect x="1173.8" y="755.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.8" y="766.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (2 samples, 0.03%)</title><rect x="1173.8" y="739.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.8" y="750.0"></text>
</g>
<g>
<title>Matcher::match() (7 samples, 0.12%)</title><rect x="1174.4" y="787.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.4" y="798.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.08%)</title><rect x="1174.6" y="771.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.6" y="782.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.05%)</title><rect x="1175.0" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.0" y="766.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.03%)</title><rect x="1175.0" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.0" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.07%)</title><rect x="1176.0" y="787.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.0" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.05%)</title><rect x="1176.2" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.2" y="782.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="1176.4" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="766.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="1176.4" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.4" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (33 samples, 0.55%)</title><rect x="1176.8" y="787.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.03%)</title><rect x="1177.4" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.4" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 0.13%)</title><rect x="1178.0" y="771.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.0" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.03%)</title><rect x="1178.6" y="755.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.6" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.03%)</title><rect x="1179.0" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.0" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (3 samples, 0.05%)</title><rect x="1179.8" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.8" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.07%)</title><rect x="1180.3" y="771.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.3" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.03%)</title><rect x="1181.3" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="782.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.03%)</title><rect x="1181.9" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.9" y="782.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.03%)</title><rect x="1181.9" y="755.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.9" y="766.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.05%)</title><rect x="1182.5" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.5" y="782.0"></text>
</g>
<g>
<title>Compile::Optimize() (20 samples, 0.33%)</title><rect x="1183.3" y="803.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.3" y="814.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (6 samples, 0.10%)</title><rect x="1183.3" y="787.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.3" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.10%)</title><rect x="1183.3" y="771.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.3" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.10%)</title><rect x="1184.7" y="787.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.7" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.07%)</title><rect x="1184.9" y="771.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.03%)</title><rect x="1185.3" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.3" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.05%)</title><rect x="1186.1" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.1" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.03%)</title><rect x="1186.1" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.1" y="782.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.03%)</title><rect x="1186.7" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.7" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.15%)</title><rect x="1187.4" y="803.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.15%)</title><rect x="1187.4" y="787.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.15%)</title><rect x="1187.4" y="771.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.15%)</title><rect x="1187.4" y="755.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.15%)</title><rect x="1187.4" y="739.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.13%)</title><rect x="1187.4" y="723.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1187.8" y="707.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1187.8" y="691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1187.8" y="675.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1187.8" y="659.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1187.8" y="643.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1187.8" y="627.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.8" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1187.8" y="611.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1187.8" y="595.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1187.8" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1187.8" y="563.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1187.8" y="547.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1187.8" y="531.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.8" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.0" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.0" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1188.0" y="499.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1188.0" y="483.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1188.0" y="467.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1188.0" y="451.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1188.0" y="435.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.0" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.0" y="419.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.0" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1188.0" y="403.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1188.0" y="387.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1188.0" y="371.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1188.0" y="355.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1188.0" y="339.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.0" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.0" y="323.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1188.0" y="307.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1188.0" y="291.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1188.0" y="275.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.0" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1188.0" y="259.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.0" y="270.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.4" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.4" y="718.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.6" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.6" y="867.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.03%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.6" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
</g>
</svg>
