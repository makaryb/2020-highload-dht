<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (6,981 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (18 samples, 0.26%)</title><rect x="10.2" y="947.0" width="3.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.2" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (4 samples, 0.06%)</title><rect x="10.3" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.13%)</title><rect x="11.0" y="931.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (9 samples, 0.13%)</title><rect x="11.0" y="915.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.06%)</title><rect x="11.2" y="899.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.2" y="910.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="11.4" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.4" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.06%)</title><rect x="11.9" y="899.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.9" y="910.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.03%)</title><rect x="12.2" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.2" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="12.5" y="931.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.5" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="12.9" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.9" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (27 samples, 0.39%)</title><rect x="13.2" y="947.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="16.2" y="958.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.03%)</title><rect x="13.2" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.2" y="942.0"></text>
</g>
<g>
<title>ExceptionBlob (2 samples, 0.03%)</title><rect x="13.5" y="931.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="16.5" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (19 samples, 0.27%)</title><rect x="14.1" y="931.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.1" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (19 samples, 0.27%)</title><rect x="14.1" y="915.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.1" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="17.3" y="931.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,163 samples, 88.28%)</title><rect x="17.8" y="947.0" width="1041.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.8" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,163 samples, 88.28%)</title><rect x="17.8" y="931.0" width="1041.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.8" y="942.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,163 samples, 88.28%)</title><rect x="17.8" y="915.0" width="1041.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.8" y="926.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.07%)</title><rect x="17.8" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.07%)</title><rect x="17.8" y="883.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.07%)</title><rect x="17.8" y="867.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="18.3" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (345 samples, 4.94%)</title><rect x="18.6" y="899.0" width="58.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.6" y="910.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (343 samples, 4.91%)</title><rect x="19.0" y="883.0" width="57.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.0" y="894.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (297 samples, 4.25%)</title><rect x="19.6" y="867.0" width="50.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.6" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.14%)</title><rect x="20.5" y="851.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (12 samples, 0.17%)</title><rect x="22.2" y="851.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.17%)</title><rect x="22.2" y="835.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.09%)</title><rect x="23.2" y="819.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.09%)</title><rect x="23.2" y="803.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.07%)</title><rect x="23.4" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.07%)</title><rect x="23.4" y="771.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="26.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="23.5" y="755.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="23.5" y="739.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="26.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.06%)</title><rect x="23.5" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="26.5" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="23.5" y="707.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="26.5" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="23.5" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="26.5" y="702.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="23.5" y="675.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="26.5" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="23.5" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="26.5" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="23.5" y="643.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (5 samples, 0.07%)</title><rect x="24.2" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (5 samples, 0.07%)</title><rect x="24.2" y="835.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (261 samples, 3.74%)</title><rect x="25.0" y="851.0" width="44.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.0" y="862.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (260 samples, 3.72%)</title><rect x="25.2" y="835.0" width="44.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.2" y="846.0">jdk/..</text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.07%)</title><rect x="25.4" y="819.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="28.4" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.03%)</title><rect x="26.2" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="29.2" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (110 samples, 1.58%)</title><rect x="26.6" y="819.0" width="18.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="29.6" y="830.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="28.4" y="803.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="31.4" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 0.27%)</title><rect x="28.9" y="803.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="31.9" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.03%)</title><rect x="31.0" y="787.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="34.0" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.06%)</title><rect x="31.3" y="787.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="34.3" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="32.1" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="35.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.03%)</title><rect x="32.5" y="803.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="35.5" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="32.8" y="803.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="35.8" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (63 samples, 0.90%)</title><rect x="33.3" y="803.0" width="10.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="36.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.33%)</title><rect x="40.1" y="787.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.32%)</title><rect x="40.3" y="771.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.20%)</title><rect x="41.6" y="755.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.6" y="766.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.17%)</title><rect x="41.9" y="739.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.9" y="750.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.14%)</title><rect x="42.3" y="723.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="45.3" y="734.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.09%)</title><rect x="43.0" y="707.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="46.0" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.04%)</title><rect x="43.5" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.5" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="44.3" y="803.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="47.3" y="814.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="44.8" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="47.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 2.01%)</title><rect x="45.2" y="819.0" width="23.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="48.2" y="830.0">[..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (6 samples, 0.09%)</title><rect x="45.2" y="803.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="48.2" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="46.2" y="803.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="49.2" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (125 samples, 1.79%)</title><rect x="46.8" y="803.0" width="21.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="49.8" y="814.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.66%)</title><rect x="60.2" y="787.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="63.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.64%)</title><rect x="60.4" y="771.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.4" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (39 samples, 0.56%)</title><rect x="61.2" y="755.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="64.2" y="766.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.50%)</title><rect x="61.6" y="739.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="64.6" y="750.0"></text>
</g>
<g>
<title>futex_wait (33 samples, 0.47%)</title><rect x="61.6" y="723.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="64.6" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 0.19%)</title><rect x="62.7" y="707.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="65.7" y="718.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.14%)</title><rect x="63.2" y="691.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="66.2" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.13%)</title><rect x="63.4" y="675.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="66.4" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.07%)</title><rect x="64.1" y="659.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.1" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (10 samples, 0.14%)</title><rect x="64.9" y="707.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="67.9" y="718.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="65.9" y="691.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="68.9" y="702.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="66.6" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.6" y="718.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="67.5" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.5" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="68.0" y="803.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="71.0" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="68.8" y="819.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="71.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.06%)</title><rect x="69.2" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.09%)</title><rect x="69.8" y="867.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.07%)</title><rect x="70.0" y="851.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.07%)</title><rect x="70.0" y="835.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (36 samples, 0.52%)</title><rect x="70.9" y="867.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (36 samples, 0.52%)</title><rect x="70.9" y="851.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.44%)</title><rect x="71.5" y="835.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 0.43%)</title><rect x="71.7" y="819.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 0.43%)</title><rect x="71.7" y="803.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.7" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.07%)</title><rect x="71.7" y="787.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="74.7" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="72.0" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="75.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.36%)</title><rect x="72.5" y="787.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="75.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.29%)</title><rect x="73.4" y="771.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="76.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.29%)</title><rect x="73.4" y="755.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="76.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.26%)</title><rect x="73.7" y="739.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.7" y="750.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.26%)</title><rect x="73.7" y="723.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="76.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.26%)</title><rect x="73.7" y="707.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.24%)</title><rect x="73.9" y="691.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.23%)</title><rect x="74.1" y="675.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="77.1" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.23%)</title><rect x="74.1" y="659.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="77.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (5,813 samples, 83.27%)</title><rect x="76.9" y="899.0" width="982.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.9" y="910.0">ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (5,811 samples, 83.24%)</title><rect x="77.3" y="883.0" width="982.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.3" y="894.0">ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (5,011 samples, 71.78%)</title><rect x="77.3" y="867.0" width="847.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.3" y="878.0">ru/mail/polis/service/boriskin/NewService.operation</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (5,008 samples, 71.74%)</title><rect x="77.8" y="851.0" width="846.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.8" y="862.0">ru/mail/polis/service/boriskin/NewService.doGet</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (19 samples, 0.27%)</title><rect x="78.5" y="835.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="81.5" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="79.0" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="82.0" y="830.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (2 samples, 0.03%)</title><rect x="79.0" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="82.0" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (12 samples, 0.17%)</title><rect x="79.5" y="819.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="82.5" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_nmethod(void*) (4 samples, 0.06%)</title><rect x="80.0" y="803.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="83.0" y="814.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="80.8" y="803.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="83.8" y="814.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (2 samples, 0.03%)</title><rect x="81.2" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="81.8" y="835.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="84.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (2 samples, 0.03%)</title><rect x="81.8" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="84.8" y="830.0"></text>
</g>
<g>
<title>_rethrow_Java (2 samples, 0.03%)</title><rect x="82.3" y="835.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="85.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (4,554 samples, 65.23%)</title><rect x="82.9" y="835.0" width="769.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.9" y="846.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (283 samples, 4.05%)</title><rect x="83.0" y="819.0" width="47.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.0" y="830.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (282 samples, 4.04%)</title><rect x="83.2" y="803.0" width="47.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.2" y="814.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (278 samples, 3.98%)</title><rect x="83.9" y="787.0" width="47.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.9" y="798.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (278 samples, 3.98%)</title><rect x="83.9" y="771.0" width="47.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.9" y="782.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (278 samples, 3.98%)</title><rect x="83.9" y="755.0" width="47.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="766.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (273 samples, 3.91%)</title><rect x="84.0" y="739.0" width="46.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.0" y="750.0">com/..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (268 samples, 3.84%)</title><rect x="84.9" y="723.0" width="45.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.9" y="734.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (268 samples, 3.84%)</title><rect x="84.9" y="707.0" width="45.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.9" y="718.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (268 samples, 3.84%)</title><rect x="84.9" y="691.0" width="45.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.9" y="702.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (268 samples, 3.84%)</title><rect x="84.9" y="675.0" width="45.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.9" y="686.0">java..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (268 samples, 3.84%)</title><rect x="84.9" y="659.0" width="45.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.9" y="670.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (268 samples, 3.84%)</title><rect x="84.9" y="643.0" width="45.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.9" y="654.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (264 samples, 3.78%)</title><rect x="84.9" y="627.0" width="44.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.9" y="638.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (264 samples, 3.78%)</title><rect x="84.9" y="611.0" width="44.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.9" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (264 samples, 3.78%)</title><rect x="84.9" y="595.0" width="44.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.9" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (264 samples, 3.78%)</title><rect x="84.9" y="579.0" width="44.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.9" y="590.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.07%)</title><rect x="84.9" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="85.0" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="85.2" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="85.2" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="85.4" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="85.4" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (92 samples, 1.32%)</title><rect x="85.7" y="563.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (92 samples, 1.32%)</title><rect x="85.7" y="547.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (91 samples, 1.30%)</title><rect x="85.9" y="531.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.04%)</title><rect x="85.9" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.9" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.04%)</title><rect x="85.9" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (82 samples, 1.17%)</title><rect x="86.4" y="515.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (74 samples, 1.06%)</title><rect x="86.7" y="499.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (74 samples, 1.06%)</title><rect x="86.7" y="483.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (74 samples, 1.06%)</title><rect x="86.7" y="467.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.7" y="478.0"></text>
</g>
<g>
<title>__libc_pread64 (70 samples, 1.00%)</title><rect x="87.1" y="451.0" width="11.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="90.1" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.52%)</title><rect x="92.8" y="435.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.52%)</title><rect x="92.8" y="419.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="95.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (18 samples, 0.26%)</title><rect x="95.7" y="403.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.7" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (18 samples, 0.26%)</title><rect x="95.7" y="387.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.7" y="398.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="95.9" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="98.9" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="95.9" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.9" y="366.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="95.9" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="98.9" y="350.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.20%)</title><rect x="96.4" y="371.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (13 samples, 0.19%)</title><rect x="96.4" y="355.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.4" y="366.0"></text>
</g>
<g>
<title>new_sync_read (13 samples, 0.19%)</title><rect x="96.4" y="339.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.4" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.17%)</title><rect x="96.5" y="323.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="99.5" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.17%)</title><rect x="96.5" y="307.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.5" y="318.0"></text>
</g>
<g>
<title>generic_file_buffered_read (12 samples, 0.17%)</title><rect x="96.5" y="291.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.5" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="96.9" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.9" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.06%)</title><rect x="97.2" y="275.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="100.2" y="286.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.06%)</title><rect x="97.2" y="259.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="100.2" y="270.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="98.1" y="275.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="101.1" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.04%)</title><rect x="98.1" y="259.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.1" y="270.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.04%)</title><rect x="98.1" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.1" y="254.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.03%)</title><rect x="98.2" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.06%)</title><rect x="99.2" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="99.4" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="99.9" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="99.9" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="100.3" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.04%)</title><rect x="100.3" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.04%)</title><rect x="100.8" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (167 samples, 2.39%)</title><rect x="101.3" y="563.0" width="28.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.3" y="574.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (167 samples, 2.39%)</title><rect x="101.3" y="547.0" width="28.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.3" y="558.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.06%)</title><rect x="101.6" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.6" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.06%)</title><rect x="101.6" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.06%)</title><rect x="102.3" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.3" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.06%)</title><rect x="102.3" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (148 samples, 2.12%)</title><rect x="103.0" y="531.0" width="25.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.0" y="542.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.03%)</title><rect x="103.0" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (131 samples, 1.88%)</title><rect x="103.3" y="515.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.3" y="526.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (131 samples, 1.88%)</title><rect x="103.3" y="499.0" width="22.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.3" y="510.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (131 samples, 1.88%)</title><rect x="103.3" y="483.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.3" y="494.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.03%)</title><rect x="103.8" y="467.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="106.8" y="478.0"></text>
</g>
<g>
<title>__libc_pread64 (124 samples, 1.78%)</title><rect x="104.1" y="467.0" width="21.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="107.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 0.99%)</title><rect x="113.4" y="451.0" width="11.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="116.4" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 0.97%)</title><rect x="113.6" y="435.0" width="11.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.6" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (52 samples, 0.74%)</title><rect x="116.2" y="419.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="119.2" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (51 samples, 0.73%)</title><rect x="116.3" y="403.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.3" y="414.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.13%)</title><rect x="116.5" y="387.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.5" y="398.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.13%)</title><rect x="116.5" y="371.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="119.5" y="382.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.13%)</title><rect x="116.5" y="355.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="119.5" y="366.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="118.0" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="121.0" y="398.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="118.3" y="387.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="121.3" y="398.0"></text>
</g>
<g>
<title>vfs_read (37 samples, 0.53%)</title><rect x="118.7" y="387.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="121.7" y="398.0"></text>
</g>
<g>
<title>__vfs_read (30 samples, 0.43%)</title><rect x="119.0" y="371.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.0" y="382.0"></text>
</g>
<g>
<title>new_sync_read (30 samples, 0.43%)</title><rect x="119.0" y="355.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.0" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (27 samples, 0.39%)</title><rect x="119.5" y="339.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.5" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (24 samples, 0.34%)</title><rect x="120.0" y="323.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="123.0" y="334.0"></text>
</g>
<g>
<title>generic_file_buffered_read (24 samples, 0.34%)</title><rect x="120.0" y="307.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="123.0" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.10%)</title><rect x="121.7" y="291.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.7" y="302.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="121.9" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.9" y="286.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="122.2" y="275.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="125.2" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.10%)</title><rect x="122.9" y="291.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.9" y="302.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.09%)</title><rect x="123.1" y="275.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.1" y="286.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="123.4" y="259.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.4" y="270.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="123.8" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.8" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.07%)</title><rect x="124.1" y="371.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="127.1" y="382.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.07%)</title><rect x="124.1" y="355.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.1" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="124.1" y="339.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="127.1" y="350.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="124.1" y="323.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="127.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.14%)</title><rect x="125.4" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="125.6" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.09%)</title><rect x="126.1" y="499.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.03%)</title><rect x="126.8" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.07%)</title><rect x="127.1" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.07%)</title><rect x="127.1" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.09%)</title><rect x="128.0" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.06%)</title><rect x="128.3" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.04%)</title><rect x="129.0" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.0" y="542.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.06%)</title><rect x="129.5" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.5" y="638.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.04%)</title><rect x="129.7" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (3 samples, 0.04%)</title><rect x="129.7" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (3 samples, 0.04%)</title><rect x="129.7" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="129.8" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.04%)</title><rect x="130.2" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.2" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="130.2" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.07%)</title><rect x="130.9" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.03%)</title><rect x="131.2" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.2" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.03%)</title><rect x="131.2" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.2" y="798.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (169 samples, 2.42%)</title><rect x="131.7" y="819.0" width="28.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.7" y="830.0">ja..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (169 samples, 2.42%)</title><rect x="131.7" y="803.0" width="28.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.7" y="814.0">ja..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (169 samples, 2.42%)</title><rect x="131.7" y="787.0" width="28.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.7" y="798.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (169 samples, 2.42%)</title><rect x="131.7" y="771.0" width="28.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.7" y="782.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (165 samples, 2.36%)</title><rect x="132.4" y="755.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.4" y="766.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (160 samples, 2.29%)</title><rect x="133.2" y="739.0" width="27.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.2" y="750.0">j..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (153 samples, 2.19%)</title><rect x="134.1" y="723.0" width="25.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="137.1" y="734.0">J..</text>
</g>
<g>
<title>JVM_FillInStackTrace (144 samples, 2.06%)</title><rect x="134.9" y="707.0" width="24.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="137.9" y="718.0">J..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="135.1" y="691.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="138.1" y="702.0"></text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (4 samples, 0.06%)</title><rect x="135.6" y="691.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="138.6" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.03%)</title><rect x="136.4" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="139.4" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (132 samples, 1.89%)</title><rect x="136.8" y="691.0" width="22.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="139.8" y="702.0">j..</text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="136.9" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="139.9" y="686.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (2 samples, 0.03%)</title><rect x="137.3" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="140.3" y="686.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.03%)</title><rect x="137.6" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="140.6" y="686.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (3 samples, 0.04%)</title><rect x="138.1" y="675.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="141.1" y="686.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (119 samples, 1.70%)</title><rect x="139.0" y="675.0" width="20.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="142.0" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (9 samples, 0.13%)</title><rect x="144.7" y="659.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="147.7" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (2 samples, 0.03%)</title><rect x="146.2" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="149.2" y="670.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (27 samples, 0.39%)</title><rect x="146.7" y="659.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="149.7" y="670.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (21 samples, 0.30%)</title><rect x="146.9" y="643.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="149.9" y="654.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (13 samples, 0.19%)</title><rect x="147.6" y="627.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="150.6" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.14%)</title><rect x="147.9" y="611.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="150.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.11%)</title><rect x="147.9" y="595.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="150.9" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.04%)</title><rect x="148.4" y="579.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.4" y="590.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="148.9" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.9" y="590.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="149.3" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="152.3" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="149.8" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="152.8" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="150.0" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="153.0" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="150.0" y="595.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="153.0" y="606.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="150.5" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="153.5" y="654.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (14 samples, 0.20%)</title><rect x="151.5" y="659.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="154.5" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (2 samples, 0.03%)</title><rect x="153.3" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="156.3" y="654.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.04%)</title><rect x="154.0" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="157.0" y="670.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (2 samples, 0.03%)</title><rect x="154.5" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="157.5" y="670.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (3 samples, 0.04%)</title><rect x="155.0" y="659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="158.0" y="670.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (21 samples, 0.30%)</title><rect x="155.5" y="659.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="158.5" y="670.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.03%)</title><rect x="155.7" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="158.7" y="654.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (18 samples, 0.26%)</title><rect x="156.0" y="643.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="159.0" y="654.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (5 samples, 0.07%)</title><rect x="156.0" y="627.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="159.0" y="638.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (9 samples, 0.13%)</title><rect x="156.9" y="627.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="159.9" y="638.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (8 samples, 0.11%)</title><rect x="157.1" y="611.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="160.1" y="622.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (4 samples, 0.06%)</title><rect x="158.4" y="627.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="161.4" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.03%)</title><rect x="159.4" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="162.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="159.9" y="723.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="162.9" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.03%)</title><rect x="159.9" y="707.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="162.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (4,095 samples, 58.66%)</title><rect x="160.4" y="819.0" width="692.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.4" y="830.0">ru/mail/polis/dao/boriskin/NewDAO.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (4,094 samples, 58.64%)</title><rect x="160.6" y="803.0" width="692.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.6" y="814.0">ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="161.1" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.1" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="161.8" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.8" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="161.8" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.8" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="161.8" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.8" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (8 samples, 0.11%)</title><rect x="162.1" y="787.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.1" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (6 samples, 0.09%)</title><rect x="162.5" y="771.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.07%)</title><rect x="162.6" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (3 samples, 0.04%)</title><rect x="163.0" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (12 samples, 0.17%)</title><rect x="163.5" y="787.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (11 samples, 0.16%)</title><rect x="163.6" y="771.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (11 samples, 0.16%)</title><rect x="163.6" y="755.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.6" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="164.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.04%)</title><rect x="164.8" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="164.8" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (12 samples, 0.17%)</title><rect x="165.5" y="787.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (12 samples, 0.17%)</title><rect x="165.5" y="771.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.03%)</title><rect x="165.5" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (10 samples, 0.14%)</title><rect x="165.8" y="755.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (2 samples, 0.03%)</title><rect x="167.2" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (33 samples, 0.47%)</title><rect x="167.5" y="787.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (29 samples, 0.42%)</title><rect x="167.7" y="771.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (28 samples, 0.40%)</title><rect x="167.9" y="755.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (28 samples, 0.40%)</title><rect x="167.9" y="739.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (27 samples, 0.39%)</title><rect x="168.0" y="723.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (27 samples, 0.39%)</title><rect x="168.0" y="707.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (25 samples, 0.36%)</title><rect x="168.4" y="691.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.19%)</title><rect x="170.4" y="675.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.17%)</title><rect x="170.6" y="659.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.17%)</title><rect x="170.6" y="643.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.6" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.03%)</title><rect x="171.1" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.1" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="171.4" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="171.6" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="171.6" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.06%)</title><rect x="171.9" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="172.1" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.1" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="172.1" y="595.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="175.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="172.6" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="172.6" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.04%)</title><rect x="172.6" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (4,020 samples, 57.58%)</title><rect x="173.1" y="787.0" width="679.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.1" y="798.0">ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (554 samples, 7.94%)</title><rect x="173.1" y="771.0" width="93.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.1" y="782.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (554 samples, 7.94%)</title><rect x="173.1" y="755.0" width="93.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.1" y="766.0">com/google/..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.07%)</title><rect x="174.0" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.0" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.03%)</title><rect x="174.5" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.5" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (544 samples, 7.79%)</title><rect x="174.8" y="739.0" width="92.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="177.8" y="750.0">java/util/P..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (544 samples, 7.79%)</title><rect x="174.8" y="723.0" width="92.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.8" y="734.0">java/util/P..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (544 samples, 7.79%)</title><rect x="174.8" y="707.0" width="92.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.8" y="718.0">java/util/P..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (544 samples, 7.79%)</title><rect x="174.8" y="691.0" width="92.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.8" y="702.0">java/util/P..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (543 samples, 7.78%)</title><rect x="175.0" y="675.0" width="91.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.0" y="686.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (542 samples, 7.76%)</title><rect x="175.1" y="659.0" width="91.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.1" y="670.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (534 samples, 7.65%)</title><rect x="175.3" y="643.0" width="90.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.3" y="654.0">com/google..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (531 samples, 7.61%)</title><rect x="175.8" y="627.0" width="89.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.8" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (531 samples, 7.61%)</title><rect x="175.8" y="611.0" width="89.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.8" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (530 samples, 7.59%)</title><rect x="176.0" y="595.0" width="89.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.0" y="606.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.09%)</title><rect x="176.3" y="579.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="176.3" y="563.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.3" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="176.3" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="179.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="176.7" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="176.7" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (168 samples, 2.41%)</title><rect x="177.3" y="579.0" width="28.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.3" y="590.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="177.3" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="177.3" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="177.3" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (165 samples, 2.36%)</title><rect x="177.8" y="563.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.8" y="574.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (164 samples, 2.35%)</title><rect x="178.0" y="547.0" width="27.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.0" y="558.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.07%)</title><rect x="178.5" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.5" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.07%)</title><rect x="178.5" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (149 samples, 2.13%)</title><rect x="179.5" y="531.0" width="25.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.5" y="542.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.04%)</title><rect x="179.5" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (140 samples, 2.01%)</title><rect x="180.0" y="515.0" width="23.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.0" y="526.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (139 samples, 1.99%)</title><rect x="180.2" y="499.0" width="23.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.2" y="510.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (139 samples, 1.99%)</title><rect x="180.2" y="483.0" width="23.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.2" y="494.0">s..</text>
</g>
<g>
<title>__libc_pread64 (132 samples, 1.89%)</title><rect x="180.9" y="467.0" width="22.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="183.9" y="478.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.02%)</title><rect x="191.2" y="451.0" width="12.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="194.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="191.2" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.2" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (69 samples, 0.99%)</title><rect x="191.5" y="435.0" width="11.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.5" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (56 samples, 0.80%)</title><rect x="193.7" y="419.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.7" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (56 samples, 0.80%)</title><rect x="193.7" y="403.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="196.7" y="414.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.09%)</title><rect x="193.9" y="387.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="196.9" y="398.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="193.9" y="371.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.9" y="382.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="193.9" y="355.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.9" y="366.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="194.9" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="197.9" y="398.0"></text>
</g>
<g>
<title>vfs_read (46 samples, 0.66%)</title><rect x="195.4" y="387.0" width="7.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="198.4" y="398.0"></text>
</g>
<g>
<title>__vfs_read (31 samples, 0.44%)</title><rect x="196.3" y="371.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="199.3" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.04%)</title><rect x="196.3" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.3" y="366.0"></text>
</g>
<g>
<title>new_sync_read (28 samples, 0.40%)</title><rect x="196.8" y="355.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="199.8" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (27 samples, 0.39%)</title><rect x="196.9" y="339.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.9" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (25 samples, 0.36%)</title><rect x="197.3" y="323.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.3" y="334.0"></text>
</g>
<g>
<title>generic_file_buffered_read (24 samples, 0.34%)</title><rect x="197.3" y="307.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="200.3" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.06%)</title><rect x="198.5" y="291.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="201.5" y="302.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.03%)</title><rect x="199.1" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.1" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.10%)</title><rect x="199.5" y="291.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="202.5" y="302.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.10%)</title><rect x="199.5" y="275.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="202.5" y="286.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="200.8" y="291.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="203.8" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.04%)</title><rect x="200.8" y="275.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="203.8" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.11%)</title><rect x="201.8" y="371.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="204.8" y="382.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.10%)</title><rect x="202.0" y="355.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="205.0" y="366.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="202.0" y="339.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="205.0" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="202.4" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="205.4" y="350.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="202.4" y="323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.4" y="334.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="202.7" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.7" y="350.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="203.4" y="467.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="206.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.09%)</title><rect x="203.7" y="515.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="203.9" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.03%)</title><rect x="204.4" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.06%)</title><rect x="204.7" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.04%)</title><rect x="204.9" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.03%)</title><rect x="205.4" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (354 samples, 5.07%)</title><rect x="205.7" y="579.0" width="59.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.7" y="590.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (354 samples, 5.07%)</title><rect x="205.7" y="563.0" width="59.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.7" y="574.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.16%)</title><rect x="205.7" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.7" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.16%)</title><rect x="205.7" y="531.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="207.1" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.1" y="526.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.04%)</title><rect x="207.1" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="207.1" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (6 samples, 0.09%)</title><rect x="207.6" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.6" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (6 samples, 0.09%)</title><rect x="207.6" y="531.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (326 samples, 4.67%)</title><rect x="208.8" y="547.0" width="55.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="558.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.04%)</title><rect x="208.8" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (297 samples, 4.25%)</title><rect x="209.3" y="531.0" width="50.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.3" y="542.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (297 samples, 4.25%)</title><rect x="209.3" y="515.0" width="50.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.3" y="526.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (296 samples, 4.24%)</title><rect x="209.5" y="499.0" width="50.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.5" y="510.0">sun/n..</text>
</g>
<g>
<title>__libc_pread64 (282 samples, 4.04%)</title><rect x="210.8" y="483.0" width="47.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="213.8" y="494.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (155 samples, 2.22%)</title><rect x="232.3" y="467.0" width="26.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.3" y="478.0">e..</text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.06%)</title><rect x="232.3" y="451.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.3" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (151 samples, 2.16%)</title><rect x="233.0" y="451.0" width="25.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.0" y="462.0">d..</text>
</g>
<g>
<title>__x64_sys_pread64 (109 samples, 1.56%)</title><rect x="240.1" y="435.0" width="18.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="243.1" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (107 samples, 1.53%)</title><rect x="240.2" y="419.0" width="18.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="243.2" y="430.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.09%)</title><rect x="240.6" y="403.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="243.6" y="414.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="240.6" y="387.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="243.6" y="398.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="240.6" y="371.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="243.6" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="241.6" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="244.6" y="414.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="241.9" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.9" y="414.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.07%)</title><rect x="242.6" y="403.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="245.6" y="414.0"></text>
</g>
<g>
<title>vfs_read (87 samples, 1.25%)</title><rect x="243.6" y="403.0" width="14.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="246.6" y="414.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.06%)</title><rect x="244.8" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.8" y="398.0"></text>
</g>
<g>
<title>__vfs_read (55 samples, 0.79%)</title><rect x="245.5" y="387.0" width="9.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="248.5" y="398.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.09%)</title><rect x="245.5" y="371.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="248.5" y="382.0"></text>
</g>
<g>
<title>new_sync_read (49 samples, 0.70%)</title><rect x="246.5" y="371.0" width="8.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="249.5" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (45 samples, 0.64%)</title><rect x="247.1" y="355.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="250.1" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (43 samples, 0.62%)</title><rect x="247.5" y="339.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.5" y="350.0"></text>
</g>
<g>
<title>generic_file_buffered_read (40 samples, 0.57%)</title><rect x="247.8" y="323.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="250.8" y="334.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="249.7" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="252.7" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 0.16%)</title><rect x="250.0" y="307.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="253.0" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.09%)</title><rect x="250.9" y="291.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.9" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (13 samples, 0.19%)</title><rect x="251.9" y="307.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.9" y="318.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.16%)</title><rect x="252.2" y="291.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="255.2" y="302.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="254.1" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.1" y="318.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.03%)</title><rect x="254.2" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.2" y="302.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="254.2" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="257.2" y="286.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.06%)</title><rect x="254.8" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.8" y="398.0"></text>
</g>
<g>
<title>rw_verify_area (17 samples, 0.24%)</title><rect x="255.4" y="387.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="258.4" y="398.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.19%)</title><rect x="256.1" y="371.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="259.1" y="382.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.10%)</title><rect x="256.1" y="355.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="259.1" y="366.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.10%)</title><rect x="256.1" y="339.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="259.1" y="350.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.07%)</title><rect x="257.5" y="355.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.5" y="366.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="258.5" y="483.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="261.5" y="494.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="259.0" y="483.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="262.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (22 samples, 0.32%)</title><rect x="259.5" y="531.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="259.8" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (17 samples, 0.24%)</title><rect x="260.3" y="515.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.06%)</title><rect x="263.2" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.06%)</title><rect x="263.2" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.2" y="526.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="263.5" y="499.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="266.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.07%)</title><rect x="263.9" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.06%)</title><rect x="264.1" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5 samples, 0.07%)</title><rect x="264.7" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.7" y="558.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.10%)</title><rect x="265.6" y="643.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.6" y="654.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.10%)</title><rect x="265.6" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.10%)</title><rect x="265.6" y="611.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.10%)</title><rect x="265.6" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.04%)</title><rect x="265.6" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.6" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="265.6" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="265.6" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (4 samples, 0.06%)</title><rect x="266.1" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.06%)</title><rect x="266.1" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.1" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.hasNext (2 samples, 0.03%)</title><rect x="266.9" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.9" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (2 samples, 0.03%)</title><rect x="266.9" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (2 samples, 0.03%)</title><rect x="266.9" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (267 samples, 3.82%)</title><rect x="267.4" y="771.0" width="45.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.4" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (267 samples, 3.82%)</title><rect x="267.4" y="755.0" width="45.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.4" y="766.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (267 samples, 3.82%)</title><rect x="267.4" y="739.0" width="45.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.4" y="750.0">com/..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="267.4" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.4" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.04%)</title><rect x="267.4" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.4" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.04%)</title><rect x="267.4" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.03%)</title><rect x="267.6" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.03%)</title><rect x="267.6" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.6" y="670.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.03%)</title><rect x="267.6" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="270.6" y="654.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.03%)</title><rect x="267.6" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (2 samples, 0.03%)</title><rect x="267.6" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (2 samples, 0.03%)</title><rect x="267.6" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (2 samples, 0.03%)</title><rect x="267.6" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="267.6" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="267.6" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="267.6" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="267.6" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (264 samples, 3.78%)</title><rect x="267.9" y="723.0" width="44.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.9" y="734.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (264 samples, 3.78%)</title><rect x="267.9" y="707.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.9" y="718.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (264 samples, 3.78%)</title><rect x="267.9" y="691.0" width="44.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.9" y="702.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (264 samples, 3.78%)</title><rect x="267.9" y="675.0" width="44.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.9" y="686.0">java..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (264 samples, 3.78%)</title><rect x="267.9" y="659.0" width="44.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.9" y="670.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (264 samples, 3.78%)</title><rect x="267.9" y="643.0" width="44.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.9" y="654.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (263 samples, 3.77%)</title><rect x="268.1" y="627.0" width="44.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.1" y="638.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (263 samples, 3.77%)</title><rect x="268.1" y="611.0" width="44.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.1" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (263 samples, 3.77%)</title><rect x="268.1" y="595.0" width="44.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.1" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (263 samples, 3.77%)</title><rect x="268.1" y="579.0" width="44.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.1" y="590.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="268.1" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.1" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="268.1" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="271.1" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="268.1" y="531.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="271.1" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="268.1" y="515.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="271.1" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="268.1" y="499.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="271.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (84 samples, 1.20%)</title><rect x="268.6" y="563.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (83 samples, 1.19%)</title><rect x="268.8" y="547.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (83 samples, 1.19%)</title><rect x="268.8" y="531.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="269.0" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.0" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.03%)</title><rect x="269.0" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (78 samples, 1.12%)</title><rect x="269.3" y="515.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (67 samples, 0.96%)</title><rect x="269.5" y="499.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (67 samples, 0.96%)</title><rect x="269.5" y="483.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (67 samples, 0.96%)</title><rect x="269.5" y="467.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.5" y="478.0"></text>
</g>
<g>
<title>__libc_pread64 (65 samples, 0.93%)</title><rect x="269.6" y="451.0" width="11.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="272.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.62%)</title><rect x="273.3" y="435.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="276.3" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="273.3" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="276.3" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.59%)</title><rect x="273.7" y="419.0" width="6.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="276.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (28 samples, 0.40%)</title><rect x="275.7" y="403.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="278.7" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (28 samples, 0.40%)</title><rect x="275.7" y="387.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.7" y="398.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="275.7" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.7" y="382.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="275.7" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.7" y="366.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="275.7" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.7" y="350.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="276.4" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="279.4" y="382.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.32%)</title><rect x="276.7" y="371.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="279.7" y="382.0"></text>
</g>
<g>
<title>__vfs_read (17 samples, 0.24%)</title><rect x="276.9" y="355.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="279.9" y="366.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.23%)</title><rect x="277.1" y="339.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.1" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (15 samples, 0.21%)</title><rect x="277.2" y="323.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="280.2" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.17%)</title><rect x="277.7" y="307.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="280.7" y="318.0"></text>
</g>
<g>
<title>generic_file_buffered_read (12 samples, 0.17%)</title><rect x="277.7" y="291.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="280.7" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.04%)</title><rect x="277.9" y="275.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="280.9" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.07%)</title><rect x="278.6" y="275.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.6" y="286.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.06%)</title><rect x="278.8" y="259.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="281.8" y="270.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="279.4" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="282.4" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.03%)</title><rect x="279.4" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="282.4" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.06%)</title><rect x="279.8" y="355.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="282.8" y="366.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="279.9" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.07%)</title><rect x="280.8" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.06%)</title><rect x="281.0" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.07%)</title><rect x="281.6" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.6" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.07%)</title><rect x="281.6" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.03%)</title><rect x="282.5" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (176 samples, 2.52%)</title><rect x="282.8" y="563.0" width="29.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.8" y="574.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (176 samples, 2.52%)</title><rect x="282.8" y="547.0" width="29.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.8" y="558.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.03%)</title><rect x="283.7" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.03%)</title><rect x="283.7" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="284.0" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (158 samples, 2.26%)</title><rect x="284.3" y="531.0" width="26.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.3" y="542.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (150 samples, 2.15%)</title><rect x="284.5" y="515.0" width="25.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.5" y="526.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (150 samples, 2.15%)</title><rect x="284.5" y="499.0" width="25.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.5" y="510.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (150 samples, 2.15%)</title><rect x="284.5" y="483.0" width="25.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.5" y="494.0">s..</text>
</g>
<g>
<title>__libc_pread64 (141 samples, 2.02%)</title><rect x="285.4" y="467.0" width="23.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="288.4" y="478.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.19%)</title><rect x="295.2" y="451.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="298.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="295.2" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="298.2" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 1.16%)</title><rect x="295.5" y="435.0" width="13.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="298.5" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (55 samples, 0.79%)</title><rect x="299.7" y="419.0" width="9.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.7" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (54 samples, 0.77%)</title><rect x="299.9" y="403.0" width="9.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.9" y="414.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.14%)</title><rect x="300.4" y="387.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.4" y="398.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.14%)</title><rect x="300.4" y="371.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="303.4" y="382.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.14%)</title><rect x="300.4" y="355.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="303.4" y="366.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="302.1" y="387.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.1" y="398.0"></text>
</g>
<g>
<title>vfs_read (38 samples, 0.54%)</title><rect x="302.6" y="387.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="305.6" y="398.0"></text>
</g>
<g>
<title>__vfs_read (31 samples, 0.44%)</title><rect x="302.8" y="371.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="305.8" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.04%)</title><rect x="302.8" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.8" y="366.0"></text>
</g>
<g>
<title>new_sync_read (28 samples, 0.40%)</title><rect x="303.3" y="355.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.3" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (25 samples, 0.36%)</title><rect x="303.8" y="339.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="306.8" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (25 samples, 0.36%)</title><rect x="303.8" y="323.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="306.8" y="334.0"></text>
</g>
<g>
<title>generic_file_buffered_read (24 samples, 0.34%)</title><rect x="303.9" y="307.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.9" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.09%)</title><rect x="304.8" y="291.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="307.8" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="305.3" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="308.3" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (9 samples, 0.13%)</title><rect x="305.8" y="291.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="308.8" y="302.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.10%)</title><rect x="306.1" y="275.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="309.1" y="286.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="307.0" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="310.0" y="270.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.06%)</title><rect x="307.3" y="291.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.3" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.06%)</title><rect x="307.3" y="275.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="310.3" y="286.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.04%)</title><rect x="307.5" y="259.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="310.5" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.07%)</title><rect x="308.2" y="371.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="311.2" y="382.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.07%)</title><rect x="308.2" y="355.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="311.2" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="308.2" y="339.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="311.2" y="350.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="308.2" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="311.2" y="334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="309.2" y="467.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="312.2" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="309.5" y="467.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="312.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.09%)</title><rect x="309.9" y="515.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.06%)</title><rect x="310.2" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.09%)</title><rect x="311.0" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="311.7" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.04%)</title><rect x="312.1" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (3,195 samples, 45.77%)</title><rect x="312.6" y="771.0" width="540.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.6" y="782.0">ru/mail/polis/dao/boriskin/SortedStringTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (3,195 samples, 45.77%)</title><rect x="312.6" y="755.0" width="540.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.6" y="766.0">ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (3,195 samples, 45.77%)</title><rect x="312.6" y="739.0" width="540.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.6" y="750.0">ru/mail/polis/dao/boriskin/SortedStringTable.findNext</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (27 samples, 0.39%)</title><rect x="312.7" y="723.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.7" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (24 samples, 0.34%)</title><rect x="313.1" y="707.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.09%)</title><rect x="315.6" y="691.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.6" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.06%)</title><rect x="315.8" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.8" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="316.6" y="691.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="319.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (3,167 samples, 45.37%)</title><rect x="317.3" y="723.0" width="535.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.3" y="734.0">ru/mail/polis/dao/boriskin/SortedStringTable.findK</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.79%)</title><rect x="322.4" y="707.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (31 samples, 0.44%)</title><rect x="326.4" y="691.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.20%)</title><rect x="329.3" y="675.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.14%)</title><rect x="330.0" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="330.0" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.09%)</title><rect x="330.3" y="643.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="331.3" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="331.3" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.3" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="331.3" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (3 samples, 0.04%)</title><rect x="331.8" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (2 samples, 0.03%)</title><rect x="332.0" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (1,164 samples, 16.67%)</title><rect x="332.3" y="707.0" width="196.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.3" y="718.0">ru/mail/polis/dao/boriskin..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.23%)</title><rect x="332.5" y="691.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.21%)</title><rect x="332.7" y="675.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.7" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="332.7" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="335.7" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="332.7" y="643.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="335.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="332.7" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="335.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.19%)</title><rect x="333.0" y="659.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (2 samples, 0.03%)</title><rect x="335.2" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,145 samples, 16.40%)</title><rect x="335.6" y="691.0" width="193.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.6" y="702.0">sun/nio/ch/FileChannelImp..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,134 samples, 16.24%)</title><rect x="337.4" y="675.0" width="191.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.4" y="686.0">sun/nio/ch/FileChannelImp..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (113 samples, 1.62%)</title><rect x="338.1" y="659.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.1" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (113 samples, 1.62%)</title><rect x="338.1" y="643.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.04%)</title><rect x="339.6" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.6" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (22 samples, 0.32%)</title><rect x="340.1" y="627.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.07%)</title><rect x="343.0" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.03%)</title><rect x="343.5" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.5" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (75 samples, 1.07%)</title><rect x="343.8" y="627.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.8" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (70 samples, 1.00%)</title><rect x="344.3" y="611.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (70 samples, 1.00%)</title><rect x="344.3" y="595.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.03%)</title><rect x="356.2" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.04%)</title><rect x="356.5" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="357.2" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.2" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.03%)</title><rect x="357.2" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (2 samples, 0.03%)</title><rect x="357.5" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (991 samples, 14.20%)</title><rect x="357.9" y="659.0" width="167.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.9" y="670.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (16 samples, 0.23%)</title><rect x="358.0" y="643.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.0" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.04%)</title><rect x="360.2" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (880 samples, 12.61%)</title><rect x="360.7" y="643.0" width="148.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.7" y="654.0">sun/nio/ch/IOUtil.r..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (877 samples, 12.56%)</title><rect x="361.2" y="627.0" width="148.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.2" y="638.0">sun/nio/ch/FileDisp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (877 samples, 12.56%)</title><rect x="361.2" y="611.0" width="148.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.2" y="622.0">sun/nio/ch/FileDisp..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.06%)</title><rect x="363.1" y="595.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="366.1" y="606.0"></text>
</g>
<g>
<title>__libc_pread64 (837 samples, 11.99%)</title><rect x="363.8" y="595.0" width="141.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="366.8" y="606.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (475 samples, 6.80%)</title><rect x="425.0" y="579.0" width="80.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="428.0" y="590.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.20%)</title><rect x="425.0" y="563.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.0" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="427.3" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (459 samples, 6.57%)</title><rect x="427.7" y="563.0" width="77.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="430.7" y="574.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_pread64 (340 samples, 4.87%)</title><rect x="447.3" y="547.0" width="57.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.3" y="558.0">__x64_..</text>
</g>
<g>
<title>ksys_pread64 (340 samples, 4.87%)</title><rect x="447.3" y="531.0" width="57.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="450.3" y="542.0">ksys_p..</text>
</g>
<g>
<title>__fdget (38 samples, 0.54%)</title><rect x="448.1" y="515.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.1" y="526.0"></text>
</g>
<g>
<title>__fget_light (38 samples, 0.54%)</title><rect x="448.1" y="499.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.1" y="510.0"></text>
</g>
<g>
<title>__fget (37 samples, 0.53%)</title><rect x="448.3" y="483.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="451.3" y="494.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.19%)</title><rect x="454.5" y="515.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.5" y="526.0"></text>
</g>
<g>
<title>fput_many (14 samples, 0.20%)</title><rect x="457.1" y="515.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="460.1" y="526.0"></text>
</g>
<g>
<title>vfs_read (267 samples, 3.82%)</title><rect x="459.6" y="515.0" width="45.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="462.6" y="526.0">vfs_..</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.07%)</title><rect x="462.3" y="499.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.3" y="510.0"></text>
</g>
<g>
<title>__vfs_read (202 samples, 2.89%)</title><rect x="463.2" y="499.0" width="34.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="466.2" y="510.0">__..</text>
</g>
<g>
<title>ext4_file_read_iter (22 samples, 0.32%)</title><rect x="463.5" y="483.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.5" y="494.0"></text>
</g>
<g>
<title>new_sync_read (177 samples, 2.54%)</title><rect x="467.4" y="483.0" width="29.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="470.4" y="494.0">ne..</text>
</g>
<g>
<title>ext4_file_read_iter (161 samples, 2.31%)</title><rect x="469.9" y="467.0" width="27.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="472.9" y="478.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (150 samples, 2.15%)</title><rect x="471.8" y="451.0" width="25.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.8" y="462.0">g..</text>
</g>
<g>
<title>generic_file_buffered_read (140 samples, 2.01%)</title><rect x="472.6" y="435.0" width="23.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.6" y="446.0">g..</text>
</g>
<g>
<title>copy_page_to_iter (42 samples, 0.60%)</title><rect x="477.4" y="419.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.4" y="430.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="479.7" y="403.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="482.7" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (22 samples, 0.32%)</title><rect x="480.4" y="403.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.4" y="414.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="484.5" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="487.5" y="430.0"></text>
</g>
<g>
<title>pagecache_get_page (39 samples, 0.56%)</title><rect x="485.0" y="419.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="488.0" y="430.0"></text>
</g>
<g>
<title>find_get_entry (37 samples, 0.53%)</title><rect x="485.1" y="403.0" width="6.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="488.1" y="414.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.06%)</title><rect x="489.9" y="387.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="492.9" y="398.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.07%)</title><rect x="490.6" y="387.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.6" y="398.0"></text>
</g>
<g>
<title>touch_atime (27 samples, 0.39%)</title><rect x="491.7" y="419.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.7" y="430.0"></text>
</g>
<g>
<title>atime_needs_update (22 samples, 0.32%)</title><rect x="492.4" y="403.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="495.4" y="414.0"></text>
</g>
<g>
<title>current_time (14 samples, 0.20%)</title><rect x="493.1" y="387.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="496.1" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (6 samples, 0.09%)</title><rect x="493.9" y="371.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.9" y="382.0"></text>
</g>
<g>
<title>timestamp_truncate (3 samples, 0.04%)</title><rect x="494.9" y="371.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="497.9" y="382.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.04%)</title><rect x="495.5" y="387.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.5" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="496.5" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.5" y="446.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="496.8" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="499.8" y="446.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.10%)</title><rect x="497.3" y="499.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.3" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (35 samples, 0.50%)</title><rect x="498.7" y="499.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="501.7" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="499.2" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.2" y="494.0"></text>
</g>
<g>
<title>security_file_permission (30 samples, 0.43%)</title><rect x="499.5" y="483.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.5" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.09%)</title><rect x="500.5" y="467.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="503.5" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (13 samples, 0.19%)</title><rect x="501.5" y="467.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="504.5" y="478.0"></text>
</g>
<g>
<title>common_file_perm (13 samples, 0.19%)</title><rect x="501.5" y="451.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="504.5" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.04%)</title><rect x="503.2" y="435.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="506.2" y="446.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.07%)</title><rect x="503.7" y="467.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="506.7" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (3 samples, 0.04%)</title><rect x="504.8" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="507.8" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.14%)</title><rect x="505.3" y="595.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="508.3" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (9 samples, 0.13%)</title><rect x="506.9" y="595.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="509.9" y="606.0"></text>
</g>
<g>
<title>fdval (5 samples, 0.07%)</title><rect x="508.6" y="595.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="511.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (84 samples, 1.20%)</title><rect x="509.5" y="643.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.5" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.24%)</title><rect x="510.3" y="627.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="511.0" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (6 samples, 0.09%)</title><rect x="511.3" y="611.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.3" y="622.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.07%)</title><rect x="512.4" y="611.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="515.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (61 samples, 0.87%)</title><rect x="513.4" y="627.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.4" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="521.8" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.8" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.03%)</title><rect x="521.8" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="521.8" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="522.2" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (7 samples, 0.10%)</title><rect x="522.5" y="611.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.5" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="523.2" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="526.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (10 samples, 0.14%)</title><rect x="523.7" y="643.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.14%)</title><rect x="523.7" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.06%)</title><rect x="524.4" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.4" y="622.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="525.0" y="611.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="528.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (20 samples, 0.29%)</title><rect x="525.4" y="659.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.4" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="526.2" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="529.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (13 samples, 0.19%)</title><rect x="526.6" y="643.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.6" y="654.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.03%)</title><rect x="528.2" y="627.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="531.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.03%)</title><rect x="528.8" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,914 samples, 27.42%)</title><rect x="529.1" y="707.0" width="323.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.1" y="718.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,913 samples, 27.40%)</title><rect x="529.3" y="691.0" width="323.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.3" y="702.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (37 samples, 0.53%)</title><rect x="529.9" y="675.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.9" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (34 samples, 0.49%)</title><rect x="530.4" y="659.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.4" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (28 samples, 0.40%)</title><rect x="531.5" y="643.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.5" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.06%)</title><rect x="535.5" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.06%)</title><rect x="535.5" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,806 samples, 25.87%)</title><rect x="536.2" y="675.0" width="305.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.2" y="686.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (23 samples, 0.33%)</title><rect x="536.2" y="659.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,617 samples, 23.16%)</title><rect x="540.2" y="659.0" width="273.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.2" y="670.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,616 samples, 23.15%)</title><rect x="540.4" y="643.0" width="273.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.4" y="654.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,614 samples, 23.12%)</title><rect x="540.8" y="627.0" width="272.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.8" y="638.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>__libc_pread64 (1,523 samples, 21.82%)</title><rect x="547.0" y="611.0" width="257.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="550.0" y="622.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (830 samples, 11.89%)</title><rect x="664.1" y="595.0" width="140.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="667.1" y="606.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>__x64_sys_pread64 (18 samples, 0.26%)</title><rect x="664.1" y="579.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="667.1" y="590.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="667.2" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="670.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (810 samples, 11.60%)</title><rect x="667.5" y="579.0" width="136.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="670.5" y="590.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (612 samples, 8.77%)</title><rect x="700.7" y="563.0" width="103.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="703.7" y="574.0">__x64_sys_pr..</text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="700.7" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="703.7" y="558.0"></text>
</g>
<g>
<title>ksys_pread64 (607 samples, 8.70%)</title><rect x="701.3" y="547.0" width="102.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="704.3" y="558.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (72 samples, 1.03%)</title><rect x="703.2" y="531.0" width="12.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="706.2" y="542.0"></text>
</g>
<g>
<title>__fget_light (70 samples, 1.00%)</title><rect x="703.5" y="515.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="706.5" y="526.0"></text>
</g>
<g>
<title>__fget (70 samples, 1.00%)</title><rect x="703.5" y="499.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="706.5" y="510.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.14%)</title><rect x="715.4" y="531.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="718.4" y="542.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.04%)</title><rect x="717.1" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="720.1" y="542.0"></text>
</g>
<g>
<title>fput_many (23 samples, 0.33%)</title><rect x="717.7" y="531.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="720.7" y="542.0"></text>
</g>
<g>
<title>vfs_read (485 samples, 6.95%)</title><rect x="722.0" y="531.0" width="81.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="725.0" y="542.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (10 samples, 0.14%)</title><rect x="727.0" y="515.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.0" y="526.0"></text>
</g>
<g>
<title>__vfs_read (350 samples, 5.01%)</title><rect x="728.7" y="515.0" width="59.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="731.7" y="526.0">__vfs_..</text>
</g>
<g>
<title>ext4_file_read_iter (20 samples, 0.29%)</title><rect x="729.1" y="499.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="732.1" y="510.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.04%)</title><rect x="732.4" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="735.4" y="510.0"></text>
</g>
<g>
<title>new_sync_read (325 samples, 4.66%)</title><rect x="732.9" y="499.0" width="55.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.9" y="510.0">new_s..</text>
</g>
<g>
<title>ext4_file_read_iter (310 samples, 4.44%)</title><rect x="735.3" y="483.0" width="52.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="738.3" y="494.0">ext4_..</text>
</g>
<g>
<title>generic_file_buffered_read (3 samples, 0.04%)</title><rect x="737.3" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.3" y="478.0"></text>
</g>
<g>
<title>generic_file_read_iter (295 samples, 4.23%)</title><rect x="737.8" y="467.0" width="49.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="740.8" y="478.0">gener..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.07%)</title><rect x="739.5" y="451.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.5" y="462.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="740.4" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.4" y="462.0"></text>
</g>
<g>
<title>generic_file_buffered_read (275 samples, 3.94%)</title><rect x="740.7" y="451.0" width="46.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.7" y="462.0">gene..</text>
</g>
<g>
<title>_cond_resched (6 samples, 0.09%)</title><rect x="748.3" y="435.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="751.3" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.03%)</title><rect x="749.3" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.3" y="446.0"></text>
</g>
<g>
<title>copy_page_to_iter (84 samples, 1.20%)</title><rect x="749.7" y="435.0" width="14.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="752.7" y="446.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (16 samples, 0.23%)</title><rect x="754.4" y="419.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.4" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (31 samples, 0.44%)</title><rect x="757.1" y="419.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="760.1" y="430.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.06%)</title><rect x="762.4" y="419.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="765.4" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.07%)</title><rect x="763.0" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="766.0" y="430.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.03%)</title><rect x="763.9" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="766.9" y="446.0"></text>
</g>
<g>
<title>mark_page_accessed (4 samples, 0.06%)</title><rect x="764.2" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="767.2" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (93 samples, 1.33%)</title><rect x="764.9" y="435.0" width="15.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="767.9" y="446.0"></text>
</g>
<g>
<title>PageHuge (3 samples, 0.04%)</title><rect x="765.9" y="419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.9" y="430.0"></text>
</g>
<g>
<title>find_get_entry (82 samples, 1.17%)</title><rect x="766.4" y="419.0" width="13.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="769.4" y="430.0"></text>
</g>
<g>
<title>PageHuge (3 samples, 0.04%)</title><rect x="776.7" y="403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.7" y="414.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.11%)</title><rect x="777.2" y="403.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="780.2" y="414.0"></text>
</g>
<g>
<title>xas_start (10 samples, 0.14%)</title><rect x="778.6" y="403.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="781.6" y="414.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="780.3" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="783.3" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.06%)</title><rect x="780.6" y="435.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.6" y="446.0"></text>
</g>
<g>
<title>touch_atime (35 samples, 0.50%)</title><rect x="781.3" y="435.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="784.3" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (24 samples, 0.34%)</title><rect x="782.6" y="419.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.6" y="430.0"></text>
</g>
<g>
<title>current_time (13 samples, 0.19%)</title><rect x="783.8" y="403.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="786.8" y="414.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (9 samples, 0.13%)</title><rect x="784.3" y="387.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="787.3" y="398.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="786.0" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.0" y="414.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.03%)</title><rect x="786.4" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="789.4" y="414.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.04%)</title><rect x="786.7" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.7" y="430.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="787.2" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="790.2" y="462.0"></text>
</g>
<g>
<title>fsnotify (12 samples, 0.17%)</title><rect x="787.9" y="515.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="790.9" y="526.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.04%)</title><rect x="789.9" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="792.9" y="526.0"></text>
</g>
<g>
<title>rw_verify_area (80 samples, 1.15%)</title><rect x="790.4" y="515.0" width="13.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.4" y="526.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.14%)</title><rect x="791.3" y="499.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="794.3" y="510.0"></text>
</g>
<g>
<title>security_file_permission (65 samples, 0.93%)</title><rect x="792.9" y="499.0" width="11.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="795.9" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.06%)</title><rect x="794.5" y="483.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="797.5" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (37 samples, 0.53%)</title><rect x="795.1" y="483.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="798.1" y="494.0"></text>
</g>
<g>
<title>common_file_perm (35 samples, 0.50%)</title><rect x="795.5" y="467.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.5" y="478.0"></text>
</g>
<g>
<title>aa_file_perm (7 samples, 0.10%)</title><rect x="800.0" y="451.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.0" y="462.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.07%)</title><rect x="801.4" y="483.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.4" y="494.0"></text>
</g>
<g>
<title>fsnotify (10 samples, 0.14%)</title><rect x="802.2" y="483.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.2" y="494.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.03%)</title><rect x="804.1" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="807.1" y="574.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (25 samples, 0.36%)</title><rect x="804.4" y="611.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="807.4" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (21 samples, 0.30%)</title><rect x="808.7" y="611.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="811.7" y="622.0"></text>
</g>
<g>
<title>fdval (7 samples, 0.10%)</title><rect x="812.4" y="611.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="815.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (136 samples, 1.95%)</title><rect x="813.6" y="659.0" width="23.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.6" y="670.0">s..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (28 samples, 0.40%)</title><rect x="815.6" y="643.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.04%)</title><rect x="818.6" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (3 samples, 0.04%)</title><rect x="819.1" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.1" y="638.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.06%)</title><rect x="819.7" y="627.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="822.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (95 samples, 1.36%)</title><rect x="820.5" y="643.0" width="16.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.5" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.11%)</title><rect x="833.3" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.3" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.11%)</title><rect x="833.3" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.07%)</title><rect x="833.9" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.9" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.03%)</title><rect x="834.7" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.7" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.03%)</title><rect x="834.7" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (9 samples, 0.13%)</title><rect x="835.0" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.0" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="835.9" y="611.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="838.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (29 samples, 0.42%)</title><rect x="836.6" y="659.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (28 samples, 0.40%)</title><rect x="836.6" y="643.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (8 samples, 0.11%)</title><rect x="838.8" y="627.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.8" y="638.0"></text>
</g>
<g>
<title>vtable stub (7 samples, 0.10%)</title><rect x="840.1" y="627.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="843.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (63 samples, 0.90%)</title><rect x="841.5" y="675.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.06%)</title><rect x="847.0" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="850.0" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.06%)</title><rect x="847.0" y="643.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="850.0" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="847.4" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="850.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (25 samples, 0.36%)</title><rect x="847.9" y="659.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.9" y="670.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.03%)</title><rect x="851.6" y="643.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="854.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.04%)</title><rect x="852.1" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.1" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="852.1" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="855.1" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.04%)</title><rect x="852.1" y="643.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="855.1" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="852.3" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="855.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (424 samples, 6.07%)</title><rect x="852.6" y="835.0" width="71.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.6" y="846.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (423 samples, 6.06%)</title><rect x="852.6" y="819.0" width="71.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.6" y="830.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.17%)</title><rect x="853.1" y="803.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.17%)</title><rect x="853.1" y="787.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.17%)</title><rect x="853.1" y="771.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="853.6" y="755.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="856.6" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="853.6" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="856.6" y="750.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="854.1" y="755.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="857.1" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="854.8" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="857.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="854.8" y="739.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="857.8" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="854.8" y="723.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="857.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (406 samples, 5.82%)</title><rect x="855.2" y="803.0" width="68.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.2" y="814.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.19%)</title><rect x="855.3" y="787.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="857.2" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="857.2" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="857.2" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="857.2" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="860.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="857.2" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (392 samples, 5.62%)</title><rect x="857.5" y="787.0" width="66.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.5" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (391 samples, 5.60%)</title><rect x="857.7" y="771.0" width="66.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="860.7" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (391 samples, 5.60%)</title><rect x="857.7" y="755.0" width="66.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.7" y="766.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (391 samples, 5.60%)</title><rect x="857.7" y="739.0" width="66.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.7" y="750.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 0.16%)</title><rect x="858.0" y="723.0" width="1.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="861.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="858.9" y="707.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="861.9" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="859.5" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="862.5" y="718.0"></text>
</g>
<g>
<title>__send (376 samples, 5.39%)</title><rect x="860.2" y="723.0" width="63.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="863.2" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (357 samples, 5.11%)</title><rect x="863.4" y="707.0" width="60.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="866.4" y="718.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (357 samples, 5.11%)</title><rect x="863.4" y="691.0" width="60.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="866.4" y="702.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (349 samples, 5.00%)</title><rect x="864.8" y="675.0" width="59.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.8" y="686.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (349 samples, 5.00%)</title><rect x="864.8" y="659.0" width="59.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.8" y="670.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (336 samples, 4.81%)</title><rect x="865.3" y="643.0" width="56.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="868.3" y="654.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (332 samples, 4.76%)</title><rect x="865.6" y="627.0" width="56.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.6" y="638.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (331 samples, 4.74%)</title><rect x="865.8" y="611.0" width="55.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.8" y="622.0">tcp_s..</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="865.8" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="868.8" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="867.0" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="870.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (319 samples, 4.57%)</title><rect x="867.3" y="595.0" width="53.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="870.3" y="606.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="868.0" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.0" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="868.0" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="871.0" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.07%)</title><rect x="868.5" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.5" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.04%)</title><rect x="868.7" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.7" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.04%)</title><rect x="869.5" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="872.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22 samples, 0.32%)</title><rect x="870.0" y="579.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.27%)</title><rect x="870.5" y="563.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="873.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.11%)</title><rect x="870.5" y="547.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.07%)</title><rect x="870.5" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.5" y="542.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="871.5" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.5" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.09%)</title><rect x="871.9" y="547.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.9" y="558.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.07%)</title><rect x="872.9" y="547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="875.9" y="558.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.07%)</title><rect x="872.9" y="531.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="875.9" y="542.0"></text>
</g>
<g>
<title>tcp_push (274 samples, 3.92%)</title><rect x="873.9" y="579.0" width="46.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="876.9" y="590.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (274 samples, 3.92%)</title><rect x="873.9" y="563.0" width="46.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="876.9" y="574.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (270 samples, 3.87%)</title><rect x="874.6" y="547.0" width="45.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="877.6" y="558.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (250 samples, 3.58%)</title><rect x="875.3" y="531.0" width="42.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="878.3" y="542.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (237 samples, 3.39%)</title><rect x="877.1" y="515.0" width="40.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.1" y="526.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (236 samples, 3.38%)</title><rect x="877.1" y="499.0" width="39.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.1" y="510.0">__i..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="877.1" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="880.1" y="494.0"></text>
</g>
<g>
<title>ip_local_out (233 samples, 3.34%)</title><rect x="877.5" y="483.0" width="39.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="880.5" y="494.0">ip_..</text>
</g>
<g>
<title>ip_output (231 samples, 3.31%)</title><rect x="877.6" y="467.0" width="39.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="880.6" y="478.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="878.3" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="881.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (224 samples, 3.21%)</title><rect x="878.8" y="451.0" width="37.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="881.8" y="462.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.11%)</title><rect x="879.2" y="435.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="882.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (213 samples, 3.05%)</title><rect x="880.5" y="435.0" width="36.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.5" y="446.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (212 samples, 3.04%)</title><rect x="880.5" y="419.0" width="35.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.5" y="430.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (188 samples, 2.69%)</title><rect x="882.7" y="403.0" width="31.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="885.7" y="414.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (188 samples, 2.69%)</title><rect x="882.7" y="387.0" width="31.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="885.7" y="398.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (186 samples, 2.66%)</title><rect x="883.0" y="371.0" width="31.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="886.0" y="382.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (185 samples, 2.65%)</title><rect x="883.0" y="355.0" width="31.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="886.0" y="366.0">__..</text>
</g>
<g>
<title>net_rx_action (179 samples, 2.56%)</title><rect x="884.1" y="339.0" width="30.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="887.1" y="350.0">ne..</text>
</g>
<g>
<title>process_backlog (178 samples, 2.55%)</title><rect x="884.2" y="323.0" width="30.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.2" y="334.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (175 samples, 2.51%)</title><rect x="884.7" y="307.0" width="29.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="887.7" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (175 samples, 2.51%)</title><rect x="884.7" y="291.0" width="29.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="887.7" y="302.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="885.1" y="275.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="888.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (169 samples, 2.42%)</title><rect x="885.6" y="275.0" width="28.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="888.6" y="286.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="885.6" y="259.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="885.9" y="259.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="888.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (165 samples, 2.36%)</title><rect x="886.3" y="259.0" width="27.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.3" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (163 samples, 2.33%)</title><rect x="886.3" y="243.0" width="27.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.3" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (162 samples, 2.32%)</title><rect x="886.3" y="227.0" width="27.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="889.3" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (161 samples, 2.31%)</title><rect x="886.3" y="211.0" width="27.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.3" y="222.0">i..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="886.4" y="195.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="889.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (155 samples, 2.22%)</title><rect x="887.3" y="195.0" width="26.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="890.3" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.10%)</title><rect x="887.4" y="179.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="890.4" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.06%)</title><rect x="888.6" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="891.6" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="889.0" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="892.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (140 samples, 2.01%)</title><rect x="889.5" y="179.0" width="23.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="892.5" y="190.0">t..</text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.03%)</title><rect x="889.5" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="892.5" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.06%)</title><rect x="889.8" y="163.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="892.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (133 samples, 1.91%)</title><rect x="890.6" y="163.0" width="22.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.6" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.07%)</title><rect x="891.7" y="147.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="894.7" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.07%)</title><rect x="891.7" y="131.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="894.7" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="891.8" y="115.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="894.8" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="892.0" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="895.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="892.0" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.0" y="94.0"></text>
</g>
<g>
<title>tcp_ack (29 samples, 0.42%)</title><rect x="893.0" y="147.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.0" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="893.9" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="896.9" y="142.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="894.4" y="131.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.4" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (17 samples, 0.24%)</title><rect x="894.7" y="131.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="897.7" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.14%)</title><rect x="894.9" y="115.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="897.9" y="126.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.13%)</title><rect x="895.0" y="99.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="898.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.13%)</title><rect x="895.0" y="83.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="898.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.07%)</title><rect x="895.7" y="67.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.7" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.06%)</title><rect x="895.9" y="51.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="896.1" y="35.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="899.1" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="896.6" y="115.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="899.6" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="897.1" y="115.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (79 samples, 1.13%)</title><rect x="897.9" y="147.0" width="13.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="900.9" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (79 samples, 1.13%)</title><rect x="897.9" y="131.0" width="13.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="900.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="897.9" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="900.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (77 samples, 1.10%)</title><rect x="898.3" y="115.0" width="13.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (77 samples, 1.10%)</title><rect x="898.3" y="99.0" width="13.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (77 samples, 1.10%)</title><rect x="898.3" y="83.0" width="13.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="901.3" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="911.3" y="147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="914.3" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="911.6" y="147.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.6" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="911.9" y="131.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="914.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="912.8" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="915.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="913.1" y="179.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="916.1" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.14%)</title><rect x="914.5" y="403.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.14%)</title><rect x="914.5" y="387.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="917.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.09%)</title><rect x="914.8" y="371.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="917.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.06%)</title><rect x="915.0" y="355.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="918.0" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="915.2" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="918.2" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="915.8" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="918.8" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.14%)</title><rect x="917.9" y="531.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="920.9" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="918.2" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="921.2" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.07%)</title><rect x="918.7" y="515.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="921.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.07%)</title><rect x="918.7" y="499.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="921.7" y="510.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="918.9" y="483.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="921.9" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="919.2" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="922.2" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="919.7" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.09%)</title><rect x="920.2" y="579.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="923.2" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="920.4" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.4" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.04%)</title><rect x="920.7" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="923.7" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="921.4" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.4" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.03%)</title><rect x="921.7" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="924.7" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="921.7" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.7" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="921.7" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.7" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.14%)</title><rect x="922.1" y="643.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="925.1" y="654.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.10%)</title><rect x="922.1" y="627.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="925.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.10%)</title><rect x="922.1" y="611.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="925.1" y="622.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.10%)</title><rect x="922.1" y="595.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="925.1" y="606.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="923.3" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="923.8" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (800 samples, 11.46%)</title><rect x="924.3" y="867.0" width="135.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.3" y="878.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.19%)</title><rect x="925.0" y="851.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (13 samples, 0.19%)</title><rect x="925.0" y="835.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.17%)</title><rect x="925.1" y="819.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="925.5" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (8 samples, 0.11%)</title><rect x="925.8" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.09%)</title><rect x="926.0" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.09%)</title><rect x="927.2" y="851.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="927.2" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="927.5" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="927.5" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="927.5" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (463 samples, 6.63%)</title><rect x="928.2" y="851.0" width="78.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.2" y="862.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (463 samples, 6.63%)</title><rect x="928.2" y="835.0" width="78.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.2" y="846.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (123 samples, 1.76%)</title><rect x="928.2" y="819.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.2" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.07%)</title><rect x="928.2" y="803.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="931.2" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.07%)</title><rect x="928.2" y="787.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="931.2" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.07%)</title><rect x="928.2" y="771.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="931.2" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.06%)</title><rect x="928.2" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.06%)</title><rect x="928.2" y="739.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="931.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="929.0" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.03%)</title><rect x="929.2" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="932.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (115 samples, 1.65%)</title><rect x="929.5" y="803.0" width="19.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.5" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.11%)</title><rect x="929.5" y="787.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="932.5" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.07%)</title><rect x="930.0" y="771.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="933.0" y="782.0"></text>
</g>
<g>
<title>recv (105 samples, 1.50%)</title><rect x="931.2" y="787.0" width="17.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="934.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (91 samples, 1.30%)</title><rect x="933.6" y="771.0" width="15.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (91 samples, 1.30%)</title><rect x="933.6" y="755.0" width="15.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (86 samples, 1.23%)</title><rect x="934.4" y="739.0" width="14.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.4" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (86 samples, 1.23%)</title><rect x="934.4" y="723.0" width="14.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="937.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (85 samples, 1.22%)</title><rect x="934.6" y="707.0" width="14.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="937.6" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (84 samples, 1.20%)</title><rect x="934.8" y="691.0" width="14.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="937.8" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (80 samples, 1.15%)</title><rect x="935.4" y="675.0" width="13.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="938.4" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.09%)</title><rect x="938.0" y="659.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.0" y="670.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.09%)</title><rect x="938.0" y="643.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="941.0" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="938.0" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.0" y="638.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="938.0" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.0" y="622.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.06%)</title><rect x="938.3" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="941.3" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (16 samples, 0.23%)</title><rect x="939.3" y="659.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="939.5" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="942.5" y="654.0"></text>
</g>
<g>
<title>remove_wait_queue (3 samples, 0.04%)</title><rect x="940.3" y="643.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="943.3" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="940.3" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="943.3" y="638.0"></text>
</g>
<g>
<title>wait_woken (7 samples, 0.10%)</title><rect x="940.8" y="643.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="943.8" y="654.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.04%)</title><rect x="941.5" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="944.5" y="638.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.03%)</title><rect x="941.5" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="944.5" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="941.5" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="944.5" y="606.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.13%)</title><rect x="942.0" y="659.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.0" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.13%)</title><rect x="942.0" y="643.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="945.0" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.11%)</title><rect x="942.2" y="627.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="945.2" y="638.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="942.2" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="945.2" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="942.4" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="945.4" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.07%)</title><rect x="942.7" y="611.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.7" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="942.9" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="945.9" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (30 samples, 0.43%)</title><rect x="943.6" y="659.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.6" y="670.0"></text>
</g>
<g>
<title>tcp_send_ack (27 samples, 0.39%)</title><rect x="944.1" y="643.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.1" y="654.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (27 samples, 0.39%)</title><rect x="944.1" y="627.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.1" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.06%)</title><rect x="944.1" y="611.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.1" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.03%)</title><rect x="944.1" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.1" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="944.1" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="947.1" y="590.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="944.4" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.4" y="606.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="944.4" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="947.4" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (23 samples, 0.33%)</title><rect x="944.7" y="611.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="947.7" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (22 samples, 0.32%)</title><rect x="944.9" y="595.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="947.9" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (22 samples, 0.32%)</title><rect x="944.9" y="579.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="947.9" y="590.0"></text>
</g>
<g>
<title>ip_local_out (21 samples, 0.30%)</title><rect x="944.9" y="563.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.9" y="574.0"></text>
</g>
<g>
<title>ip_output (21 samples, 0.30%)</title><rect x="944.9" y="547.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.9" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (20 samples, 0.29%)</title><rect x="945.1" y="531.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="948.1" y="542.0"></text>
</g>
<g>
<title>__ip_finish_output (20 samples, 0.29%)</title><rect x="945.1" y="515.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="948.1" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (20 samples, 0.29%)</title><rect x="945.1" y="499.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.1" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (17 samples, 0.24%)</title><rect x="945.2" y="483.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="948.2" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.0 (17 samples, 0.24%)</title><rect x="945.2" y="467.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.2" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (17 samples, 0.24%)</title><rect x="945.2" y="451.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.2" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (17 samples, 0.24%)</title><rect x="945.2" y="435.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.2" y="446.0"></text>
</g>
<g>
<title>net_rx_action (14 samples, 0.20%)</title><rect x="945.8" y="419.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="948.8" y="430.0"></text>
</g>
<g>
<title>process_backlog (14 samples, 0.20%)</title><rect x="945.8" y="403.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="948.8" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb (14 samples, 0.20%)</title><rect x="945.8" y="387.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="948.8" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (14 samples, 0.20%)</title><rect x="945.8" y="371.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.8" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="945.8" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="948.8" y="366.0"></text>
</g>
<g>
<title>ip_rcv (10 samples, 0.14%)</title><rect x="946.3" y="355.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="949.3" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (9 samples, 0.13%)</title><rect x="946.4" y="339.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.4" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (8 samples, 0.11%)</title><rect x="946.6" y="323.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="949.6" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 0.11%)</title><rect x="946.6" y="307.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="949.6" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 0.11%)</title><rect x="946.6" y="291.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="949.6" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 0.11%)</title><rect x="946.6" y="275.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="949.6" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.10%)</title><rect x="946.8" y="259.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="949.8" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.09%)</title><rect x="946.9" y="243.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="949.9" y="254.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.04%)</title><rect x="947.1" y="227.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="950.1" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="948.1" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="951.1" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="948.1" y="467.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="951.1" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="948.1" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="951.1" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="948.1" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="951.1" y="446.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="948.1" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="951.1" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="948.1" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="951.1" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="948.1" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="951.1" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="948.6" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="951.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (29 samples, 0.42%)</title><rect x="949.0" y="819.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.09%)</title><rect x="949.6" y="803.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.09%)</title><rect x="949.6" y="787.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.07%)</title><rect x="949.8" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.10%)</title><rect x="950.8" y="803.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.09%)</title><rect x="951.0" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="951.0" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="951.0" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="951.3" y="771.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="954.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (10 samples, 0.14%)</title><rect x="952.0" y="803.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="953.0" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="956.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="953.0" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="956.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (2 samples, 0.03%)</title><rect x="953.4" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (24 samples, 0.34%)</title><rect x="953.9" y="819.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="955.0" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12 samples, 0.17%)</title><rect x="955.6" y="803.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="958.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.04%)</title><rect x="956.1" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="956.1" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="956.1" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="959.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.09%)</title><rect x="956.6" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="959.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.06%)</title><rect x="956.9" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.06%)</title><rect x="956.9" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.06%)</title><rect x="956.9" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.03%)</title><rect x="957.6" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.07%)</title><rect x="957.9" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="958.1" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="958.1" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (58 samples, 0.83%)</title><rect x="958.8" y="819.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.8" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.03%)</title><rect x="958.9" y="803.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="961.9" y="814.0"></text>
</g>
<g>
<title>setsockopt (54 samples, 0.77%)</title><rect x="959.3" y="803.0" width="9.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="962.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.49%)</title><rect x="962.7" y="787.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="965.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (3 samples, 0.04%)</title><rect x="962.7" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="965.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.44%)</title><rect x="963.2" y="771.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="966.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (24 samples, 0.34%)</title><rect x="964.3" y="755.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="967.3" y="766.0"></text>
</g>
<g>
<title>__sys_setsockopt (22 samples, 0.32%)</title><rect x="964.3" y="739.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="967.3" y="750.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="964.9" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="967.9" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.03%)</title><rect x="965.2" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="968.2" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="965.5" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="968.5" y="734.0"></text>
</g>
<g>
<title>sock_setsockopt (7 samples, 0.10%)</title><rect x="966.0" y="723.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="969.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="966.0" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.0" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.07%)</title><rect x="967.2" y="723.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="970.2" y="734.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="967.2" y="707.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="970.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="967.2" y="691.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.2" y="702.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.06%)</title><rect x="967.2" y="675.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (224 samples, 3.21%)</title><rect x="968.6" y="819.0" width="37.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.6" y="830.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (8 samples, 0.11%)</title><rect x="968.6" y="803.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="971.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="968.9" y="787.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="971.9" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="969.2" y="787.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="972.2" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="969.4" y="771.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="972.4" y="782.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="969.4" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="972.4" y="766.0"></text>
</g>
<g>
<title>__send (216 samples, 3.09%)</title><rect x="969.9" y="803.0" width="36.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="972.9" y="814.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (207 samples, 2.97%)</title><rect x="971.4" y="787.0" width="35.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="974.4" y="798.0">en..</text>
</g>
<g>
<title>do_syscall_64 (207 samples, 2.97%)</title><rect x="971.4" y="771.0" width="35.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="974.4" y="782.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (200 samples, 2.86%)</title><rect x="972.6" y="755.0" width="33.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.6" y="766.0">__..</text>
</g>
<g>
<title>__sys_sendto (199 samples, 2.85%)</title><rect x="972.6" y="739.0" width="33.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="975.6" y="750.0">__..</text>
</g>
<g>
<title>sock_sendmsg (197 samples, 2.82%)</title><rect x="972.8" y="723.0" width="33.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.8" y="734.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (195 samples, 2.79%)</title><rect x="972.8" y="707.0" width="33.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="975.8" y="718.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (193 samples, 2.76%)</title><rect x="973.1" y="691.0" width="32.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="976.1" y="702.0">tc..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="974.0" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="977.0" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (184 samples, 2.64%)</title><rect x="974.5" y="675.0" width="31.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.5" y="686.0">tc..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="975.0" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.0" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="975.0" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.0" y="654.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="975.7" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="978.7" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.14%)</title><rect x="976.0" y="659.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.0" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.14%)</title><rect x="976.0" y="643.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="979.0" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.06%)</title><rect x="976.5" y="627.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.5" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="976.5" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="979.5" y="622.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="977.4" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="980.4" y="638.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="977.4" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="980.4" y="622.0"></text>
</g>
<g>
<title>tcp_push (161 samples, 2.31%)</title><rect x="977.7" y="659.0" width="27.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="980.7" y="670.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (161 samples, 2.31%)</title><rect x="977.7" y="643.0" width="27.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="980.7" y="654.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (160 samples, 2.29%)</title><rect x="977.9" y="627.0" width="27.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="980.9" y="638.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (144 samples, 2.06%)</title><rect x="978.5" y="611.0" width="24.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="981.5" y="622.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (138 samples, 1.98%)</title><rect x="979.2" y="595.0" width="23.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="982.2" y="606.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (137 samples, 1.96%)</title><rect x="979.2" y="579.0" width="23.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="982.2" y="590.0">_..</text>
</g>
<g>
<title>ip_local_out (134 samples, 1.92%)</title><rect x="979.2" y="563.0" width="22.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.2" y="574.0">i..</text>
</g>
<g>
<title>ip_output (132 samples, 1.89%)</title><rect x="979.6" y="547.0" width="22.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="982.6" y="558.0">i..</text>
</g>
<g>
<title>ip_finish_output (130 samples, 1.86%)</title><rect x="979.9" y="531.0" width="22.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="982.9" y="542.0">i..</text>
</g>
<g>
<title>__ip_finish_output (129 samples, 1.85%)</title><rect x="980.1" y="515.0" width="21.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="983.1" y="526.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (127 samples, 1.82%)</title><rect x="980.2" y="499.0" width="21.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="983.2" y="510.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (106 samples, 1.52%)</title><rect x="980.6" y="483.0" width="17.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="983.6" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.0 (106 samples, 1.52%)</title><rect x="980.6" y="467.0" width="17.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="983.6" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (106 samples, 1.52%)</title><rect x="980.6" y="451.0" width="17.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.6" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (105 samples, 1.50%)</title><rect x="980.6" y="435.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="983.6" y="446.0"></text>
</g>
<g>
<title>net_rx_action (103 samples, 1.48%)</title><rect x="980.9" y="419.0" width="17.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="983.9" y="430.0"></text>
</g>
<g>
<title>process_backlog (103 samples, 1.48%)</title><rect x="980.9" y="403.0" width="17.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="983.9" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb (101 samples, 1.45%)</title><rect x="981.1" y="387.0" width="17.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="984.1" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (101 samples, 1.45%)</title><rect x="981.1" y="371.0" width="17.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="984.1" y="382.0"></text>
</g>
<g>
<title>ip_rcv (100 samples, 1.43%)</title><rect x="981.1" y="355.0" width="16.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="984.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.04%)</title><rect x="981.2" y="339.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="984.2" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (96 samples, 1.38%)</title><rect x="981.8" y="339.0" width="16.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="984.8" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (94 samples, 1.35%)</title><rect x="981.9" y="323.0" width="15.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.9" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (93 samples, 1.33%)</title><rect x="982.1" y="307.0" width="15.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="985.1" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (92 samples, 1.32%)</title><rect x="982.3" y="291.0" width="15.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.3" y="302.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="982.4" y="275.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="985.4" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (86 samples, 1.23%)</title><rect x="983.3" y="275.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="986.3" y="286.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.06%)</title><rect x="983.6" y="259.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="986.6" y="270.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="984.0" y="243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.0" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (78 samples, 1.12%)</title><rect x="984.6" y="259.0" width="13.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.6" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (76 samples, 1.09%)</title><rect x="985.0" y="243.0" width="12.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="988.0" y="254.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.07%)</title><rect x="985.1" y="227.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="988.1" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.07%)</title><rect x="985.1" y="211.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="988.1" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="985.3" y="195.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.3" y="206.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="985.3" y="179.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="988.3" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="985.5" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="988.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.14%)</title><rect x="986.0" y="227.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="989.0" y="238.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.09%)</title><rect x="986.7" y="211.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="989.7" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.09%)</title><rect x="986.7" y="195.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="989.7" y="206.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.06%)</title><rect x="986.8" y="179.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="989.8" y="190.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.06%)</title><rect x="986.8" y="163.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.8" y="174.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="987.2" y="147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="990.2" y="158.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="987.2" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="990.2" y="142.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="987.2" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="990.2" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (56 samples, 0.80%)</title><rect x="987.7" y="227.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="990.7" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (56 samples, 0.80%)</title><rect x="987.7" y="211.0" width="9.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.7" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (55 samples, 0.79%)</title><rect x="987.8" y="195.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (55 samples, 0.79%)</title><rect x="987.8" y="179.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.8" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (55 samples, 0.79%)</title><rect x="987.8" y="163.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="990.8" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="997.5" y="227.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1000.5" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.26%)</title><rect x="998.5" y="483.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1001.5" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.26%)</title><rect x="998.5" y="467.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1001.5" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13 samples, 0.19%)</title><rect x="999.0" y="451.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1002.0" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.16%)</title><rect x="999.2" y="435.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1002.2" y="446.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.06%)</title><rect x="999.3" y="419.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1002.3" y="430.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.06%)</title><rect x="1000.0" y="419.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.0" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="1000.2" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1003.2" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="1000.3" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.3" y="398.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="1001.9" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1004.9" y="574.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="1002.9" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1005.9" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.09%)</title><rect x="1003.6" y="611.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.6" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="1004.1" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1007.1" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="1004.1" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1007.1" y="590.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="1004.1" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1007.1" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.06%)</title><rect x="1004.9" y="659.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1007.9" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="1005.1" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1008.1" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.03%)</title><rect x="1005.8" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1008.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (312 samples, 4.47%)</title><rect x="1006.4" y="851.0" width="52.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.4" y="862.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.07%)</title><rect x="1006.9" y="835.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1009.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="1006.9" y="819.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="1006.9" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (300 samples, 4.30%)</title><rect x="1007.8" y="835.0" width="50.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.8" y="846.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.20%)</title><rect x="1007.8" y="819.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.07%)</title><rect x="1009.3" y="803.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="1009.3" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="1009.3" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1012.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="1009.3" y="755.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.07%)</title><rect x="1009.3" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1012.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (286 samples, 4.10%)</title><rect x="1010.2" y="819.0" width="48.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1013.2" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (286 samples, 4.10%)</title><rect x="1010.2" y="803.0" width="48.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.2" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (285 samples, 4.08%)</title><rect x="1010.3" y="787.0" width="48.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.3" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (285 samples, 4.08%)</title><rect x="1010.3" y="771.0" width="48.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.3" y="782.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.07%)</title><rect x="1010.5" y="755.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1013.5" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="1010.8" y="739.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1013.8" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1011.0" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.0" y="734.0"></text>
</g>
<g>
<title>__send (277 samples, 3.97%)</title><rect x="1011.7" y="755.0" width="46.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1014.7" y="766.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (269 samples, 3.85%)</title><rect x="1013.0" y="739.0" width="45.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1016.0" y="750.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (269 samples, 3.85%)</title><rect x="1013.0" y="723.0" width="45.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1016.0" y="734.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (263 samples, 3.77%)</title><rect x="1014.0" y="707.0" width="44.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1017.0" y="718.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (263 samples, 3.77%)</title><rect x="1014.0" y="691.0" width="44.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1017.0" y="702.0">__sy..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="1014.5" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1017.5" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (251 samples, 3.60%)</title><rect x="1015.1" y="675.0" width="42.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1018.1" y="686.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (248 samples, 3.55%)</title><rect x="1015.2" y="659.0" width="41.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1018.2" y="670.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (248 samples, 3.55%)</title><rect x="1015.2" y="643.0" width="41.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1018.2" y="654.0">tcp..</text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="1015.9" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1018.9" y="638.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="1016.2" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1019.2" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (239 samples, 3.42%)</title><rect x="1016.7" y="627.0" width="40.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1019.7" y="638.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.04%)</title><rect x="1017.3" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1020.3" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="1017.4" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1020.4" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="1017.9" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1020.9" y="622.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="1017.9" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1020.9" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (13 samples, 0.19%)</title><rect x="1018.3" y="611.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.3" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.19%)</title><rect x="1018.3" y="595.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1021.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.09%)</title><rect x="1018.3" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.3" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="1018.3" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1021.3" y="574.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="1018.9" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1021.9" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.07%)</title><rect x="1019.4" y="579.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1022.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (209 samples, 2.99%)</title><rect x="1020.5" y="611.0" width="35.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1023.5" y="622.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (208 samples, 2.98%)</title><rect x="1020.5" y="595.0" width="35.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1023.5" y="606.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (206 samples, 2.95%)</title><rect x="1020.8" y="579.0" width="34.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1023.8" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (191 samples, 2.74%)</title><rect x="1021.5" y="563.0" width="32.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1024.5" y="574.0">__..</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="1022.5" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1025.5" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (180 samples, 2.58%)</title><rect x="1022.8" y="547.0" width="30.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1025.8" y="558.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (178 samples, 2.55%)</title><rect x="1022.8" y="531.0" width="30.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1025.8" y="542.0">__..</text>
</g>
<g>
<title>ip_local_out (175 samples, 2.51%)</title><rect x="1023.0" y="515.0" width="29.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1026.0" y="526.0">ip..</text>
</g>
<g>
<title>ip_output (174 samples, 2.49%)</title><rect x="1023.2" y="499.0" width="29.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.2" y="510.0">ip..</text>
</g>
<g>
<title>ip_finish_output (172 samples, 2.46%)</title><rect x="1023.5" y="483.0" width="29.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.5" y="494.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="1023.5" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.5" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (170 samples, 2.44%)</title><rect x="1023.8" y="467.0" width="28.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1026.8" y="478.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (169 samples, 2.42%)</title><rect x="1024.0" y="451.0" width="28.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1027.0" y="462.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (141 samples, 2.02%)</title><rect x="1024.7" y="435.0" width="23.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.7" y="446.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (141 samples, 2.02%)</title><rect x="1024.7" y="419.0" width="23.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1027.7" y="430.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (140 samples, 2.01%)</title><rect x="1024.9" y="403.0" width="23.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1027.9" y="414.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (140 samples, 2.01%)</title><rect x="1024.9" y="387.0" width="23.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.9" y="398.0">_..</text>
</g>
<g>
<title>net_rx_action (137 samples, 1.96%)</title><rect x="1025.2" y="371.0" width="23.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1028.2" y="382.0">n..</text>
</g>
<g>
<title>process_backlog (136 samples, 1.95%)</title><rect x="1025.4" y="355.0" width="23.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1028.4" y="366.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (134 samples, 1.92%)</title><rect x="1025.7" y="339.0" width="22.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1028.7" y="350.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (134 samples, 1.92%)</title><rect x="1025.7" y="323.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1028.7" y="334.0">_..</text>
</g>
<g>
<title>ip_rcv (131 samples, 1.88%)</title><rect x="1026.2" y="307.0" width="22.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.2" y="318.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (127 samples, 1.82%)</title><rect x="1026.7" y="291.0" width="21.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1029.7" y="302.0">i..</text>
</g>
<g>
<title>ip_local_deliver (127 samples, 1.82%)</title><rect x="1026.7" y="275.0" width="21.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1029.7" y="286.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (127 samples, 1.82%)</title><rect x="1026.7" y="259.0" width="21.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.7" y="270.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (127 samples, 1.82%)</title><rect x="1026.7" y="243.0" width="21.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1029.7" y="254.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (124 samples, 1.78%)</title><rect x="1027.2" y="227.0" width="21.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.2" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.09%)</title><rect x="1027.2" y="211.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.2" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.04%)</title><rect x="1028.2" y="211.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1031.2" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="1028.2" y="195.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1031.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (114 samples, 1.63%)</title><rect x="1028.9" y="211.0" width="19.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.9" y="222.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.04%)</title><rect x="1029.1" y="195.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.1" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (110 samples, 1.58%)</title><rect x="1029.6" y="195.0" width="18.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1032.6" y="206.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.07%)</title><rect x="1029.8" y="179.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1032.8" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.04%)</title><rect x="1030.1" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1033.1" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="1030.1" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1033.1" y="158.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="1030.1" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1033.1" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1030.3" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1033.3" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.06%)</title><rect x="1030.8" y="179.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1033.8" y="190.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 0.34%)</title><rect x="1031.4" y="179.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1034.4" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.23%)</title><rect x="1032.1" y="163.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.1" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.14%)</title><rect x="1032.3" y="147.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1035.3" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.07%)</title><rect x="1032.3" y="131.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1035.3" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.07%)</title><rect x="1032.3" y="115.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1035.3" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.07%)</title><rect x="1033.1" y="131.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1036.1" y="142.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.07%)</title><rect x="1033.1" y="115.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1036.1" y="126.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.04%)</title><rect x="1033.5" y="99.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1036.5" y="110.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="1033.5" y="83.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1036.5" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="1033.6" y="67.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1036.6" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="1034.5" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1037.5" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="1034.8" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1037.8" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (70 samples, 1.00%)</title><rect x="1035.7" y="179.0" width="11.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.7" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (70 samples, 1.00%)</title><rect x="1035.7" y="163.0" width="11.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1038.7" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (70 samples, 1.00%)</title><rect x="1035.7" y="147.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1038.7" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (70 samples, 1.00%)</title><rect x="1035.7" y="131.0" width="11.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1038.7" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (70 samples, 1.00%)</title><rect x="1035.7" y="115.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1038.7" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="1047.5" y="179.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1050.5" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (23 samples, 0.33%)</title><rect x="1048.5" y="435.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1051.5" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (22 samples, 0.32%)</title><rect x="1048.5" y="419.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1051.5" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.09%)</title><rect x="1049.9" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1052.9" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.04%)</title><rect x="1050.0" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1053.0" y="398.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="1050.2" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1053.2" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="1050.2" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.2" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="1050.2" y="339.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1053.2" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.04%)</title><rect x="1050.9" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1053.9" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="1051.7" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1054.7" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="1052.6" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.6" y="526.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="1053.3" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1056.3" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.06%)</title><rect x="1054.1" y="563.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1057.1" y="574.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="1054.3" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1057.3" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="1054.4" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1057.4" y="542.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="1054.4" y="515.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1057.4" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="1054.9" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1057.9" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="1054.9" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1057.9" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="1055.3" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1058.3" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="1055.8" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1058.8" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.09%)</title><rect x="1056.1" y="611.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1059.1" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="1056.3" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1059.3" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.04%)</title><rect x="1056.6" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1059.6" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="1056.8" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1059.8" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.03%)</title><rect x="1057.1" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1060.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.09%)</title><rect x="1057.5" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1060.5" y="686.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="1057.6" y="659.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1060.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="1057.6" y="643.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1060.6" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="1057.6" y="627.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1060.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="1058.5" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="1058.8" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1058.8" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.8" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (740 samples, 10.60%)</title><rect x="1059.5" y="947.0" width="125.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1062.5" y="958.0">one/nio/server/..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="1060.5" y="931.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1063.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (172 samples, 2.46%)</title><rect x="1061.4" y="931.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.4" y="942.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (168 samples, 2.41%)</title><rect x="1062.0" y="915.0" width="28.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.0" y="926.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.07%)</title><rect x="1062.2" y="899.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1065.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.06%)</title><rect x="1063.1" y="899.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1066.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="1063.7" y="899.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1066.7" y="910.0"></text>
</g>
<g>
<title>epoll_wait (156 samples, 2.23%)</title><rect x="1064.1" y="899.0" width="26.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1067.1" y="910.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (122 samples, 1.75%)</title><rect x="1069.8" y="883.0" width="20.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1072.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (122 samples, 1.75%)</title><rect x="1069.8" y="867.0" width="20.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1072.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (113 samples, 1.62%)</title><rect x="1071.3" y="851.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1074.3" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (113 samples, 1.62%)</title><rect x="1071.3" y="835.0" width="19.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1074.3" y="846.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1071.8" y="819.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1074.8" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1071.8" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1074.8" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="1071.8" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1074.8" y="798.0"></text>
</g>
<g>
<title>ep_poll (101 samples, 1.45%)</title><rect x="1072.4" y="819.0" width="17.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1075.4" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (84 samples, 1.20%)</title><rect x="1073.0" y="803.0" width="14.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1076.0" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.03%)</title><rect x="1074.6" y="787.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1077.6" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (65 samples, 0.93%)</title><rect x="1074.9" y="787.0" width="11.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1077.9" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (43 samples, 0.62%)</title><rect x="1077.6" y="771.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1080.6" y="782.0"></text>
</g>
<g>
<title>sock_poll (28 samples, 0.40%)</title><rect x="1080.0" y="755.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1083.0" y="766.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.16%)</title><rect x="1082.0" y="739.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1085.0" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.07%)</title><rect x="1083.8" y="739.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1086.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.09%)</title><rect x="1084.9" y="771.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1087.9" y="782.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.11%)</title><rect x="1085.9" y="787.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1088.9" y="798.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="1087.6" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1090.6" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.13%)</title><rect x="1087.9" y="803.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1090.9" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.13%)</title><rect x="1087.9" y="787.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1090.9" y="798.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.11%)</title><rect x="1088.1" y="771.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1091.1" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.10%)</title><rect x="1088.2" y="755.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.2" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="1088.9" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.9" y="750.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.09%)</title><rect x="1089.4" y="819.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1092.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (555 samples, 7.95%)</title><rect x="1090.4" y="931.0" width="93.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.4" y="942.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (545 samples, 7.81%)</title><rect x="1092.1" y="915.0" width="92.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.1" y="926.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (385 samples, 5.51%)</title><rect x="1092.5" y="899.0" width="65.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.5" y="910.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (291 samples, 4.17%)</title><rect x="1092.8" y="883.0" width="49.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.8" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (291 samples, 4.17%)</title><rect x="1092.8" y="867.0" width="49.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.8" y="878.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (281 samples, 4.03%)</title><rect x="1092.8" y="851.0" width="47.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.8" y="862.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 0.30%)</title><rect x="1092.8" y="835.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.29%)</title><rect x="1093.0" y="819.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="1094.8" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="1094.8" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.8" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="1095.7" y="803.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1098.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (260 samples, 3.72%)</title><rect x="1096.4" y="835.0" width="43.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.4" y="846.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="1096.4" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="1096.4" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="1096.4" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1099.4" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="1096.4" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="1096.7" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="1096.7" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (253 samples, 3.62%)</title><rect x="1097.5" y="819.0" width="42.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.5" y="830.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (248 samples, 3.55%)</title><rect x="1098.0" y="803.0" width="42.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.0" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (248 samples, 3.55%)</title><rect x="1098.0" y="787.0" width="42.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.0" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (14 samples, 0.20%)</title><rect x="1099.2" y="771.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.11%)</title><rect x="1100.2" y="755.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.11%)</title><rect x="1100.2" y="739.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.10%)</title><rect x="1100.4" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.03%)</title><rect x="1101.1" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="1101.1" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1104.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="1101.1" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1104.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (226 samples, 3.24%)</title><rect x="1101.8" y="771.0" width="38.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.8" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (226 samples, 3.24%)</title><rect x="1101.8" y="755.0" width="38.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.8" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (226 samples, 3.24%)</title><rect x="1101.8" y="739.0" width="38.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1104.8" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (226 samples, 3.24%)</title><rect x="1101.8" y="723.0" width="38.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.8" y="734.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (224 samples, 3.21%)</title><rect x="1102.1" y="707.0" width="37.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.1" y="718.0">jdk..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.03%)</title><rect x="1102.3" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1105.3" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.07%)</title><rect x="1102.8" y="691.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.8" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (37 samples, 0.53%)</title><rect x="1103.8" y="691.0" width="6.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1106.8" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="1105.0" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.0" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (13 samples, 0.19%)</title><rect x="1105.3" y="675.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.3" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1107.5" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1110.5" y="686.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (6 samples, 0.09%)</title><rect x="1108.0" y="675.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1111.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.09%)</title><rect x="1109.0" y="675.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1112.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1110.0" y="691.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1113.0" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.04%)</title><rect x="1110.0" y="675.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1113.0" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (167 samples, 2.39%)</title><rect x="1110.6" y="691.0" width="28.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1113.6" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 1.91%)</title><rect x="1116.3" y="675.0" width="22.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1119.3" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (133 samples, 1.91%)</title><rect x="1116.3" y="659.0" width="22.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.3" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (120 samples, 1.72%)</title><rect x="1118.5" y="643.0" width="20.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1121.5" y="654.0"></text>
</g>
<g>
<title>do_futex (118 samples, 1.69%)</title><rect x="1118.7" y="627.0" width="19.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1121.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="1118.7" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1121.7" y="622.0"></text>
</g>
<g>
<title>futex_wake (114 samples, 1.63%)</title><rect x="1119.2" y="611.0" width="19.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1122.2" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="1120.7" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1123.7" y="606.0"></text>
</g>
<g>
<title>wake_up_q (101 samples, 1.45%)</title><rect x="1121.4" y="595.0" width="17.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1124.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (99 samples, 1.42%)</title><rect x="1121.7" y="579.0" width="16.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1124.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (99 samples, 1.42%)</title><rect x="1121.7" y="563.0" width="16.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1124.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.07%)</title><rect x="1138.8" y="691.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1141.8" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.03%)</title><rect x="1139.6" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1142.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewModularTopology.primaryFor (2 samples, 0.03%)</title><rect x="1140.0" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewModularTopology.primaryFor (2 samples, 0.03%)</title><rect x="1140.0" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.03%)</title><rect x="1140.0" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.04%)</title><rect x="1140.5" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="1140.5" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1140.5" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.09%)</title><rect x="1141.0" y="851.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.09%)</title><rect x="1141.0" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (2 samples, 0.03%)</title><rect x="1141.2" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="1141.5" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.5" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="1141.5" y="803.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.5" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="1141.5" y="787.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.5" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="1141.5" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.5" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="1141.5" y="755.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.5" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="1141.5" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1144.5" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="1141.5" y="723.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 0.53%)</title><rect x="1142.0" y="883.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.26%)</title><rect x="1142.2" y="867.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.2" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="1144.0" y="851.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1147.0" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.04%)</title><rect x="1144.0" y="835.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1147.0" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="1144.0" y="819.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.0" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="1144.0" y="803.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.0" y="814.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.03%)</title><rect x="1144.2" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="1144.5" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="1144.5" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1144.7" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.17%)</title><rect x="1145.2" y="867.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1148.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.17%)</title><rect x="1145.2" y="851.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.09%)</title><rect x="1147.2" y="867.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.04%)</title><rect x="1148.2" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.04%)</title><rect x="1148.2" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.2" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.04%)</title><rect x="1148.2" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.2" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1148.4" y="835.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1151.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (17 samples, 0.24%)</title><rect x="1148.8" y="883.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.8" y="894.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (6 samples, 0.09%)</title><rect x="1149.3" y="867.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.3" y="878.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.10%)</title><rect x="1150.3" y="867.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1153.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.20%)</title><rect x="1151.6" y="883.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="1153.3" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="1153.3" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.30%)</title><rect x="1154.0" y="883.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.30%)</title><rect x="1154.0" y="867.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.0" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.07%)</title><rect x="1156.2" y="851.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.2" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.06%)</title><rect x="1156.4" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.4" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.06%)</title><rect x="1156.4" y="819.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.4" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="1156.5" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1159.5" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="1156.5" y="787.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.5" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.04%)</title><rect x="1156.5" y="771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1157.2" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1157.2" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1157.2" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.2" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1157.2" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.2" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1157.2" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.2" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1157.2" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (157 samples, 2.25%)</title><rect x="1157.7" y="899.0" width="26.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.7" y="910.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (155 samples, 2.22%)</title><rect x="1158.1" y="883.0" width="26.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.1" y="894.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (29 samples, 0.42%)</title><rect x="1158.4" y="867.0" width="4.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1161.4" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.06%)</title><rect x="1159.2" y="851.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.2" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="1159.9" y="851.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1162.9" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 0.24%)</title><rect x="1160.4" y="851.0" width="2.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1163.4" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.06%)</title><rect x="1160.8" y="835.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.8" y="846.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="1161.4" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.4" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1161.8" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.8" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.07%)</title><rect x="1162.1" y="835.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.1" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1163.0" y="835.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1166.0" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1163.3" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1166.3" y="878.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="1163.6" y="867.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1166.6" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.06%)</title><rect x="1164.0" y="867.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1167.0" y="878.0"></text>
</g>
<g>
<title>recv (116 samples, 1.66%)</title><rect x="1164.6" y="867.0" width="19.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1167.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 1.09%)</title><rect x="1171.4" y="851.0" width="12.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.06%)</title><rect x="1171.4" y="835.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 1.03%)</title><rect x="1172.1" y="835.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (61 samples, 0.87%)</title><rect x="1173.9" y="819.0" width="10.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.9" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (60 samples, 0.86%)</title><rect x="1173.9" y="803.0" width="10.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.9" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (50 samples, 0.72%)</title><rect x="1174.3" y="787.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.3" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (42 samples, 0.60%)</title><rect x="1174.4" y="771.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.4" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (42 samples, 0.60%)</title><rect x="1174.4" y="755.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.4" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.07%)</title><rect x="1176.1" y="739.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.1" y="750.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.07%)</title><rect x="1176.1" y="723.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.1" y="734.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.04%)</title><rect x="1176.5" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1177.0" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.0" y="750.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="1177.5" y="739.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1177.5" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.5" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="1177.8" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.8" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.21%)</title><rect x="1178.2" y="739.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.2" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.21%)</title><rect x="1178.2" y="723.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.2" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.09%)</title><rect x="1179.7" y="707.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.7" y="718.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="1179.7" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.7" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.06%)</title><rect x="1180.0" y="691.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.0" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="1180.0" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1183.0" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="1180.4" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.4" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.04%)</title><rect x="1181.0" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1184.0" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="1181.0" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.0" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.10%)</title><rect x="1181.5" y="771.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1184.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.10%)</title><rect x="1181.5" y="755.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.10%)</title><rect x="1181.5" y="739.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1184.5" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.11%)</title><rect x="1182.7" y="787.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.09%)</title><rect x="1182.7" y="771.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="1182.7" y="755.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.09%)</title><rect x="1182.7" y="739.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1183.7" y="771.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1186.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1184.3" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.3" y="942.0"></text>
</g>
<g>
<title>start_thread (32 samples, 0.46%)</title><rect x="1184.6" y="947.0" width="5.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1187.6" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (32 samples, 0.46%)</title><rect x="1184.6" y="931.0" width="5.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1187.6" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (32 samples, 0.46%)</title><rect x="1184.6" y="915.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (31 samples, 0.44%)</title><rect x="1184.6" y="899.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.6" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (29 samples, 0.42%)</title><rect x="1184.6" y="883.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.6" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (28 samples, 0.40%)</title><rect x="1184.6" y="867.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.03%)</title><rect x="1184.6" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="862.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.03%)</title><rect x="1184.9" y="851.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>SpinPause (24 samples, 0.34%)</title><rect x="1185.3" y="851.0" width="4.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1188.3" y="862.0"></text>
</g>
</g>
</svg>
