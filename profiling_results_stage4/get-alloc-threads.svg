<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="517"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="517"> </text>
<g id="frames">
<g>
<title>all (189,596 samples, 100.00%)</title><rect x="10.0" y="483.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="494.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=7256] (3,363 samples, 1.77%)</title><rect x="10.0" y="467.0" width="20.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,363 samples, 1.77%)</title><rect x="10.0" y="451.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,363 samples, 1.77%)</title><rect x="10.0" y="435.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,363 samples, 1.77%)</title><rect x="10.0" y="419.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,363 samples, 1.77%)</title><rect x="10.0" y="403.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,213 samples, 0.64%)</title><rect x="10.0" y="387.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,213 samples, 0.64%)</title><rect x="10.0" y="371.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (928 samples, 0.49%)</title><rect x="10.0" y="355.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (309 samples, 0.16%)</title><rect x="10.0" y="339.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (309 samples, 0.16%)</title><rect x="10.0" y="323.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (309 samples, 0.16%)</title><rect x="10.0" y="307.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (309 samples, 0.16%)</title><rect x="10.0" y="291.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (187 samples, 0.10%)</title><rect x="10.0" y="275.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (122 samples, 0.06%)</title><rect x="11.2" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.2" y="286.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.06%)</title><rect x="11.2" y="259.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (619 samples, 0.33%)</title><rect x="11.9" y="339.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (124 samples, 0.07%)</title><rect x="11.9" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (124 samples, 0.07%)</title><rect x="11.9" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (124 samples, 0.07%)</title><rect x="11.9" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (124 samples, 0.07%)</title><rect x="11.9" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.9" y="286.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.07%)</title><rect x="11.9" y="259.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="14.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (301 samples, 0.16%)</title><rect x="12.7" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (301 samples, 0.16%)</title><rect x="12.7" y="307.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (301 samples, 0.16%)</title><rect x="12.7" y="291.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="15.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (194 samples, 0.10%)</title><rect x="14.6" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (193 samples, 0.10%)</title><rect x="14.6" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (193 samples, 0.10%)</title><rect x="14.6" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (193 samples, 0.10%)</title><rect x="14.6" y="275.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (193 samples, 0.10%)</title><rect x="14.6" y="259.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (285 samples, 0.15%)</title><rect x="15.8" y="355.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (285 samples, 0.15%)</title><rect x="15.8" y="339.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (285 samples, 0.15%)</title><rect x="15.8" y="323.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.06%)</title><rect x="15.8" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="18.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (166 samples, 0.09%)</title><rect x="16.5" y="307.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.5" y="318.0"></text>
</g>
<g>
<title>byte[] (166 samples, 0.09%)</title><rect x="16.5" y="291.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,539 samples, 0.81%)</title><rect x="17.5" y="387.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.5" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (216 samples, 0.11%)</title><rect x="17.5" y="371.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="20.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (549 samples, 0.29%)</title><rect x="18.9" y="371.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (549 samples, 0.29%)</title><rect x="18.9" y="355.0" width="3.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="21.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (774 samples, 0.41%)</title><rect x="22.3" y="371.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (774 samples, 0.41%)</title><rect x="22.3" y="355.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.3" y="366.0"></text>
</g>
<g>
<title>char[] (388 samples, 0.20%)</title><rect x="22.3" y="339.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="25.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (149 samples, 0.08%)</title><rect x="24.7" y="339.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="27.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (237 samples, 0.13%)</title><rect x="25.7" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (237 samples, 0.13%)</title><rect x="25.7" y="323.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (237 samples, 0.13%)</title><rect x="25.7" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.7" y="318.0"></text>
</g>
<g>
<title>byte[] (237 samples, 0.13%)</title><rect x="25.7" y="291.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="28.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (611 samples, 0.32%)</title><rect x="27.1" y="387.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (611 samples, 0.32%)</title><rect x="27.1" y="371.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.1" y="382.0"></text>
</g>
<g>
<title>char[] (271 samples, 0.14%)</title><rect x="27.1" y="355.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="30.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.05%)</title><rect x="28.8" y="355.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="31.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (242 samples, 0.13%)</title><rect x="29.4" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (242 samples, 0.13%)</title><rect x="29.4" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (242 samples, 0.13%)</title><rect x="29.4" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.4" y="334.0"></text>
</g>
<g>
<title>byte[] (242 samples, 0.13%)</title><rect x="29.4" y="307.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="32.4" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=7266] (3,834 samples, 2.02%)</title><rect x="30.9" y="467.0" width="23.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="33.9" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,834 samples, 2.02%)</title><rect x="30.9" y="451.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.9" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,834 samples, 2.02%)</title><rect x="30.9" y="435.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.9" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,834 samples, 2.02%)</title><rect x="30.9" y="419.0" width="23.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.9" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,834 samples, 2.02%)</title><rect x="30.9" y="403.0" width="23.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.9" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,051 samples, 0.55%)</title><rect x="30.9" y="387.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,051 samples, 0.55%)</title><rect x="30.9" y="371.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.9" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (755 samples, 0.40%)</title><rect x="30.9" y="355.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (207 samples, 0.11%)</title><rect x="30.9" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (207 samples, 0.11%)</title><rect x="30.9" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (207 samples, 0.11%)</title><rect x="30.9" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (207 samples, 0.11%)</title><rect x="30.9" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.05%)</title><rect x="30.9" y="275.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="33.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (106 samples, 0.06%)</title><rect x="31.6" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.6" y="286.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.06%)</title><rect x="31.6" y="259.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="34.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (548 samples, 0.29%)</title><rect x="32.2" y="339.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (147 samples, 0.08%)</title><rect x="32.2" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (147 samples, 0.08%)</title><rect x="32.2" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (147 samples, 0.08%)</title><rect x="32.2" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (147 samples, 0.08%)</title><rect x="32.2" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.2" y="286.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.08%)</title><rect x="32.2" y="259.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="35.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (165 samples, 0.09%)</title><rect x="33.1" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (165 samples, 0.09%)</title><rect x="33.1" y="307.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (165 samples, 0.09%)</title><rect x="33.1" y="291.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="36.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (236 samples, 0.12%)</title><rect x="34.2" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (234 samples, 0.12%)</title><rect x="34.2" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 0.12%)</title><rect x="34.2" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (234 samples, 0.12%)</title><rect x="34.2" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (234 samples, 0.12%)</title><rect x="34.2" y="259.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="37.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (296 samples, 0.16%)</title><rect x="35.6" y="355.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (296 samples, 0.16%)</title><rect x="35.6" y="339.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (296 samples, 0.16%)</title><rect x="35.6" y="323.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (169 samples, 0.09%)</title><rect x="35.6" y="307.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="38.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (127 samples, 0.07%)</title><rect x="36.7" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.7" y="318.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.07%)</title><rect x="36.7" y="291.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="39.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,232 samples, 0.65%)</title><rect x="37.5" y="387.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.5" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (148 samples, 0.08%)</title><rect x="37.5" y="371.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="40.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (379 samples, 0.20%)</title><rect x="38.4" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (281 samples, 0.15%)</title><rect x="38.4" y="355.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="41.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (98 samples, 0.05%)</title><rect x="40.1" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (705 samples, 0.37%)</title><rect x="40.8" y="371.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (705 samples, 0.37%)</title><rect x="40.8" y="355.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.8" y="366.0"></text>
</g>
<g>
<title>char[] (444 samples, 0.23%)</title><rect x="40.8" y="339.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="43.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.02%)</title><rect x="43.6" y="339.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="46.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (206 samples, 0.11%)</title><rect x="43.9" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (206 samples, 0.11%)</title><rect x="43.9" y="323.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (206 samples, 0.11%)</title><rect x="43.9" y="307.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.9" y="318.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.11%)</title><rect x="43.9" y="291.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="46.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,551 samples, 0.82%)</title><rect x="45.1" y="387.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,551 samples, 0.82%)</title><rect x="45.1" y="371.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.1" y="382.0"></text>
</g>
<g>
<title>char[] (680 samples, 0.36%)</title><rect x="45.1" y="355.0" width="4.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="48.1" y="366.0"></text>
</g>
<g>
<title>char[] (179 samples, 0.09%)</title><rect x="49.4" y="355.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="52.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (217 samples, 0.11%)</title><rect x="50.5" y="355.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="53.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (475 samples, 0.25%)</title><rect x="51.8" y="355.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (475 samples, 0.25%)</title><rect x="51.8" y="339.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (475 samples, 0.25%)</title><rect x="51.8" y="323.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.8" y="334.0"></text>
</g>
<g>
<title>byte[] (473 samples, 0.25%)</title><rect x="51.8" y="307.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="54.8" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=7276] (3,764 samples, 1.99%)</title><rect x="54.8" y="467.0" width="23.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="57.8" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,764 samples, 1.99%)</title><rect x="54.8" y="451.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.8" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,764 samples, 1.99%)</title><rect x="54.8" y="435.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.8" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,764 samples, 1.99%)</title><rect x="54.8" y="419.0" width="23.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.8" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,764 samples, 1.99%)</title><rect x="54.8" y="403.0" width="23.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.8" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,299 samples, 0.69%)</title><rect x="54.8" y="387.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,299 samples, 0.69%)</title><rect x="54.8" y="371.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.8" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (885 samples, 0.47%)</title><rect x="54.8" y="355.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (126 samples, 0.07%)</title><rect x="54.8" y="339.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (126 samples, 0.07%)</title><rect x="54.8" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (126 samples, 0.07%)</title><rect x="54.8" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (126 samples, 0.07%)</title><rect x="54.8" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.03%)</title><rect x="54.8" y="275.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="57.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.03%)</title><rect x="55.2" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.2" y="286.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.03%)</title><rect x="55.2" y="259.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="58.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (759 samples, 0.40%)</title><rect x="55.6" y="339.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (93 samples, 0.05%)</title><rect x="55.6" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (93 samples, 0.05%)</title><rect x="55.6" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (93 samples, 0.05%)</title><rect x="55.6" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.05%)</title><rect x="55.6" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.6" y="286.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.05%)</title><rect x="55.6" y="259.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="58.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (219 samples, 0.12%)</title><rect x="56.2" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (219 samples, 0.12%)</title><rect x="56.2" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (219 samples, 0.12%)</title><rect x="56.2" y="291.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="59.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (447 samples, 0.24%)</title><rect x="57.5" y="323.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (447 samples, 0.24%)</title><rect x="57.5" y="307.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (447 samples, 0.24%)</title><rect x="57.5" y="291.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (447 samples, 0.24%)</title><rect x="57.5" y="275.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (447 samples, 0.24%)</title><rect x="57.5" y="259.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="60.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (414 samples, 0.22%)</title><rect x="60.3" y="355.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (414 samples, 0.22%)</title><rect x="60.3" y="339.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (414 samples, 0.22%)</title><rect x="60.3" y="323.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (321 samples, 0.17%)</title><rect x="60.3" y="307.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="63.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (93 samples, 0.05%)</title><rect x="62.3" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.3" y="318.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.05%)</title><rect x="62.3" y="291.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="65.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,010 samples, 0.53%)</title><rect x="62.9" y="387.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.9" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (345 samples, 0.18%)</title><rect x="62.9" y="371.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="65.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (193 samples, 0.10%)</title><rect x="65.0" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (145 samples, 0.08%)</title><rect x="65.0" y="355.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="68.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.03%)</title><rect x="65.9" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="68.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (472 samples, 0.25%)</title><rect x="66.2" y="371.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (472 samples, 0.25%)</title><rect x="66.2" y="355.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.2" y="366.0"></text>
</g>
<g>
<title>char[] (246 samples, 0.13%)</title><rect x="66.2" y="339.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="69.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (62 samples, 0.03%)</title><rect x="67.8" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="70.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (153 samples, 0.08%)</title><rect x="68.2" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (153 samples, 0.08%)</title><rect x="68.2" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (153 samples, 0.08%)</title><rect x="68.2" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.2" y="318.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.08%)</title><rect x="68.2" y="291.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="71.2" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,455 samples, 0.77%)</title><rect x="69.2" y="387.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,455 samples, 0.77%)</title><rect x="69.2" y="371.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.2" y="382.0"></text>
</g>
<g>
<title>char[] (317 samples, 0.17%)</title><rect x="69.2" y="355.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="72.2" y="366.0"></text>
</g>
<g>
<title>char[] (235 samples, 0.12%)</title><rect x="71.1" y="355.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="74.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (173 samples, 0.09%)</title><rect x="72.6" y="355.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (730 samples, 0.39%)</title><rect x="73.7" y="355.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (730 samples, 0.39%)</title><rect x="73.7" y="339.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (730 samples, 0.39%)</title><rect x="73.7" y="323.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.7" y="334.0"></text>
</g>
<g>
<title>byte[] (729 samples, 0.38%)</title><rect x="73.7" y="307.0" width="4.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="76.7" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=7257] (3,415 samples, 1.80%)</title><rect x="78.2" y="467.0" width="21.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.2" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,415 samples, 1.80%)</title><rect x="78.2" y="451.0" width="21.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.2" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,415 samples, 1.80%)</title><rect x="78.2" y="435.0" width="21.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.2" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,415 samples, 1.80%)</title><rect x="78.2" y="419.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.2" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,415 samples, 1.80%)</title><rect x="78.2" y="403.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.2" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,247 samples, 0.66%)</title><rect x="78.2" y="387.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,247 samples, 0.66%)</title><rect x="78.2" y="371.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.2" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (912 samples, 0.48%)</title><rect x="78.2" y="355.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (362 samples, 0.19%)</title><rect x="78.2" y="339.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (362 samples, 0.19%)</title><rect x="78.2" y="323.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (362 samples, 0.19%)</title><rect x="78.2" y="307.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (362 samples, 0.19%)</title><rect x="78.2" y="291.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (233 samples, 0.12%)</title><rect x="78.2" y="275.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="81.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (129 samples, 0.07%)</title><rect x="79.7" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.7" y="286.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.07%)</title><rect x="79.7" y="259.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="82.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (550 samples, 0.29%)</title><rect x="80.5" y="339.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (124 samples, 0.07%)</title><rect x="80.5" y="323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (124 samples, 0.07%)</title><rect x="80.5" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (124 samples, 0.07%)</title><rect x="80.5" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (124 samples, 0.07%)</title><rect x="80.5" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.5" y="286.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.07%)</title><rect x="80.5" y="259.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="83.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (227 samples, 0.12%)</title><rect x="81.2" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (227 samples, 0.12%)</title><rect x="81.2" y="307.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (227 samples, 0.12%)</title><rect x="81.2" y="291.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="84.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (199 samples, 0.10%)</title><rect x="82.7" y="323.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (195 samples, 0.10%)</title><rect x="82.7" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.10%)</title><rect x="82.7" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (195 samples, 0.10%)</title><rect x="82.7" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (195 samples, 0.10%)</title><rect x="82.7" y="259.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="85.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (335 samples, 0.18%)</title><rect x="83.9" y="355.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (335 samples, 0.18%)</title><rect x="83.9" y="339.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (335 samples, 0.18%)</title><rect x="83.9" y="323.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (123 samples, 0.06%)</title><rect x="83.9" y="307.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="86.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (212 samples, 0.11%)</title><rect x="84.7" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.7" y="318.0"></text>
</g>
<g>
<title>byte[] (212 samples, 0.11%)</title><rect x="84.7" y="291.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="87.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,580 samples, 0.83%)</title><rect x="86.0" y="387.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.0" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (231 samples, 0.12%)</title><rect x="86.0" y="371.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="89.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (495 samples, 0.26%)</title><rect x="87.4" y="371.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (495 samples, 0.26%)</title><rect x="87.4" y="355.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="90.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (854 samples, 0.45%)</title><rect x="90.5" y="371.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (854 samples, 0.45%)</title><rect x="90.5" y="355.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.5" y="366.0"></text>
</g>
<g>
<title>char[] (499 samples, 0.26%)</title><rect x="90.5" y="339.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="93.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (151 samples, 0.08%)</title><rect x="93.6" y="339.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="96.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (204 samples, 0.11%)</title><rect x="94.5" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (204 samples, 0.11%)</title><rect x="94.5" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (204 samples, 0.11%)</title><rect x="94.5" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.5" y="318.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.11%)</title><rect x="94.5" y="291.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="97.5" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (588 samples, 0.31%)</title><rect x="95.8" y="387.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (588 samples, 0.31%)</title><rect x="95.8" y="371.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.8" y="382.0"></text>
</g>
<g>
<title>char[] (288 samples, 0.15%)</title><rect x="95.8" y="355.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="98.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.06%)</title><rect x="97.6" y="355.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="100.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (184 samples, 0.10%)</title><rect x="98.3" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (184 samples, 0.10%)</title><rect x="98.3" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (184 samples, 0.10%)</title><rect x="98.3" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.3" y="334.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.10%)</title><rect x="98.3" y="307.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="101.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=7267] (3,383 samples, 1.78%)</title><rect x="99.5" y="467.0" width="21.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="102.5" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,383 samples, 1.78%)</title><rect x="99.5" y="451.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.5" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,383 samples, 1.78%)</title><rect x="99.5" y="435.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.5" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,383 samples, 1.78%)</title><rect x="99.5" y="419.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.5" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,383 samples, 1.78%)</title><rect x="99.5" y="403.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,073 samples, 0.57%)</title><rect x="99.5" y="387.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,073 samples, 0.57%)</title><rect x="99.5" y="371.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.5" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (684 samples, 0.36%)</title><rect x="99.5" y="355.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (156 samples, 0.08%)</title><rect x="99.5" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (156 samples, 0.08%)</title><rect x="99.5" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (156 samples, 0.08%)</title><rect x="99.5" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (156 samples, 0.08%)</title><rect x="99.5" y="291.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (97 samples, 0.05%)</title><rect x="99.5" y="275.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="102.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.03%)</title><rect x="100.1" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.1" y="286.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.03%)</title><rect x="100.1" y="259.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="103.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (528 samples, 0.28%)</title><rect x="100.4" y="339.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (45 samples, 0.02%)</title><rect x="100.4" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (45 samples, 0.02%)</title><rect x="100.4" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (45 samples, 0.02%)</title><rect x="100.4" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.02%)</title><rect x="100.4" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.4" y="286.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="100.4" y="259.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="103.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (119 samples, 0.06%)</title><rect x="100.7" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (119 samples, 0.06%)</title><rect x="100.7" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (119 samples, 0.06%)</title><rect x="100.7" y="291.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="103.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (364 samples, 0.19%)</title><rect x="101.5" y="323.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (364 samples, 0.19%)</title><rect x="101.5" y="307.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (364 samples, 0.19%)</title><rect x="101.5" y="291.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (364 samples, 0.19%)</title><rect x="101.5" y="275.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (364 samples, 0.19%)</title><rect x="101.5" y="259.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="104.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (389 samples, 0.21%)</title><rect x="103.7" y="355.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (389 samples, 0.21%)</title><rect x="103.7" y="339.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (389 samples, 0.21%)</title><rect x="103.7" y="323.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (340 samples, 0.18%)</title><rect x="103.7" y="307.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="106.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.03%)</title><rect x="105.8" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.8" y="318.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.03%)</title><rect x="105.8" y="291.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="108.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (965 samples, 0.51%)</title><rect x="106.2" y="387.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.2" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (417 samples, 0.22%)</title><rect x="106.2" y="371.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="109.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (211 samples, 0.11%)</title><rect x="108.7" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (192 samples, 0.10%)</title><rect x="108.7" y="355.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="111.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (337 samples, 0.18%)</title><rect x="110.1" y="371.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (337 samples, 0.18%)</title><rect x="110.1" y="355.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.1" y="366.0"></text>
</g>
<g>
<title>char[] (212 samples, 0.11%)</title><rect x="110.1" y="339.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="113.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (111 samples, 0.06%)</title><rect x="111.5" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (111 samples, 0.06%)</title><rect x="111.5" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (111 samples, 0.06%)</title><rect x="111.5" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.5" y="318.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.06%)</title><rect x="111.5" y="291.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="114.5" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,345 samples, 0.71%)</title><rect x="112.2" y="387.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,345 samples, 0.71%)</title><rect x="112.2" y="371.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.2" y="382.0"></text>
</g>
<g>
<title>char[] (342 samples, 0.18%)</title><rect x="112.2" y="355.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="115.2" y="366.0"></text>
</g>
<g>
<title>char[] (185 samples, 0.10%)</title><rect x="114.3" y="355.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="117.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.07%)</title><rect x="115.4" y="355.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="118.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (694 samples, 0.37%)</title><rect x="116.2" y="355.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (694 samples, 0.37%)</title><rect x="116.2" y="339.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (694 samples, 0.37%)</title><rect x="116.2" y="323.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.2" y="334.0"></text>
</g>
<g>
<title>byte[] (693 samples, 0.37%)</title><rect x="116.2" y="307.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="119.2" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=7277] (4,225 samples, 2.23%)</title><rect x="120.5" y="467.0" width="26.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="123.5" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,225 samples, 2.23%)</title><rect x="120.5" y="451.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.5" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (4,225 samples, 2.23%)</title><rect x="120.5" y="435.0" width="26.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.5" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,225 samples, 2.23%)</title><rect x="120.5" y="419.0" width="26.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.5" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,225 samples, 2.23%)</title><rect x="120.5" y="403.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,212 samples, 0.64%)</title><rect x="120.5" y="387.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,212 samples, 0.64%)</title><rect x="120.5" y="371.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.5" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (812 samples, 0.43%)</title><rect x="120.5" y="355.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (156 samples, 0.08%)</title><rect x="120.5" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (156 samples, 0.08%)</title><rect x="120.5" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (156 samples, 0.08%)</title><rect x="120.5" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (156 samples, 0.08%)</title><rect x="120.5" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.06%)</title><rect x="120.5" y="275.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="123.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.02%)</title><rect x="121.2" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.2" y="286.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.02%)</title><rect x="121.2" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="124.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (656 samples, 0.35%)</title><rect x="121.5" y="339.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (82 samples, 0.04%)</title><rect x="121.5" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (82 samples, 0.04%)</title><rect x="121.5" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (82 samples, 0.04%)</title><rect x="121.5" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (82 samples, 0.04%)</title><rect x="121.5" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.5" y="286.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.04%)</title><rect x="121.5" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="124.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (206 samples, 0.11%)</title><rect x="122.0" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (206 samples, 0.11%)</title><rect x="122.0" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (206 samples, 0.11%)</title><rect x="122.0" y="291.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="125.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (368 samples, 0.19%)</title><rect x="123.3" y="323.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (367 samples, 0.19%)</title><rect x="123.3" y="307.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (367 samples, 0.19%)</title><rect x="123.3" y="291.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (367 samples, 0.19%)</title><rect x="123.3" y="275.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (367 samples, 0.19%)</title><rect x="123.3" y="259.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="126.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (400 samples, 0.21%)</title><rect x="125.6" y="355.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (400 samples, 0.21%)</title><rect x="125.6" y="339.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (400 samples, 0.21%)</title><rect x="125.6" y="323.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (297 samples, 0.16%)</title><rect x="125.6" y="307.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="128.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (103 samples, 0.05%)</title><rect x="127.4" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.4" y="318.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.05%)</title><rect x="127.4" y="291.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="130.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,202 samples, 0.63%)</title><rect x="128.1" y="387.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.1" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (350 samples, 0.18%)</title><rect x="128.1" y="371.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="131.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (305 samples, 0.16%)</title><rect x="130.2" y="371.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (224 samples, 0.12%)</title><rect x="130.2" y="355.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="133.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (81 samples, 0.04%)</title><rect x="131.6" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.6" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (547 samples, 0.29%)</title><rect x="132.1" y="371.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (547 samples, 0.29%)</title><rect x="132.1" y="355.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.1" y="366.0"></text>
</g>
<g>
<title>char[] (362 samples, 0.19%)</title><rect x="132.1" y="339.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="135.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.02%)</title><rect x="134.5" y="339.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="137.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (129 samples, 0.07%)</title><rect x="134.7" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (129 samples, 0.07%)</title><rect x="134.7" y="323.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (129 samples, 0.07%)</title><rect x="134.7" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.7" y="318.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.07%)</title><rect x="134.7" y="291.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="137.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,811 samples, 0.96%)</title><rect x="135.6" y="387.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,811 samples, 0.96%)</title><rect x="135.6" y="371.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.6" y="382.0"></text>
</g>
<g>
<title>char[] (413 samples, 0.22%)</title><rect x="135.6" y="355.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="138.6" y="366.0"></text>
</g>
<g>
<title>char[] (276 samples, 0.15%)</title><rect x="138.1" y="355.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="141.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (203 samples, 0.11%)</title><rect x="139.8" y="355.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="142.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (919 samples, 0.48%)</title><rect x="141.1" y="355.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (919 samples, 0.48%)</title><rect x="141.1" y="339.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (919 samples, 0.48%)</title><rect x="141.1" y="323.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.1" y="334.0"></text>
</g>
<g>
<title>byte[] (904 samples, 0.48%)</title><rect x="141.1" y="307.0" width="5.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="144.1" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=7258] (3,429 samples, 1.81%)</title><rect x="146.8" y="467.0" width="21.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="149.8" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,429 samples, 1.81%)</title><rect x="146.8" y="451.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.8" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (271 samples, 0.14%)</title><rect x="146.8" y="435.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.8" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (271 samples, 0.14%)</title><rect x="146.8" y="419.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="149.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,158 samples, 1.67%)</title><rect x="148.5" y="435.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,158 samples, 1.67%)</title><rect x="148.5" y="419.0" width="19.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,158 samples, 1.67%)</title><rect x="148.5" y="403.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,216 samples, 0.64%)</title><rect x="148.5" y="387.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,216 samples, 0.64%)</title><rect x="148.5" y="371.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.5" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (888 samples, 0.47%)</title><rect x="148.5" y="355.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (251 samples, 0.13%)</title><rect x="148.5" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (251 samples, 0.13%)</title><rect x="148.5" y="323.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (251 samples, 0.13%)</title><rect x="148.5" y="307.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (251 samples, 0.13%)</title><rect x="148.5" y="291.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.05%)</title><rect x="148.5" y="275.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="151.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (149 samples, 0.08%)</title><rect x="149.1" y="275.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.1" y="286.0"></text>
</g>
<g>
<title>byte[] (149 samples, 0.08%)</title><rect x="149.1" y="259.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="152.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (637 samples, 0.34%)</title><rect x="150.1" y="339.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (178 samples, 0.09%)</title><rect x="150.1" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (178 samples, 0.09%)</title><rect x="150.1" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (178 samples, 0.09%)</title><rect x="150.1" y="291.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (178 samples, 0.09%)</title><rect x="150.1" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.1" y="286.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.09%)</title><rect x="150.1" y="259.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="153.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (237 samples, 0.13%)</title><rect x="151.2" y="323.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (237 samples, 0.13%)</title><rect x="151.2" y="307.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (237 samples, 0.13%)</title><rect x="151.2" y="291.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="154.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (222 samples, 0.12%)</title><rect x="152.7" y="323.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (220 samples, 0.12%)</title><rect x="152.7" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (220 samples, 0.12%)</title><rect x="152.7" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (220 samples, 0.12%)</title><rect x="152.7" y="275.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (220 samples, 0.12%)</title><rect x="152.7" y="259.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="155.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (328 samples, 0.17%)</title><rect x="154.0" y="355.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (328 samples, 0.17%)</title><rect x="154.0" y="339.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (328 samples, 0.17%)</title><rect x="154.0" y="323.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (128 samples, 0.07%)</title><rect x="154.0" y="307.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="157.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (200 samples, 0.11%)</title><rect x="154.8" y="307.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.8" y="318.0"></text>
</g>
<g>
<title>byte[] (200 samples, 0.11%)</title><rect x="154.8" y="291.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="157.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,326 samples, 0.70%)</title><rect x="156.1" y="387.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.1" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (215 samples, 0.11%)</title><rect x="156.1" y="371.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="159.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (411 samples, 0.22%)</title><rect x="157.4" y="371.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (411 samples, 0.22%)</title><rect x="157.4" y="355.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="160.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (700 samples, 0.37%)</title><rect x="160.0" y="371.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (700 samples, 0.37%)</title><rect x="160.0" y="355.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.0" y="366.0"></text>
</g>
<g>
<title>char[] (329 samples, 0.17%)</title><rect x="160.0" y="339.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="163.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (111 samples, 0.06%)</title><rect x="162.0" y="339.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="165.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (260 samples, 0.14%)</title><rect x="162.7" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (260 samples, 0.14%)</title><rect x="162.7" y="323.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (260 samples, 0.14%)</title><rect x="162.7" y="307.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.7" y="318.0"></text>
</g>
<g>
<title>byte[] (260 samples, 0.14%)</title><rect x="162.7" y="291.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="165.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (616 samples, 0.32%)</title><rect x="164.3" y="387.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (616 samples, 0.32%)</title><rect x="164.3" y="371.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.3" y="382.0"></text>
</g>
<g>
<title>char[] (279 samples, 0.15%)</title><rect x="164.3" y="355.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="167.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (113 samples, 0.06%)</title><rect x="166.1" y="355.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="169.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (224 samples, 0.12%)</title><rect x="166.8" y="355.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (224 samples, 0.12%)</title><rect x="166.8" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (224 samples, 0.12%)</title><rect x="166.8" y="323.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.8" y="334.0"></text>
</g>
<g>
<title>byte[] (224 samples, 0.12%)</title><rect x="166.8" y="307.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="169.8" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=7268] (3,726 samples, 1.97%)</title><rect x="168.2" y="467.0" width="23.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="171.2" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,726 samples, 1.97%)</title><rect x="168.2" y="451.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.2" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (260 samples, 0.14%)</title><rect x="168.2" y="435.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.2" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (260 samples, 0.14%)</title><rect x="168.2" y="419.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="171.2" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,466 samples, 1.83%)</title><rect x="169.8" y="435.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.8" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,466 samples, 1.83%)</title><rect x="169.8" y="419.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.8" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,466 samples, 1.83%)</title><rect x="169.8" y="403.0" width="21.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.8" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (913 samples, 0.48%)</title><rect x="169.8" y="387.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (913 samples, 0.48%)</title><rect x="169.8" y="371.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.8" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (657 samples, 0.35%)</title><rect x="169.8" y="355.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (182 samples, 0.10%)</title><rect x="169.8" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (182 samples, 0.10%)</title><rect x="169.8" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (182 samples, 0.10%)</title><rect x="169.8" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (182 samples, 0.10%)</title><rect x="169.8" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.04%)</title><rect x="169.8" y="275.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="172.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (104 samples, 0.05%)</title><rect x="170.3" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.3" y="286.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.05%)</title><rect x="170.3" y="259.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="173.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (475 samples, 0.25%)</title><rect x="170.9" y="339.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (114 samples, 0.06%)</title><rect x="170.9" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (114 samples, 0.06%)</title><rect x="170.9" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (114 samples, 0.06%)</title><rect x="170.9" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (114 samples, 0.06%)</title><rect x="170.9" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.9" y="286.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.06%)</title><rect x="170.9" y="259.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="173.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (215 samples, 0.11%)</title><rect x="171.6" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (215 samples, 0.11%)</title><rect x="171.6" y="307.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (215 samples, 0.11%)</title><rect x="171.6" y="291.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="174.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (146 samples, 0.08%)</title><rect x="173.0" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (145 samples, 0.08%)</title><rect x="173.0" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (145 samples, 0.08%)</title><rect x="173.0" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (145 samples, 0.08%)</title><rect x="173.0" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (145 samples, 0.08%)</title><rect x="173.0" y="259.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="176.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (256 samples, 0.14%)</title><rect x="173.9" y="355.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (256 samples, 0.14%)</title><rect x="173.9" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (256 samples, 0.14%)</title><rect x="173.9" y="323.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.05%)</title><rect x="173.9" y="307.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="176.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (155 samples, 0.08%)</title><rect x="174.5" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.5" y="318.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.08%)</title><rect x="174.5" y="291.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="177.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,091 samples, 0.58%)</title><rect x="175.5" y="387.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.5" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (262 samples, 0.14%)</title><rect x="175.5" y="371.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="178.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (294 samples, 0.16%)</title><rect x="177.1" y="371.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (280 samples, 0.15%)</title><rect x="177.1" y="355.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="180.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (535 samples, 0.28%)</title><rect x="178.9" y="371.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (535 samples, 0.28%)</title><rect x="178.9" y="355.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.9" y="366.0"></text>
</g>
<g>
<title>char[] (273 samples, 0.14%)</title><rect x="178.9" y="339.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="181.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.04%)</title><rect x="180.7" y="339.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="183.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (175 samples, 0.09%)</title><rect x="181.2" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (175 samples, 0.09%)</title><rect x="181.2" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (175 samples, 0.09%)</title><rect x="181.2" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.2" y="318.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.09%)</title><rect x="181.2" y="291.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="184.2" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,462 samples, 0.77%)</title><rect x="182.3" y="387.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,462 samples, 0.77%)</title><rect x="182.3" y="371.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.3" y="382.0"></text>
</g>
<g>
<title>char[] (733 samples, 0.39%)</title><rect x="182.3" y="355.0" width="4.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="185.3" y="366.0"></text>
</g>
<g>
<title>char[] (80 samples, 0.04%)</title><rect x="186.8" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="189.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (201 samples, 0.11%)</title><rect x="187.3" y="355.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="190.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (448 samples, 0.24%)</title><rect x="188.6" y="355.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (448 samples, 0.24%)</title><rect x="188.6" y="339.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (448 samples, 0.24%)</title><rect x="188.6" y="323.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.6" y="334.0"></text>
</g>
<g>
<title>byte[] (448 samples, 0.24%)</title><rect x="188.6" y="307.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="191.6" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=7278] (3,454 samples, 1.82%)</title><rect x="191.4" y="467.0" width="21.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="194.4" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,454 samples, 1.82%)</title><rect x="191.4" y="451.0" width="21.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.4" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,454 samples, 1.82%)</title><rect x="191.4" y="435.0" width="21.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.4" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,454 samples, 1.82%)</title><rect x="191.4" y="419.0" width="21.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.4" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,454 samples, 1.82%)</title><rect x="191.4" y="403.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.4" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,130 samples, 0.60%)</title><rect x="191.4" y="387.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,130 samples, 0.60%)</title><rect x="191.4" y="371.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.4" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (785 samples, 0.41%)</title><rect x="191.4" y="355.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (183 samples, 0.10%)</title><rect x="191.4" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (183 samples, 0.10%)</title><rect x="191.4" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (183 samples, 0.10%)</title><rect x="191.4" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (183 samples, 0.10%)</title><rect x="191.4" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.07%)</title><rect x="191.4" y="275.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="194.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.03%)</title><rect x="192.1" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.1" y="286.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.03%)</title><rect x="192.1" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="195.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (602 samples, 0.32%)</title><rect x="192.5" y="339.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (75 samples, 0.04%)</title><rect x="192.5" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (75 samples, 0.04%)</title><rect x="192.5" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (75 samples, 0.04%)</title><rect x="192.5" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (75 samples, 0.04%)</title><rect x="192.5" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.5" y="286.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.04%)</title><rect x="192.5" y="259.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="195.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (202 samples, 0.11%)</title><rect x="193.0" y="323.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (202 samples, 0.11%)</title><rect x="193.0" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (202 samples, 0.11%)</title><rect x="193.0" y="291.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="196.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (325 samples, 0.17%)</title><rect x="194.2" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (324 samples, 0.17%)</title><rect x="194.2" y="307.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (324 samples, 0.17%)</title><rect x="194.2" y="291.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (324 samples, 0.17%)</title><rect x="194.2" y="275.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (324 samples, 0.17%)</title><rect x="194.2" y="259.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="197.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (345 samples, 0.18%)</title><rect x="196.2" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (345 samples, 0.18%)</title><rect x="196.2" y="339.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (345 samples, 0.18%)</title><rect x="196.2" y="323.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (263 samples, 0.14%)</title><rect x="196.2" y="307.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="199.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (82 samples, 0.04%)</title><rect x="197.9" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.9" y="318.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.04%)</title><rect x="197.9" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="200.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,052 samples, 0.55%)</title><rect x="198.4" y="387.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.4" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (283 samples, 0.15%)</title><rect x="198.4" y="371.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="201.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (269 samples, 0.14%)</title><rect x="200.1" y="371.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (233 samples, 0.12%)</title><rect x="200.1" y="355.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="203.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (500 samples, 0.26%)</title><rect x="201.8" y="371.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (500 samples, 0.26%)</title><rect x="201.8" y="355.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.8" y="366.0"></text>
</g>
<g>
<title>char[] (256 samples, 0.14%)</title><rect x="201.8" y="339.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="204.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.02%)</title><rect x="203.4" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="206.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (198 samples, 0.10%)</title><rect x="203.7" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (198 samples, 0.10%)</title><rect x="203.7" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (198 samples, 0.10%)</title><rect x="203.7" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.7" y="318.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.10%)</title><rect x="203.7" y="291.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="206.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,272 samples, 0.67%)</title><rect x="204.9" y="387.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,272 samples, 0.67%)</title><rect x="204.9" y="371.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.9" y="382.0"></text>
</g>
<g>
<title>char[] (402 samples, 0.21%)</title><rect x="204.9" y="355.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="207.9" y="366.0"></text>
</g>
<g>
<title>char[] (107 samples, 0.06%)</title><rect x="207.4" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (220 samples, 0.12%)</title><rect x="208.1" y="355.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="211.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (543 samples, 0.29%)</title><rect x="209.5" y="355.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (543 samples, 0.29%)</title><rect x="209.5" y="339.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (543 samples, 0.29%)</title><rect x="209.5" y="323.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.5" y="334.0"></text>
</g>
<g>
<title>byte[] (543 samples, 0.29%)</title><rect x="209.5" y="307.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="212.5" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=7259] (3,381 samples, 1.78%)</title><rect x="212.9" y="467.0" width="21.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="215.9" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,381 samples, 1.78%)</title><rect x="212.9" y="451.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.9" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,381 samples, 1.78%)</title><rect x="212.9" y="435.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.9" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,381 samples, 1.78%)</title><rect x="212.9" y="419.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.9" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,381 samples, 1.78%)</title><rect x="212.9" y="403.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.9" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,269 samples, 0.67%)</title><rect x="212.9" y="387.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,269 samples, 0.67%)</title><rect x="212.9" y="371.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.9" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (895 samples, 0.47%)</title><rect x="212.9" y="355.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (235 samples, 0.12%)</title><rect x="212.9" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (235 samples, 0.12%)</title><rect x="212.9" y="323.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (235 samples, 0.12%)</title><rect x="212.9" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (235 samples, 0.12%)</title><rect x="212.9" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.06%)</title><rect x="212.9" y="275.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="215.9" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (125 samples, 0.07%)</title><rect x="213.5" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.5" y="286.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.07%)</title><rect x="213.5" y="259.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="216.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (660 samples, 0.35%)</title><rect x="214.3" y="339.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (170 samples, 0.09%)</title><rect x="214.3" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (170 samples, 0.09%)</title><rect x="214.3" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (170 samples, 0.09%)</title><rect x="214.3" y="291.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (170 samples, 0.09%)</title><rect x="214.3" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.3" y="286.0"></text>
</g>
<g>
<title>byte[] (170 samples, 0.09%)</title><rect x="214.3" y="259.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="217.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (284 samples, 0.15%)</title><rect x="215.4" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (284 samples, 0.15%)</title><rect x="215.4" y="307.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (284 samples, 0.15%)</title><rect x="215.4" y="291.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="218.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (206 samples, 0.11%)</title><rect x="217.1" y="323.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (202 samples, 0.11%)</title><rect x="217.1" y="307.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (202 samples, 0.11%)</title><rect x="217.1" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (202 samples, 0.11%)</title><rect x="217.1" y="275.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.1" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (202 samples, 0.11%)</title><rect x="217.1" y="259.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="220.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (374 samples, 0.20%)</title><rect x="218.4" y="355.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (374 samples, 0.20%)</title><rect x="218.4" y="339.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (374 samples, 0.20%)</title><rect x="218.4" y="323.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.06%)</title><rect x="218.4" y="307.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="221.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (255 samples, 0.13%)</title><rect x="219.2" y="307.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.2" y="318.0"></text>
</g>
<g>
<title>byte[] (255 samples, 0.13%)</title><rect x="219.2" y="291.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="222.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,500 samples, 0.79%)</title><rect x="220.7" y="387.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.7" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (246 samples, 0.13%)</title><rect x="220.7" y="371.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="223.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (522 samples, 0.28%)</title><rect x="222.3" y="371.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (522 samples, 0.28%)</title><rect x="222.3" y="355.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="225.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (732 samples, 0.39%)</title><rect x="225.5" y="371.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (732 samples, 0.39%)</title><rect x="225.5" y="355.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.5" y="366.0"></text>
</g>
<g>
<title>char[] (453 samples, 0.24%)</title><rect x="225.5" y="339.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="228.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.07%)</title><rect x="228.3" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="231.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (155 samples, 0.08%)</title><rect x="229.1" y="339.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (155 samples, 0.08%)</title><rect x="229.1" y="323.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (155 samples, 0.08%)</title><rect x="229.1" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.1" y="318.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.08%)</title><rect x="229.1" y="291.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="232.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (612 samples, 0.32%)</title><rect x="230.1" y="387.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (612 samples, 0.32%)</title><rect x="230.1" y="371.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.1" y="382.0"></text>
</g>
<g>
<title>char[] (270 samples, 0.14%)</title><rect x="230.1" y="355.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="233.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (140 samples, 0.07%)</title><rect x="231.8" y="355.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="234.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (202 samples, 0.11%)</title><rect x="232.6" y="355.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (202 samples, 0.11%)</title><rect x="232.6" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (202 samples, 0.11%)</title><rect x="232.6" y="323.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.6" y="334.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.11%)</title><rect x="232.6" y="307.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="235.6" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=7269] (3,781 samples, 1.99%)</title><rect x="233.9" y="467.0" width="23.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="236.9" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,781 samples, 1.99%)</title><rect x="233.9" y="451.0" width="23.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.9" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (294 samples, 0.16%)</title><rect x="233.9" y="435.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.9" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (294 samples, 0.16%)</title><rect x="233.9" y="419.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="236.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,487 samples, 1.84%)</title><rect x="235.7" y="435.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.7" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,487 samples, 1.84%)</title><rect x="235.7" y="419.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.7" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,487 samples, 1.84%)</title><rect x="235.7" y="403.0" width="21.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.7" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,069 samples, 0.56%)</title><rect x="235.7" y="387.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,069 samples, 0.56%)</title><rect x="235.7" y="371.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.7" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (738 samples, 0.39%)</title><rect x="235.7" y="355.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (196 samples, 0.10%)</title><rect x="235.7" y="339.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (196 samples, 0.10%)</title><rect x="235.7" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (196 samples, 0.10%)</title><rect x="235.7" y="307.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (196 samples, 0.10%)</title><rect x="235.7" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.04%)</title><rect x="235.7" y="275.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="238.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (113 samples, 0.06%)</title><rect x="236.2" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.2" y="286.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.06%)</title><rect x="236.2" y="259.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="239.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (542 samples, 0.29%)</title><rect x="236.9" y="339.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (153 samples, 0.08%)</title><rect x="236.9" y="323.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (153 samples, 0.08%)</title><rect x="236.9" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (153 samples, 0.08%)</title><rect x="236.9" y="291.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (153 samples, 0.08%)</title><rect x="236.9" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.9" y="286.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.08%)</title><rect x="236.9" y="259.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="239.9" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (217 samples, 0.11%)</title><rect x="237.9" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (217 samples, 0.11%)</title><rect x="237.9" y="307.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (217 samples, 0.11%)</title><rect x="237.9" y="291.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="240.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (172 samples, 0.09%)</title><rect x="239.2" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (172 samples, 0.09%)</title><rect x="239.2" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (172 samples, 0.09%)</title><rect x="239.2" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (172 samples, 0.09%)</title><rect x="239.2" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (172 samples, 0.09%)</title><rect x="239.2" y="259.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="242.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (331 samples, 0.17%)</title><rect x="240.3" y="355.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (331 samples, 0.17%)</title><rect x="240.3" y="339.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (331 samples, 0.17%)</title><rect x="240.3" y="323.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (179 samples, 0.09%)</title><rect x="240.3" y="307.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="243.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (152 samples, 0.08%)</title><rect x="241.4" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.4" y="318.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.08%)</title><rect x="241.4" y="291.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="244.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,110 samples, 0.59%)</title><rect x="242.4" y="387.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.4" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (209 samples, 0.11%)</title><rect x="242.4" y="371.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="245.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (366 samples, 0.19%)</title><rect x="243.7" y="371.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (295 samples, 0.16%)</title><rect x="243.7" y="355.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="246.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (71 samples, 0.04%)</title><rect x="245.5" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="248.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (535 samples, 0.28%)</title><rect x="246.0" y="371.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (535 samples, 0.28%)</title><rect x="246.0" y="355.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.0" y="366.0"></text>
</g>
<g>
<title>char[] (207 samples, 0.11%)</title><rect x="246.0" y="339.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="249.0" y="350.0"></text>
</g>
<g>
<title>char[] (45 samples, 0.02%)</title><rect x="247.2" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.03%)</title><rect x="247.5" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="250.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (228 samples, 0.12%)</title><rect x="247.9" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (228 samples, 0.12%)</title><rect x="247.9" y="323.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (228 samples, 0.12%)</title><rect x="247.9" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.9" y="318.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.12%)</title><rect x="247.9" y="291.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="250.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,308 samples, 0.69%)</title><rect x="249.3" y="387.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,308 samples, 0.69%)</title><rect x="249.3" y="371.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.3" y="382.0"></text>
</g>
<g>
<title>char[] (454 samples, 0.24%)</title><rect x="249.3" y="355.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="252.3" y="366.0"></text>
</g>
<g>
<title>char[] (154 samples, 0.08%)</title><rect x="252.1" y="355.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="255.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (288 samples, 0.15%)</title><rect x="253.1" y="355.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="256.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (412 samples, 0.22%)</title><rect x="254.9" y="355.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (412 samples, 0.22%)</title><rect x="254.9" y="339.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (412 samples, 0.22%)</title><rect x="254.9" y="323.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.9" y="334.0"></text>
</g>
<g>
<title>byte[] (398 samples, 0.21%)</title><rect x="254.9" y="307.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="257.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=7279] (3,862 samples, 2.04%)</title><rect x="257.4" y="467.0" width="24.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="260.4" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,862 samples, 2.04%)</title><rect x="257.4" y="451.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.4" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (254 samples, 0.13%)</title><rect x="257.4" y="435.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.4" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (254 samples, 0.13%)</title><rect x="257.4" y="419.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="260.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,608 samples, 1.90%)</title><rect x="259.0" y="435.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="262.0" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,608 samples, 1.90%)</title><rect x="259.0" y="419.0" width="22.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.0" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,608 samples, 1.90%)</title><rect x="259.0" y="403.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.0" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (925 samples, 0.49%)</title><rect x="259.0" y="387.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (925 samples, 0.49%)</title><rect x="259.0" y="371.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.0" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (586 samples, 0.31%)</title><rect x="259.0" y="355.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (243 samples, 0.13%)</title><rect x="259.0" y="339.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (243 samples, 0.13%)</title><rect x="259.0" y="323.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (243 samples, 0.13%)</title><rect x="259.0" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (243 samples, 0.13%)</title><rect x="259.0" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.03%)</title><rect x="259.0" y="275.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="262.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (182 samples, 0.10%)</title><rect x="259.4" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.4" y="286.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.10%)</title><rect x="259.4" y="259.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="262.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (343 samples, 0.18%)</title><rect x="260.5" y="339.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (52 samples, 0.03%)</title><rect x="260.5" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (52 samples, 0.03%)</title><rect x="260.5" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (52 samples, 0.03%)</title><rect x="260.5" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.03%)</title><rect x="260.5" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.5" y="286.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.03%)</title><rect x="260.5" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="263.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (148 samples, 0.08%)</title><rect x="260.8" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (148 samples, 0.08%)</title><rect x="260.8" y="307.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (148 samples, 0.08%)</title><rect x="260.8" y="291.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="263.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (143 samples, 0.08%)</title><rect x="261.8" y="323.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (142 samples, 0.07%)</title><rect x="261.8" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (142 samples, 0.07%)</title><rect x="261.8" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (142 samples, 0.07%)</title><rect x="261.8" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (142 samples, 0.07%)</title><rect x="261.8" y="259.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="264.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (339 samples, 0.18%)</title><rect x="262.7" y="355.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (339 samples, 0.18%)</title><rect x="262.7" y="339.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (339 samples, 0.18%)</title><rect x="262.7" y="323.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (168 samples, 0.09%)</title><rect x="262.7" y="307.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="265.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (171 samples, 0.09%)</title><rect x="263.7" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.7" y="318.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.09%)</title><rect x="263.7" y="291.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="266.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,014 samples, 0.53%)</title><rect x="264.8" y="387.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.8" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (206 samples, 0.11%)</title><rect x="264.8" y="371.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="267.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (305 samples, 0.16%)</title><rect x="266.0" y="371.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (180 samples, 0.09%)</title><rect x="266.0" y="355.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="269.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (125 samples, 0.07%)</title><rect x="267.2" y="355.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="270.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (503 samples, 0.27%)</title><rect x="267.9" y="371.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (503 samples, 0.27%)</title><rect x="267.9" y="355.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.9" y="366.0"></text>
</g>
<g>
<title>char[] (233 samples, 0.12%)</title><rect x="267.9" y="339.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="270.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.05%)</title><rect x="269.5" y="339.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="272.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (151 samples, 0.08%)</title><rect x="270.1" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (151 samples, 0.08%)</title><rect x="270.1" y="323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (151 samples, 0.08%)</title><rect x="270.1" y="307.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.1" y="318.0"></text>
</g>
<g>
<title>byte[] (151 samples, 0.08%)</title><rect x="270.1" y="291.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="273.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,669 samples, 0.88%)</title><rect x="271.1" y="387.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,669 samples, 0.88%)</title><rect x="271.1" y="371.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.1" y="382.0"></text>
</g>
<g>
<title>char[] (561 samples, 0.30%)</title><rect x="271.1" y="355.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="274.1" y="366.0"></text>
</g>
<g>
<title>char[] (231 samples, 0.12%)</title><rect x="274.6" y="355.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="277.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (386 samples, 0.20%)</title><rect x="276.0" y="355.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="279.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (491 samples, 0.26%)</title><rect x="278.4" y="355.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (491 samples, 0.26%)</title><rect x="278.4" y="339.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (491 samples, 0.26%)</title><rect x="278.4" y="323.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.4" y="334.0"></text>
</g>
<g>
<title>byte[] (425 samples, 0.22%)</title><rect x="278.4" y="307.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="281.4" y="318.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.03%)</title><rect x="281.1" y="307.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="284.1" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=7260] (3,383 samples, 1.78%)</title><rect x="281.5" y="467.0" width="21.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="284.5" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,383 samples, 1.78%)</title><rect x="281.5" y="451.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.5" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,383 samples, 1.78%)</title><rect x="281.5" y="435.0" width="21.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.5" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,383 samples, 1.78%)</title><rect x="281.5" y="419.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.5" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,383 samples, 1.78%)</title><rect x="281.5" y="403.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,274 samples, 0.67%)</title><rect x="281.5" y="387.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,274 samples, 0.67%)</title><rect x="281.5" y="371.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.5" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (953 samples, 0.50%)</title><rect x="281.5" y="355.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (262 samples, 0.14%)</title><rect x="281.5" y="339.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (262 samples, 0.14%)</title><rect x="281.5" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (262 samples, 0.14%)</title><rect x="281.5" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (262 samples, 0.14%)</title><rect x="281.5" y="291.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (151 samples, 0.08%)</title><rect x="281.5" y="275.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="284.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (111 samples, 0.06%)</title><rect x="282.4" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.4" y="286.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.06%)</title><rect x="282.4" y="259.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="285.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (691 samples, 0.36%)</title><rect x="283.1" y="339.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (166 samples, 0.09%)</title><rect x="283.1" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (166 samples, 0.09%)</title><rect x="283.1" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (166 samples, 0.09%)</title><rect x="283.1" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (166 samples, 0.09%)</title><rect x="283.1" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.1" y="286.0"></text>
</g>
<g>
<title>byte[] (166 samples, 0.09%)</title><rect x="283.1" y="259.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="286.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (267 samples, 0.14%)</title><rect x="284.1" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (267 samples, 0.14%)</title><rect x="284.1" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (267 samples, 0.14%)</title><rect x="284.1" y="291.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="287.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (258 samples, 0.14%)</title><rect x="285.8" y="323.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (256 samples, 0.14%)</title><rect x="285.8" y="307.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.14%)</title><rect x="285.8" y="291.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (256 samples, 0.14%)</title><rect x="285.8" y="275.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (256 samples, 0.14%)</title><rect x="285.8" y="259.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="288.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (321 samples, 0.17%)</title><rect x="287.4" y="355.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (321 samples, 0.17%)</title><rect x="287.4" y="339.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (321 samples, 0.17%)</title><rect x="287.4" y="323.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.06%)</title><rect x="287.4" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="290.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (212 samples, 0.11%)</title><rect x="288.1" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.1" y="318.0"></text>
</g>
<g>
<title>byte[] (212 samples, 0.11%)</title><rect x="288.1" y="291.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="291.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,472 samples, 0.78%)</title><rect x="289.4" y="387.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.4" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (250 samples, 0.13%)</title><rect x="289.4" y="371.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="292.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (473 samples, 0.25%)</title><rect x="290.9" y="371.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (473 samples, 0.25%)</title><rect x="290.9" y="355.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="293.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (749 samples, 0.40%)</title><rect x="293.9" y="371.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (749 samples, 0.40%)</title><rect x="293.9" y="355.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.9" y="366.0"></text>
</g>
<g>
<title>char[] (386 samples, 0.20%)</title><rect x="293.9" y="339.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="296.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (162 samples, 0.09%)</title><rect x="296.3" y="339.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="299.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (201 samples, 0.11%)</title><rect x="297.3" y="339.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (201 samples, 0.11%)</title><rect x="297.3" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (201 samples, 0.11%)</title><rect x="297.3" y="307.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.3" y="318.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.11%)</title><rect x="297.3" y="291.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="300.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (637 samples, 0.34%)</title><rect x="298.6" y="387.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (637 samples, 0.34%)</title><rect x="298.6" y="371.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.6" y="382.0"></text>
</g>
<g>
<title>char[] (286 samples, 0.15%)</title><rect x="298.6" y="355.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="301.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.06%)</title><rect x="300.3" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="303.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (236 samples, 0.12%)</title><rect x="301.0" y="355.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (236 samples, 0.12%)</title><rect x="301.0" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (236 samples, 0.12%)</title><rect x="301.0" y="323.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.0" y="334.0"></text>
</g>
<g>
<title>byte[] (236 samples, 0.12%)</title><rect x="301.0" y="307.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="304.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=7270] (3,735 samples, 1.97%)</title><rect x="302.5" y="467.0" width="23.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="305.5" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,735 samples, 1.97%)</title><rect x="302.5" y="451.0" width="23.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.5" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (274 samples, 0.14%)</title><rect x="302.5" y="435.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.5" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (274 samples, 0.14%)</title><rect x="302.5" y="419.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="305.5" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,461 samples, 1.83%)</title><rect x="304.2" y="435.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.2" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,461 samples, 1.83%)</title><rect x="304.2" y="419.0" width="21.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.2" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,461 samples, 1.83%)</title><rect x="304.2" y="403.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.2" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (925 samples, 0.49%)</title><rect x="304.2" y="387.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (925 samples, 0.49%)</title><rect x="304.2" y="371.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.2" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (589 samples, 0.31%)</title><rect x="304.2" y="355.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (147 samples, 0.08%)</title><rect x="304.2" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (147 samples, 0.08%)</title><rect x="304.2" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (147 samples, 0.08%)</title><rect x="304.2" y="307.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (147 samples, 0.08%)</title><rect x="304.2" y="291.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.04%)</title><rect x="304.2" y="275.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="307.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.04%)</title><rect x="304.7" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.7" y="286.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.04%)</title><rect x="304.7" y="259.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="307.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (442 samples, 0.23%)</title><rect x="305.1" y="339.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (118 samples, 0.06%)</title><rect x="305.1" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (118 samples, 0.06%)</title><rect x="305.1" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (118 samples, 0.06%)</title><rect x="305.1" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (118 samples, 0.06%)</title><rect x="305.1" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.1" y="286.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.06%)</title><rect x="305.1" y="259.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="308.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (168 samples, 0.09%)</title><rect x="305.9" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (168 samples, 0.09%)</title><rect x="305.9" y="307.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (168 samples, 0.09%)</title><rect x="305.9" y="291.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="308.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (156 samples, 0.08%)</title><rect x="306.9" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (155 samples, 0.08%)</title><rect x="306.9" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.08%)</title><rect x="306.9" y="291.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (155 samples, 0.08%)</title><rect x="306.9" y="275.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (155 samples, 0.08%)</title><rect x="306.9" y="259.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="309.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (336 samples, 0.18%)</title><rect x="307.9" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (336 samples, 0.18%)</title><rect x="307.9" y="339.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (336 samples, 0.18%)</title><rect x="307.9" y="323.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (186 samples, 0.10%)</title><rect x="307.9" y="307.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="310.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (150 samples, 0.08%)</title><rect x="309.0" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.0" y="318.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.08%)</title><rect x="309.0" y="291.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="312.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (955 samples, 0.50%)</title><rect x="310.0" y="387.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.0" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (173 samples, 0.09%)</title><rect x="310.0" y="371.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="313.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (357 samples, 0.19%)</title><rect x="311.1" y="371.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (272 samples, 0.14%)</title><rect x="311.1" y="355.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="314.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (85 samples, 0.04%)</title><rect x="312.7" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="315.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (425 samples, 0.22%)</title><rect x="313.3" y="371.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (425 samples, 0.22%)</title><rect x="313.3" y="355.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.3" y="366.0"></text>
</g>
<g>
<title>char[] (235 samples, 0.12%)</title><rect x="313.3" y="339.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="316.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (143 samples, 0.08%)</title><rect x="315.0" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (143 samples, 0.08%)</title><rect x="315.0" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (143 samples, 0.08%)</title><rect x="315.0" y="307.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.0" y="318.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.08%)</title><rect x="315.0" y="291.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="318.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,581 samples, 0.83%)</title><rect x="315.9" y="387.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,581 samples, 0.83%)</title><rect x="315.9" y="371.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="382.0"></text>
</g>
<g>
<title>char[] (659 samples, 0.35%)</title><rect x="315.9" y="355.0" width="4.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="318.9" y="366.0"></text>
</g>
<g>
<title>char[] (137 samples, 0.07%)</title><rect x="320.0" y="355.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (238 samples, 0.13%)</title><rect x="320.9" y="355.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="323.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (547 samples, 0.29%)</title><rect x="322.4" y="355.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (547 samples, 0.29%)</title><rect x="322.4" y="339.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (547 samples, 0.29%)</title><rect x="322.4" y="323.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.4" y="334.0"></text>
</g>
<g>
<title>byte[] (522 samples, 0.28%)</title><rect x="322.4" y="307.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="325.4" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=7280] (3,891 samples, 2.05%)</title><rect x="325.8" y="467.0" width="24.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="328.8" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,891 samples, 2.05%)</title><rect x="325.8" y="451.0" width="24.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.8" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,891 samples, 2.05%)</title><rect x="325.8" y="435.0" width="24.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,891 samples, 2.05%)</title><rect x="325.8" y="419.0" width="24.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,891 samples, 2.05%)</title><rect x="325.8" y="403.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.8" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,000 samples, 0.53%)</title><rect x="325.8" y="387.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,000 samples, 0.53%)</title><rect x="325.8" y="371.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.8" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (676 samples, 0.36%)</title><rect x="325.8" y="355.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (97 samples, 0.05%)</title><rect x="325.8" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (97 samples, 0.05%)</title><rect x="325.8" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (97 samples, 0.05%)</title><rect x="325.8" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (97 samples, 0.05%)</title><rect x="325.8" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.03%)</title><rect x="325.8" y="275.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="328.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.02%)</title><rect x="326.1" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.1" y="286.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.02%)</title><rect x="326.1" y="259.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="329.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (579 samples, 0.31%)</title><rect x="326.4" y="339.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (116 samples, 0.06%)</title><rect x="326.4" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (116 samples, 0.06%)</title><rect x="326.4" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (116 samples, 0.06%)</title><rect x="326.4" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (116 samples, 0.06%)</title><rect x="326.4" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.4" y="286.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.06%)</title><rect x="326.4" y="259.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="329.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (128 samples, 0.07%)</title><rect x="327.1" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (128 samples, 0.07%)</title><rect x="327.1" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (128 samples, 0.07%)</title><rect x="327.1" y="291.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="330.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (335 samples, 0.18%)</title><rect x="327.9" y="323.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (333 samples, 0.18%)</title><rect x="327.9" y="307.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (333 samples, 0.18%)</title><rect x="327.9" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (333 samples, 0.18%)</title><rect x="327.9" y="275.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (333 samples, 0.18%)</title><rect x="327.9" y="259.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="330.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (324 samples, 0.17%)</title><rect x="330.0" y="355.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (324 samples, 0.17%)</title><rect x="330.0" y="339.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (324 samples, 0.17%)</title><rect x="330.0" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (238 samples, 0.13%)</title><rect x="330.0" y="307.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="333.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (86 samples, 0.05%)</title><rect x="331.5" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="334.5" y="318.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.05%)</title><rect x="331.5" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="334.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,420 samples, 0.75%)</title><rect x="332.0" y="387.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.0" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (321 samples, 0.17%)</title><rect x="332.0" y="371.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="335.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (269 samples, 0.14%)</title><rect x="334.0" y="371.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (200 samples, 0.11%)</title><rect x="334.0" y="355.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="337.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.04%)</title><rect x="335.2" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="338.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (830 samples, 0.44%)</title><rect x="335.7" y="371.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (830 samples, 0.44%)</title><rect x="335.7" y="355.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.7" y="366.0"></text>
</g>
<g>
<title>char[] (412 samples, 0.22%)</title><rect x="335.7" y="339.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="338.7" y="350.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.03%)</title><rect x="338.2" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="341.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.02%)</title><rect x="338.6" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="341.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (314 samples, 0.17%)</title><rect x="338.9" y="339.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (314 samples, 0.17%)</title><rect x="338.9" y="323.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (314 samples, 0.17%)</title><rect x="338.9" y="307.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.9" y="318.0"></text>
</g>
<g>
<title>byte[] (314 samples, 0.17%)</title><rect x="338.9" y="291.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="341.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,471 samples, 0.78%)</title><rect x="340.8" y="387.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.8" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,471 samples, 0.78%)</title><rect x="340.8" y="371.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.8" y="382.0"></text>
</g>
<g>
<title>char[] (488 samples, 0.26%)</title><rect x="340.8" y="355.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="343.8" y="366.0"></text>
</g>
<g>
<title>char[] (151 samples, 0.08%)</title><rect x="343.9" y="355.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="346.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (197 samples, 0.10%)</title><rect x="344.8" y="355.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="347.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (635 samples, 0.33%)</title><rect x="346.0" y="355.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (635 samples, 0.33%)</title><rect x="346.0" y="339.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (635 samples, 0.33%)</title><rect x="346.0" y="323.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.0" y="334.0"></text>
</g>
<g>
<title>byte[] (634 samples, 0.33%)</title><rect x="346.0" y="307.0" width="4.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="349.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=7261] (3,347 samples, 1.77%)</title><rect x="350.0" y="467.0" width="20.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="353.0" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,347 samples, 1.77%)</title><rect x="350.0" y="451.0" width="20.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.0" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (267 samples, 0.14%)</title><rect x="350.0" y="435.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.0" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (267 samples, 0.14%)</title><rect x="350.0" y="419.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="353.0" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,080 samples, 1.62%)</title><rect x="351.6" y="435.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,080 samples, 1.62%)</title><rect x="351.6" y="419.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,080 samples, 1.62%)</title><rect x="351.6" y="403.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,231 samples, 0.65%)</title><rect x="351.6" y="387.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,231 samples, 0.65%)</title><rect x="351.6" y="371.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.6" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (905 samples, 0.48%)</title><rect x="351.6" y="355.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (269 samples, 0.14%)</title><rect x="351.6" y="339.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (269 samples, 0.14%)</title><rect x="351.6" y="323.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (269 samples, 0.14%)</title><rect x="351.6" y="307.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (269 samples, 0.14%)</title><rect x="351.6" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.06%)</title><rect x="351.6" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="354.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (160 samples, 0.08%)</title><rect x="352.3" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.3" y="286.0"></text>
</g>
<g>
<title>byte[] (160 samples, 0.08%)</title><rect x="352.3" y="259.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="355.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (636 samples, 0.34%)</title><rect x="353.3" y="339.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (108 samples, 0.06%)</title><rect x="353.3" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (108 samples, 0.06%)</title><rect x="353.3" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (108 samples, 0.06%)</title><rect x="353.3" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (108 samples, 0.06%)</title><rect x="353.3" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.3" y="286.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.06%)</title><rect x="353.3" y="259.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="356.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (328 samples, 0.17%)</title><rect x="354.0" y="323.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (328 samples, 0.17%)</title><rect x="354.0" y="307.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (328 samples, 0.17%)</title><rect x="354.0" y="291.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="357.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (200 samples, 0.11%)</title><rect x="356.0" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (198 samples, 0.10%)</title><rect x="356.0" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.10%)</title><rect x="356.0" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (198 samples, 0.10%)</title><rect x="356.0" y="275.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (198 samples, 0.10%)</title><rect x="356.0" y="259.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="359.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (326 samples, 0.17%)</title><rect x="357.3" y="355.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (326 samples, 0.17%)</title><rect x="357.3" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (326 samples, 0.17%)</title><rect x="357.3" y="323.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (161 samples, 0.08%)</title><rect x="357.3" y="307.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="360.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (165 samples, 0.09%)</title><rect x="358.3" y="307.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.3" y="318.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.09%)</title><rect x="358.3" y="291.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="361.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,282 samples, 0.68%)</title><rect x="359.3" y="387.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.3" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (237 samples, 0.13%)</title><rect x="359.3" y="371.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="362.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (414 samples, 0.22%)</title><rect x="360.8" y="371.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (414 samples, 0.22%)</title><rect x="360.8" y="355.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="363.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (631 samples, 0.33%)</title><rect x="363.4" y="371.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (631 samples, 0.33%)</title><rect x="363.4" y="355.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.4" y="366.0"></text>
</g>
<g>
<title>char[] (322 samples, 0.17%)</title><rect x="363.4" y="339.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="366.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (95 samples, 0.05%)</title><rect x="365.4" y="339.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="368.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (214 samples, 0.11%)</title><rect x="365.9" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (214 samples, 0.11%)</title><rect x="365.9" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (214 samples, 0.11%)</title><rect x="365.9" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.9" y="318.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.11%)</title><rect x="365.9" y="291.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="368.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (567 samples, 0.30%)</title><rect x="367.3" y="387.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (567 samples, 0.30%)</title><rect x="367.3" y="371.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.3" y="382.0"></text>
</g>
<g>
<title>char[] (270 samples, 0.14%)</title><rect x="367.3" y="355.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="370.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (140 samples, 0.07%)</title><rect x="369.0" y="355.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="372.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (157 samples, 0.08%)</title><rect x="369.8" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (157 samples, 0.08%)</title><rect x="369.8" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (157 samples, 0.08%)</title><rect x="369.8" y="323.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.8" y="334.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.08%)</title><rect x="369.8" y="307.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="372.8" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=7271] (3,497 samples, 1.84%)</title><rect x="370.8" y="467.0" width="21.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="373.8" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,497 samples, 1.84%)</title><rect x="370.8" y="451.0" width="21.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.8" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (245 samples, 0.13%)</title><rect x="370.8" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="373.8" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (245 samples, 0.13%)</title><rect x="370.8" y="419.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="373.8" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,252 samples, 1.72%)</title><rect x="372.3" y="435.0" width="20.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,252 samples, 1.72%)</title><rect x="372.3" y="419.0" width="20.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,252 samples, 1.72%)</title><rect x="372.3" y="403.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (965 samples, 0.51%)</title><rect x="372.3" y="387.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (965 samples, 0.51%)</title><rect x="372.3" y="371.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.3" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (689 samples, 0.36%)</title><rect x="372.3" y="355.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (170 samples, 0.09%)</title><rect x="372.3" y="339.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (170 samples, 0.09%)</title><rect x="372.3" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (170 samples, 0.09%)</title><rect x="372.3" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (170 samples, 0.09%)</title><rect x="372.3" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.03%)</title><rect x="372.3" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="375.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (116 samples, 0.06%)</title><rect x="372.7" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.7" y="286.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.06%)</title><rect x="372.7" y="259.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="375.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (519 samples, 0.27%)</title><rect x="373.4" y="339.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (181 samples, 0.10%)</title><rect x="373.4" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (181 samples, 0.10%)</title><rect x="373.4" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (181 samples, 0.10%)</title><rect x="373.4" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (181 samples, 0.10%)</title><rect x="373.4" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.4" y="286.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.10%)</title><rect x="373.4" y="259.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="376.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (162 samples, 0.09%)</title><rect x="374.5" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (162 samples, 0.09%)</title><rect x="374.5" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (162 samples, 0.09%)</title><rect x="374.5" y="291.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="377.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (176 samples, 0.09%)</title><rect x="375.5" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (175 samples, 0.09%)</title><rect x="375.5" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (175 samples, 0.09%)</title><rect x="375.5" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (175 samples, 0.09%)</title><rect x="375.5" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (175 samples, 0.09%)</title><rect x="375.5" y="259.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="378.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (276 samples, 0.15%)</title><rect x="376.6" y="355.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (276 samples, 0.15%)</title><rect x="376.6" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (276 samples, 0.15%)</title><rect x="376.6" y="323.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (150 samples, 0.08%)</title><rect x="376.6" y="307.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="379.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (126 samples, 0.07%)</title><rect x="377.6" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.6" y="318.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.07%)</title><rect x="377.6" y="291.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="380.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,080 samples, 0.57%)</title><rect x="378.3" y="387.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.3" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (232 samples, 0.12%)</title><rect x="378.3" y="371.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="381.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (334 samples, 0.18%)</title><rect x="379.8" y="371.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (334 samples, 0.18%)</title><rect x="379.8" y="355.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="382.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (514 samples, 0.27%)</title><rect x="381.9" y="371.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (514 samples, 0.27%)</title><rect x="381.9" y="355.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.9" y="366.0"></text>
</g>
<g>
<title>char[] (268 samples, 0.14%)</title><rect x="381.9" y="339.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="384.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.05%)</title><rect x="383.5" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="386.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (159 samples, 0.08%)</title><rect x="384.1" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (159 samples, 0.08%)</title><rect x="384.1" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (159 samples, 0.08%)</title><rect x="384.1" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.1" y="318.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.08%)</title><rect x="384.1" y="291.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="387.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,207 samples, 0.64%)</title><rect x="385.1" y="387.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.1" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,207 samples, 0.64%)</title><rect x="385.1" y="371.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.1" y="382.0"></text>
</g>
<g>
<title>char[] (551 samples, 0.29%)</title><rect x="385.1" y="355.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="388.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (213 samples, 0.11%)</title><rect x="388.5" y="355.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="391.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (434 samples, 0.23%)</title><rect x="389.9" y="355.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (434 samples, 0.23%)</title><rect x="389.9" y="339.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (434 samples, 0.23%)</title><rect x="389.9" y="323.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.9" y="334.0"></text>
</g>
<g>
<title>byte[] (434 samples, 0.23%)</title><rect x="389.9" y="307.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="392.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=7281] (4,030 samples, 2.13%)</title><rect x="392.6" y="467.0" width="25.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="395.6" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,030 samples, 2.13%)</title><rect x="392.6" y="451.0" width="25.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.6" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (4,030 samples, 2.13%)</title><rect x="392.6" y="435.0" width="25.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.6" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,030 samples, 2.13%)</title><rect x="392.6" y="419.0" width="25.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,030 samples, 2.13%)</title><rect x="392.6" y="403.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.6" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,254 samples, 0.66%)</title><rect x="392.6" y="387.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,254 samples, 0.66%)</title><rect x="392.6" y="371.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (795 samples, 0.42%)</title><rect x="392.6" y="355.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (130 samples, 0.07%)</title><rect x="392.6" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (130 samples, 0.07%)</title><rect x="392.6" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (130 samples, 0.07%)</title><rect x="392.6" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (130 samples, 0.07%)</title><rect x="392.6" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.04%)</title><rect x="392.6" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="395.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.03%)</title><rect x="393.1" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.1" y="286.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.03%)</title><rect x="393.1" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="396.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (665 samples, 0.35%)</title><rect x="393.4" y="339.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (73 samples, 0.04%)</title><rect x="393.4" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (73 samples, 0.04%)</title><rect x="393.4" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (73 samples, 0.04%)</title><rect x="393.4" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (73 samples, 0.04%)</title><rect x="393.4" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.4" y="286.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.04%)</title><rect x="393.4" y="259.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="396.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (166 samples, 0.09%)</title><rect x="393.8" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (166 samples, 0.09%)</title><rect x="393.8" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (166 samples, 0.09%)</title><rect x="393.8" y="291.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="396.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (426 samples, 0.22%)</title><rect x="394.9" y="323.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (426 samples, 0.22%)</title><rect x="394.9" y="307.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (426 samples, 0.22%)</title><rect x="394.9" y="291.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (426 samples, 0.22%)</title><rect x="394.9" y="275.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (426 samples, 0.22%)</title><rect x="394.9" y="259.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="397.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (459 samples, 0.24%)</title><rect x="397.5" y="355.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (459 samples, 0.24%)</title><rect x="397.5" y="339.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (459 samples, 0.24%)</title><rect x="397.5" y="323.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (376 samples, 0.20%)</title><rect x="397.5" y="307.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="400.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.04%)</title><rect x="399.9" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.9" y="318.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.04%)</title><rect x="399.9" y="291.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="402.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,160 samples, 0.61%)</title><rect x="400.4" y="387.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.4" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (386 samples, 0.20%)</title><rect x="400.4" y="371.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="403.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (267 samples, 0.14%)</title><rect x="402.8" y="371.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (198 samples, 0.10%)</title><rect x="402.8" y="355.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="405.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.04%)</title><rect x="404.0" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="407.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (507 samples, 0.27%)</title><rect x="404.4" y="371.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (507 samples, 0.27%)</title><rect x="404.4" y="355.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.4" y="366.0"></text>
</g>
<g>
<title>char[] (286 samples, 0.15%)</title><rect x="404.4" y="339.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="407.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (167 samples, 0.09%)</title><rect x="406.6" y="339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (167 samples, 0.09%)</title><rect x="406.6" y="323.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (167 samples, 0.09%)</title><rect x="406.6" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.6" y="318.0"></text>
</g>
<g>
<title>byte[] (167 samples, 0.09%)</title><rect x="406.6" y="291.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="409.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,616 samples, 0.85%)</title><rect x="407.6" y="387.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,616 samples, 0.85%)</title><rect x="407.6" y="371.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.6" y="382.0"></text>
</g>
<g>
<title>char[] (390 samples, 0.21%)</title><rect x="407.6" y="355.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="410.6" y="366.0"></text>
</g>
<g>
<title>char[] (224 samples, 0.12%)</title><rect x="410.0" y="355.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (166 samples, 0.09%)</title><rect x="411.4" y="355.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="414.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (836 samples, 0.44%)</title><rect x="412.5" y="355.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (836 samples, 0.44%)</title><rect x="412.5" y="339.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (836 samples, 0.44%)</title><rect x="412.5" y="323.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.5" y="334.0"></text>
</g>
<g>
<title>byte[] (835 samples, 0.44%)</title><rect x="412.5" y="307.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="415.5" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=7262] (3,356 samples, 1.77%)</title><rect x="417.7" y="467.0" width="20.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="420.7" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,356 samples, 1.77%)</title><rect x="417.7" y="451.0" width="20.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (280 samples, 0.15%)</title><rect x="417.7" y="435.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.7" y="446.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (280 samples, 0.15%)</title><rect x="417.7" y="419.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="420.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,076 samples, 1.62%)</title><rect x="419.4" y="435.0" width="19.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,076 samples, 1.62%)</title><rect x="419.4" y="419.0" width="19.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,076 samples, 1.62%)</title><rect x="419.4" y="403.0" width="19.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,106 samples, 0.58%)</title><rect x="419.4" y="387.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,106 samples, 0.58%)</title><rect x="419.4" y="371.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.4" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (819 samples, 0.43%)</title><rect x="419.4" y="355.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (257 samples, 0.14%)</title><rect x="419.4" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (257 samples, 0.14%)</title><rect x="419.4" y="323.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (257 samples, 0.14%)</title><rect x="419.4" y="307.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (257 samples, 0.14%)</title><rect x="419.4" y="291.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.05%)</title><rect x="419.4" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="422.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (156 samples, 0.08%)</title><rect x="420.0" y="275.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.0" y="286.0"></text>
</g>
<g>
<title>byte[] (156 samples, 0.08%)</title><rect x="420.0" y="259.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="423.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (562 samples, 0.30%)</title><rect x="421.0" y="339.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (142 samples, 0.07%)</title><rect x="421.0" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (142 samples, 0.07%)</title><rect x="421.0" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (142 samples, 0.07%)</title><rect x="421.0" y="291.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (142 samples, 0.07%)</title><rect x="421.0" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.0" y="286.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.07%)</title><rect x="421.0" y="259.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (226 samples, 0.12%)</title><rect x="421.9" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (226 samples, 0.12%)</title><rect x="421.9" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (226 samples, 0.12%)</title><rect x="421.9" y="291.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="424.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (194 samples, 0.10%)</title><rect x="423.3" y="323.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="426.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (192 samples, 0.10%)</title><rect x="423.3" y="307.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (192 samples, 0.10%)</title><rect x="423.3" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (192 samples, 0.10%)</title><rect x="423.3" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (192 samples, 0.10%)</title><rect x="423.3" y="259.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="426.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (287 samples, 0.15%)</title><rect x="424.5" y="355.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (287 samples, 0.15%)</title><rect x="424.5" y="339.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (287 samples, 0.15%)</title><rect x="424.5" y="323.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (128 samples, 0.07%)</title><rect x="424.5" y="307.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="427.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (159 samples, 0.08%)</title><rect x="425.3" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.3" y="318.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.08%)</title><rect x="425.3" y="291.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="428.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,303 samples, 0.69%)</title><rect x="426.3" y="387.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.3" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (184 samples, 0.10%)</title><rect x="426.3" y="371.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="429.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (435 samples, 0.23%)</title><rect x="427.4" y="371.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (435 samples, 0.23%)</title><rect x="427.4" y="355.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="430.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (684 samples, 0.36%)</title><rect x="430.1" y="371.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (684 samples, 0.36%)</title><rect x="430.1" y="355.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.1" y="366.0"></text>
</g>
<g>
<title>char[] (313 samples, 0.17%)</title><rect x="430.1" y="339.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="433.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.06%)</title><rect x="432.1" y="339.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="435.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (255 samples, 0.13%)</title><rect x="432.8" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (255 samples, 0.13%)</title><rect x="432.8" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (255 samples, 0.13%)</title><rect x="432.8" y="307.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.8" y="318.0"></text>
</g>
<g>
<title>byte[] (255 samples, 0.13%)</title><rect x="432.8" y="291.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="435.8" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (667 samples, 0.35%)</title><rect x="434.4" y="387.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (667 samples, 0.35%)</title><rect x="434.4" y="371.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.4" y="382.0"></text>
</g>
<g>
<title>char[] (313 samples, 0.17%)</title><rect x="434.4" y="355.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="437.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.06%)</title><rect x="436.3" y="355.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="439.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (244 samples, 0.13%)</title><rect x="437.0" y="355.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (244 samples, 0.13%)</title><rect x="437.0" y="339.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (244 samples, 0.13%)</title><rect x="437.0" y="323.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.0" y="334.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.13%)</title><rect x="437.0" y="307.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="440.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=7282] (3,737 samples, 1.97%)</title><rect x="438.5" y="467.0" width="23.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="441.5" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,737 samples, 1.97%)</title><rect x="438.5" y="451.0" width="23.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.5" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,737 samples, 1.97%)</title><rect x="438.5" y="435.0" width="23.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.5" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,737 samples, 1.97%)</title><rect x="438.5" y="419.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.5" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,737 samples, 1.97%)</title><rect x="438.5" y="403.0" width="23.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,132 samples, 0.60%)</title><rect x="438.5" y="387.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,132 samples, 0.60%)</title><rect x="438.5" y="371.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.5" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (812 samples, 0.43%)</title><rect x="438.5" y="355.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (148 samples, 0.08%)</title><rect x="438.5" y="339.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (148 samples, 0.08%)</title><rect x="438.5" y="323.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (148 samples, 0.08%)</title><rect x="438.5" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (148 samples, 0.08%)</title><rect x="438.5" y="291.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.5" y="302.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 0.05%)</title><rect x="438.5" y="275.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="441.5" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.02%)</title><rect x="439.2" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.2" y="286.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="439.2" y="259.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="442.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (664 samples, 0.35%)</title><rect x="439.5" y="339.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (107 samples, 0.06%)</title><rect x="439.5" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (107 samples, 0.06%)</title><rect x="439.5" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (107 samples, 0.06%)</title><rect x="439.5" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (107 samples, 0.06%)</title><rect x="439.5" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.5" y="286.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.06%)</title><rect x="439.5" y="259.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="442.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (201 samples, 0.11%)</title><rect x="440.1" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (201 samples, 0.11%)</title><rect x="440.1" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (201 samples, 0.11%)</title><rect x="440.1" y="291.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="443.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (356 samples, 0.19%)</title><rect x="441.4" y="323.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (355 samples, 0.19%)</title><rect x="441.4" y="307.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (355 samples, 0.19%)</title><rect x="441.4" y="291.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (355 samples, 0.19%)</title><rect x="441.4" y="275.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (355 samples, 0.19%)</title><rect x="441.4" y="259.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="444.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (320 samples, 0.17%)</title><rect x="443.6" y="355.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (320 samples, 0.17%)</title><rect x="443.6" y="339.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (320 samples, 0.17%)</title><rect x="443.6" y="323.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (215 samples, 0.11%)</title><rect x="443.6" y="307.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="446.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (105 samples, 0.06%)</title><rect x="444.9" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.9" y="318.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.06%)</title><rect x="444.9" y="291.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="447.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,103 samples, 0.58%)</title><rect x="445.6" y="387.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.6" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (350 samples, 0.18%)</title><rect x="445.6" y="371.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="448.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (263 samples, 0.14%)</title><rect x="447.8" y="371.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (236 samples, 0.12%)</title><rect x="447.8" y="355.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="450.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (490 samples, 0.26%)</title><rect x="449.4" y="371.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (490 samples, 0.26%)</title><rect x="449.4" y="355.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.4" y="366.0"></text>
</g>
<g>
<title>char[] (266 samples, 0.14%)</title><rect x="449.4" y="339.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="452.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.03%)</title><rect x="451.2" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="454.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (145 samples, 0.08%)</title><rect x="451.6" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (145 samples, 0.08%)</title><rect x="451.6" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (145 samples, 0.08%)</title><rect x="451.6" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.6" y="318.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.08%)</title><rect x="451.6" y="291.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="454.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,502 samples, 0.79%)</title><rect x="452.5" y="387.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,502 samples, 0.79%)</title><rect x="452.5" y="371.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.5" y="382.0"></text>
</g>
<g>
<title>char[] (488 samples, 0.26%)</title><rect x="452.5" y="355.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="455.5" y="366.0"></text>
</g>
<g>
<title>char[] (72 samples, 0.04%)</title><rect x="455.5" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="458.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (216 samples, 0.11%)</title><rect x="455.9" y="355.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="458.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (726 samples, 0.38%)</title><rect x="457.3" y="355.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (726 samples, 0.38%)</title><rect x="457.3" y="339.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (726 samples, 0.38%)</title><rect x="457.3" y="323.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.3" y="334.0"></text>
</g>
<g>
<title>byte[] (726 samples, 0.38%)</title><rect x="457.3" y="307.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="460.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=7263] (3,371 samples, 1.78%)</title><rect x="461.8" y="467.0" width="21.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="464.8" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,371 samples, 1.78%)</title><rect x="461.8" y="451.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,371 samples, 1.78%)</title><rect x="461.8" y="435.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,371 samples, 1.78%)</title><rect x="461.8" y="419.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,371 samples, 1.78%)</title><rect x="461.8" y="403.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,291 samples, 0.68%)</title><rect x="461.8" y="387.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,291 samples, 0.68%)</title><rect x="461.8" y="371.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.8" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (971 samples, 0.51%)</title><rect x="461.8" y="355.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (264 samples, 0.14%)</title><rect x="461.8" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (264 samples, 0.14%)</title><rect x="461.8" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (264 samples, 0.14%)</title><rect x="461.8" y="307.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (264 samples, 0.14%)</title><rect x="461.8" y="291.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (130 samples, 0.07%)</title><rect x="461.8" y="275.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="464.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (134 samples, 0.07%)</title><rect x="462.6" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.6" y="286.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.07%)</title><rect x="462.6" y="259.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="465.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (707 samples, 0.37%)</title><rect x="463.4" y="339.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (166 samples, 0.09%)</title><rect x="463.4" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (166 samples, 0.09%)</title><rect x="463.4" y="307.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (166 samples, 0.09%)</title><rect x="463.4" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (166 samples, 0.09%)</title><rect x="463.4" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.4" y="286.0"></text>
</g>
<g>
<title>byte[] (166 samples, 0.09%)</title><rect x="463.4" y="259.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="466.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (270 samples, 0.14%)</title><rect x="464.5" y="323.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (270 samples, 0.14%)</title><rect x="464.5" y="307.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (270 samples, 0.14%)</title><rect x="464.5" y="291.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="467.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (271 samples, 0.14%)</title><rect x="466.2" y="323.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (269 samples, 0.14%)</title><rect x="466.2" y="307.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (269 samples, 0.14%)</title><rect x="466.2" y="291.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (269 samples, 0.14%)</title><rect x="466.2" y="275.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (269 samples, 0.14%)</title><rect x="466.2" y="259.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="469.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (320 samples, 0.17%)</title><rect x="467.8" y="355.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (320 samples, 0.17%)</title><rect x="467.8" y="339.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (320 samples, 0.17%)</title><rect x="467.8" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (117 samples, 0.06%)</title><rect x="467.8" y="307.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="470.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (203 samples, 0.11%)</title><rect x="468.6" y="307.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.6" y="318.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.11%)</title><rect x="468.6" y="291.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="471.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,432 samples, 0.76%)</title><rect x="469.8" y="387.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.8" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (265 samples, 0.14%)</title><rect x="469.8" y="371.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="472.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (450 samples, 0.24%)</title><rect x="471.5" y="371.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (450 samples, 0.24%)</title><rect x="471.5" y="355.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="474.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (717 samples, 0.38%)</title><rect x="474.3" y="371.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (717 samples, 0.38%)</title><rect x="474.3" y="355.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.3" y="366.0"></text>
</g>
<g>
<title>char[] (415 samples, 0.22%)</title><rect x="474.3" y="339.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="477.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (121 samples, 0.06%)</title><rect x="476.9" y="339.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="479.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (181 samples, 0.10%)</title><rect x="477.6" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (181 samples, 0.10%)</title><rect x="477.6" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (181 samples, 0.10%)</title><rect x="477.6" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.6" y="318.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.10%)</title><rect x="477.6" y="291.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="480.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (648 samples, 0.34%)</title><rect x="478.7" y="387.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (648 samples, 0.34%)</title><rect x="478.7" y="371.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.7" y="382.0"></text>
</g>
<g>
<title>char[] (305 samples, 0.16%)</title><rect x="478.7" y="355.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="481.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (108 samples, 0.06%)</title><rect x="480.6" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="483.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (235 samples, 0.12%)</title><rect x="481.3" y="355.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (235 samples, 0.12%)</title><rect x="481.3" y="339.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (235 samples, 0.12%)</title><rect x="481.3" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.3" y="334.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.12%)</title><rect x="481.3" y="307.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="484.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=7283] (3,627 samples, 1.91%)</title><rect x="482.8" y="467.0" width="22.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="485.8" y="478.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,627 samples, 1.91%)</title><rect x="482.8" y="451.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.8" y="462.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (3,627 samples, 1.91%)</title><rect x="482.8" y="435.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.8" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,627 samples, 1.91%)</title><rect x="482.8" y="419.0" width="22.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.8" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,627 samples, 1.91%)</title><rect x="482.8" y="403.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.8" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,254 samples, 0.66%)</title><rect x="482.8" y="387.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,254 samples, 0.66%)</title><rect x="482.8" y="371.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.8" y="382.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (805 samples, 0.42%)</title><rect x="482.8" y="355.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (149 samples, 0.08%)</title><rect x="482.8" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (149 samples, 0.08%)</title><rect x="482.8" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (149 samples, 0.08%)</title><rect x="482.8" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (149 samples, 0.08%)</title><rect x="482.8" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.05%)</title><rect x="482.8" y="275.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="485.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.03%)</title><rect x="483.4" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.4" y="286.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.03%)</title><rect x="483.4" y="259.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="486.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.get (656 samples, 0.35%)</title><rect x="483.7" y="339.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (112 samples, 0.06%)</title><rect x="483.7" y="323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (112 samples, 0.06%)</title><rect x="483.7" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (112 samples, 0.06%)</title><rect x="483.7" y="291.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (112 samples, 0.06%)</title><rect x="483.7" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.7" y="286.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.06%)</title><rect x="483.7" y="259.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="486.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (159 samples, 0.08%)</title><rect x="484.4" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (159 samples, 0.08%)</title><rect x="484.4" y="307.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (159 samples, 0.08%)</title><rect x="484.4" y="291.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="487.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (385 samples, 0.20%)</title><rect x="485.4" y="323.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/521157800.linkToTargetMethod (383 samples, 0.20%)</title><rect x="485.4" y="307.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (383 samples, 0.20%)</title><rect x="485.4" y="291.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.get$Lambda (383 samples, 0.20%)</title><rect x="485.4" y="275.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$65 (383 samples, 0.20%)</title><rect x="485.4" y="259.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="488.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (449 samples, 0.24%)</title><rect x="487.8" y="355.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.8" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (449 samples, 0.24%)</title><rect x="487.8" y="339.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (449 samples, 0.24%)</title><rect x="487.8" y="323.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (348 samples, 0.18%)</title><rect x="487.8" y="307.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="490.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (101 samples, 0.05%)</title><rect x="490.0" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.0" y="318.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.05%)</title><rect x="490.0" y="291.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="493.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,029 samples, 0.54%)</title><rect x="490.6" y="387.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.6" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (289 samples, 0.15%)</title><rect x="490.6" y="371.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="493.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (202 samples, 0.11%)</title><rect x="492.4" y="371.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (166 samples, 0.09%)</title><rect x="492.4" y="355.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="495.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (538 samples, 0.28%)</title><rect x="493.6" y="371.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (538 samples, 0.28%)</title><rect x="493.6" y="355.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.6" y="366.0"></text>
</g>
<g>
<title>char[] (303 samples, 0.16%)</title><rect x="493.6" y="339.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="496.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.03%)</title><rect x="495.6" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="498.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (159 samples, 0.08%)</title><rect x="496.0" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (159 samples, 0.08%)</title><rect x="496.0" y="323.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (159 samples, 0.08%)</title><rect x="496.0" y="307.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.0" y="318.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.08%)</title><rect x="496.0" y="291.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="499.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,344 samples, 0.71%)</title><rect x="497.0" y="387.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,344 samples, 0.71%)</title><rect x="497.0" y="371.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.0" y="382.0"></text>
</g>
<g>
<title>char[] (363 samples, 0.19%)</title><rect x="497.0" y="355.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="500.0" y="366.0"></text>
</g>
<g>
<title>char[] (75 samples, 0.04%)</title><rect x="499.2" y="355.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (207 samples, 0.11%)</title><rect x="499.7" y="355.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="502.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (699 samples, 0.37%)</title><rect x="501.0" y="355.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (699 samples, 0.37%)</title><rect x="501.0" y="339.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (699 samples, 0.37%)</title><rect x="501.0" y="323.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.0" y="334.0"></text>
</g>
<g>
<title>byte[] (682 samples, 0.36%)</title><rect x="501.0" y="307.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="504.0" y="318.0"></text>
</g>
<g>
<title>[worker-0 tid=7370] (7,000 samples, 3.69%)</title><rect x="505.4" y="467.0" width="43.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="508.4" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (7,000 samples, 3.69%)</title><rect x="505.4" y="451.0" width="43.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.4" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,000 samples, 3.69%)</title><rect x="505.4" y="435.0" width="43.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.4" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,000 samples, 3.69%)</title><rect x="505.4" y="419.0" width="43.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.4" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (6,988 samples, 3.69%)</title><rect x="505.4" y="403.0" width="43.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.4" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (6,988 samples, 3.69%)</title><rect x="505.4" y="387.0" width="43.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.4" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,575 samples, 0.83%)</title><rect x="505.4" y="371.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,575 samples, 0.83%)</title><rect x="505.4" y="355.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,537 samples, 0.81%)</title><rect x="505.7" y="339.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (69 samples, 0.04%)</title><rect x="505.7" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (69 samples, 0.04%)</title><rect x="505.7" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (69 samples, 0.04%)</title><rect x="505.7" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (69 samples, 0.04%)</title><rect x="505.7" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (69 samples, 0.04%)</title><rect x="505.7" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (58 samples, 0.03%)</title><rect x="505.7" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (55 samples, 0.03%)</title><rect x="505.7" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (55 samples, 0.03%)</title><rect x="505.7" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (55 samples, 0.03%)</title><rect x="505.7" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (55 samples, 0.03%)</title><rect x="505.7" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.03%)</title><rect x="505.7" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.03%)</title><rect x="505.7" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (52 samples, 0.03%)</title><rect x="505.7" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (52 samples, 0.03%)</title><rect x="505.7" y="115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (52 samples, 0.03%)</title><rect x="505.7" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (52 samples, 0.03%)</title><rect x="505.7" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,439 samples, 0.76%)</title><rect x="506.3" y="323.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,436 samples, 0.76%)</title><rect x="506.3" y="307.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,384 samples, 0.73%)</title><rect x="506.6" y="291.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (230 samples, 0.12%)</title><rect x="506.6" y="275.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (228 samples, 0.12%)</title><rect x="506.6" y="259.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (202 samples, 0.11%)</title><rect x="506.8" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (202 samples, 0.11%)</title><rect x="506.8" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (201 samples, 0.11%)</title><rect x="506.8" y="211.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (201 samples, 0.11%)</title><rect x="506.8" y="195.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (201 samples, 0.11%)</title><rect x="506.8" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (201 samples, 0.11%)</title><rect x="506.8" y="163.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (192 samples, 0.10%)</title><rect x="506.8" y="147.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (190 samples, 0.10%)</title><rect x="506.8" y="131.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (190 samples, 0.10%)</title><rect x="506.8" y="115.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (190 samples, 0.10%)</title><rect x="506.8" y="99.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (119 samples, 0.06%)</title><rect x="506.8" y="83.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (79 samples, 0.04%)</title><rect x="506.8" y="67.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="509.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (58 samples, 0.03%)</title><rect x="507.6" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (58 samples, 0.03%)</title><rect x="507.6" y="67.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (99 samples, 0.05%)</title><rect x="508.1" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (95 samples, 0.05%)</title><rect x="508.1" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (95 samples, 0.05%)</title><rect x="508.1" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (95 samples, 0.05%)</title><rect x="508.1" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (95 samples, 0.05%)</title><rect x="508.1" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (95 samples, 0.05%)</title><rect x="508.1" y="195.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.1" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (95 samples, 0.05%)</title><rect x="508.1" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (95 samples, 0.05%)</title><rect x="508.1" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (95 samples, 0.05%)</title><rect x="508.1" y="147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (90 samples, 0.05%)</title><rect x="508.1" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (90 samples, 0.05%)</title><rect x="508.1" y="115.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (90 samples, 0.05%)</title><rect x="508.1" y="99.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (90 samples, 0.05%)</title><rect x="508.1" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (58 samples, 0.03%)</title><rect x="508.1" y="67.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,044 samples, 0.55%)</title><rect x="508.7" y="275.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,034 samples, 0.55%)</title><rect x="508.8" y="259.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,034 samples, 0.55%)</title><rect x="508.8" y="243.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,034 samples, 0.55%)</title><rect x="508.8" y="227.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (695 samples, 0.37%)</title><rect x="508.8" y="211.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (455 samples, 0.24%)</title><rect x="508.8" y="195.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="511.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (240 samples, 0.13%)</title><rect x="511.6" y="195.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.6" y="206.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.13%)</title><rect x="511.6" y="179.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="514.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (339 samples, 0.18%)</title><rect x="513.1" y="211.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (339 samples, 0.18%)</title><rect x="513.1" y="195.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (243 samples, 0.13%)</title><rect x="513.1" y="179.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="516.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (96 samples, 0.05%)</title><rect x="514.6" y="179.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.6" y="190.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.05%)</title><rect x="514.6" y="163.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="517.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,413 samples, 2.86%)</title><rect x="515.2" y="371.0" width="33.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.2" y="382.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,357 samples, 2.83%)</title><rect x="515.4" y="355.0" width="33.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.4" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,357 samples, 2.83%)</title><rect x="515.4" y="339.0" width="33.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.4" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,195 samples, 2.74%)</title><rect x="515.4" y="323.0" width="32.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.4" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,152 samples, 0.61%)</title><rect x="515.4" y="307.0" width="7.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="518.4" y="318.0"></text>
</g>
<g>
<title>byte[] (4,043 samples, 2.13%)</title><rect x="522.6" y="307.0" width="25.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.6" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (136 samples, 0.07%)</title><rect x="547.8" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (109 samples, 0.06%)</title><rect x="547.9" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 0.06%)</title><rect x="547.9" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (109 samples, 0.06%)</title><rect x="547.9" y="275.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.9" y="286.0"></text>
</g>
<g>
<title>char[] (71 samples, 0.04%)</title><rect x="547.9" y="259.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="550.9" y="270.0"></text>
</g>
<g>
<title>[worker-0 tid=7378] (3,372 samples, 1.78%)</title><rect x="548.9" y="467.0" width="21.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="551.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,372 samples, 1.78%)</title><rect x="548.9" y="451.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,372 samples, 1.78%)</title><rect x="548.9" y="435.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,372 samples, 1.78%)</title><rect x="548.9" y="419.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,351 samples, 1.77%)</title><rect x="549.1" y="403.0" width="20.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,351 samples, 1.77%)</title><rect x="549.1" y="387.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,351 samples, 1.77%)</title><rect x="549.1" y="371.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,351 samples, 1.77%)</title><rect x="549.1" y="355.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (62 samples, 0.03%)</title><rect x="549.1" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (62 samples, 0.03%)</title><rect x="549.1" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.02%)</title><rect x="549.1" y="307.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (41 samples, 0.02%)</title><rect x="549.1" y="291.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.1" y="302.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.02%)</title><rect x="549.1" y="275.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="552.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (58 samples, 0.03%)</title><rect x="549.4" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (42 samples, 0.02%)</title><rect x="549.5" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,218 samples, 1.70%)</title><rect x="549.8" y="339.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (260 samples, 0.14%)</title><rect x="549.8" y="323.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (260 samples, 0.14%)</title><rect x="549.8" y="307.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (260 samples, 0.14%)</title><rect x="549.8" y="291.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (260 samples, 0.14%)</title><rect x="549.8" y="275.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (260 samples, 0.14%)</title><rect x="549.8" y="259.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (225 samples, 0.12%)</title><rect x="549.8" y="243.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (224 samples, 0.12%)</title><rect x="549.8" y="227.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (224 samples, 0.12%)</title><rect x="549.8" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (224 samples, 0.12%)</title><rect x="549.8" y="195.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (224 samples, 0.12%)</title><rect x="549.8" y="179.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.12%)</title><rect x="549.8" y="163.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.12%)</title><rect x="549.8" y="147.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (202 samples, 0.11%)</title><rect x="549.8" y="131.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (201 samples, 0.11%)</title><rect x="549.8" y="115.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (201 samples, 0.11%)</title><rect x="549.8" y="99.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (201 samples, 0.11%)</title><rect x="549.8" y="83.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (127 samples, 0.07%)</title><rect x="549.8" y="67.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.05%)</title><rect x="549.8" y="51.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="552.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (41 samples, 0.02%)</title><rect x="550.3" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.3" y="62.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.02%)</title><rect x="550.3" y="35.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="553.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (53 samples, 0.03%)</title><rect x="550.7" y="67.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (53 samples, 0.03%)</title><rect x="550.7" y="51.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,888 samples, 1.52%)</title><rect x="551.9" y="323.0" width="17.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,877 samples, 1.52%)</title><rect x="551.9" y="307.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.9" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (64 samples, 0.03%)</title><rect x="552.0" y="291.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="555.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (49 samples, 0.03%)</title><rect x="552.6" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,711 samples, 1.43%)</title><rect x="553.0" y="291.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (502 samples, 0.26%)</title><rect x="553.0" y="275.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (500 samples, 0.26%)</title><rect x="553.0" y="259.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (441 samples, 0.23%)</title><rect x="553.3" y="243.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (441 samples, 0.23%)</title><rect x="553.3" y="227.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (438 samples, 0.23%)</title><rect x="553.4" y="211.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (438 samples, 0.23%)</title><rect x="553.4" y="195.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (438 samples, 0.23%)</title><rect x="553.4" y="179.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (438 samples, 0.23%)</title><rect x="553.4" y="163.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (414 samples, 0.22%)</title><rect x="553.4" y="147.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (410 samples, 0.22%)</title><rect x="553.4" y="131.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (410 samples, 0.22%)</title><rect x="553.4" y="115.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (410 samples, 0.22%)</title><rect x="553.4" y="99.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (258 samples, 0.14%)</title><rect x="553.4" y="83.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (157 samples, 0.08%)</title><rect x="553.4" y="67.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="556.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (101 samples, 0.05%)</title><rect x="554.4" y="67.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.4" y="78.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.05%)</title><rect x="554.4" y="51.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="557.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (112 samples, 0.06%)</title><rect x="555.2" y="83.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (112 samples, 0.06%)</title><rect x="555.2" y="67.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.04%)</title><rect x="555.2" y="51.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="558.2" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (43 samples, 0.02%)</title><rect x="556.1" y="275.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (217 samples, 0.11%)</title><rect x="556.4" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (215 samples, 0.11%)</title><rect x="556.4" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (215 samples, 0.11%)</title><rect x="556.4" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (209 samples, 0.11%)</title><rect x="556.5" y="227.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (209 samples, 0.11%)</title><rect x="556.5" y="211.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (209 samples, 0.11%)</title><rect x="556.5" y="195.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.5" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (209 samples, 0.11%)</title><rect x="556.5" y="179.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (209 samples, 0.11%)</title><rect x="556.5" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (209 samples, 0.11%)</title><rect x="556.5" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (189 samples, 0.10%)</title><rect x="556.5" y="131.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="556.5" y="115.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="556.5" y="99.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (189 samples, 0.10%)</title><rect x="556.5" y="83.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (109 samples, 0.06%)</title><rect x="556.5" y="67.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.04%)</title><rect x="556.5" y="51.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="559.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (64 samples, 0.03%)</title><rect x="557.2" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (64 samples, 0.03%)</title><rect x="557.2" y="51.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.02%)</title><rect x="557.2" y="35.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="560.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,939 samples, 1.02%)</title><rect x="557.8" y="275.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,918 samples, 1.01%)</title><rect x="557.9" y="259.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,918 samples, 1.01%)</title><rect x="557.9" y="243.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,918 samples, 1.01%)</title><rect x="557.9" y="227.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,274 samples, 0.67%)</title><rect x="557.9" y="211.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (869 samples, 0.46%)</title><rect x="557.9" y="195.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="560.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (405 samples, 0.21%)</title><rect x="563.3" y="195.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.3" y="206.0"></text>
</g>
<g>
<title>byte[] (405 samples, 0.21%)</title><rect x="563.3" y="179.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="566.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (644 samples, 0.34%)</title><rect x="565.8" y="211.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (644 samples, 0.34%)</title><rect x="565.8" y="195.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.8" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (443 samples, 0.23%)</title><rect x="565.8" y="179.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="568.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (201 samples, 0.11%)</title><rect x="568.6" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.6" y="190.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.11%)</title><rect x="568.6" y="163.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="571.6" y="174.0"></text>
</g>
<g>
<title>[worker-0 tid=7388] (3,353 samples, 1.77%)</title><rect x="569.9" y="467.0" width="20.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="572.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,353 samples, 1.77%)</title><rect x="569.9" y="451.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,353 samples, 1.77%)</title><rect x="569.9" y="435.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,353 samples, 1.77%)</title><rect x="569.9" y="419.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,317 samples, 1.75%)</title><rect x="570.1" y="403.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,317 samples, 1.75%)</title><rect x="570.1" y="387.0" width="20.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,317 samples, 1.75%)</title><rect x="570.1" y="371.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,317 samples, 1.75%)</title><rect x="570.1" y="355.0" width="20.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (57 samples, 0.03%)</title><rect x="570.1" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (57 samples, 0.03%)</title><rect x="570.1" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.02%)</title><rect x="570.1" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (41 samples, 0.02%)</title><rect x="570.1" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.1" y="302.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.02%)</title><rect x="570.1" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="573.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (62 samples, 0.03%)</title><rect x="570.5" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 0.03%)</title><rect x="570.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,179 samples, 1.68%)</title><rect x="570.9" y="339.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (257 samples, 0.14%)</title><rect x="570.9" y="323.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (257 samples, 0.14%)</title><rect x="570.9" y="307.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (257 samples, 0.14%)</title><rect x="570.9" y="291.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (257 samples, 0.14%)</title><rect x="570.9" y="275.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (257 samples, 0.14%)</title><rect x="570.9" y="259.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (211 samples, 0.11%)</title><rect x="570.9" y="243.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (208 samples, 0.11%)</title><rect x="570.9" y="227.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (208 samples, 0.11%)</title><rect x="570.9" y="211.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (208 samples, 0.11%)</title><rect x="570.9" y="195.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (208 samples, 0.11%)</title><rect x="570.9" y="179.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (208 samples, 0.11%)</title><rect x="570.9" y="163.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (208 samples, 0.11%)</title><rect x="570.9" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (195 samples, 0.10%)</title><rect x="570.9" y="131.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (192 samples, 0.10%)</title><rect x="570.9" y="115.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (192 samples, 0.10%)</title><rect x="570.9" y="99.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (192 samples, 0.10%)</title><rect x="570.9" y="83.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.06%)</title><rect x="570.9" y="67.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.04%)</title><rect x="570.9" y="51.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="573.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (61 samples, 0.03%)</title><rect x="571.7" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (61 samples, 0.03%)</title><rect x="571.7" y="51.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 0.02%)</title><rect x="571.7" y="35.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="574.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (46 samples, 0.02%)</title><rect x="572.2" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (46 samples, 0.02%)</title><rect x="572.2" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (46 samples, 0.02%)</title><rect x="572.2" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (46 samples, 0.02%)</title><rect x="572.2" y="195.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="575.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (47 samples, 0.02%)</title><rect x="572.5" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (47 samples, 0.02%)</title><rect x="572.5" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (47 samples, 0.02%)</title><rect x="572.5" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (47 samples, 0.02%)</title><rect x="572.5" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,830 samples, 1.49%)</title><rect x="573.0" y="323.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,817 samples, 1.49%)</title><rect x="573.1" y="307.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.1" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (59 samples, 0.03%)</title><rect x="573.2" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="576.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (56 samples, 0.03%)</title><rect x="573.8" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,649 samples, 1.40%)</title><rect x="574.2" y="291.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (451 samples, 0.24%)</title><rect x="574.2" y="275.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (449 samples, 0.24%)</title><rect x="574.2" y="259.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (391 samples, 0.21%)</title><rect x="574.5" y="243.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (391 samples, 0.21%)</title><rect x="574.5" y="227.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (385 samples, 0.20%)</title><rect x="574.6" y="211.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (385 samples, 0.20%)</title><rect x="574.6" y="195.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (385 samples, 0.20%)</title><rect x="574.6" y="179.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (385 samples, 0.20%)</title><rect x="574.6" y="163.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (372 samples, 0.20%)</title><rect x="574.6" y="147.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (368 samples, 0.19%)</title><rect x="574.6" y="131.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (368 samples, 0.19%)</title><rect x="574.6" y="115.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (368 samples, 0.19%)</title><rect x="574.6" y="99.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (228 samples, 0.12%)</title><rect x="574.6" y="83.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (156 samples, 0.08%)</title><rect x="574.6" y="67.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="577.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (72 samples, 0.04%)</title><rect x="575.6" y="67.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.6" y="78.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.04%)</title><rect x="575.6" y="51.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="578.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (96 samples, 0.05%)</title><rect x="576.3" y="83.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (96 samples, 0.05%)</title><rect x="576.3" y="67.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.03%)</title><rect x="576.3" y="51.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="579.3" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (45 samples, 0.02%)</title><rect x="577.0" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (233 samples, 0.12%)</title><rect x="577.3" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (222 samples, 0.12%)</title><rect x="577.4" y="259.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (222 samples, 0.12%)</title><rect x="577.4" y="243.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (221 samples, 0.12%)</title><rect x="577.4" y="227.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (221 samples, 0.12%)</title><rect x="577.4" y="211.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (221 samples, 0.12%)</title><rect x="577.4" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (221 samples, 0.12%)</title><rect x="577.4" y="179.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (221 samples, 0.12%)</title><rect x="577.4" y="163.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (221 samples, 0.12%)</title><rect x="577.4" y="147.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (203 samples, 0.11%)</title><rect x="577.4" y="131.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (203 samples, 0.11%)</title><rect x="577.4" y="115.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (203 samples, 0.11%)</title><rect x="577.4" y="99.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (203 samples, 0.11%)</title><rect x="577.4" y="83.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (129 samples, 0.07%)</title><rect x="577.4" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (90 samples, 0.05%)</title><rect x="577.4" y="51.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="580.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (54 samples, 0.03%)</title><rect x="578.3" y="67.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.3" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.03%)</title><rect x="578.3" y="51.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,910 samples, 1.01%)</title><rect x="578.8" y="275.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,888 samples, 1.00%)</title><rect x="578.9" y="259.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,888 samples, 1.00%)</title><rect x="578.9" y="243.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,888 samples, 1.00%)</title><rect x="578.9" y="227.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,252 samples, 0.66%)</title><rect x="578.9" y="211.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (847 samples, 0.45%)</title><rect x="578.9" y="195.0" width="5.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="581.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (405 samples, 0.21%)</title><rect x="584.2" y="195.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.2" y="206.0"></text>
</g>
<g>
<title>byte[] (405 samples, 0.21%)</title><rect x="584.2" y="179.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="587.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (636 samples, 0.34%)</title><rect x="586.7" y="211.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (636 samples, 0.34%)</title><rect x="586.7" y="195.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (427 samples, 0.23%)</title><rect x="586.7" y="179.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="589.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (209 samples, 0.11%)</title><rect x="589.4" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.4" y="190.0"></text>
</g>
<g>
<title>byte[] (209 samples, 0.11%)</title><rect x="589.4" y="163.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="592.4" y="174.0"></text>
</g>
<g>
<title>[worker-1 tid=7371] (7,139 samples, 3.77%)</title><rect x="590.8" y="467.0" width="44.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="593.8" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (7,139 samples, 3.77%)</title><rect x="590.8" y="451.0" width="44.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.8" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,139 samples, 3.77%)</title><rect x="590.8" y="435.0" width="44.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.8" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,139 samples, 3.77%)</title><rect x="590.8" y="419.0" width="44.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.8" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (7,128 samples, 3.76%)</title><rect x="590.8" y="403.0" width="44.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.8" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (7,128 samples, 3.76%)</title><rect x="590.8" y="387.0" width="44.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.8" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,564 samples, 0.82%)</title><rect x="590.8" y="371.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,564 samples, 0.82%)</title><rect x="590.8" y="355.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,524 samples, 0.80%)</title><rect x="591.0" y="339.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (92 samples, 0.05%)</title><rect x="591.0" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (92 samples, 0.05%)</title><rect x="591.0" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (92 samples, 0.05%)</title><rect x="591.0" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (92 samples, 0.05%)</title><rect x="591.0" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (92 samples, 0.05%)</title><rect x="591.0" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (79 samples, 0.04%)</title><rect x="591.0" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (79 samples, 0.04%)</title><rect x="591.0" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (79 samples, 0.04%)</title><rect x="591.0" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (79 samples, 0.04%)</title><rect x="591.0" y="195.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (79 samples, 0.04%)</title><rect x="591.0" y="179.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.04%)</title><rect x="591.0" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.04%)</title><rect x="591.0" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (76 samples, 0.04%)</title><rect x="591.0" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (76 samples, 0.04%)</title><rect x="591.0" y="115.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (76 samples, 0.04%)</title><rect x="591.0" y="99.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (76 samples, 0.04%)</title><rect x="591.0" y="83.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.02%)</title><rect x="591.0" y="67.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,403 samples, 0.74%)</title><rect x="591.8" y="323.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,398 samples, 0.74%)</title><rect x="591.8" y="307.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,360 samples, 0.72%)</title><rect x="592.1" y="291.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (233 samples, 0.12%)</title><rect x="592.1" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (230 samples, 0.12%)</title><rect x="592.1" y="259.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (199 samples, 0.10%)</title><rect x="592.3" y="243.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (199 samples, 0.10%)</title><rect x="592.3" y="227.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (197 samples, 0.10%)</title><rect x="592.3" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (197 samples, 0.10%)</title><rect x="592.3" y="195.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (197 samples, 0.10%)</title><rect x="592.3" y="179.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (197 samples, 0.10%)</title><rect x="592.3" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (184 samples, 0.10%)</title><rect x="592.3" y="147.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (181 samples, 0.10%)</title><rect x="592.3" y="131.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (181 samples, 0.10%)</title><rect x="592.3" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (181 samples, 0.10%)</title><rect x="592.3" y="99.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.06%)</title><rect x="592.3" y="83.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.04%)</title><rect x="592.3" y="67.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="595.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (62 samples, 0.03%)</title><rect x="593.0" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (62 samples, 0.03%)</title><rect x="593.0" y="67.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (110 samples, 0.06%)</title><rect x="593.6" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (104 samples, 0.05%)</title><rect x="593.6" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (104 samples, 0.05%)</title><rect x="593.6" y="243.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (103 samples, 0.05%)</title><rect x="593.6" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (103 samples, 0.05%)</title><rect x="593.6" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (103 samples, 0.05%)</title><rect x="593.6" y="195.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.6" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (103 samples, 0.05%)</title><rect x="593.6" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (103 samples, 0.05%)</title><rect x="593.6" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (103 samples, 0.05%)</title><rect x="593.6" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (97 samples, 0.05%)</title><rect x="593.6" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (97 samples, 0.05%)</title><rect x="593.6" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (97 samples, 0.05%)</title><rect x="593.6" y="99.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (97 samples, 0.05%)</title><rect x="593.6" y="83.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.03%)</title><rect x="593.6" y="67.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,003 samples, 0.53%)</title><rect x="594.3" y="275.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (992 samples, 0.52%)</title><rect x="594.3" y="259.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (992 samples, 0.52%)</title><rect x="594.3" y="243.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (992 samples, 0.52%)</title><rect x="594.3" y="227.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (681 samples, 0.36%)</title><rect x="594.3" y="211.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (457 samples, 0.24%)</title><rect x="594.3" y="195.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="597.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (224 samples, 0.12%)</title><rect x="597.2" y="195.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.2" y="206.0"></text>
</g>
<g>
<title>byte[] (224 samples, 0.12%)</title><rect x="597.2" y="179.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="600.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (311 samples, 0.16%)</title><rect x="598.6" y="211.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (311 samples, 0.16%)</title><rect x="598.6" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (209 samples, 0.11%)</title><rect x="598.6" y="179.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="601.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (102 samples, 0.05%)</title><rect x="599.9" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.9" y="190.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.05%)</title><rect x="599.9" y="163.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="602.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,564 samples, 2.93%)</title><rect x="600.6" y="371.0" width="34.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.6" y="382.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.02%)</title><rect x="600.6" y="355.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (42 samples, 0.02%)</title><rect x="600.6" y="339.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.02%)</title><rect x="600.6" y="323.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,489 samples, 2.90%)</title><rect x="600.8" y="355.0" width="34.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.8" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,489 samples, 2.90%)</title><rect x="600.8" y="339.0" width="34.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.8" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,312 samples, 2.80%)</title><rect x="600.9" y="323.0" width="33.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.9" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,105 samples, 0.58%)</title><rect x="600.9" y="307.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="603.9" y="318.0"></text>
</g>
<g>
<title>byte[] (4,207 samples, 2.22%)</title><rect x="607.8" y="307.0" width="26.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="610.8" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (141 samples, 0.07%)</title><rect x="634.0" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (115 samples, 0.06%)</title><rect x="634.0" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 0.06%)</title><rect x="634.0" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (115 samples, 0.06%)</title><rect x="634.0" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.0" y="286.0"></text>
</g>
<g>
<title>char[] (81 samples, 0.04%)</title><rect x="634.0" y="259.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="637.0" y="270.0"></text>
</g>
<g>
<title>[worker-1 tid=7379] (3,375 samples, 1.78%)</title><rect x="635.2" y="467.0" width="21.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="638.2" y="478.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (3,375 samples, 1.78%)</title><rect x="635.2" y="451.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.2" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,375 samples, 1.78%)</title><rect x="635.2" y="435.0" width="21.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.2" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,375 samples, 1.78%)</title><rect x="635.2" y="419.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.2" y="430.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,358 samples, 1.77%)</title><rect x="635.3" y="403.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,358 samples, 1.77%)</title><rect x="635.3" y="387.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,358 samples, 1.77%)</title><rect x="635.3" y="371.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,358 samples, 1.77%)</title><rect x="635.3" y="355.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (59 samples, 0.03%)</title><rect x="635.3" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (59 samples, 0.03%)</title><rect x="635.3" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (54 samples, 0.03%)</title><rect x="635.7" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (41 samples, 0.02%)</title><rect x="635.8" y="323.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,235 samples, 1.71%)</title><rect x="636.0" y="339.0" width="20.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (256 samples, 0.14%)</title><rect x="636.0" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (256 samples, 0.14%)</title><rect x="636.0" y="307.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (256 samples, 0.14%)</title><rect x="636.0" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (256 samples, 0.14%)</title><rect x="636.0" y="275.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (256 samples, 0.14%)</title><rect x="636.0" y="259.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (212 samples, 0.11%)</title><rect x="636.0" y="243.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (208 samples, 0.11%)</title><rect x="636.0" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (208 samples, 0.11%)</title><rect x="636.0" y="211.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (208 samples, 0.11%)</title><rect x="636.0" y="195.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (208 samples, 0.11%)</title><rect x="636.0" y="179.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (208 samples, 0.11%)</title><rect x="636.0" y="163.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (208 samples, 0.11%)</title><rect x="636.0" y="147.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (192 samples, 0.10%)</title><rect x="636.0" y="131.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (192 samples, 0.10%)</title><rect x="636.0" y="115.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (192 samples, 0.10%)</title><rect x="636.0" y="99.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (192 samples, 0.10%)</title><rect x="636.0" y="83.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (110 samples, 0.06%)</title><rect x="636.0" y="67.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.04%)</title><rect x="636.0" y="51.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="639.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.02%)</title><rect x="636.5" y="51.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.5" y="62.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.02%)</title><rect x="636.5" y="35.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="639.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (65 samples, 0.03%)</title><rect x="636.8" y="67.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.8" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (65 samples, 0.03%)</title><rect x="636.8" y="51.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.8" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.02%)</title><rect x="636.8" y="35.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="639.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (44 samples, 0.02%)</title><rect x="637.3" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (44 samples, 0.02%)</title><rect x="637.3" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.02%)</title><rect x="637.3" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.02%)</title><rect x="637.3" y="195.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="640.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (48 samples, 0.03%)</title><rect x="637.6" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (48 samples, 0.03%)</title><rect x="637.6" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (48 samples, 0.03%)</title><rect x="637.6" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (48 samples, 0.03%)</title><rect x="637.6" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,887 samples, 1.52%)</title><rect x="638.2" y="323.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,875 samples, 1.52%)</title><rect x="638.3" y="307.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.3" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (60 samples, 0.03%)</title><rect x="638.4" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="641.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (43 samples, 0.02%)</title><rect x="639.0" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,714 samples, 1.43%)</title><rect x="639.3" y="291.0" width="16.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (504 samples, 0.27%)</title><rect x="639.3" y="275.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (496 samples, 0.26%)</title><rect x="639.3" y="259.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (444 samples, 0.23%)</title><rect x="639.6" y="243.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (444 samples, 0.23%)</title><rect x="639.6" y="227.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (440 samples, 0.23%)</title><rect x="639.7" y="211.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (440 samples, 0.23%)</title><rect x="639.7" y="195.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (440 samples, 0.23%)</title><rect x="639.7" y="179.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (440 samples, 0.23%)</title><rect x="639.7" y="163.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (424 samples, 0.22%)</title><rect x="639.7" y="147.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (420 samples, 0.22%)</title><rect x="639.7" y="131.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (420 samples, 0.22%)</title><rect x="639.7" y="115.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (420 samples, 0.22%)</title><rect x="639.7" y="99.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (241 samples, 0.13%)</title><rect x="639.7" y="83.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (165 samples, 0.09%)</title><rect x="639.7" y="67.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="642.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (76 samples, 0.04%)</title><rect x="640.7" y="67.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.7" y="78.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.04%)</title><rect x="640.7" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="643.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (133 samples, 0.07%)</title><rect x="641.5" y="83.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (133 samples, 0.07%)</title><rect x="641.5" y="67.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (90 samples, 0.05%)</title><rect x="641.5" y="51.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="644.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.02%)</title><rect x="642.0" y="51.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.0" y="62.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.02%)</title><rect x="642.0" y="35.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="645.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (252 samples, 0.13%)</title><rect x="642.7" y="275.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (240 samples, 0.13%)</title><rect x="642.7" y="259.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (240 samples, 0.13%)</title><rect x="642.7" y="243.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (236 samples, 0.12%)</title><rect x="642.8" y="227.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (236 samples, 0.12%)</title><rect x="642.8" y="211.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (236 samples, 0.12%)</title><rect x="642.8" y="195.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (236 samples, 0.12%)</title><rect x="642.8" y="179.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (236 samples, 0.12%)</title><rect x="642.8" y="163.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (236 samples, 0.12%)</title><rect x="642.8" y="147.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (215 samples, 0.11%)</title><rect x="642.8" y="131.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (215 samples, 0.11%)</title><rect x="642.8" y="115.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (215 samples, 0.11%)</title><rect x="642.8" y="99.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (215 samples, 0.11%)</title><rect x="642.8" y="83.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (135 samples, 0.07%)</title><rect x="642.8" y="67.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.04%)</title><rect x="642.8" y="51.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="645.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.03%)</title><rect x="643.2" y="51.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.2" y="62.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.03%)</title><rect x="643.2" y="35.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="646.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (60 samples, 0.03%)</title><rect x="643.7" y="67.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (60 samples, 0.03%)</title><rect x="643.7" y="51.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,915 samples, 1.01%)</title><rect x="644.2" y="275.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,902 samples, 1.00%)</title><rect x="644.3" y="259.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,902 samples, 1.00%)</title><rect x="644.3" y="243.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,902 samples, 1.00%)</title><rect x="644.3" y="227.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,242 samples, 0.66%)</title><rect x="644.3" y="211.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (838 samples, 0.44%)</title><rect x="644.3" y="195.0" width="5.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="647.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (404 samples, 0.21%)</title><rect x="649.5" y="195.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.5" y="206.0"></text>
</g>
<g>
<title>byte[] (404 samples, 0.21%)</title><rect x="649.5" y="179.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="652.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (660 samples, 0.35%)</title><rect x="652.0" y="211.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (660 samples, 0.35%)</title><rect x="652.0" y="195.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (440 samples, 0.23%)</title><rect x="652.0" y="179.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="655.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (220 samples, 0.12%)</title><rect x="654.8" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.8" y="190.0"></text>
</g>
<g>
<title>byte[] (220 samples, 0.12%)</title><rect x="654.8" y="163.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="657.8" y="174.0"></text>
</g>
<g>
<title>[worker-1 tid=7389] (3,343 samples, 1.76%)</title><rect x="656.2" y="467.0" width="20.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="659.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,343 samples, 1.76%)</title><rect x="656.2" y="451.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,343 samples, 1.76%)</title><rect x="656.2" y="435.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,343 samples, 1.76%)</title><rect x="656.2" y="419.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,322 samples, 1.75%)</title><rect x="656.3" y="403.0" width="20.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,322 samples, 1.75%)</title><rect x="656.3" y="387.0" width="20.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,322 samples, 1.75%)</title><rect x="656.3" y="371.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,322 samples, 1.75%)</title><rect x="656.3" y="355.0" width="20.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (54 samples, 0.03%)</title><rect x="656.3" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (54 samples, 0.03%)</title><rect x="656.3" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (41 samples, 0.02%)</title><rect x="656.7" y="339.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,206 samples, 1.69%)</title><rect x="656.9" y="339.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (270 samples, 0.14%)</title><rect x="656.9" y="323.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (270 samples, 0.14%)</title><rect x="656.9" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (270 samples, 0.14%)</title><rect x="656.9" y="291.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (270 samples, 0.14%)</title><rect x="656.9" y="275.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (270 samples, 0.14%)</title><rect x="656.9" y="259.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (222 samples, 0.12%)</title><rect x="656.9" y="243.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (219 samples, 0.12%)</title><rect x="657.0" y="227.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (219 samples, 0.12%)</title><rect x="657.0" y="211.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (219 samples, 0.12%)</title><rect x="657.0" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (219 samples, 0.12%)</title><rect x="657.0" y="179.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (219 samples, 0.12%)</title><rect x="657.0" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (219 samples, 0.12%)</title><rect x="657.0" y="147.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (201 samples, 0.11%)</title><rect x="657.0" y="131.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (199 samples, 0.10%)</title><rect x="657.0" y="115.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (199 samples, 0.10%)</title><rect x="657.0" y="99.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (199 samples, 0.10%)</title><rect x="657.0" y="83.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (119 samples, 0.06%)</title><rect x="657.0" y="67.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (73 samples, 0.04%)</title><rect x="657.0" y="51.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="660.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (46 samples, 0.02%)</title><rect x="657.4" y="51.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.4" y="62.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.02%)</title><rect x="657.4" y="35.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="660.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (64 samples, 0.03%)</title><rect x="657.8" y="67.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.8" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (64 samples, 0.03%)</title><rect x="657.8" y="51.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.8" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.02%)</title><rect x="657.8" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="660.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (48 samples, 0.03%)</title><rect x="658.3" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (48 samples, 0.03%)</title><rect x="658.3" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.3" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (48 samples, 0.03%)</title><rect x="658.3" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.03%)</title><rect x="658.3" y="195.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="661.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (45 samples, 0.02%)</title><rect x="658.6" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (45 samples, 0.02%)</title><rect x="658.6" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (45 samples, 0.02%)</title><rect x="658.6" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (45 samples, 0.02%)</title><rect x="658.6" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,847 samples, 1.50%)</title><rect x="659.2" y="323.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,835 samples, 1.50%)</title><rect x="659.2" y="307.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.2" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (60 samples, 0.03%)</title><rect x="659.3" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="662.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,672 samples, 1.41%)</title><rect x="660.3" y="291.0" width="16.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (487 samples, 0.26%)</title><rect x="660.3" y="275.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (476 samples, 0.25%)</title><rect x="660.3" y="259.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (423 samples, 0.22%)</title><rect x="660.7" y="243.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (423 samples, 0.22%)</title><rect x="660.7" y="227.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (417 samples, 0.22%)</title><rect x="660.7" y="211.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (417 samples, 0.22%)</title><rect x="660.7" y="195.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (417 samples, 0.22%)</title><rect x="660.7" y="179.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (417 samples, 0.22%)</title><rect x="660.7" y="163.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (398 samples, 0.21%)</title><rect x="660.7" y="147.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (396 samples, 0.21%)</title><rect x="660.7" y="131.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (396 samples, 0.21%)</title><rect x="660.7" y="115.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (396 samples, 0.21%)</title><rect x="660.7" y="99.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (241 samples, 0.13%)</title><rect x="660.7" y="83.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (160 samples, 0.08%)</title><rect x="660.7" y="67.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="663.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (81 samples, 0.04%)</title><rect x="661.7" y="67.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.7" y="78.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.04%)</title><rect x="661.7" y="51.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="664.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (122 samples, 0.06%)</title><rect x="662.4" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (122 samples, 0.06%)</title><rect x="662.4" y="67.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.04%)</title><rect x="662.4" y="51.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="665.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (46 samples, 0.02%)</title><rect x="662.9" y="51.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.9" y="62.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.02%)</title><rect x="662.9" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="665.9" y="46.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (49 samples, 0.03%)</title><rect x="663.3" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (242 samples, 0.13%)</title><rect x="663.6" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (233 samples, 0.12%)</title><rect x="663.7" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (233 samples, 0.12%)</title><rect x="663.7" y="243.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (228 samples, 0.12%)</title><rect x="663.7" y="227.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (228 samples, 0.12%)</title><rect x="663.7" y="211.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (228 samples, 0.12%)</title><rect x="663.7" y="195.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (228 samples, 0.12%)</title><rect x="663.7" y="179.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (228 samples, 0.12%)</title><rect x="663.7" y="163.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (228 samples, 0.12%)</title><rect x="663.7" y="147.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (200 samples, 0.11%)</title><rect x="663.7" y="131.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (200 samples, 0.11%)</title><rect x="663.7" y="115.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (200 samples, 0.11%)</title><rect x="663.7" y="99.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (200 samples, 0.11%)</title><rect x="663.7" y="83.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (127 samples, 0.07%)</title><rect x="663.7" y="67.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (79 samples, 0.04%)</title><rect x="663.7" y="51.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="666.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (48 samples, 0.03%)</title><rect x="664.2" y="51.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.2" y="62.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.03%)</title><rect x="664.2" y="35.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="667.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (52 samples, 0.03%)</title><rect x="664.6" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.6" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.03%)</title><rect x="664.6" y="51.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,889 samples, 1.00%)</title><rect x="665.1" y="275.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,873 samples, 0.99%)</title><rect x="665.2" y="259.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,873 samples, 0.99%)</title><rect x="665.2" y="243.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,873 samples, 0.99%)</title><rect x="665.2" y="227.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,247 samples, 0.66%)</title><rect x="665.2" y="211.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (855 samples, 0.45%)</title><rect x="665.2" y="195.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="668.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (392 samples, 0.21%)</title><rect x="670.6" y="195.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.6" y="206.0"></text>
</g>
<g>
<title>byte[] (392 samples, 0.21%)</title><rect x="670.6" y="179.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="673.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (626 samples, 0.33%)</title><rect x="673.0" y="211.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (626 samples, 0.33%)</title><rect x="673.0" y="195.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (402 samples, 0.21%)</title><rect x="673.0" y="179.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="676.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (224 samples, 0.12%)</title><rect x="675.5" y="179.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.5" y="190.0"></text>
</g>
<g>
<title>byte[] (224 samples, 0.12%)</title><rect x="675.5" y="163.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="678.5" y="174.0"></text>
</g>
<g>
<title>[worker-2 tid=7369] (7,006 samples, 3.70%)</title><rect x="677.0" y="467.0" width="43.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="680.0" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (7,006 samples, 3.70%)</title><rect x="677.0" y="451.0" width="43.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.0" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,006 samples, 3.70%)</title><rect x="677.0" y="435.0" width="43.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.0" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,006 samples, 3.70%)</title><rect x="677.0" y="419.0" width="43.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.0" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (6,993 samples, 3.69%)</title><rect x="677.1" y="403.0" width="43.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.1" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (6,993 samples, 3.69%)</title><rect x="677.1" y="387.0" width="43.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.1" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,546 samples, 0.82%)</title><rect x="677.1" y="371.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,546 samples, 0.82%)</title><rect x="677.1" y="355.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,507 samples, 0.79%)</title><rect x="677.3" y="339.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (85 samples, 0.04%)</title><rect x="677.3" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (85 samples, 0.04%)</title><rect x="677.3" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (85 samples, 0.04%)</title><rect x="677.3" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (85 samples, 0.04%)</title><rect x="677.3" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (85 samples, 0.04%)</title><rect x="677.3" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (79 samples, 0.04%)</title><rect x="677.3" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (79 samples, 0.04%)</title><rect x="677.3" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (79 samples, 0.04%)</title><rect x="677.3" y="211.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (79 samples, 0.04%)</title><rect x="677.3" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.3" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (79 samples, 0.04%)</title><rect x="677.3" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.04%)</title><rect x="677.3" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.04%)</title><rect x="677.3" y="147.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (70 samples, 0.04%)</title><rect x="677.3" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (70 samples, 0.04%)</title><rect x="677.3" y="115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (70 samples, 0.04%)</title><rect x="677.3" y="99.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (70 samples, 0.04%)</title><rect x="677.3" y="83.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.02%)</title><rect x="677.3" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,389 samples, 0.73%)</title><rect x="678.1" y="323.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,383 samples, 0.73%)</title><rect x="678.1" y="307.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,344 samples, 0.71%)</title><rect x="678.3" y="291.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (240 samples, 0.13%)</title><rect x="678.3" y="275.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (235 samples, 0.12%)</title><rect x="678.4" y="259.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (204 samples, 0.11%)</title><rect x="678.6" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (204 samples, 0.11%)</title><rect x="678.6" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (202 samples, 0.11%)</title><rect x="678.6" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (202 samples, 0.11%)</title><rect x="678.6" y="195.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (202 samples, 0.11%)</title><rect x="678.6" y="179.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (202 samples, 0.11%)</title><rect x="678.6" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (184 samples, 0.10%)</title><rect x="678.6" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (182 samples, 0.10%)</title><rect x="678.6" y="131.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (182 samples, 0.10%)</title><rect x="678.6" y="115.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (182 samples, 0.10%)</title><rect x="678.6" y="99.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (109 samples, 0.06%)</title><rect x="678.6" y="83.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.04%)</title><rect x="678.6" y="67.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="681.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (49 samples, 0.03%)</title><rect x="679.4" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (49 samples, 0.03%)</title><rect x="679.4" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (97 samples, 0.05%)</title><rect x="679.9" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (96 samples, 0.05%)</title><rect x="679.9" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (96 samples, 0.05%)</title><rect x="679.9" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (92 samples, 0.05%)</title><rect x="679.9" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (92 samples, 0.05%)</title><rect x="679.9" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (92 samples, 0.05%)</title><rect x="679.9" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (92 samples, 0.05%)</title><rect x="679.9" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (92 samples, 0.05%)</title><rect x="679.9" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (92 samples, 0.05%)</title><rect x="679.9" y="147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (87 samples, 0.05%)</title><rect x="679.9" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (87 samples, 0.05%)</title><rect x="679.9" y="115.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (87 samples, 0.05%)</title><rect x="679.9" y="99.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (87 samples, 0.05%)</title><rect x="679.9" y="83.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.03%)</title><rect x="679.9" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (993 samples, 0.52%)</title><rect x="680.5" y="275.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (986 samples, 0.52%)</title><rect x="680.6" y="259.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (986 samples, 0.52%)</title><rect x="680.6" y="243.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (986 samples, 0.52%)</title><rect x="680.6" y="227.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (666 samples, 0.35%)</title><rect x="680.6" y="211.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (451 samples, 0.24%)</title><rect x="680.6" y="195.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="683.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (215 samples, 0.11%)</title><rect x="683.4" y="195.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.4" y="206.0"></text>
</g>
<g>
<title>byte[] (215 samples, 0.11%)</title><rect x="683.4" y="179.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="686.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (320 samples, 0.17%)</title><rect x="684.7" y="211.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (320 samples, 0.17%)</title><rect x="684.7" y="195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (221 samples, 0.12%)</title><rect x="684.7" y="179.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="687.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (99 samples, 0.05%)</title><rect x="686.1" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.1" y="190.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.05%)</title><rect x="686.1" y="163.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="689.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,447 samples, 2.87%)</title><rect x="686.7" y="371.0" width="33.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.7" y="382.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.02%)</title><rect x="686.7" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (43 samples, 0.02%)</title><rect x="686.7" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.02%)</title><rect x="686.7" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,387 samples, 2.84%)</title><rect x="687.0" y="355.0" width="33.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.0" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,387 samples, 2.84%)</title><rect x="687.0" y="339.0" width="33.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.0" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,227 samples, 2.76%)</title><rect x="687.0" y="323.0" width="32.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.0" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,168 samples, 0.62%)</title><rect x="687.0" y="307.0" width="7.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="690.0" y="318.0"></text>
</g>
<g>
<title>byte[] (4,059 samples, 2.14%)</title><rect x="694.3" y="307.0" width="25.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="697.3" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (125 samples, 0.07%)</title><rect x="719.6" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (102 samples, 0.05%)</title><rect x="719.6" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 0.05%)</title><rect x="719.6" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 0.05%)</title><rect x="719.6" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.6" y="286.0"></text>
</g>
<g>
<title>char[] (65 samples, 0.03%)</title><rect x="719.6" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="722.6" y="270.0"></text>
</g>
<g>
<title>[worker-2 tid=7376] (3,376 samples, 1.78%)</title><rect x="720.6" y="467.0" width="21.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="723.6" y="478.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (3,376 samples, 1.78%)</title><rect x="720.6" y="451.0" width="21.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,376 samples, 1.78%)</title><rect x="720.6" y="435.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,376 samples, 1.78%)</title><rect x="720.6" y="419.0" width="21.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.6" y="430.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,354 samples, 1.77%)</title><rect x="720.8" y="403.0" width="20.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,354 samples, 1.77%)</title><rect x="720.8" y="387.0" width="20.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,354 samples, 1.77%)</title><rect x="720.8" y="371.0" width="20.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,354 samples, 1.77%)</title><rect x="720.8" y="355.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (43 samples, 0.02%)</title><rect x="720.8" y="339.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (43 samples, 0.02%)</title><rect x="720.8" y="323.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (55 samples, 0.03%)</title><rect x="721.0" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (47 samples, 0.02%)</title><rect x="721.1" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,250 samples, 1.71%)</title><rect x="721.4" y="339.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (247 samples, 0.13%)</title><rect x="721.4" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (247 samples, 0.13%)</title><rect x="721.4" y="307.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (247 samples, 0.13%)</title><rect x="721.4" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (247 samples, 0.13%)</title><rect x="721.4" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (247 samples, 0.13%)</title><rect x="721.4" y="259.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (207 samples, 0.11%)</title><rect x="721.4" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (199 samples, 0.10%)</title><rect x="721.4" y="227.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (199 samples, 0.10%)</title><rect x="721.4" y="211.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (199 samples, 0.10%)</title><rect x="721.4" y="195.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (199 samples, 0.10%)</title><rect x="721.4" y="179.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (199 samples, 0.10%)</title><rect x="721.4" y="163.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (199 samples, 0.10%)</title><rect x="721.4" y="147.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (184 samples, 0.10%)</title><rect x="721.4" y="131.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (183 samples, 0.10%)</title><rect x="721.4" y="115.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (183 samples, 0.10%)</title><rect x="721.4" y="99.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (183 samples, 0.10%)</title><rect x="721.4" y="83.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (119 samples, 0.06%)</title><rect x="721.4" y="67.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.04%)</title><rect x="721.4" y="51.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="724.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.02%)</title><rect x="721.9" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.9" y="62.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="721.9" y="35.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (47 samples, 0.02%)</title><rect x="722.3" y="67.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.3" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 0.02%)</title><rect x="722.3" y="51.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.3" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (48 samples, 0.03%)</title><rect x="722.9" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (48 samples, 0.03%)</title><rect x="722.9" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (48 samples, 0.03%)</title><rect x="722.9" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (48 samples, 0.03%)</title><rect x="722.9" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,923 samples, 1.54%)</title><rect x="723.4" y="323.0" width="18.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,915 samples, 1.54%)</title><rect x="723.5" y="307.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.5" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (60 samples, 0.03%)</title><rect x="723.5" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="726.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (46 samples, 0.02%)</title><rect x="724.2" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,753 samples, 1.45%)</title><rect x="724.5" y="291.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (477 samples, 0.25%)</title><rect x="724.5" y="275.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (469 samples, 0.25%)</title><rect x="724.5" y="259.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (416 samples, 0.22%)</title><rect x="724.8" y="243.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (416 samples, 0.22%)</title><rect x="724.8" y="227.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (415 samples, 0.22%)</title><rect x="724.8" y="211.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (415 samples, 0.22%)</title><rect x="724.8" y="195.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (415 samples, 0.22%)</title><rect x="724.8" y="179.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (415 samples, 0.22%)</title><rect x="724.8" y="163.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (395 samples, 0.21%)</title><rect x="724.8" y="147.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (391 samples, 0.21%)</title><rect x="724.9" y="131.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (391 samples, 0.21%)</title><rect x="724.9" y="115.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (391 samples, 0.21%)</title><rect x="724.9" y="99.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="727.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (211 samples, 0.11%)</title><rect x="724.9" y="83.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (130 samples, 0.07%)</title><rect x="724.9" y="67.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="727.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (81 samples, 0.04%)</title><rect x="725.7" y="67.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.7" y="78.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.04%)</title><rect x="725.7" y="51.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="728.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (134 samples, 0.07%)</title><rect x="726.5" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (134 samples, 0.07%)</title><rect x="726.5" y="67.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (90 samples, 0.05%)</title><rect x="726.5" y="51.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="729.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (44 samples, 0.02%)</title><rect x="727.0" y="51.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.0" y="62.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.02%)</title><rect x="727.0" y="35.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="730.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (225 samples, 0.12%)</title><rect x="727.7" y="275.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (218 samples, 0.11%)</title><rect x="727.8" y="259.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (218 samples, 0.11%)</title><rect x="727.8" y="243.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (217 samples, 0.11%)</title><rect x="727.8" y="227.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (217 samples, 0.11%)</title><rect x="727.8" y="211.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (217 samples, 0.11%)</title><rect x="727.8" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (217 samples, 0.11%)</title><rect x="727.8" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (217 samples, 0.11%)</title><rect x="727.8" y="163.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (217 samples, 0.11%)</title><rect x="727.8" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (199 samples, 0.10%)</title><rect x="727.8" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (199 samples, 0.10%)</title><rect x="727.8" y="115.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (199 samples, 0.10%)</title><rect x="727.8" y="99.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (199 samples, 0.10%)</title><rect x="727.8" y="83.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (127 samples, 0.07%)</title><rect x="727.8" y="67.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.05%)</title><rect x="727.8" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="730.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (41 samples, 0.02%)</title><rect x="728.3" y="51.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.3" y="62.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.02%)</title><rect x="728.3" y="35.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="731.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (52 samples, 0.03%)</title><rect x="728.7" y="67.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.03%)</title><rect x="728.7" y="51.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (2,005 samples, 1.06%)</title><rect x="729.1" y="275.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,981 samples, 1.04%)</title><rect x="729.3" y="259.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,981 samples, 1.04%)</title><rect x="729.3" y="243.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,981 samples, 1.04%)</title><rect x="729.3" y="227.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,350 samples, 0.71%)</title><rect x="729.3" y="211.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (901 samples, 0.48%)</title><rect x="729.3" y="195.0" width="5.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="732.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (449 samples, 0.24%)</title><rect x="734.9" y="195.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.9" y="206.0"></text>
</g>
<g>
<title>byte[] (449 samples, 0.24%)</title><rect x="734.9" y="179.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="737.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (631 samples, 0.33%)</title><rect x="737.7" y="211.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (631 samples, 0.33%)</title><rect x="737.7" y="195.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (429 samples, 0.23%)</title><rect x="737.7" y="179.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="740.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (202 samples, 0.11%)</title><rect x="740.3" y="179.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.3" y="190.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.11%)</title><rect x="740.3" y="163.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="743.3" y="174.0"></text>
</g>
<g>
<title>[worker-2 tid=7383] (3,343 samples, 1.76%)</title><rect x="741.6" y="467.0" width="20.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="744.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,343 samples, 1.76%)</title><rect x="741.6" y="451.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,343 samples, 1.76%)</title><rect x="741.6" y="435.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,343 samples, 1.76%)</title><rect x="741.6" y="419.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,318 samples, 1.75%)</title><rect x="741.8" y="403.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,318 samples, 1.75%)</title><rect x="741.8" y="387.0" width="20.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,318 samples, 1.75%)</title><rect x="741.8" y="371.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,318 samples, 1.75%)</title><rect x="741.8" y="355.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (70 samples, 0.04%)</title><rect x="741.8" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (70 samples, 0.04%)</title><rect x="741.8" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (42 samples, 0.02%)</title><rect x="741.8" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.8" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (42 samples, 0.02%)</title><rect x="741.8" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.8" y="302.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.02%)</title><rect x="741.8" y="275.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="744.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (49 samples, 0.03%)</title><rect x="742.2" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,182 samples, 1.68%)</title><rect x="742.5" y="339.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (240 samples, 0.13%)</title><rect x="742.5" y="323.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (240 samples, 0.13%)</title><rect x="742.5" y="307.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (240 samples, 0.13%)</title><rect x="742.5" y="291.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (240 samples, 0.13%)</title><rect x="742.5" y="275.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (240 samples, 0.13%)</title><rect x="742.5" y="259.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (211 samples, 0.11%)</title><rect x="742.5" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (208 samples, 0.11%)</title><rect x="742.5" y="227.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (208 samples, 0.11%)</title><rect x="742.5" y="211.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (208 samples, 0.11%)</title><rect x="742.5" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.5" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (208 samples, 0.11%)</title><rect x="742.5" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (208 samples, 0.11%)</title><rect x="742.5" y="163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (208 samples, 0.11%)</title><rect x="742.5" y="147.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (190 samples, 0.10%)</title><rect x="742.5" y="131.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (190 samples, 0.10%)</title><rect x="742.5" y="115.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (190 samples, 0.10%)</title><rect x="742.5" y="99.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (190 samples, 0.10%)</title><rect x="742.5" y="83.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (118 samples, 0.06%)</title><rect x="742.5" y="67.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.04%)</title><rect x="742.5" y="51.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="745.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (51 samples, 0.03%)</title><rect x="743.0" y="51.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.0" y="62.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.03%)</title><rect x="743.0" y="35.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="746.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (51 samples, 0.03%)</title><rect x="743.4" y="67.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.4" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (51 samples, 0.03%)</title><rect x="743.4" y="51.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.4" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (52 samples, 0.03%)</title><rect x="744.0" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (52 samples, 0.03%)</title><rect x="744.0" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (52 samples, 0.03%)</title><rect x="744.0" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (52 samples, 0.03%)</title><rect x="744.0" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,841 samples, 1.50%)</title><rect x="744.7" y="323.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,832 samples, 1.49%)</title><rect x="744.7" y="307.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.7" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (71 samples, 0.04%)</title><rect x="744.8" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="747.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (60 samples, 0.03%)</title><rect x="745.5" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,651 samples, 1.40%)</title><rect x="745.8" y="291.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (496 samples, 0.26%)</title><rect x="745.8" y="275.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (485 samples, 0.26%)</title><rect x="745.9" y="259.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (417 samples, 0.22%)</title><rect x="746.3" y="243.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (417 samples, 0.22%)</title><rect x="746.3" y="227.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (417 samples, 0.22%)</title><rect x="746.3" y="211.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (417 samples, 0.22%)</title><rect x="746.3" y="195.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (417 samples, 0.22%)</title><rect x="746.3" y="179.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (417 samples, 0.22%)</title><rect x="746.3" y="163.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (397 samples, 0.21%)</title><rect x="746.3" y="147.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (395 samples, 0.21%)</title><rect x="746.3" y="131.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (395 samples, 0.21%)</title><rect x="746.3" y="115.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (395 samples, 0.21%)</title><rect x="746.3" y="99.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (243 samples, 0.13%)</title><rect x="746.3" y="83.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (146 samples, 0.08%)</title><rect x="746.3" y="67.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="749.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (97 samples, 0.05%)</title><rect x="747.2" y="67.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.2" y="78.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.05%)</title><rect x="747.2" y="51.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="750.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (112 samples, 0.06%)</title><rect x="748.1" y="83.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (112 samples, 0.06%)</title><rect x="748.1" y="67.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.04%)</title><rect x="748.1" y="51.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="751.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.02%)</title><rect x="748.5" y="51.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.5" y="62.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="748.5" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="751.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (242 samples, 0.13%)</title><rect x="749.2" y="275.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (228 samples, 0.12%)</title><rect x="749.3" y="259.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (228 samples, 0.12%)</title><rect x="749.3" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (226 samples, 0.12%)</title><rect x="749.3" y="227.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (226 samples, 0.12%)</title><rect x="749.3" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (226 samples, 0.12%)</title><rect x="749.3" y="195.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.3" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (226 samples, 0.12%)</title><rect x="749.3" y="179.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="749.3" y="163.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="749.3" y="147.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (206 samples, 0.11%)</title><rect x="749.3" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (206 samples, 0.11%)</title><rect x="749.3" y="115.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (206 samples, 0.11%)</title><rect x="749.3" y="99.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (206 samples, 0.11%)</title><rect x="749.3" y="83.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (117 samples, 0.06%)</title><rect x="749.3" y="67.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.04%)</title><rect x="749.3" y="51.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="752.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (73 samples, 0.04%)</title><rect x="750.1" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.1" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (73 samples, 0.04%)</title><rect x="750.1" y="51.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.03%)</title><rect x="750.1" y="35.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="753.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,874 samples, 0.99%)</title><rect x="750.7" y="275.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,849 samples, 0.98%)</title><rect x="750.8" y="259.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,849 samples, 0.98%)</title><rect x="750.8" y="243.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,849 samples, 0.98%)</title><rect x="750.8" y="227.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,225 samples, 0.65%)</title><rect x="750.8" y="211.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (823 samples, 0.43%)</title><rect x="750.8" y="195.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="753.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (402 samples, 0.21%)</title><rect x="755.9" y="195.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.9" y="206.0"></text>
</g>
<g>
<title>byte[] (402 samples, 0.21%)</title><rect x="755.9" y="179.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="758.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (624 samples, 0.33%)</title><rect x="758.5" y="211.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (624 samples, 0.33%)</title><rect x="758.5" y="195.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (408 samples, 0.22%)</title><rect x="758.5" y="179.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="761.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (216 samples, 0.11%)</title><rect x="761.0" y="179.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.0" y="190.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.11%)</title><rect x="761.0" y="163.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="764.0" y="174.0"></text>
</g>
<g>
<title>[worker-3 tid=7366] (6,905 samples, 3.64%)</title><rect x="762.4" y="467.0" width="43.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="765.4" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (6,905 samples, 3.64%)</title><rect x="762.4" y="451.0" width="43.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.4" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,905 samples, 3.64%)</title><rect x="762.4" y="435.0" width="43.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.4" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,905 samples, 3.64%)</title><rect x="762.4" y="419.0" width="43.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.4" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (6,894 samples, 3.64%)</title><rect x="762.5" y="403.0" width="42.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.5" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (6,894 samples, 3.64%)</title><rect x="762.5" y="387.0" width="42.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.5" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,597 samples, 0.84%)</title><rect x="762.5" y="371.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,597 samples, 0.84%)</title><rect x="762.5" y="355.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,559 samples, 0.82%)</title><rect x="762.7" y="339.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (98 samples, 0.05%)</title><rect x="762.7" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (98 samples, 0.05%)</title><rect x="762.7" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (98 samples, 0.05%)</title><rect x="762.7" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (98 samples, 0.05%)</title><rect x="762.7" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (98 samples, 0.05%)</title><rect x="762.7" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (82 samples, 0.04%)</title><rect x="762.7" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (82 samples, 0.04%)</title><rect x="762.7" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (82 samples, 0.04%)</title><rect x="762.7" y="211.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (82 samples, 0.04%)</title><rect x="762.7" y="195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (82 samples, 0.04%)</title><rect x="762.7" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (82 samples, 0.04%)</title><rect x="762.7" y="163.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (82 samples, 0.04%)</title><rect x="762.7" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (74 samples, 0.04%)</title><rect x="762.7" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (74 samples, 0.04%)</title><rect x="762.7" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (74 samples, 0.04%)</title><rect x="762.7" y="99.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (74 samples, 0.04%)</title><rect x="762.7" y="83.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.02%)</title><rect x="762.7" y="67.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,438 samples, 0.76%)</title><rect x="763.5" y="323.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,435 samples, 0.76%)</title><rect x="763.5" y="307.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,390 samples, 0.73%)</title><rect x="763.8" y="291.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (219 samples, 0.12%)</title><rect x="763.8" y="275.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (217 samples, 0.11%)</title><rect x="763.8" y="259.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (191 samples, 0.10%)</title><rect x="763.9" y="243.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="766.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (191 samples, 0.10%)</title><rect x="763.9" y="227.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (191 samples, 0.10%)</title><rect x="763.9" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (191 samples, 0.10%)</title><rect x="763.9" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (191 samples, 0.10%)</title><rect x="763.9" y="179.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (191 samples, 0.10%)</title><rect x="763.9" y="163.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (179 samples, 0.09%)</title><rect x="763.9" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (174 samples, 0.09%)</title><rect x="764.0" y="131.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (174 samples, 0.09%)</title><rect x="764.0" y="115.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (174 samples, 0.09%)</title><rect x="764.0" y="99.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (112 samples, 0.06%)</title><rect x="764.0" y="83.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.04%)</title><rect x="764.0" y="67.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="767.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (45 samples, 0.02%)</title><rect x="764.8" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (45 samples, 0.02%)</title><rect x="764.8" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (132 samples, 0.07%)</title><rect x="765.2" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (128 samples, 0.07%)</title><rect x="765.2" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (128 samples, 0.07%)</title><rect x="765.2" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (125 samples, 0.07%)</title><rect x="765.2" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (125 samples, 0.07%)</title><rect x="765.2" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (125 samples, 0.07%)</title><rect x="765.2" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (125 samples, 0.07%)</title><rect x="765.2" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (125 samples, 0.07%)</title><rect x="765.2" y="163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (125 samples, 0.07%)</title><rect x="765.2" y="147.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (116 samples, 0.06%)</title><rect x="765.2" y="131.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (116 samples, 0.06%)</title><rect x="765.2" y="115.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (116 samples, 0.06%)</title><rect x="765.2" y="99.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (116 samples, 0.06%)</title><rect x="765.2" y="83.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (69 samples, 0.04%)</title><rect x="765.2" y="67.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 0.02%)</title><rect x="765.2" y="51.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="768.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,032 samples, 0.54%)</title><rect x="766.0" y="275.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,024 samples, 0.54%)</title><rect x="766.0" y="259.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,024 samples, 0.54%)</title><rect x="766.0" y="243.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,024 samples, 0.54%)</title><rect x="766.0" y="227.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (682 samples, 0.36%)</title><rect x="766.0" y="211.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (477 samples, 0.25%)</title><rect x="766.0" y="195.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="769.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (205 samples, 0.11%)</title><rect x="769.0" y="195.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.0" y="206.0"></text>
</g>
<g>
<title>byte[] (205 samples, 0.11%)</title><rect x="769.0" y="179.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="772.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (342 samples, 0.18%)</title><rect x="770.3" y="211.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (342 samples, 0.18%)</title><rect x="770.3" y="195.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (239 samples, 0.13%)</title><rect x="770.3" y="179.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="773.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (103 samples, 0.05%)</title><rect x="771.8" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.8" y="190.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.05%)</title><rect x="771.8" y="163.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="774.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,297 samples, 2.79%)</title><rect x="772.4" y="371.0" width="33.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.4" y="382.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.02%)</title><rect x="772.4" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (41 samples, 0.02%)</title><rect x="772.4" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.02%)</title><rect x="772.4" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,228 samples, 2.76%)</title><rect x="772.7" y="355.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.7" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,228 samples, 2.76%)</title><rect x="772.7" y="339.0" width="32.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.7" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,061 samples, 2.67%)</title><rect x="772.7" y="323.0" width="31.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.7" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,100 samples, 0.58%)</title><rect x="772.7" y="307.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="775.7" y="318.0"></text>
</g>
<g>
<title>byte[] (3,961 samples, 2.09%)</title><rect x="779.6" y="307.0" width="24.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="782.6" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (134 samples, 0.07%)</title><rect x="804.2" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (104 samples, 0.05%)</title><rect x="804.4" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 0.05%)</title><rect x="804.4" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.4" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 0.05%)</title><rect x="804.4" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.4" y="286.0"></text>
</g>
<g>
<title>char[] (66 samples, 0.03%)</title><rect x="804.4" y="259.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="807.4" y="270.0"></text>
</g>
<g>
<title>[worker-3 tid=7380] (3,375 samples, 1.78%)</title><rect x="805.4" y="467.0" width="21.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="808.4" y="478.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (3,375 samples, 1.78%)</title><rect x="805.4" y="451.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.4" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,375 samples, 1.78%)</title><rect x="805.4" y="435.0" width="21.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.4" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,375 samples, 1.78%)</title><rect x="805.4" y="419.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.4" y="430.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,357 samples, 1.77%)</title><rect x="805.5" y="403.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,357 samples, 1.77%)</title><rect x="805.5" y="387.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,357 samples, 1.77%)</title><rect x="805.5" y="371.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,357 samples, 1.77%)</title><rect x="805.5" y="355.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (53 samples, 0.03%)</title><rect x="805.5" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (53 samples, 0.03%)</title><rect x="805.5" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (57 samples, 0.03%)</title><rect x="805.9" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (45 samples, 0.02%)</title><rect x="805.9" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,235 samples, 1.71%)</title><rect x="806.2" y="339.0" width="20.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (230 samples, 0.12%)</title><rect x="806.2" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (230 samples, 0.12%)</title><rect x="806.2" y="307.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (230 samples, 0.12%)</title><rect x="806.2" y="291.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (230 samples, 0.12%)</title><rect x="806.2" y="275.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (230 samples, 0.12%)</title><rect x="806.2" y="259.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (189 samples, 0.10%)</title><rect x="806.2" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (187 samples, 0.10%)</title><rect x="806.2" y="227.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (187 samples, 0.10%)</title><rect x="806.2" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (187 samples, 0.10%)</title><rect x="806.2" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (187 samples, 0.10%)</title><rect x="806.2" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (187 samples, 0.10%)</title><rect x="806.2" y="163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (187 samples, 0.10%)</title><rect x="806.2" y="147.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (168 samples, 0.09%)</title><rect x="806.2" y="131.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (167 samples, 0.09%)</title><rect x="806.2" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (167 samples, 0.09%)</title><rect x="806.2" y="99.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (167 samples, 0.09%)</title><rect x="806.2" y="83.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (104 samples, 0.05%)</title><rect x="806.2" y="67.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (73 samples, 0.04%)</title><rect x="806.2" y="51.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="809.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (50 samples, 0.03%)</title><rect x="807.0" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.0" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (50 samples, 0.03%)</title><rect x="807.0" y="51.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (41 samples, 0.02%)</title><rect x="807.4" y="243.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (41 samples, 0.02%)</title><rect x="807.4" y="227.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (41 samples, 0.02%)</title><rect x="807.4" y="211.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (41 samples, 0.02%)</title><rect x="807.4" y="195.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="810.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (52 samples, 0.03%)</title><rect x="807.6" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (52 samples, 0.03%)</title><rect x="807.6" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (52 samples, 0.03%)</title><rect x="807.6" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (52 samples, 0.03%)</title><rect x="807.6" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,922 samples, 1.54%)</title><rect x="808.2" y="323.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,905 samples, 1.53%)</title><rect x="808.3" y="307.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.3" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (62 samples, 0.03%)</title><rect x="808.4" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="811.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (45 samples, 0.02%)</title><rect x="809.0" y="291.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,749 samples, 1.45%)</title><rect x="809.2" y="291.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (506 samples, 0.27%)</title><rect x="809.2" y="275.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (498 samples, 0.26%)</title><rect x="809.3" y="259.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (436 samples, 0.23%)</title><rect x="809.7" y="243.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (436 samples, 0.23%)</title><rect x="809.7" y="227.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (434 samples, 0.23%)</title><rect x="809.7" y="211.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (434 samples, 0.23%)</title><rect x="809.7" y="195.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (434 samples, 0.23%)</title><rect x="809.7" y="179.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (434 samples, 0.23%)</title><rect x="809.7" y="163.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (416 samples, 0.22%)</title><rect x="809.7" y="147.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (412 samples, 0.22%)</title><rect x="809.7" y="131.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (412 samples, 0.22%)</title><rect x="809.7" y="115.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (412 samples, 0.22%)</title><rect x="809.7" y="99.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (231 samples, 0.12%)</title><rect x="809.7" y="83.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (160 samples, 0.08%)</title><rect x="809.7" y="67.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="812.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (71 samples, 0.04%)</title><rect x="810.7" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.7" y="78.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.04%)</title><rect x="810.7" y="51.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="813.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (135 samples, 0.07%)</title><rect x="811.4" y="83.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (135 samples, 0.07%)</title><rect x="811.4" y="67.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (98 samples, 0.05%)</title><rect x="811.4" y="51.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="814.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (242 samples, 0.13%)</title><rect x="812.6" y="275.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (234 samples, 0.12%)</title><rect x="812.7" y="259.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (234 samples, 0.12%)</title><rect x="812.7" y="243.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (230 samples, 0.12%)</title><rect x="812.7" y="227.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (230 samples, 0.12%)</title><rect x="812.7" y="211.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (230 samples, 0.12%)</title><rect x="812.7" y="195.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (230 samples, 0.12%)</title><rect x="812.7" y="179.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (230 samples, 0.12%)</title><rect x="812.7" y="163.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (230 samples, 0.12%)</title><rect x="812.7" y="147.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (204 samples, 0.11%)</title><rect x="812.7" y="131.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (204 samples, 0.11%)</title><rect x="812.7" y="115.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (204 samples, 0.11%)</title><rect x="812.7" y="99.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (204 samples, 0.11%)</title><rect x="812.7" y="83.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (119 samples, 0.06%)</title><rect x="812.7" y="67.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.04%)</title><rect x="812.7" y="51.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="815.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (41 samples, 0.02%)</title><rect x="813.2" y="51.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.2" y="62.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.02%)</title><rect x="813.2" y="35.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="816.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (72 samples, 0.04%)</title><rect x="813.5" y="67.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.5" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (72 samples, 0.04%)</title><rect x="813.5" y="51.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 0.03%)</title><rect x="813.5" y="35.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="816.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,959 samples, 1.03%)</title><rect x="814.2" y="275.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,937 samples, 1.02%)</title><rect x="814.3" y="259.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,937 samples, 1.02%)</title><rect x="814.3" y="243.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,937 samples, 1.02%)</title><rect x="814.3" y="227.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,269 samples, 0.67%)</title><rect x="814.3" y="211.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (878 samples, 0.46%)</title><rect x="814.3" y="195.0" width="5.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="817.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (391 samples, 0.21%)</title><rect x="819.8" y="195.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.8" y="206.0"></text>
</g>
<g>
<title>byte[] (391 samples, 0.21%)</title><rect x="819.8" y="179.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="822.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (668 samples, 0.35%)</title><rect x="822.2" y="211.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (668 samples, 0.35%)</title><rect x="822.2" y="195.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (471 samples, 0.25%)</title><rect x="822.2" y="179.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (197 samples, 0.10%)</title><rect x="825.1" y="179.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.1" y="190.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.10%)</title><rect x="825.1" y="163.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="828.1" y="174.0"></text>
</g>
<g>
<title>[worker-3 tid=7386] (3,350 samples, 1.77%)</title><rect x="826.4" y="467.0" width="20.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="829.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,350 samples, 1.77%)</title><rect x="826.4" y="451.0" width="20.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="829.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,350 samples, 1.77%)</title><rect x="826.4" y="435.0" width="20.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,350 samples, 1.77%)</title><rect x="826.4" y="419.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,329 samples, 1.76%)</title><rect x="826.6" y="403.0" width="20.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,329 samples, 1.76%)</title><rect x="826.6" y="387.0" width="20.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,329 samples, 1.76%)</title><rect x="826.6" y="371.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,329 samples, 1.76%)</title><rect x="826.6" y="355.0" width="20.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (71 samples, 0.04%)</title><rect x="826.6" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (71 samples, 0.04%)</title><rect x="826.6" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (47 samples, 0.02%)</title><rect x="826.6" y="307.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.6" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (47 samples, 0.02%)</title><rect x="826.6" y="291.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.6" y="302.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.02%)</title><rect x="826.6" y="275.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="829.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (53 samples, 0.03%)</title><rect x="827.0" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (45 samples, 0.02%)</title><rect x="827.0" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,200 samples, 1.69%)</title><rect x="827.3" y="339.0" width="19.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (276 samples, 0.15%)</title><rect x="827.3" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (276 samples, 0.15%)</title><rect x="827.3" y="307.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (276 samples, 0.15%)</title><rect x="827.3" y="291.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (276 samples, 0.15%)</title><rect x="827.3" y="275.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (276 samples, 0.15%)</title><rect x="827.3" y="259.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (231 samples, 0.12%)</title><rect x="827.3" y="243.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (224 samples, 0.12%)</title><rect x="827.4" y="227.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (224 samples, 0.12%)</title><rect x="827.4" y="211.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (224 samples, 0.12%)</title><rect x="827.4" y="195.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (224 samples, 0.12%)</title><rect x="827.4" y="179.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.12%)</title><rect x="827.4" y="163.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (224 samples, 0.12%)</title><rect x="827.4" y="147.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (205 samples, 0.11%)</title><rect x="827.4" y="131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (205 samples, 0.11%)</title><rect x="827.4" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (205 samples, 0.11%)</title><rect x="827.4" y="99.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (205 samples, 0.11%)</title><rect x="827.4" y="83.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (123 samples, 0.06%)</title><rect x="827.4" y="67.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.04%)</title><rect x="827.4" y="51.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="830.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (47 samples, 0.02%)</title><rect x="827.8" y="51.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.8" y="62.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.02%)</title><rect x="827.8" y="35.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="830.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (65 samples, 0.03%)</title><rect x="828.2" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (65 samples, 0.03%)</title><rect x="828.2" y="51.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (45 samples, 0.02%)</title><rect x="828.8" y="243.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (45 samples, 0.02%)</title><rect x="828.8" y="227.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.8" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (45 samples, 0.02%)</title><rect x="828.8" y="211.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (45 samples, 0.02%)</title><rect x="828.8" y="195.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="831.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (53 samples, 0.03%)</title><rect x="829.0" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (53 samples, 0.03%)</title><rect x="829.0" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (53 samples, 0.03%)</title><rect x="829.0" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (53 samples, 0.03%)</title><rect x="829.0" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,823 samples, 1.49%)</title><rect x="829.7" y="323.0" width="17.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,808 samples, 1.48%)</title><rect x="829.8" y="307.0" width="17.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.8" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (56 samples, 0.03%)</title><rect x="829.9" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="832.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (51 samples, 0.03%)</title><rect x="830.5" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,644 samples, 1.39%)</title><rect x="830.8" y="291.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (534 samples, 0.28%)</title><rect x="830.8" y="275.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (528 samples, 0.28%)</title><rect x="830.8" y="259.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (476 samples, 0.25%)</title><rect x="831.1" y="243.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (476 samples, 0.25%)</title><rect x="831.1" y="227.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (473 samples, 0.25%)</title><rect x="831.2" y="211.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (473 samples, 0.25%)</title><rect x="831.2" y="195.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (473 samples, 0.25%)</title><rect x="831.2" y="179.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (473 samples, 0.25%)</title><rect x="831.2" y="163.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (442 samples, 0.23%)</title><rect x="831.2" y="147.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (439 samples, 0.23%)</title><rect x="831.2" y="131.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (439 samples, 0.23%)</title><rect x="831.2" y="115.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (439 samples, 0.23%)</title><rect x="831.2" y="99.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (271 samples, 0.14%)</title><rect x="831.2" y="83.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (166 samples, 0.09%)</title><rect x="831.2" y="67.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="834.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (105 samples, 0.06%)</title><rect x="832.2" y="67.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.2" y="78.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.06%)</title><rect x="832.2" y="51.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="835.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (123 samples, 0.06%)</title><rect x="833.1" y="83.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (123 samples, 0.06%)</title><rect x="833.1" y="67.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.04%)</title><rect x="833.1" y="51.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="836.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (53 samples, 0.03%)</title><rect x="833.6" y="51.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.6" y="62.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.03%)</title><rect x="833.6" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="836.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (284 samples, 0.15%)</title><rect x="834.3" y="275.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (269 samples, 0.14%)</title><rect x="834.4" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (269 samples, 0.14%)</title><rect x="834.4" y="243.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (266 samples, 0.14%)</title><rect x="834.5" y="227.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (266 samples, 0.14%)</title><rect x="834.5" y="211.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (266 samples, 0.14%)</title><rect x="834.5" y="195.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.5" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (266 samples, 0.14%)</title><rect x="834.5" y="179.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (266 samples, 0.14%)</title><rect x="834.5" y="163.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (266 samples, 0.14%)</title><rect x="834.5" y="147.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (250 samples, 0.13%)</title><rect x="834.5" y="131.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (250 samples, 0.13%)</title><rect x="834.5" y="115.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (250 samples, 0.13%)</title><rect x="834.5" y="99.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (250 samples, 0.13%)</title><rect x="834.5" y="83.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (147 samples, 0.08%)</title><rect x="834.5" y="67.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (109 samples, 0.06%)</title><rect x="834.5" y="51.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="837.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (82 samples, 0.04%)</title><rect x="835.5" y="67.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.5" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (82 samples, 0.04%)</title><rect x="835.5" y="51.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (55 samples, 0.03%)</title><rect x="835.5" y="35.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="838.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,787 samples, 0.94%)</title><rect x="836.1" y="275.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,769 samples, 0.93%)</title><rect x="836.2" y="259.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,769 samples, 0.93%)</title><rect x="836.2" y="243.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,769 samples, 0.93%)</title><rect x="836.2" y="227.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,160 samples, 0.61%)</title><rect x="836.2" y="211.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (793 samples, 0.42%)</title><rect x="836.2" y="195.0" width="5.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="839.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (367 samples, 0.19%)</title><rect x="841.2" y="195.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.2" y="206.0"></text>
</g>
<g>
<title>byte[] (367 samples, 0.19%)</title><rect x="841.2" y="179.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="844.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (609 samples, 0.32%)</title><rect x="843.4" y="211.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (609 samples, 0.32%)</title><rect x="843.4" y="195.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (413 samples, 0.22%)</title><rect x="843.4" y="179.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="846.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (196 samples, 0.10%)</title><rect x="846.0" y="179.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.0" y="190.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.10%)</title><rect x="846.0" y="163.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="849.0" y="174.0"></text>
</g>
<g>
<title>[worker-4 tid=7372] (7,035 samples, 3.71%)</title><rect x="847.3" y="467.0" width="43.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="850.3" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (7,035 samples, 3.71%)</title><rect x="847.3" y="451.0" width="43.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.3" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,035 samples, 3.71%)</title><rect x="847.3" y="435.0" width="43.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.3" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,035 samples, 3.71%)</title><rect x="847.3" y="419.0" width="43.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.3" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (7,026 samples, 3.71%)</title><rect x="847.3" y="403.0" width="43.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.3" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (7,026 samples, 3.71%)</title><rect x="847.3" y="387.0" width="43.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.3" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,530 samples, 0.81%)</title><rect x="847.3" y="371.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,530 samples, 0.81%)</title><rect x="847.3" y="355.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,486 samples, 0.78%)</title><rect x="847.6" y="339.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (91 samples, 0.05%)</title><rect x="847.6" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (91 samples, 0.05%)</title><rect x="847.6" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (91 samples, 0.05%)</title><rect x="847.6" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (91 samples, 0.05%)</title><rect x="847.6" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (91 samples, 0.05%)</title><rect x="847.6" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (73 samples, 0.04%)</title><rect x="847.6" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (73 samples, 0.04%)</title><rect x="847.6" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (73 samples, 0.04%)</title><rect x="847.6" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (73 samples, 0.04%)</title><rect x="847.6" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.6" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (73 samples, 0.04%)</title><rect x="847.6" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (73 samples, 0.04%)</title><rect x="847.6" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (73 samples, 0.04%)</title><rect x="847.6" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (70 samples, 0.04%)</title><rect x="847.6" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (70 samples, 0.04%)</title><rect x="847.6" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (70 samples, 0.04%)</title><rect x="847.6" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (70 samples, 0.04%)</title><rect x="847.6" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.02%)</title><rect x="847.6" y="67.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,369 samples, 0.72%)</title><rect x="848.3" y="323.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,365 samples, 0.72%)</title><rect x="848.3" y="307.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,322 samples, 0.70%)</title><rect x="848.6" y="291.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (218 samples, 0.11%)</title><rect x="848.6" y="275.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (217 samples, 0.11%)</title><rect x="848.6" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (196 samples, 0.10%)</title><rect x="848.7" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (196 samples, 0.10%)</title><rect x="848.7" y="227.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (194 samples, 0.10%)</title><rect x="848.8" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (194 samples, 0.10%)</title><rect x="848.8" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (194 samples, 0.10%)</title><rect x="848.8" y="179.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (194 samples, 0.10%)</title><rect x="848.8" y="163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (187 samples, 0.10%)</title><rect x="848.8" y="147.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (183 samples, 0.10%)</title><rect x="848.8" y="131.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (183 samples, 0.10%)</title><rect x="848.8" y="115.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (183 samples, 0.10%)</title><rect x="848.8" y="99.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (105 samples, 0.06%)</title><rect x="848.8" y="83.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (59 samples, 0.03%)</title><rect x="848.8" y="67.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="851.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (46 samples, 0.02%)</title><rect x="849.1" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.1" y="78.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.02%)</title><rect x="849.1" y="51.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="852.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (54 samples, 0.03%)</title><rect x="849.6" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.03%)</title><rect x="849.6" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="852.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (101 samples, 0.05%)</title><rect x="850.1" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (95 samples, 0.05%)</title><rect x="850.1" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (95 samples, 0.05%)</title><rect x="850.1" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (94 samples, 0.05%)</title><rect x="850.1" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (94 samples, 0.05%)</title><rect x="850.1" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (94 samples, 0.05%)</title><rect x="850.1" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.1" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (94 samples, 0.05%)</title><rect x="850.1" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (94 samples, 0.05%)</title><rect x="850.1" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (94 samples, 0.05%)</title><rect x="850.1" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (90 samples, 0.05%)</title><rect x="850.1" y="131.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (90 samples, 0.05%)</title><rect x="850.1" y="115.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (90 samples, 0.05%)</title><rect x="850.1" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (90 samples, 0.05%)</title><rect x="850.1" y="83.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (52 samples, 0.03%)</title><rect x="850.1" y="67.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (987 samples, 0.52%)</title><rect x="850.7" y="275.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (981 samples, 0.52%)</title><rect x="850.7" y="259.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (981 samples, 0.52%)</title><rect x="850.7" y="243.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (981 samples, 0.52%)</title><rect x="850.7" y="227.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (636 samples, 0.34%)</title><rect x="850.7" y="211.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (447 samples, 0.24%)</title><rect x="850.7" y="195.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="853.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (189 samples, 0.10%)</title><rect x="853.5" y="195.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.5" y="206.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.10%)</title><rect x="853.5" y="179.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="856.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (345 samples, 0.18%)</title><rect x="854.7" y="211.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (345 samples, 0.18%)</title><rect x="854.7" y="195.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (225 samples, 0.12%)</title><rect x="854.7" y="179.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="857.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (120 samples, 0.06%)</title><rect x="856.1" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.1" y="190.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.06%)</title><rect x="856.1" y="163.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="859.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,496 samples, 2.90%)</title><rect x="856.8" y="371.0" width="34.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.8" y="382.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.02%)</title><rect x="856.8" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (46 samples, 0.02%)</title><rect x="856.8" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.02%)</title><rect x="856.8" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,433 samples, 2.87%)</title><rect x="857.1" y="355.0" width="33.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.1" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,433 samples, 2.87%)</title><rect x="857.1" y="339.0" width="33.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.1" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,250 samples, 2.77%)</title><rect x="857.2" y="323.0" width="32.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.2" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,157 samples, 0.61%)</title><rect x="857.2" y="307.0" width="7.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="860.2" y="318.0"></text>
</g>
<g>
<title>byte[] (4,093 samples, 2.16%)</title><rect x="864.4" y="307.0" width="25.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="867.4" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (147 samples, 0.08%)</title><rect x="889.9" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (123 samples, 0.06%)</title><rect x="889.9" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 0.06%)</title><rect x="889.9" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.9" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (123 samples, 0.06%)</title><rect x="889.9" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.9" y="286.0"></text>
</g>
<g>
<title>char[] (78 samples, 0.04%)</title><rect x="889.9" y="259.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="892.9" y="270.0"></text>
</g>
<g>
<title>[worker-4 tid=7377] (3,345 samples, 1.76%)</title><rect x="891.1" y="467.0" width="20.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="894.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,345 samples, 1.76%)</title><rect x="891.1" y="451.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,345 samples, 1.76%)</title><rect x="891.1" y="435.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,345 samples, 1.76%)</title><rect x="891.1" y="419.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,325 samples, 1.75%)</title><rect x="891.2" y="403.0" width="20.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,325 samples, 1.75%)</title><rect x="891.2" y="387.0" width="20.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,325 samples, 1.75%)</title><rect x="891.2" y="371.0" width="20.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,325 samples, 1.75%)</title><rect x="891.2" y="355.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (47 samples, 0.02%)</title><rect x="891.2" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 0.02%)</title><rect x="891.2" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (62 samples, 0.03%)</title><rect x="891.5" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (46 samples, 0.02%)</title><rect x="891.6" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,201 samples, 1.69%)</title><rect x="891.9" y="339.0" width="19.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (253 samples, 0.13%)</title><rect x="891.9" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (253 samples, 0.13%)</title><rect x="891.9" y="307.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (253 samples, 0.13%)</title><rect x="891.9" y="291.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (253 samples, 0.13%)</title><rect x="891.9" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (253 samples, 0.13%)</title><rect x="891.9" y="259.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (214 samples, 0.11%)</title><rect x="891.9" y="243.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (207 samples, 0.11%)</title><rect x="891.9" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (207 samples, 0.11%)</title><rect x="891.9" y="211.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (207 samples, 0.11%)</title><rect x="891.9" y="195.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (207 samples, 0.11%)</title><rect x="891.9" y="179.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (207 samples, 0.11%)</title><rect x="891.9" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (207 samples, 0.11%)</title><rect x="891.9" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (189 samples, 0.10%)</title><rect x="891.9" y="131.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="891.9" y="115.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="891.9" y="99.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (189 samples, 0.10%)</title><rect x="891.9" y="83.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (112 samples, 0.06%)</title><rect x="891.9" y="67.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.04%)</title><rect x="891.9" y="51.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="894.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.02%)</title><rect x="892.3" y="51.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.3" y="62.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="892.3" y="35.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="895.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (63 samples, 0.03%)</title><rect x="892.7" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (63 samples, 0.03%)</title><rect x="892.7" y="51.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="895.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 0.02%)</title><rect x="892.7" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="895.7" y="46.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (52 samples, 0.03%)</title><rect x="893.4" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (52 samples, 0.03%)</title><rect x="893.4" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (52 samples, 0.03%)</title><rect x="893.4" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (52 samples, 0.03%)</title><rect x="893.4" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,862 samples, 1.51%)</title><rect x="894.0" y="323.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,848 samples, 1.50%)</title><rect x="894.1" y="307.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.1" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (56 samples, 0.03%)</title><rect x="894.1" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="897.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (51 samples, 0.03%)</title><rect x="894.7" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,686 samples, 1.42%)</title><rect x="895.1" y="291.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (497 samples, 0.26%)</title><rect x="895.1" y="275.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (491 samples, 0.26%)</title><rect x="895.1" y="259.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (435 samples, 0.23%)</title><rect x="895.4" y="243.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (435 samples, 0.23%)</title><rect x="895.4" y="227.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (430 samples, 0.23%)</title><rect x="895.5" y="211.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (430 samples, 0.23%)</title><rect x="895.5" y="195.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (430 samples, 0.23%)</title><rect x="895.5" y="179.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (430 samples, 0.23%)</title><rect x="895.5" y="163.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (408 samples, 0.22%)</title><rect x="895.5" y="147.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (401 samples, 0.21%)</title><rect x="895.5" y="131.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (401 samples, 0.21%)</title><rect x="895.5" y="115.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (401 samples, 0.21%)</title><rect x="895.5" y="99.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (240 samples, 0.13%)</title><rect x="895.5" y="83.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (158 samples, 0.08%)</title><rect x="895.5" y="67.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="898.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (82 samples, 0.04%)</title><rect x="896.5" y="67.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.5" y="78.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.04%)</title><rect x="896.5" y="51.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="899.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (112 samples, 0.06%)</title><rect x="897.3" y="83.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (112 samples, 0.06%)</title><rect x="897.3" y="67.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.04%)</title><rect x="897.3" y="51.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="900.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (215 samples, 0.11%)</title><rect x="898.4" y="275.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (204 samples, 0.11%)</title><rect x="898.5" y="259.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (204 samples, 0.11%)</title><rect x="898.5" y="243.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (204 samples, 0.11%)</title><rect x="898.5" y="227.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (204 samples, 0.11%)</title><rect x="898.5" y="211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (204 samples, 0.11%)</title><rect x="898.5" y="195.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.5" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (204 samples, 0.11%)</title><rect x="898.5" y="179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (204 samples, 0.11%)</title><rect x="898.5" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (204 samples, 0.11%)</title><rect x="898.5" y="147.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (190 samples, 0.10%)</title><rect x="898.5" y="131.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (190 samples, 0.10%)</title><rect x="898.5" y="115.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (190 samples, 0.10%)</title><rect x="898.5" y="99.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (190 samples, 0.10%)</title><rect x="898.5" y="83.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (114 samples, 0.06%)</title><rect x="898.5" y="67.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.04%)</title><rect x="898.5" y="51.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="901.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (42 samples, 0.02%)</title><rect x="898.9" y="51.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.9" y="62.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.02%)</title><rect x="898.9" y="35.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="901.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (59 samples, 0.03%)</title><rect x="899.3" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.3" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (59 samples, 0.03%)</title><rect x="899.3" y="51.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.3" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.02%)</title><rect x="899.3" y="35.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="902.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,931 samples, 1.02%)</title><rect x="899.8" y="275.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,904 samples, 1.00%)</title><rect x="899.9" y="259.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,904 samples, 1.00%)</title><rect x="899.9" y="243.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,904 samples, 1.00%)</title><rect x="899.9" y="227.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,275 samples, 0.67%)</title><rect x="899.9" y="211.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (841 samples, 0.44%)</title><rect x="899.9" y="195.0" width="5.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="902.9" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (434 samples, 0.23%)</title><rect x="905.2" y="195.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.2" y="206.0"></text>
</g>
<g>
<title>byte[] (434 samples, 0.23%)</title><rect x="905.2" y="179.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="908.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (629 samples, 0.33%)</title><rect x="907.9" y="211.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (629 samples, 0.33%)</title><rect x="907.9" y="195.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (427 samples, 0.23%)</title><rect x="907.9" y="179.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="910.9" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (202 samples, 0.11%)</title><rect x="910.5" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.5" y="190.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.11%)</title><rect x="910.5" y="163.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="913.5" y="174.0"></text>
</g>
<g>
<title>[worker-4 tid=7385] (3,376 samples, 1.78%)</title><rect x="911.9" y="467.0" width="21.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="914.9" y="478.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (3,376 samples, 1.78%)</title><rect x="911.9" y="451.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.9" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,376 samples, 1.78%)</title><rect x="911.9" y="435.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,376 samples, 1.78%)</title><rect x="911.9" y="419.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.9" y="430.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,352 samples, 1.77%)</title><rect x="912.0" y="403.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,352 samples, 1.77%)</title><rect x="912.0" y="387.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,352 samples, 1.77%)</title><rect x="912.0" y="371.0" width="20.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,352 samples, 1.77%)</title><rect x="912.0" y="355.0" width="20.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 0.02%)</title><rect x="912.0" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 0.02%)</title><rect x="912.0" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (60 samples, 0.03%)</title><rect x="912.3" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (50 samples, 0.03%)</title><rect x="912.4" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,243 samples, 1.71%)</title><rect x="912.7" y="339.0" width="20.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (277 samples, 0.15%)</title><rect x="912.7" y="323.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (277 samples, 0.15%)</title><rect x="912.7" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (277 samples, 0.15%)</title><rect x="912.7" y="291.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (277 samples, 0.15%)</title><rect x="912.7" y="275.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (277 samples, 0.15%)</title><rect x="912.7" y="259.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (241 samples, 0.13%)</title><rect x="912.7" y="243.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (234 samples, 0.12%)</title><rect x="912.7" y="227.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (234 samples, 0.12%)</title><rect x="912.7" y="211.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (234 samples, 0.12%)</title><rect x="912.7" y="195.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (234 samples, 0.12%)</title><rect x="912.7" y="179.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (234 samples, 0.12%)</title><rect x="912.7" y="163.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (234 samples, 0.12%)</title><rect x="912.7" y="147.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (207 samples, 0.11%)</title><rect x="912.7" y="131.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (207 samples, 0.11%)</title><rect x="912.7" y="115.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (207 samples, 0.11%)</title><rect x="912.7" y="99.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (207 samples, 0.11%)</title><rect x="912.7" y="83.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (128 samples, 0.07%)</title><rect x="912.7" y="67.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.04%)</title><rect x="912.7" y="51.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="915.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (51 samples, 0.03%)</title><rect x="913.2" y="51.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.2" y="62.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.03%)</title><rect x="913.2" y="35.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="916.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (58 samples, 0.03%)</title><rect x="913.7" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (58 samples, 0.03%)</title><rect x="913.7" y="51.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.7" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (50 samples, 0.03%)</title><rect x="914.4" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (50 samples, 0.03%)</title><rect x="914.4" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (50 samples, 0.03%)</title><rect x="914.4" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (50 samples, 0.03%)</title><rect x="914.4" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,886 samples, 1.52%)</title><rect x="914.9" y="323.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,878 samples, 1.52%)</title><rect x="915.0" y="307.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.0" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (57 samples, 0.03%)</title><rect x="915.0" y="291.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="918.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (47 samples, 0.02%)</title><rect x="915.6" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,726 samples, 1.44%)</title><rect x="915.9" y="291.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (488 samples, 0.26%)</title><rect x="915.9" y="275.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (483 samples, 0.25%)</title><rect x="915.9" y="259.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (422 samples, 0.22%)</title><rect x="916.3" y="243.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (422 samples, 0.22%)</title><rect x="916.3" y="227.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (418 samples, 0.22%)</title><rect x="916.3" y="211.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (418 samples, 0.22%)</title><rect x="916.3" y="195.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (418 samples, 0.22%)</title><rect x="916.3" y="179.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (418 samples, 0.22%)</title><rect x="916.3" y="163.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (399 samples, 0.21%)</title><rect x="916.3" y="147.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (393 samples, 0.21%)</title><rect x="916.4" y="131.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (393 samples, 0.21%)</title><rect x="916.4" y="115.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (393 samples, 0.21%)</title><rect x="916.4" y="99.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (230 samples, 0.12%)</title><rect x="916.4" y="83.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (156 samples, 0.08%)</title><rect x="916.4" y="67.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="919.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (74 samples, 0.04%)</title><rect x="917.3" y="67.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="920.3" y="78.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.04%)</title><rect x="917.3" y="51.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="920.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (129 samples, 0.07%)</title><rect x="918.0" y="83.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (129 samples, 0.07%)</title><rect x="918.0" y="67.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 0.04%)</title><rect x="918.0" y="51.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="921.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.02%)</title><rect x="918.5" y="51.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.5" y="62.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="918.5" y="35.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="921.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (238 samples, 0.13%)</title><rect x="919.2" y="275.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (233 samples, 0.12%)</title><rect x="919.2" y="259.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (233 samples, 0.12%)</title><rect x="919.2" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (231 samples, 0.12%)</title><rect x="919.2" y="227.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (231 samples, 0.12%)</title><rect x="919.2" y="211.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (231 samples, 0.12%)</title><rect x="919.2" y="195.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (231 samples, 0.12%)</title><rect x="919.2" y="179.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (231 samples, 0.12%)</title><rect x="919.2" y="163.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (231 samples, 0.12%)</title><rect x="919.2" y="147.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (204 samples, 0.11%)</title><rect x="919.2" y="131.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (204 samples, 0.11%)</title><rect x="919.2" y="115.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="922.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (204 samples, 0.11%)</title><rect x="919.2" y="99.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (204 samples, 0.11%)</title><rect x="919.2" y="83.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (125 samples, 0.07%)</title><rect x="919.2" y="67.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.04%)</title><rect x="919.2" y="51.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="922.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (44 samples, 0.02%)</title><rect x="919.7" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.7" y="62.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.02%)</title><rect x="919.7" y="35.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="922.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (59 samples, 0.03%)</title><rect x="920.1" y="67.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.1" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (59 samples, 0.03%)</title><rect x="920.1" y="51.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.02%)</title><rect x="920.1" y="35.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="923.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,962 samples, 1.03%)</title><rect x="920.7" y="275.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,950 samples, 1.03%)</title><rect x="920.7" y="259.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,950 samples, 1.03%)</title><rect x="920.7" y="243.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,950 samples, 1.03%)</title><rect x="920.7" y="227.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="923.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,290 samples, 0.68%)</title><rect x="920.7" y="211.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (861 samples, 0.45%)</title><rect x="920.7" y="195.0" width="5.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="923.7" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (429 samples, 0.23%)</title><rect x="926.1" y="195.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.1" y="206.0"></text>
</g>
<g>
<title>byte[] (429 samples, 0.23%)</title><rect x="926.1" y="179.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="929.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (660 samples, 0.35%)</title><rect x="928.8" y="211.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (660 samples, 0.35%)</title><rect x="928.8" y="195.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="931.8" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (451 samples, 0.24%)</title><rect x="928.8" y="179.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="931.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (209 samples, 0.11%)</title><rect x="931.6" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.6" y="190.0"></text>
</g>
<g>
<title>byte[] (209 samples, 0.11%)</title><rect x="931.6" y="163.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="934.6" y="174.0"></text>
</g>
<g>
<title>[worker-5 tid=7368] (7,116 samples, 3.75%)</title><rect x="932.9" y="467.0" width="44.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="935.9" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (7,116 samples, 3.75%)</title><rect x="932.9" y="451.0" width="44.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.9" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,116 samples, 3.75%)</title><rect x="932.9" y="435.0" width="44.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.9" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,116 samples, 3.75%)</title><rect x="932.9" y="419.0" width="44.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.9" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (7,102 samples, 3.75%)</title><rect x="933.0" y="403.0" width="44.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="936.0" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (7,102 samples, 3.75%)</title><rect x="933.0" y="387.0" width="44.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.0" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,579 samples, 0.83%)</title><rect x="933.0" y="371.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,579 samples, 0.83%)</title><rect x="933.0" y="355.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,544 samples, 0.81%)</title><rect x="933.2" y="339.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (78 samples, 0.04%)</title><rect x="933.2" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (78 samples, 0.04%)</title><rect x="933.2" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (78 samples, 0.04%)</title><rect x="933.2" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (78 samples, 0.04%)</title><rect x="933.2" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (78 samples, 0.04%)</title><rect x="933.2" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (68 samples, 0.04%)</title><rect x="933.2" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (68 samples, 0.04%)</title><rect x="933.2" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (68 samples, 0.04%)</title><rect x="933.2" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (68 samples, 0.04%)</title><rect x="933.2" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 0.04%)</title><rect x="933.2" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.04%)</title><rect x="933.2" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="936.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.04%)</title><rect x="933.2" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (63 samples, 0.03%)</title><rect x="933.2" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (61 samples, 0.03%)</title><rect x="933.2" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (61 samples, 0.03%)</title><rect x="933.2" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (61 samples, 0.03%)</title><rect x="933.2" y="83.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,435 samples, 0.76%)</title><rect x="933.8" y="323.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="936.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,433 samples, 0.76%)</title><rect x="933.8" y="307.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,387 samples, 0.73%)</title><rect x="934.1" y="291.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (227 samples, 0.12%)</title><rect x="934.1" y="275.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (224 samples, 0.12%)</title><rect x="934.2" y="259.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="937.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (198 samples, 0.10%)</title><rect x="934.3" y="243.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (198 samples, 0.10%)</title><rect x="934.3" y="227.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (198 samples, 0.10%)</title><rect x="934.3" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (198 samples, 0.10%)</title><rect x="934.3" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (198 samples, 0.10%)</title><rect x="934.3" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (198 samples, 0.10%)</title><rect x="934.3" y="163.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (185 samples, 0.10%)</title><rect x="934.3" y="147.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (183 samples, 0.10%)</title><rect x="934.3" y="131.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (183 samples, 0.10%)</title><rect x="934.3" y="115.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (183 samples, 0.10%)</title><rect x="934.3" y="99.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (89 samples, 0.05%)</title><rect x="934.3" y="83.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.03%)</title><rect x="934.3" y="67.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="937.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (66 samples, 0.03%)</title><rect x="935.1" y="83.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (66 samples, 0.03%)</title><rect x="935.1" y="67.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="938.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (97 samples, 0.05%)</title><rect x="935.7" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="938.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (94 samples, 0.05%)</title><rect x="935.7" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (94 samples, 0.05%)</title><rect x="935.7" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="938.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (91 samples, 0.05%)</title><rect x="935.7" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (91 samples, 0.05%)</title><rect x="935.7" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="938.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (91 samples, 0.05%)</title><rect x="935.7" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (91 samples, 0.05%)</title><rect x="935.7" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.05%)</title><rect x="935.7" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (91 samples, 0.05%)</title><rect x="935.7" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (84 samples, 0.04%)</title><rect x="935.7" y="131.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="938.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (84 samples, 0.04%)</title><rect x="935.7" y="115.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (84 samples, 0.04%)</title><rect x="935.7" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="938.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (84 samples, 0.04%)</title><rect x="935.7" y="83.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (46 samples, 0.02%)</title><rect x="935.7" y="67.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,045 samples, 0.55%)</title><rect x="936.3" y="275.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,038 samples, 0.55%)</title><rect x="936.3" y="259.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,038 samples, 0.55%)</title><rect x="936.3" y="243.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,038 samples, 0.55%)</title><rect x="936.3" y="227.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (682 samples, 0.36%)</title><rect x="936.3" y="211.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="939.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (461 samples, 0.24%)</title><rect x="936.3" y="195.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="939.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (221 samples, 0.12%)</title><rect x="939.2" y="195.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.2" y="206.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.12%)</title><rect x="939.2" y="179.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="942.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (356 samples, 0.19%)</title><rect x="940.6" y="211.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (356 samples, 0.19%)</title><rect x="940.6" y="195.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (224 samples, 0.12%)</title><rect x="940.6" y="179.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="943.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (132 samples, 0.07%)</title><rect x="941.9" y="179.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="944.9" y="190.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.07%)</title><rect x="941.9" y="163.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="944.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,523 samples, 2.91%)</title><rect x="942.8" y="371.0" width="34.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="945.8" y="382.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,447 samples, 2.87%)</title><rect x="943.0" y="355.0" width="33.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.0" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,447 samples, 2.87%)</title><rect x="943.0" y="339.0" width="33.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.0" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,273 samples, 2.78%)</title><rect x="943.0" y="323.0" width="32.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.0" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,091 samples, 0.58%)</title><rect x="943.0" y="307.0" width="6.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="946.0" y="318.0"></text>
</g>
<g>
<title>byte[] (4,182 samples, 2.21%)</title><rect x="949.8" y="307.0" width="26.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.8" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (129 samples, 0.07%)</title><rect x="975.9" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="978.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (102 samples, 0.05%)</title><rect x="976.0" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.0" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 0.05%)</title><rect x="976.0" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="979.0" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 0.05%)</title><rect x="976.0" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.0" y="286.0"></text>
</g>
<g>
<title>char[] (67 samples, 0.04%)</title><rect x="976.0" y="259.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="979.0" y="270.0"></text>
</g>
<g>
<title>[worker-5 tid=7375] (3,349 samples, 1.77%)</title><rect x="977.2" y="467.0" width="20.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="980.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,349 samples, 1.77%)</title><rect x="977.2" y="451.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,349 samples, 1.77%)</title><rect x="977.2" y="435.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,349 samples, 1.77%)</title><rect x="977.2" y="419.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,328 samples, 1.76%)</title><rect x="977.3" y="403.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,328 samples, 1.76%)</title><rect x="977.3" y="387.0" width="20.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,328 samples, 1.76%)</title><rect x="977.3" y="371.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,328 samples, 1.76%)</title><rect x="977.3" y="355.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 0.02%)</title><rect x="977.3" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 0.02%)</title><rect x="977.3" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,227 samples, 1.70%)</title><rect x="977.8" y="339.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="980.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (269 samples, 0.14%)</title><rect x="977.8" y="323.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (269 samples, 0.14%)</title><rect x="977.8" y="307.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (269 samples, 0.14%)</title><rect x="977.8" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="980.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (269 samples, 0.14%)</title><rect x="977.8" y="275.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (269 samples, 0.14%)</title><rect x="977.8" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="980.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (227 samples, 0.12%)</title><rect x="977.8" y="243.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (226 samples, 0.12%)</title><rect x="977.8" y="227.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (226 samples, 0.12%)</title><rect x="977.8" y="211.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (226 samples, 0.12%)</title><rect x="977.8" y="195.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="980.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (226 samples, 0.12%)</title><rect x="977.8" y="179.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="977.8" y="163.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="977.8" y="147.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (204 samples, 0.11%)</title><rect x="977.8" y="131.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="980.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (202 samples, 0.11%)</title><rect x="977.8" y="115.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (202 samples, 0.11%)</title><rect x="977.8" y="99.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (202 samples, 0.11%)</title><rect x="977.8" y="83.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="980.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (126 samples, 0.07%)</title><rect x="977.8" y="67.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="980.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.04%)</title><rect x="977.8" y="51.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="980.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.02%)</title><rect x="978.3" y="51.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.3" y="62.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="978.3" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="981.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (56 samples, 0.03%)</title><rect x="978.7" y="67.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (56 samples, 0.03%)</title><rect x="978.7" y="51.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.02%)</title><rect x="978.7" y="35.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="981.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (42 samples, 0.02%)</title><rect x="979.2" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (42 samples, 0.02%)</title><rect x="979.2" y="227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (42 samples, 0.02%)</title><rect x="979.2" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.02%)</title><rect x="979.2" y="195.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="982.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (63 samples, 0.03%)</title><rect x="979.5" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (63 samples, 0.03%)</title><rect x="979.5" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (63 samples, 0.03%)</title><rect x="979.5" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (63 samples, 0.03%)</title><rect x="979.5" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,852 samples, 1.50%)</title><rect x="980.2" y="323.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,846 samples, 1.50%)</title><rect x="980.2" y="307.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.2" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (55 samples, 0.03%)</title><rect x="980.2" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="983.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (60 samples, 0.03%)</title><rect x="980.8" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,690 samples, 1.42%)</title><rect x="981.2" y="291.0" width="16.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (487 samples, 0.26%)</title><rect x="981.2" y="275.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (480 samples, 0.25%)</title><rect x="981.2" y="259.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (429 samples, 0.23%)</title><rect x="981.5" y="243.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (429 samples, 0.23%)</title><rect x="981.5" y="227.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (426 samples, 0.22%)</title><rect x="981.5" y="211.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (426 samples, 0.22%)</title><rect x="981.5" y="195.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (426 samples, 0.22%)</title><rect x="981.5" y="179.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (426 samples, 0.22%)</title><rect x="981.5" y="163.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (396 samples, 0.21%)</title><rect x="981.5" y="147.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (392 samples, 0.21%)</title><rect x="981.6" y="131.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (392 samples, 0.21%)</title><rect x="981.6" y="115.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (392 samples, 0.21%)</title><rect x="981.6" y="99.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (230 samples, 0.12%)</title><rect x="981.6" y="83.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (165 samples, 0.09%)</title><rect x="981.6" y="67.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="984.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (65 samples, 0.03%)</title><rect x="982.6" y="67.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.6" y="78.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="982.6" y="51.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="985.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (121 samples, 0.06%)</title><rect x="983.3" y="83.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (121 samples, 0.06%)</title><rect x="983.3" y="67.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.05%)</title><rect x="983.3" y="51.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="986.3" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (41 samples, 0.02%)</title><rect x="984.2" y="275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="987.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (256 samples, 0.14%)</title><rect x="984.5" y="275.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (241 samples, 0.13%)</title><rect x="984.6" y="259.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="987.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (241 samples, 0.13%)</title><rect x="984.6" y="243.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (235 samples, 0.12%)</title><rect x="984.6" y="227.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (235 samples, 0.12%)</title><rect x="984.6" y="211.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (235 samples, 0.12%)</title><rect x="984.6" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="987.6" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (235 samples, 0.12%)</title><rect x="984.6" y="179.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 0.12%)</title><rect x="984.6" y="163.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 0.12%)</title><rect x="984.6" y="147.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (214 samples, 0.11%)</title><rect x="984.6" y="131.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (214 samples, 0.11%)</title><rect x="984.6" y="115.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (214 samples, 0.11%)</title><rect x="984.6" y="99.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (214 samples, 0.11%)</title><rect x="984.6" y="83.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="987.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (125 samples, 0.07%)</title><rect x="984.6" y="67.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.04%)</title><rect x="984.6" y="51.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="987.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (51 samples, 0.03%)</title><rect x="985.1" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.1" y="62.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.03%)</title><rect x="985.1" y="35.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="988.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (67 samples, 0.04%)</title><rect x="985.5" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.5" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (67 samples, 0.04%)</title><rect x="985.5" y="51.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.03%)</title><rect x="985.5" y="35.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="988.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,900 samples, 1.00%)</title><rect x="986.1" y="275.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="989.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,879 samples, 0.99%)</title><rect x="986.2" y="259.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,879 samples, 0.99%)</title><rect x="986.2" y="243.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,879 samples, 0.99%)</title><rect x="986.2" y="227.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,269 samples, 0.67%)</title><rect x="986.2" y="211.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (845 samples, 0.45%)</title><rect x="986.2" y="195.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="989.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (424 samples, 0.22%)</title><rect x="991.5" y="195.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.5" y="206.0"></text>
</g>
<g>
<title>byte[] (424 samples, 0.22%)</title><rect x="991.5" y="179.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="994.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (610 samples, 0.32%)</title><rect x="994.1" y="211.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (610 samples, 0.32%)</title><rect x="994.1" y="195.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (414 samples, 0.22%)</title><rect x="994.1" y="179.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="997.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (196 samples, 0.10%)</title><rect x="996.7" y="179.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.7" y="190.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.10%)</title><rect x="996.7" y="163.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="999.7" y="174.0"></text>
</g>
<g>
<title>[worker-5 tid=7384] (3,374 samples, 1.78%)</title><rect x="998.0" y="467.0" width="21.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1001.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,374 samples, 1.78%)</title><rect x="998.0" y="451.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,374 samples, 1.78%)</title><rect x="998.0" y="435.0" width="21.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,374 samples, 1.78%)</title><rect x="998.0" y="419.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,353 samples, 1.77%)</title><rect x="998.1" y="403.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1001.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,353 samples, 1.77%)</title><rect x="998.1" y="387.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,353 samples, 1.77%)</title><rect x="998.1" y="371.0" width="20.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,353 samples, 1.77%)</title><rect x="998.1" y="355.0" width="20.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (58 samples, 0.03%)</title><rect x="998.1" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (58 samples, 0.03%)</title><rect x="998.1" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (54 samples, 0.03%)</title><rect x="998.5" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (42 samples, 0.02%)</title><rect x="998.6" y="323.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,229 samples, 1.70%)</title><rect x="998.8" y="339.0" width="20.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (248 samples, 0.13%)</title><rect x="998.8" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (248 samples, 0.13%)</title><rect x="998.8" y="307.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (248 samples, 0.13%)</title><rect x="998.8" y="291.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (248 samples, 0.13%)</title><rect x="998.8" y="275.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (248 samples, 0.13%)</title><rect x="998.8" y="259.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (189 samples, 0.10%)</title><rect x="998.8" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (184 samples, 0.10%)</title><rect x="998.9" y="227.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (184 samples, 0.10%)</title><rect x="998.9" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (184 samples, 0.10%)</title><rect x="998.9" y="195.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (184 samples, 0.10%)</title><rect x="998.9" y="179.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (184 samples, 0.10%)</title><rect x="998.9" y="163.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (184 samples, 0.10%)</title><rect x="998.9" y="147.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (173 samples, 0.09%)</title><rect x="998.9" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1001.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (173 samples, 0.09%)</title><rect x="998.9" y="115.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (173 samples, 0.09%)</title><rect x="998.9" y="99.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (173 samples, 0.09%)</title><rect x="998.9" y="83.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.06%)</title><rect x="998.9" y="67.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.04%)</title><rect x="998.9" y="51.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1001.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (53 samples, 0.03%)</title><rect x="999.6" y="67.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.6" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (53 samples, 0.03%)</title><rect x="999.6" y="51.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1002.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (59 samples, 0.03%)</title><rect x="1000.0" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (59 samples, 0.03%)</title><rect x="1000.0" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.0" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (59 samples, 0.03%)</title><rect x="1000.0" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1003.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (59 samples, 0.03%)</title><rect x="1000.0" y="195.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1003.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (55 samples, 0.03%)</title><rect x="1000.4" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (55 samples, 0.03%)</title><rect x="1000.4" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (55 samples, 0.03%)</title><rect x="1000.4" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (55 samples, 0.03%)</title><rect x="1000.4" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,887 samples, 1.52%)</title><rect x="1001.0" y="323.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,877 samples, 1.52%)</title><rect x="1001.0" y="307.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.0" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (56 samples, 0.03%)</title><rect x="1001.1" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1004.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (46 samples, 0.02%)</title><rect x="1001.8" y="291.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,715 samples, 1.43%)</title><rect x="1002.0" y="291.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (484 samples, 0.26%)</title><rect x="1002.0" y="275.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (477 samples, 0.25%)</title><rect x="1002.1" y="259.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (420 samples, 0.22%)</title><rect x="1002.4" y="243.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (420 samples, 0.22%)</title><rect x="1002.4" y="227.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (417 samples, 0.22%)</title><rect x="1002.5" y="211.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (417 samples, 0.22%)</title><rect x="1002.5" y="195.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (417 samples, 0.22%)</title><rect x="1002.5" y="179.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (417 samples, 0.22%)</title><rect x="1002.5" y="163.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (402 samples, 0.21%)</title><rect x="1002.5" y="147.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (394 samples, 0.21%)</title><rect x="1002.5" y="131.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (394 samples, 0.21%)</title><rect x="1002.5" y="115.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1005.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (394 samples, 0.21%)</title><rect x="1002.5" y="99.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (235 samples, 0.12%)</title><rect x="1002.5" y="83.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (162 samples, 0.09%)</title><rect x="1002.5" y="67.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1005.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (73 samples, 0.04%)</title><rect x="1003.5" y="67.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.5" y="78.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.04%)</title><rect x="1003.5" y="51.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1006.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (116 samples, 0.06%)</title><rect x="1004.2" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1007.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (116 samples, 0.06%)</title><rect x="1004.2" y="67.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.04%)</title><rect x="1004.2" y="51.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1007.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (42 samples, 0.02%)</title><rect x="1004.7" y="51.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.7" y="62.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.02%)</title><rect x="1004.7" y="35.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1007.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (231 samples, 0.12%)</title><rect x="1005.3" y="275.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (227 samples, 0.12%)</title><rect x="1005.3" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (227 samples, 0.12%)</title><rect x="1005.3" y="243.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (226 samples, 0.12%)</title><rect x="1005.3" y="227.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (226 samples, 0.12%)</title><rect x="1005.3" y="211.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (226 samples, 0.12%)</title><rect x="1005.3" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.3" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (226 samples, 0.12%)</title><rect x="1005.3" y="179.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1008.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="1005.3" y="163.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="1005.3" y="147.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (210 samples, 0.11%)</title><rect x="1005.3" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (210 samples, 0.11%)</title><rect x="1005.3" y="115.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (210 samples, 0.11%)</title><rect x="1005.3" y="99.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (210 samples, 0.11%)</title><rect x="1005.3" y="83.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (126 samples, 0.07%)</title><rect x="1005.3" y="67.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (72 samples, 0.04%)</title><rect x="1005.3" y="51.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1008.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.03%)</title><rect x="1005.8" y="51.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1008.8" y="62.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.03%)</title><rect x="1005.8" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1008.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (65 samples, 0.03%)</title><rect x="1006.2" y="67.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1009.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (65 samples, 0.03%)</title><rect x="1006.2" y="51.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.02%)</title><rect x="1006.2" y="35.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1009.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,964 samples, 1.04%)</title><rect x="1006.7" y="275.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,948 samples, 1.03%)</title><rect x="1006.8" y="259.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,948 samples, 1.03%)</title><rect x="1006.8" y="243.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,948 samples, 1.03%)</title><rect x="1006.8" y="227.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,317 samples, 0.69%)</title><rect x="1006.8" y="211.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (885 samples, 0.47%)</title><rect x="1006.8" y="195.0" width="5.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1009.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (432 samples, 0.23%)</title><rect x="1012.3" y="195.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1015.3" y="206.0"></text>
</g>
<g>
<title>byte[] (432 samples, 0.23%)</title><rect x="1012.3" y="179.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1015.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (631 samples, 0.33%)</title><rect x="1015.0" y="211.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (631 samples, 0.33%)</title><rect x="1015.0" y="195.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (428 samples, 0.23%)</title><rect x="1015.0" y="179.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1018.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (203 samples, 0.11%)</title><rect x="1017.7" y="179.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.7" y="190.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.11%)</title><rect x="1017.7" y="163.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1020.7" y="174.0"></text>
</g>
<g>
<title>[worker-6 tid=7373] (6,962 samples, 3.67%)</title><rect x="1019.0" y="467.0" width="43.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1022.0" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (6,962 samples, 3.67%)</title><rect x="1019.0" y="451.0" width="43.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.0" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,962 samples, 3.67%)</title><rect x="1019.0" y="435.0" width="43.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.0" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,962 samples, 3.67%)</title><rect x="1019.0" y="419.0" width="43.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.0" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (6,957 samples, 3.67%)</title><rect x="1019.0" y="403.0" width="43.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.0" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (6,957 samples, 3.67%)</title><rect x="1019.0" y="387.0" width="43.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.0" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,553 samples, 0.82%)</title><rect x="1019.0" y="371.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1022.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,553 samples, 0.82%)</title><rect x="1019.0" y="355.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,526 samples, 0.80%)</title><rect x="1019.2" y="339.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (94 samples, 0.05%)</title><rect x="1019.2" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (94 samples, 0.05%)</title><rect x="1019.2" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (94 samples, 0.05%)</title><rect x="1019.2" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (94 samples, 0.05%)</title><rect x="1019.2" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1022.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (94 samples, 0.05%)</title><rect x="1019.2" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (78 samples, 0.04%)</title><rect x="1019.2" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (77 samples, 0.04%)</title><rect x="1019.2" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (77 samples, 0.04%)</title><rect x="1019.2" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1022.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (77 samples, 0.04%)</title><rect x="1019.2" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1022.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (77 samples, 0.04%)</title><rect x="1019.2" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (77 samples, 0.04%)</title><rect x="1019.2" y="163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (77 samples, 0.04%)</title><rect x="1019.2" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (68 samples, 0.04%)</title><rect x="1019.2" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (68 samples, 0.04%)</title><rect x="1019.2" y="115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (68 samples, 0.04%)</title><rect x="1019.2" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (68 samples, 0.04%)</title><rect x="1019.2" y="83.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1022.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (44 samples, 0.02%)</title><rect x="1019.2" y="67.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,397 samples, 0.74%)</title><rect x="1020.0" y="323.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,392 samples, 0.73%)</title><rect x="1020.0" y="307.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,350 samples, 0.71%)</title><rect x="1020.3" y="291.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1023.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (235 samples, 0.12%)</title><rect x="1020.3" y="275.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (229 samples, 0.12%)</title><rect x="1020.3" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (205 samples, 0.11%)</title><rect x="1020.5" y="243.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (205 samples, 0.11%)</title><rect x="1020.5" y="227.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1023.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (201 samples, 0.11%)</title><rect x="1020.5" y="211.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1023.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (201 samples, 0.11%)</title><rect x="1020.5" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (201 samples, 0.11%)</title><rect x="1020.5" y="179.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (201 samples, 0.11%)</title><rect x="1020.5" y="163.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (183 samples, 0.10%)</title><rect x="1020.5" y="147.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (181 samples, 0.10%)</title><rect x="1020.5" y="131.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (181 samples, 0.10%)</title><rect x="1020.5" y="115.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1023.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (181 samples, 0.10%)</title><rect x="1020.5" y="99.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1023.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (111 samples, 0.06%)</title><rect x="1020.5" y="83.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (87 samples, 0.05%)</title><rect x="1020.5" y="67.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1023.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (55 samples, 0.03%)</title><rect x="1021.3" y="83.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.03%)</title><rect x="1021.3" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (82 samples, 0.04%)</title><rect x="1021.8" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (75 samples, 0.04%)</title><rect x="1021.9" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (75 samples, 0.04%)</title><rect x="1021.9" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1024.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (74 samples, 0.04%)</title><rect x="1021.9" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (74 samples, 0.04%)</title><rect x="1021.9" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (74 samples, 0.04%)</title><rect x="1021.9" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (74 samples, 0.04%)</title><rect x="1021.9" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.04%)</title><rect x="1021.9" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.04%)</title><rect x="1021.9" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (70 samples, 0.04%)</title><rect x="1021.9" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (70 samples, 0.04%)</title><rect x="1021.9" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (70 samples, 0.04%)</title><rect x="1021.9" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (70 samples, 0.04%)</title><rect x="1021.9" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,020 samples, 0.54%)</title><rect x="1022.3" y="275.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,010 samples, 0.53%)</title><rect x="1022.4" y="259.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1025.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,010 samples, 0.53%)</title><rect x="1022.4" y="243.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,010 samples, 0.53%)</title><rect x="1022.4" y="227.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1025.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (671 samples, 0.35%)</title><rect x="1022.4" y="211.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1025.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (455 samples, 0.24%)</title><rect x="1022.4" y="195.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1025.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (216 samples, 0.11%)</title><rect x="1025.2" y="195.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.2" y="206.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.11%)</title><rect x="1025.2" y="179.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1028.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (339 samples, 0.18%)</title><rect x="1026.6" y="211.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (339 samples, 0.18%)</title><rect x="1026.6" y="195.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1029.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (219 samples, 0.12%)</title><rect x="1026.6" y="179.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1029.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (120 samples, 0.06%)</title><rect x="1027.9" y="179.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.9" y="190.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.06%)</title><rect x="1027.9" y="163.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1030.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,404 samples, 2.85%)</title><rect x="1028.7" y="371.0" width="33.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.7" y="382.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,345 samples, 2.82%)</title><rect x="1029.0" y="355.0" width="33.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.0" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,345 samples, 2.82%)</title><rect x="1029.0" y="339.0" width="33.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.0" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,168 samples, 2.73%)</title><rect x="1029.0" y="323.0" width="32.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1032.0" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,152 samples, 0.61%)</title><rect x="1029.0" y="307.0" width="7.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1032.0" y="318.0"></text>
</g>
<g>
<title>byte[] (4,016 samples, 2.12%)</title><rect x="1036.2" y="307.0" width="25.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1039.2" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (137 samples, 0.07%)</title><rect x="1061.2" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (114 samples, 0.06%)</title><rect x="1061.3" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.3" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 0.06%)</title><rect x="1061.3" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 0.06%)</title><rect x="1061.3" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.3" y="286.0"></text>
</g>
<g>
<title>char[] (74 samples, 0.04%)</title><rect x="1061.3" y="259.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1064.3" y="270.0"></text>
</g>
<g>
<title>[worker-6 tid=7382] (3,359 samples, 1.77%)</title><rect x="1062.3" y="467.0" width="21.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1065.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,359 samples, 1.77%)</title><rect x="1062.3" y="451.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,359 samples, 1.77%)</title><rect x="1062.3" y="435.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,359 samples, 1.77%)</title><rect x="1062.3" y="419.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,341 samples, 1.76%)</title><rect x="1062.5" y="403.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,341 samples, 1.76%)</title><rect x="1062.5" y="387.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,341 samples, 1.76%)</title><rect x="1062.5" y="371.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,341 samples, 1.76%)</title><rect x="1062.5" y="355.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (61 samples, 0.03%)</title><rect x="1062.5" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1065.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (61 samples, 0.03%)</title><rect x="1062.5" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (43 samples, 0.02%)</title><rect x="1062.5" y="307.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.5" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (43 samples, 0.02%)</title><rect x="1062.5" y="291.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.5" y="302.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.02%)</title><rect x="1062.5" y="275.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1065.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (46 samples, 0.02%)</title><rect x="1062.8" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (41 samples, 0.02%)</title><rect x="1062.9" y="323.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,222 samples, 1.70%)</title><rect x="1063.1" y="339.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (238 samples, 0.13%)</title><rect x="1063.1" y="323.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (238 samples, 0.13%)</title><rect x="1063.1" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (238 samples, 0.13%)</title><rect x="1063.1" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (238 samples, 0.13%)</title><rect x="1063.1" y="275.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (238 samples, 0.13%)</title><rect x="1063.1" y="259.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (209 samples, 0.11%)</title><rect x="1063.1" y="243.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (206 samples, 0.11%)</title><rect x="1063.1" y="227.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (206 samples, 0.11%)</title><rect x="1063.1" y="211.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (206 samples, 0.11%)</title><rect x="1063.1" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.1" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (206 samples, 0.11%)</title><rect x="1063.1" y="179.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.11%)</title><rect x="1063.1" y="163.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (206 samples, 0.11%)</title><rect x="1063.1" y="147.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (189 samples, 0.10%)</title><rect x="1063.1" y="131.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="1063.1" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="1063.1" y="99.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (189 samples, 0.10%)</title><rect x="1063.1" y="83.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (119 samples, 0.06%)</title><rect x="1063.1" y="67.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.05%)</title><rect x="1063.1" y="51.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1066.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (48 samples, 0.03%)</title><rect x="1064.0" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.0" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (48 samples, 0.03%)</title><rect x="1064.0" y="51.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.0" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (51 samples, 0.03%)</title><rect x="1064.6" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (51 samples, 0.03%)</title><rect x="1064.6" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (51 samples, 0.03%)</title><rect x="1064.6" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (51 samples, 0.03%)</title><rect x="1064.6" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,894 samples, 1.53%)</title><rect x="1065.2" y="323.0" width="18.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,885 samples, 1.52%)</title><rect x="1065.2" y="307.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.2" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (64 samples, 0.03%)</title><rect x="1065.3" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1068.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (50 samples, 0.03%)</title><rect x="1066.0" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,713 samples, 1.43%)</title><rect x="1066.3" y="291.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (510 samples, 0.27%)</title><rect x="1066.3" y="275.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (502 samples, 0.26%)</title><rect x="1066.3" y="259.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (436 samples, 0.23%)</title><rect x="1066.8" y="243.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (436 samples, 0.23%)</title><rect x="1066.8" y="227.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (435 samples, 0.23%)</title><rect x="1066.8" y="211.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (435 samples, 0.23%)</title><rect x="1066.8" y="195.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (435 samples, 0.23%)</title><rect x="1066.8" y="179.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (435 samples, 0.23%)</title><rect x="1066.8" y="163.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (404 samples, 0.21%)</title><rect x="1066.8" y="147.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (400 samples, 0.21%)</title><rect x="1066.8" y="131.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (400 samples, 0.21%)</title><rect x="1066.8" y="115.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (400 samples, 0.21%)</title><rect x="1066.8" y="99.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (250 samples, 0.13%)</title><rect x="1066.8" y="83.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (163 samples, 0.09%)</title><rect x="1066.8" y="67.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1069.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (87 samples, 0.05%)</title><rect x="1067.8" y="67.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.8" y="78.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.05%)</title><rect x="1067.8" y="51.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1070.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (114 samples, 0.06%)</title><rect x="1068.6" y="83.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (114 samples, 0.06%)</title><rect x="1068.6" y="67.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.04%)</title><rect x="1068.6" y="51.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1071.6" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (41 samples, 0.02%)</title><rect x="1069.5" y="275.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (223 samples, 0.12%)</title><rect x="1069.8" y="275.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (208 samples, 0.11%)</title><rect x="1069.9" y="259.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (208 samples, 0.11%)</title><rect x="1069.9" y="243.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (203 samples, 0.11%)</title><rect x="1069.9" y="227.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (203 samples, 0.11%)</title><rect x="1069.9" y="211.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (203 samples, 0.11%)</title><rect x="1069.9" y="195.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1072.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (203 samples, 0.11%)</title><rect x="1069.9" y="179.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (203 samples, 0.11%)</title><rect x="1069.9" y="163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (203 samples, 0.11%)</title><rect x="1069.9" y="147.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (180 samples, 0.09%)</title><rect x="1069.9" y="131.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (180 samples, 0.09%)</title><rect x="1069.9" y="115.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (180 samples, 0.09%)</title><rect x="1069.9" y="99.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (180 samples, 0.09%)</title><rect x="1069.9" y="83.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (109 samples, 0.06%)</title><rect x="1069.9" y="67.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1072.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (73 samples, 0.04%)</title><rect x="1069.9" y="51.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1072.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (54 samples, 0.03%)</title><rect x="1070.7" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.7" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.03%)</title><rect x="1070.7" y="51.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.7" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.02%)</title><rect x="1070.7" y="35.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1073.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,930 samples, 1.02%)</title><rect x="1071.2" y="275.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,907 samples, 1.01%)</title><rect x="1071.3" y="259.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,907 samples, 1.01%)</title><rect x="1071.3" y="243.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,907 samples, 1.01%)</title><rect x="1071.3" y="227.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1074.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,267 samples, 0.67%)</title><rect x="1071.3" y="211.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.3" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (843 samples, 0.44%)</title><rect x="1071.3" y="195.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1074.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (424 samples, 0.22%)</title><rect x="1076.6" y="195.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.6" y="206.0"></text>
</g>
<g>
<title>byte[] (424 samples, 0.22%)</title><rect x="1076.6" y="179.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1079.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (640 samples, 0.34%)</title><rect x="1079.2" y="211.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (640 samples, 0.34%)</title><rect x="1079.2" y="195.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (434 samples, 0.23%)</title><rect x="1079.2" y="179.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1082.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (206 samples, 0.11%)</title><rect x="1081.9" y="179.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.9" y="190.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.11%)</title><rect x="1081.9" y="163.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1084.9" y="174.0"></text>
</g>
<g>
<title>[worker-6 tid=7390] (3,349 samples, 1.77%)</title><rect x="1083.3" y="467.0" width="20.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1086.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,349 samples, 1.77%)</title><rect x="1083.3" y="451.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,349 samples, 1.77%)</title><rect x="1083.3" y="435.0" width="20.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,349 samples, 1.77%)</title><rect x="1083.3" y="419.0" width="20.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,322 samples, 1.75%)</title><rect x="1083.4" y="403.0" width="20.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1086.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,322 samples, 1.75%)</title><rect x="1083.4" y="387.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,322 samples, 1.75%)</title><rect x="1083.4" y="371.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,322 samples, 1.75%)</title><rect x="1083.4" y="355.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (55 samples, 0.03%)</title><rect x="1083.4" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (55 samples, 0.03%)</title><rect x="1083.4" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.02%)</title><rect x="1083.4" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.4" y="318.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (41 samples, 0.02%)</title><rect x="1083.4" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1086.4" y="302.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.02%)</title><rect x="1083.4" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1086.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (42 samples, 0.02%)</title><rect x="1083.8" y="339.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,209 samples, 1.69%)</title><rect x="1084.0" y="339.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1087.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (269 samples, 0.14%)</title><rect x="1084.0" y="323.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (269 samples, 0.14%)</title><rect x="1084.0" y="307.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1087.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (269 samples, 0.14%)</title><rect x="1084.0" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (269 samples, 0.14%)</title><rect x="1084.0" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (269 samples, 0.14%)</title><rect x="1084.0" y="259.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1087.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (232 samples, 0.12%)</title><rect x="1084.0" y="243.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (229 samples, 0.12%)</title><rect x="1084.0" y="227.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (229 samples, 0.12%)</title><rect x="1084.0" y="211.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (229 samples, 0.12%)</title><rect x="1084.0" y="195.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (229 samples, 0.12%)</title><rect x="1084.0" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (229 samples, 0.12%)</title><rect x="1084.0" y="163.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (229 samples, 0.12%)</title><rect x="1084.0" y="147.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (199 samples, 0.10%)</title><rect x="1084.0" y="131.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (199 samples, 0.10%)</title><rect x="1084.0" y="115.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (199 samples, 0.10%)</title><rect x="1084.0" y="99.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (199 samples, 0.10%)</title><rect x="1084.0" y="83.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (108 samples, 0.06%)</title><rect x="1084.0" y="67.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.04%)</title><rect x="1084.0" y="51.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1087.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (69 samples, 0.04%)</title><rect x="1084.8" y="67.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.8" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (69 samples, 0.04%)</title><rect x="1084.8" y="51.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.8" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 0.02%)</title><rect x="1084.8" y="35.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1087.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,864 samples, 1.51%)</title><rect x="1086.2" y="323.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,845 samples, 1.50%)</title><rect x="1086.3" y="307.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.3" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (65 samples, 0.03%)</title><rect x="1086.4" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1089.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (52 samples, 0.03%)</title><rect x="1087.0" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,678 samples, 1.41%)</title><rect x="1087.3" y="291.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (537 samples, 0.28%)</title><rect x="1087.3" y="275.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (529 samples, 0.28%)</title><rect x="1087.4" y="259.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (470 samples, 0.25%)</title><rect x="1087.7" y="243.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (470 samples, 0.25%)</title><rect x="1087.7" y="227.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (469 samples, 0.25%)</title><rect x="1087.7" y="211.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (469 samples, 0.25%)</title><rect x="1087.7" y="195.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (469 samples, 0.25%)</title><rect x="1087.7" y="179.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (469 samples, 0.25%)</title><rect x="1087.7" y="163.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (442 samples, 0.23%)</title><rect x="1087.7" y="147.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (441 samples, 0.23%)</title><rect x="1087.8" y="131.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (441 samples, 0.23%)</title><rect x="1087.8" y="115.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (441 samples, 0.23%)</title><rect x="1087.8" y="99.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (284 samples, 0.15%)</title><rect x="1087.8" y="83.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (184 samples, 0.10%)</title><rect x="1087.8" y="67.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1090.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (100 samples, 0.05%)</title><rect x="1088.9" y="67.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.9" y="78.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.05%)</title><rect x="1088.9" y="51.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1091.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (135 samples, 0.07%)</title><rect x="1089.7" y="83.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (135 samples, 0.07%)</title><rect x="1089.7" y="67.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (96 samples, 0.05%)</title><rect x="1089.7" y="51.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1092.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (227 samples, 0.12%)</title><rect x="1090.9" y="275.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (218 samples, 0.11%)</title><rect x="1091.0" y="259.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (218 samples, 0.11%)</title><rect x="1091.0" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (213 samples, 0.11%)</title><rect x="1091.0" y="227.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (213 samples, 0.11%)</title><rect x="1091.0" y="211.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (213 samples, 0.11%)</title><rect x="1091.0" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (213 samples, 0.11%)</title><rect x="1091.0" y="179.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (213 samples, 0.11%)</title><rect x="1091.0" y="163.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (213 samples, 0.11%)</title><rect x="1091.0" y="147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (191 samples, 0.10%)</title><rect x="1091.0" y="131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (191 samples, 0.10%)</title><rect x="1091.0" y="115.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (191 samples, 0.10%)</title><rect x="1091.0" y="99.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (191 samples, 0.10%)</title><rect x="1091.0" y="83.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (123 samples, 0.06%)</title><rect x="1091.0" y="67.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.04%)</title><rect x="1091.0" y="51.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1094.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (48 samples, 0.03%)</title><rect x="1091.5" y="51.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.5" y="62.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.03%)</title><rect x="1091.5" y="35.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1094.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (57 samples, 0.03%)</title><rect x="1091.8" y="67.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1094.8" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (57 samples, 0.03%)</title><rect x="1091.8" y="51.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,873 samples, 0.99%)</title><rect x="1092.3" y="275.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,845 samples, 0.97%)</title><rect x="1092.5" y="259.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,845 samples, 0.97%)</title><rect x="1092.5" y="243.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,845 samples, 0.97%)</title><rect x="1092.5" y="227.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,225 samples, 0.65%)</title><rect x="1092.5" y="211.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (798 samples, 0.42%)</title><rect x="1092.5" y="195.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1095.5" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (427 samples, 0.23%)</title><rect x="1097.5" y="195.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.5" y="206.0"></text>
</g>
<g>
<title>byte[] (427 samples, 0.23%)</title><rect x="1097.5" y="179.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1100.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (620 samples, 0.33%)</title><rect x="1100.1" y="211.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (620 samples, 0.33%)</title><rect x="1100.1" y="195.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (427 samples, 0.23%)</title><rect x="1100.1" y="179.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1103.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (193 samples, 0.10%)</title><rect x="1102.8" y="179.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.8" y="190.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.10%)</title><rect x="1102.8" y="163.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1105.8" y="174.0"></text>
</g>
<g>
<title>[worker-7 tid=7367] (7,105 samples, 3.75%)</title><rect x="1104.1" y="467.0" width="44.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1107.1" y="478.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (7,105 samples, 3.75%)</title><rect x="1104.1" y="451.0" width="44.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1107.1" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,105 samples, 3.75%)</title><rect x="1104.1" y="435.0" width="44.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.1" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,105 samples, 3.75%)</title><rect x="1104.1" y="419.0" width="44.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.1" y="430.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (7,097 samples, 3.74%)</title><rect x="1104.1" y="403.0" width="44.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.1" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (7,097 samples, 3.74%)</title><rect x="1104.1" y="387.0" width="44.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.1" y="398.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,553 samples, 0.82%)</title><rect x="1104.1" y="371.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1107.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (1,553 samples, 0.82%)</title><rect x="1104.1" y="355.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,507 samples, 0.79%)</title><rect x="1104.4" y="339.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (86 samples, 0.05%)</title><rect x="1104.4" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (86 samples, 0.05%)</title><rect x="1104.4" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (86 samples, 0.05%)</title><rect x="1104.4" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (86 samples, 0.05%)</title><rect x="1104.4" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (86 samples, 0.05%)</title><rect x="1104.4" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (73 samples, 0.04%)</title><rect x="1104.4" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (72 samples, 0.04%)</title><rect x="1104.4" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1107.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (72 samples, 0.04%)</title><rect x="1104.4" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (72 samples, 0.04%)</title><rect x="1104.4" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (72 samples, 0.04%)</title><rect x="1104.4" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.04%)</title><rect x="1104.4" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.04%)</title><rect x="1104.4" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (65 samples, 0.03%)</title><rect x="1104.4" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (65 samples, 0.03%)</title><rect x="1104.4" y="115.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (65 samples, 0.03%)</title><rect x="1104.4" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (65 samples, 0.03%)</title><rect x="1104.4" y="83.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (43 samples, 0.02%)</title><rect x="1104.4" y="67.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (1,381 samples, 0.73%)</title><rect x="1105.2" y="323.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (1,377 samples, 0.73%)</title><rect x="1105.2" y="307.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1108.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (1,331 samples, 0.70%)</title><rect x="1105.5" y="291.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (236 samples, 0.12%)</title><rect x="1105.5" y="275.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (235 samples, 0.12%)</title><rect x="1105.5" y="259.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (204 samples, 0.11%)</title><rect x="1105.7" y="243.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (204 samples, 0.11%)</title><rect x="1105.7" y="227.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (203 samples, 0.11%)</title><rect x="1105.7" y="211.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (203 samples, 0.11%)</title><rect x="1105.7" y="195.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (203 samples, 0.11%)</title><rect x="1105.7" y="179.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (203 samples, 0.11%)</title><rect x="1105.7" y="163.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (192 samples, 0.10%)</title><rect x="1105.7" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="1105.7" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1108.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (189 samples, 0.10%)</title><rect x="1105.7" y="115.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1108.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (189 samples, 0.10%)</title><rect x="1105.7" y="99.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (101 samples, 0.05%)</title><rect x="1105.7" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1108.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.03%)</title><rect x="1105.7" y="67.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1108.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.02%)</title><rect x="1106.1" y="67.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.1" y="78.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.02%)</title><rect x="1106.1" y="51.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1109.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (69 samples, 0.04%)</title><rect x="1106.5" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (69 samples, 0.04%)</title><rect x="1106.5" y="67.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1109.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 0.03%)</title><rect x="1106.5" y="51.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1109.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (94 samples, 0.05%)</title><rect x="1107.0" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (89 samples, 0.05%)</title><rect x="1107.0" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (89 samples, 0.05%)</title><rect x="1107.0" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (88 samples, 0.05%)</title><rect x="1107.0" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (88 samples, 0.05%)</title><rect x="1107.0" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (88 samples, 0.05%)</title><rect x="1107.0" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1110.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (88 samples, 0.05%)</title><rect x="1107.0" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.05%)</title><rect x="1107.0" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.05%)</title><rect x="1107.0" y="147.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (82 samples, 0.04%)</title><rect x="1107.0" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (82 samples, 0.04%)</title><rect x="1107.0" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (82 samples, 0.04%)</title><rect x="1107.0" y="99.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (82 samples, 0.04%)</title><rect x="1107.0" y="83.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (51 samples, 0.03%)</title><rect x="1107.0" y="67.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (991 samples, 0.52%)</title><rect x="1107.6" y="275.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (990 samples, 0.52%)</title><rect x="1107.6" y="259.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (990 samples, 0.52%)</title><rect x="1107.6" y="243.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (990 samples, 0.52%)</title><rect x="1107.6" y="227.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (653 samples, 0.34%)</title><rect x="1107.6" y="211.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (455 samples, 0.24%)</title><rect x="1107.6" y="195.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1110.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (198 samples, 0.10%)</title><rect x="1110.4" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.4" y="206.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.10%)</title><rect x="1110.4" y="179.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1113.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (337 samples, 0.18%)</title><rect x="1111.7" y="211.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (337 samples, 0.18%)</title><rect x="1111.7" y="195.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (219 samples, 0.12%)</title><rect x="1111.7" y="179.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1114.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (118 samples, 0.06%)</title><rect x="1113.0" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.0" y="190.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.06%)</title><rect x="1113.0" y="163.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1116.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.proxy (5,544 samples, 2.92%)</title><rect x="1113.8" y="371.0" width="34.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.8" y="382.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.02%)</title><rect x="1113.8" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/689401025.invoke (47 samples, 0.02%)</title><rect x="1113.8" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1116.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.02%)</title><rect x="1113.8" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1116.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (42 samples, 0.02%)</title><rect x="1113.8" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (42 samples, 0.02%)</title><rect x="1113.8" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.8" y="302.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.02%)</title><rect x="1113.8" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1116.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,461 samples, 2.88%)</title><rect x="1114.1" y="355.0" width="34.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.1" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,461 samples, 2.88%)</title><rect x="1114.1" y="339.0" width="34.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.1" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,280 samples, 2.78%)</title><rect x="1114.2" y="323.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.2" y="334.0">on..</text>
</g>
<g>
<title>byte[] (1,133 samples, 0.60%)</title><rect x="1114.2" y="307.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1117.2" y="318.0"></text>
</g>
<g>
<title>byte[] (4,147 samples, 2.19%)</title><rect x="1121.2" y="307.0" width="25.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1124.2" y="318.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (138 samples, 0.07%)</title><rect x="1147.0" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (107 samples, 0.06%)</title><rect x="1147.1" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 0.06%)</title><rect x="1147.1" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 0.06%)</title><rect x="1147.1" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.1" y="286.0"></text>
</g>
<g>
<title>char[] (67 samples, 0.04%)</title><rect x="1147.1" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1150.1" y="270.0"></text>
</g>
<g>
<title>[worker-7 tid=7381] (3,351 samples, 1.77%)</title><rect x="1148.3" y="467.0" width="20.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1151.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,351 samples, 1.77%)</title><rect x="1148.3" y="451.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,351 samples, 1.77%)</title><rect x="1148.3" y="435.0" width="20.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,351 samples, 1.77%)</title><rect x="1148.3" y="419.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,339 samples, 1.76%)</title><rect x="1148.4" y="403.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,339 samples, 1.76%)</title><rect x="1148.4" y="387.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1151.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,339 samples, 1.76%)</title><rect x="1148.4" y="371.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,339 samples, 1.76%)</title><rect x="1148.4" y="355.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (53 samples, 0.03%)</title><rect x="1148.4" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (53 samples, 0.03%)</title><rect x="1148.4" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (43 samples, 0.02%)</title><rect x="1148.7" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,229 samples, 1.70%)</title><rect x="1149.0" y="339.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1152.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (287 samples, 0.15%)</title><rect x="1149.0" y="323.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (287 samples, 0.15%)</title><rect x="1149.0" y="307.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (287 samples, 0.15%)</title><rect x="1149.0" y="291.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (287 samples, 0.15%)</title><rect x="1149.0" y="275.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (287 samples, 0.15%)</title><rect x="1149.0" y="259.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (239 samples, 0.13%)</title><rect x="1149.0" y="243.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1152.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (233 samples, 0.12%)</title><rect x="1149.0" y="227.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1152.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (233 samples, 0.12%)</title><rect x="1149.0" y="211.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (233 samples, 0.12%)</title><rect x="1149.0" y="195.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1152.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (233 samples, 0.12%)</title><rect x="1149.0" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (233 samples, 0.12%)</title><rect x="1149.0" y="163.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (233 samples, 0.12%)</title><rect x="1149.0" y="147.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (214 samples, 0.11%)</title><rect x="1149.0" y="131.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (214 samples, 0.11%)</title><rect x="1149.0" y="115.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1152.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (214 samples, 0.11%)</title><rect x="1149.0" y="99.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (214 samples, 0.11%)</title><rect x="1149.0" y="83.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (122 samples, 0.06%)</title><rect x="1149.0" y="67.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (73 samples, 0.04%)</title><rect x="1149.0" y="51.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1152.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (49 samples, 0.03%)</title><rect x="1149.5" y="51.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1152.5" y="62.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.03%)</title><rect x="1149.5" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1152.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (64 samples, 0.03%)</title><rect x="1150.0" y="67.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.0" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (64 samples, 0.03%)</title><rect x="1150.0" y="51.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.02%)</title><rect x="1150.0" y="35.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1153.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$72/77468105.apply (48 samples, 0.03%)</title><rect x="1150.5" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1153.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (48 samples, 0.03%)</title><rect x="1150.5" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (48 samples, 0.03%)</title><rect x="1150.5" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.03%)</title><rect x="1150.5" y="195.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1153.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (50 samples, 0.03%)</title><rect x="1150.8" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (50 samples, 0.03%)</title><rect x="1150.8" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (50 samples, 0.03%)</title><rect x="1150.8" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (50 samples, 0.03%)</title><rect x="1150.8" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,846 samples, 1.50%)</title><rect x="1151.4" y="323.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1154.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,830 samples, 1.49%)</title><rect x="1151.5" y="307.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.5" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (63 samples, 0.03%)</title><rect x="1151.5" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1154.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (54 samples, 0.03%)</title><rect x="1152.2" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,659 samples, 1.40%)</title><rect x="1152.5" y="291.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (510 samples, 0.27%)</title><rect x="1152.5" y="275.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (504 samples, 0.27%)</title><rect x="1152.6" y="259.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (454 samples, 0.24%)</title><rect x="1152.9" y="243.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (454 samples, 0.24%)</title><rect x="1152.9" y="227.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (451 samples, 0.24%)</title><rect x="1152.9" y="211.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (451 samples, 0.24%)</title><rect x="1152.9" y="195.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (451 samples, 0.24%)</title><rect x="1152.9" y="179.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1155.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (451 samples, 0.24%)</title><rect x="1152.9" y="163.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (435 samples, 0.23%)</title><rect x="1152.9" y="147.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (430 samples, 0.23%)</title><rect x="1152.9" y="131.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (430 samples, 0.23%)</title><rect x="1152.9" y="115.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (430 samples, 0.23%)</title><rect x="1152.9" y="99.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (270 samples, 0.14%)</title><rect x="1152.9" y="83.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1155.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (183 samples, 0.10%)</title><rect x="1152.9" y="67.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1155.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (87 samples, 0.05%)</title><rect x="1154.1" y="67.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.1" y="78.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.05%)</title><rect x="1154.1" y="51.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1157.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (112 samples, 0.06%)</title><rect x="1154.9" y="83.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (112 samples, 0.06%)</title><rect x="1154.9" y="67.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.04%)</title><rect x="1154.9" y="51.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1157.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (250 samples, 0.13%)</title><rect x="1156.0" y="275.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (242 samples, 0.13%)</title><rect x="1156.0" y="259.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (242 samples, 0.13%)</title><rect x="1156.0" y="243.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (237 samples, 0.13%)</title><rect x="1156.0" y="227.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (237 samples, 0.13%)</title><rect x="1156.0" y="211.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (237 samples, 0.13%)</title><rect x="1156.0" y="195.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.0" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (237 samples, 0.13%)</title><rect x="1156.0" y="179.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (237 samples, 0.13%)</title><rect x="1156.0" y="163.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (237 samples, 0.13%)</title><rect x="1156.0" y="147.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (214 samples, 0.11%)</title><rect x="1156.0" y="131.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (214 samples, 0.11%)</title><rect x="1156.0" y="115.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (214 samples, 0.11%)</title><rect x="1156.0" y="99.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1159.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (214 samples, 0.11%)</title><rect x="1156.0" y="83.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (134 samples, 0.07%)</title><rect x="1156.0" y="67.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (85 samples, 0.04%)</title><rect x="1156.0" y="51.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1159.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (49 samples, 0.03%)</title><rect x="1156.6" y="51.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.6" y="62.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.03%)</title><rect x="1156.6" y="35.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1159.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (55 samples, 0.03%)</title><rect x="1157.0" y="67.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.0" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.03%)</title><rect x="1157.0" y="51.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,859 samples, 0.98%)</title><rect x="1157.5" y="275.0" width="11.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,847 samples, 0.97%)</title><rect x="1157.6" y="259.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,847 samples, 0.97%)</title><rect x="1157.6" y="243.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,847 samples, 0.97%)</title><rect x="1157.6" y="227.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,275 samples, 0.67%)</title><rect x="1157.6" y="211.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (884 samples, 0.47%)</title><rect x="1157.6" y="195.0" width="5.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1160.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (391 samples, 0.21%)</title><rect x="1163.1" y="195.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.1" y="206.0"></text>
</g>
<g>
<title>byte[] (391 samples, 0.21%)</title><rect x="1163.1" y="179.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1166.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (572 samples, 0.30%)</title><rect x="1165.5" y="211.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1168.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (572 samples, 0.30%)</title><rect x="1165.5" y="195.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (383 samples, 0.20%)</title><rect x="1165.5" y="179.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1168.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (189 samples, 0.10%)</title><rect x="1167.9" y="179.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.9" y="190.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.10%)</title><rect x="1167.9" y="163.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1170.9" y="174.0"></text>
</g>
<g>
<title>[worker-7 tid=7387] (3,347 samples, 1.77%)</title><rect x="1169.2" y="467.0" width="20.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1172.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,347 samples, 1.77%)</title><rect x="1169.2" y="451.0" width="20.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,347 samples, 1.77%)</title><rect x="1169.2" y="435.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,347 samples, 1.77%)</title><rect x="1169.2" y="419.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$65/1589279360.run (3,327 samples, 1.75%)</title><rect x="1169.3" y="403.0" width="20.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$1 (3,327 samples, 1.75%)</title><rect x="1169.3" y="387.0" width="20.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (3,327 samples, 1.75%)</title><rect x="1169.3" y="371.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.doGet (3,327 samples, 1.75%)</title><rect x="1169.3" y="355.0" width="20.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 0.02%)</title><rect x="1169.3" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 0.02%)</title><rect x="1169.3" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (55 samples, 0.03%)</title><rect x="1169.6" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (45 samples, 0.02%)</title><rect x="1169.6" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,221 samples, 1.70%)</title><rect x="1169.9" y="339.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (274 samples, 0.14%)</title><rect x="1169.9" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (274 samples, 0.14%)</title><rect x="1169.9" y="307.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (274 samples, 0.14%)</title><rect x="1169.9" y="291.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (274 samples, 0.14%)</title><rect x="1169.9" y="275.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (274 samples, 0.14%)</title><rect x="1169.9" y="259.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (241 samples, 0.13%)</title><rect x="1169.9" y="243.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1172.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (234 samples, 0.12%)</title><rect x="1169.9" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (234 samples, 0.12%)</title><rect x="1169.9" y="211.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1172.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (234 samples, 0.12%)</title><rect x="1169.9" y="195.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.9" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (234 samples, 0.12%)</title><rect x="1169.9" y="179.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (234 samples, 0.12%)</title><rect x="1169.9" y="163.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (234 samples, 0.12%)</title><rect x="1169.9" y="147.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (207 samples, 0.11%)</title><rect x="1169.9" y="131.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1172.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (206 samples, 0.11%)</title><rect x="1169.9" y="115.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1172.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (206 samples, 0.11%)</title><rect x="1169.9" y="99.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (206 samples, 0.11%)</title><rect x="1169.9" y="83.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1172.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (135 samples, 0.07%)</title><rect x="1169.9" y="67.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (92 samples, 0.05%)</title><rect x="1169.9" y="51.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1172.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.02%)</title><rect x="1170.5" y="51.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.5" y="62.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.02%)</title><rect x="1170.5" y="35.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1173.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (49 samples, 0.03%)</title><rect x="1170.9" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1173.9" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (49 samples, 0.03%)</title><rect x="1170.9" y="51.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1173.9" y="62.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (47 samples, 0.02%)</title><rect x="1171.6" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (47 samples, 0.02%)</title><rect x="1171.6" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$82/51636278.apply (47 samples, 0.02%)</title><rect x="1171.6" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.lambda$iterator$2 (47 samples, 0.02%)</title><rect x="1171.6" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1174.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterator (2,859 samples, 1.51%)</title><rect x="1172.2" y="323.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (2,846 samples, 1.50%)</title><rect x="1172.2" y="307.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.2" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (61 samples, 0.03%)</title><rect x="1172.3" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1175.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (51 samples, 0.03%)</title><rect x="1173.0" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (2,678 samples, 1.41%)</title><rect x="1173.3" y="291.0" width="16.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (462 samples, 0.24%)</title><rect x="1173.3" y="275.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (456 samples, 0.24%)</title><rect x="1173.3" y="259.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (416 samples, 0.22%)</title><rect x="1173.6" y="243.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (416 samples, 0.22%)</title><rect x="1173.6" y="227.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (412 samples, 0.22%)</title><rect x="1173.6" y="211.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (412 samples, 0.22%)</title><rect x="1173.6" y="195.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1176.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (412 samples, 0.22%)</title><rect x="1173.6" y="179.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (412 samples, 0.22%)</title><rect x="1173.6" y="163.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (395 samples, 0.21%)</title><rect x="1173.6" y="147.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (390 samples, 0.21%)</title><rect x="1173.6" y="131.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (390 samples, 0.21%)</title><rect x="1173.6" y="115.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (390 samples, 0.21%)</title><rect x="1173.6" y="99.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (249 samples, 0.13%)</title><rect x="1173.6" y="83.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (170 samples, 0.09%)</title><rect x="1173.6" y="67.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1176.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (79 samples, 0.04%)</title><rect x="1174.7" y="67.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.7" y="78.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.04%)</title><rect x="1174.7" y="51.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1177.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (105 samples, 0.06%)</title><rect x="1175.4" y="83.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (105 samples, 0.06%)</title><rect x="1175.4" y="67.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1178.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.04%)</title><rect x="1175.4" y="51.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1178.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (242 samples, 0.13%)</title><rect x="1176.4" y="275.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (227 samples, 0.12%)</title><rect x="1176.5" y="259.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (227 samples, 0.12%)</title><rect x="1176.5" y="243.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (226 samples, 0.12%)</title><rect x="1176.5" y="227.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (226 samples, 0.12%)</title><rect x="1176.5" y="211.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (226 samples, 0.12%)</title><rect x="1176.5" y="195.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.5" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (226 samples, 0.12%)</title><rect x="1176.5" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="1176.5" y="163.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (226 samples, 0.12%)</title><rect x="1176.5" y="147.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (197 samples, 0.10%)</title><rect x="1176.5" y="131.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (197 samples, 0.10%)</title><rect x="1176.5" y="115.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (197 samples, 0.10%)</title><rect x="1176.5" y="99.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (197 samples, 0.10%)</title><rect x="1176.5" y="83.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (131 samples, 0.07%)</title><rect x="1176.5" y="67.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (85 samples, 0.04%)</title><rect x="1176.5" y="51.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1179.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (46 samples, 0.02%)</title><rect x="1177.1" y="51.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.1" y="62.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.02%)</title><rect x="1177.1" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1180.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (54 samples, 0.03%)</title><rect x="1177.4" y="67.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.4" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.03%)</title><rect x="1177.4" y="51.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.4" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.02%)</title><rect x="1177.4" y="35.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1180.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (1,927 samples, 1.02%)</title><rect x="1178.0" y="275.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (1,907 samples, 1.01%)</title><rect x="1178.1" y="259.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (1,907 samples, 1.01%)</title><rect x="1178.1" y="243.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (1,907 samples, 1.01%)</title><rect x="1178.1" y="227.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,282 samples, 0.68%)</title><rect x="1178.1" y="211.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (845 samples, 0.45%)</title><rect x="1178.1" y="195.0" width="5.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1181.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (437 samples, 0.23%)</title><rect x="1183.3" y="195.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.3" y="206.0"></text>
</g>
<g>
<title>byte[] (437 samples, 0.23%)</title><rect x="1183.3" y="179.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1186.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (625 samples, 0.33%)</title><rect x="1186.1" y="211.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (625 samples, 0.33%)</title><rect x="1186.1" y="195.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (415 samples, 0.22%)</title><rect x="1186.1" y="179.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1189.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (210 samples, 0.11%)</title><rect x="1188.6" y="179.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.6" y="190.0"></text>
</g>
<g>
<title>byte[] (210 samples, 0.11%)</title><rect x="1188.6" y="163.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1191.6" y="174.0"></text>
</g>
</g>
</svg>
