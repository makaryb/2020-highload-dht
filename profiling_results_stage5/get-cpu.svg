<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (14,987 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (19 samples, 0.13%)</title><rect x="10.2" y="883.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (19 samples, 0.13%)</title><rect x="10.2" y="867.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (17 samples, 0.11%)</title><rect x="10.3" y="851.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (16 samples, 0.11%)</title><rect x="10.4" y="835.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.4" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.05%)</title><rect x="10.4" y="819.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.4" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (6 samples, 0.04%)</title><rect x="11.2" y="819.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="14.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="11.3" y="803.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="14.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="11.3" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="14.3" y="798.0"></text>
</g>
<g>
<title>[not_walkable_Java] (12 samples, 0.08%)</title><rect x="11.8" y="883.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="14.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.05%)</title><rect x="11.9" y="867.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.9" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.05%)</title><rect x="11.9" y="851.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.9" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.04%)</title><rect x="12.0" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.0" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.03%)</title><rect x="12.4" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.15%)</title><rect x="12.8" y="883.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="15.8" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (19 samples, 0.13%)</title><rect x="13.1" y="867.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="16.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="14.1" y="851.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="14.1" y="835.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="17.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.03%)</title><rect x="14.2" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="17.2" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (31 samples, 0.21%)</title><rect x="14.6" y="883.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="17.6" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.12%)</title><rect x="14.8" y="867.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.8" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (18 samples, 0.12%)</title><rect x="14.8" y="851.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.8" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.06%)</title><rect x="16.3" y="867.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="19.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="16.4" y="851.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.4" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="16.4" y="835.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.4" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="16.6" y="819.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.6" y="830.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="16.6" y="803.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.6" y="814.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.03%)</title><rect x="16.7" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.03%)</title><rect x="16.7" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.7" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.03%)</title><rect x="16.7" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="19.7" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.03%)</title><rect x="16.7" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14,289 samples, 95.34%)</title><rect x="17.1" y="883.0" width="1125.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.1" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,289 samples, 95.34%)</title><rect x="17.1" y="867.0" width="1125.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.1" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,288 samples, 95.34%)</title><rect x="17.1" y="851.0" width="1125.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.1" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (650 samples, 4.34%)</title><rect x="17.7" y="835.0" width="51.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.7" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (603 samples, 4.02%)</title><rect x="18.0" y="819.0" width="47.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.0" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (602 samples, 4.02%)</title><rect x="18.0" y="803.0" width="47.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.0" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (4 samples, 0.03%)</title><rect x="18.0" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.03%)</title><rect x="18.0" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="18.0" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$72/823475275.call (598 samples, 3.99%)</title><rect x="18.3" y="787.0" width="47.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.3" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getResponses$0 (598 samples, 3.99%)</title><rect x="18.3" y="771.0" width="47.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.3" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.proxy (598 samples, 3.99%)</title><rect x="18.3" y="755.0" width="47.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.3" y="766.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (587 samples, 3.92%)</title><rect x="18.7" y="739.0" width="46.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.7" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (587 samples, 3.92%)</title><rect x="18.7" y="723.0" width="46.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.7" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (170 samples, 1.13%)</title><rect x="18.8" y="707.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.8" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (19 samples, 0.13%)</title><rect x="19.7" y="691.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.7" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (17 samples, 0.11%)</title><rect x="19.8" y="675.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="22.8" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (15 samples, 0.10%)</title><rect x="19.8" y="659.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.8" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.09%)</title><rect x="19.9" y="643.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="22.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (131 samples, 0.87%)</title><rect x="21.7" y="691.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.7" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (24 samples, 0.16%)</title><rect x="21.8" y="675.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.8" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 0.11%)</title><rect x="22.2" y="659.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="25.2" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.03%)</title><rect x="22.9" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="25.9" y="654.0"></text>
</g>
<g>
<title>recv (103 samples, 0.69%)</title><rect x="23.9" y="675.0" width="8.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="26.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 0.59%)</title><rect x="25.0" y="659.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="28.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 0.59%)</title><rect x="25.0" y="643.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (88 samples, 0.59%)</title><rect x="25.0" y="627.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="28.0" y="638.0"></text>
</g>
<g>
<title>__sys_recvfrom (87 samples, 0.58%)</title><rect x="25.0" y="611.0" width="6.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="28.0" y="622.0"></text>
</g>
<g>
<title>sock_recvmsg (81 samples, 0.54%)</title><rect x="25.4" y="595.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.4" y="606.0"></text>
</g>
<g>
<title>inet6_recvmsg (78 samples, 0.52%)</title><rect x="25.4" y="579.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (75 samples, 0.50%)</title><rect x="25.6" y="563.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="28.6" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.04%)</title><rect x="27.0" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.0" y="558.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.03%)</title><rect x="27.1" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.1" y="542.0"></text>
</g>
<g>
<title>sk_wait_data (16 samples, 0.11%)</title><rect x="27.7" y="547.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="30.7" y="558.0"></text>
</g>
<g>
<title>wait_woken (9 samples, 0.06%)</title><rect x="28.3" y="531.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="31.3" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (9 samples, 0.06%)</title><rect x="28.3" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.3" y="526.0"></text>
</g>
<g>
<title>__mod_timer (6 samples, 0.04%)</title><rect x="28.3" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.3" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.03%)</title><rect x="28.4" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.4" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (20 samples, 0.13%)</title><rect x="29.0" y="547.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.0" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (19 samples, 0.13%)</title><rect x="29.1" y="531.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.1" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.09%)</title><rect x="29.4" y="515.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.4" y="526.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.03%)</title><rect x="29.4" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.4" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="29.4" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.4" y="494.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.06%)</title><rect x="29.8" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.8" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.05%)</title><rect x="29.9" y="483.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="32.9" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (10 samples, 0.07%)</title><rect x="30.5" y="547.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.5" y="558.0"></text>
</g>
<g>
<title>tcp_send_ack (6 samples, 0.04%)</title><rect x="30.9" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="33.9" y="542.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (6 samples, 0.04%)</title><rect x="30.9" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.9" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.04%)</title><rect x="30.9" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.9" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.04%)</title><rect x="30.9" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.9" y="494.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 0.04%)</title><rect x="30.9" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.9" y="478.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.03%)</title><rect x="30.9" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.9" y="462.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.03%)</title><rect x="30.9" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="33.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.03%)</title><rect x="30.9" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.9" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 0.03%)</title><rect x="30.9" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.03%)</title><rect x="30.9" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.9" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.03%)</title><rect x="30.9" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.9" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.03%)</title><rect x="30.9" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="33.9" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.03%)</title><rect x="30.9" y="339.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="33.9" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="30.9" y="323.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.9" y="334.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.03%)</title><rect x="30.9" y="307.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="33.9" y="318.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.03%)</title><rect x="30.9" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.03%)</title><rect x="30.9" y="275.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.9" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.03%)</title><rect x="30.9" y="259.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="33.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.03%)</title><rect x="30.9" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="33.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.03%)</title><rect x="30.9" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="33.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.03%)</title><rect x="30.9" y="211.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="33.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="30.9" y="195.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.9" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="30.9" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="33.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="30.9" y="163.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="30.9" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.9" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="30.9" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="33.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.03%)</title><rect x="30.9" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (37 samples, 0.25%)</title><rect x="32.2" y="707.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.05%)</title><rect x="32.2" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (21 samples, 0.14%)</title><rect x="32.8" y="691.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.14%)</title><rect x="32.8" y="675.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.14%)</title><rect x="32.8" y="659.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.05%)</title><rect x="34.6" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (24 samples, 0.16%)</title><rect x="35.1" y="707.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.11%)</title><rect x="35.7" y="691.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.06%)</title><rect x="35.7" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (9 samples, 0.06%)</title><rect x="35.7" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.03%)</title><rect x="36.0" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.06%)</title><rect x="37.0" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="37.2" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="37.2" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (70 samples, 0.47%)</title><rect x="37.8" y="707.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.8" y="718.0"></text>
</g>
<g>
<title>setsockopt (66 samples, 0.44%)</title><rect x="38.1" y="691.0" width="5.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="41.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.31%)</title><rect x="39.6" y="675.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.31%)</title><rect x="39.7" y="659.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="42.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (35 samples, 0.23%)</title><rect x="40.5" y="643.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="43.5" y="654.0"></text>
</g>
<g>
<title>__sys_setsockopt (34 samples, 0.23%)</title><rect x="40.5" y="627.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.5" y="638.0"></text>
</g>
<g>
<title>__get_user_4 (5 samples, 0.03%)</title><rect x="40.9" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.9" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (9 samples, 0.06%)</title><rect x="41.8" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.06%)</title><rect x="42.5" y="611.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="45.5" y="622.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.05%)</title><rect x="42.6" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.05%)</title><rect x="42.6" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="45.6" y="590.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.05%)</title><rect x="42.6" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (267 samples, 1.78%)</title><rect x="43.3" y="707.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.3" y="718.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (7 samples, 0.05%)</title><rect x="43.5" y="691.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="46.5" y="702.0"></text>
</g>
<g>
<title>__send (256 samples, 1.71%)</title><rect x="44.1" y="691.0" width="20.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="47.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (242 samples, 1.61%)</title><rect x="45.2" y="675.0" width="19.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="48.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (242 samples, 1.61%)</title><rect x="45.2" y="659.0" width="19.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="48.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (238 samples, 1.59%)</title><rect x="45.5" y="643.0" width="18.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="48.5" y="654.0"></text>
</g>
<g>
<title>__sys_sendto (237 samples, 1.58%)</title><rect x="45.5" y="627.0" width="18.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="48.5" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (234 samples, 1.56%)</title><rect x="45.7" y="611.0" width="18.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.7" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (230 samples, 1.53%)</title><rect x="45.9" y="595.0" width="18.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="48.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (228 samples, 1.52%)</title><rect x="46.1" y="579.0" width="17.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="49.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (222 samples, 1.48%)</title><rect x="46.3" y="563.0" width="17.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="49.3" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.03%)</title><rect x="46.8" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.8" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (13 samples, 0.09%)</title><rect x="47.2" y="547.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.2" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.08%)</title><rect x="47.3" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="50.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.05%)</title><rect x="47.4" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="50.4" y="526.0"></text>
</g>
<g>
<title>tcp_push (191 samples, 1.27%)</title><rect x="48.4" y="547.0" width="15.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="51.4" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (191 samples, 1.27%)</title><rect x="48.4" y="531.0" width="15.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.4" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (187 samples, 1.25%)</title><rect x="48.7" y="515.0" width="14.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="51.7" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (169 samples, 1.13%)</title><rect x="48.8" y="499.0" width="13.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="51.8" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (162 samples, 1.08%)</title><rect x="49.3" y="483.0" width="12.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="52.3" y="494.0"></text>
</g>
<g>
<title>__ip_queue_xmit (160 samples, 1.07%)</title><rect x="49.3" y="467.0" width="12.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="52.3" y="478.0"></text>
</g>
<g>
<title>ip_local_out (158 samples, 1.05%)</title><rect x="49.4" y="451.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="52.4" y="462.0"></text>
</g>
<g>
<title>ip_output (158 samples, 1.05%)</title><rect x="49.4" y="435.0" width="12.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (156 samples, 1.04%)</title><rect x="49.6" y="419.0" width="12.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="52.6" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (154 samples, 1.03%)</title><rect x="49.7" y="403.0" width="12.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.7" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (152 samples, 1.01%)</title><rect x="49.8" y="387.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.8" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (136 samples, 0.91%)</title><rect x="49.9" y="371.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.9" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (136 samples, 0.91%)</title><rect x="49.9" y="355.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.9" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (136 samples, 0.91%)</title><rect x="49.9" y="339.0" width="10.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="52.9" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (135 samples, 0.90%)</title><rect x="49.9" y="323.0" width="10.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="52.9" y="334.0"></text>
</g>
<g>
<title>net_rx_action (130 samples, 0.87%)</title><rect x="50.2" y="307.0" width="10.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="53.2" y="318.0"></text>
</g>
<g>
<title>process_backlog (129 samples, 0.86%)</title><rect x="50.3" y="291.0" width="10.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="53.3" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (128 samples, 0.85%)</title><rect x="50.4" y="275.0" width="10.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (128 samples, 0.85%)</title><rect x="50.4" y="259.0" width="10.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="53.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (124 samples, 0.83%)</title><rect x="50.7" y="243.0" width="9.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="53.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (120 samples, 0.80%)</title><rect x="50.9" y="227.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="53.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (119 samples, 0.79%)</title><rect x="51.0" y="211.0" width="9.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="54.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (119 samples, 0.79%)</title><rect x="51.0" y="195.0" width="9.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.0" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (118 samples, 0.79%)</title><rect x="51.0" y="179.0" width="9.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.0" y="190.0"></text>
</g>
<g>
<title>sock_put (4 samples, 0.03%)</title><rect x="51.1" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="54.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (113 samples, 0.75%)</title><rect x="51.4" y="163.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="54.4" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.05%)</title><rect x="51.4" y="147.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="54.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (104 samples, 0.69%)</title><rect x="52.1" y="147.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.1" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (101 samples, 0.67%)</title><rect x="52.4" y="131.0" width="7.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.4" y="142.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.03%)</title><rect x="52.6" y="115.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="55.6" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.03%)</title><rect x="52.6" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.6" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="52.6" y="83.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="55.6" y="94.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.03%)</title><rect x="52.6" y="67.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="55.6" y="78.0"></text>
</g>
<g>
<title>tcp_ack (29 samples, 0.19%)</title><rect x="53.0" y="115.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="56.0" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (19 samples, 0.13%)</title><rect x="53.6" y="99.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="56.6" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.05%)</title><rect x="54.1" y="83.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="57.1" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.03%)</title><rect x="54.1" y="67.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.1" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.03%)</title><rect x="54.1" y="51.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="57.1" y="62.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.03%)</title><rect x="54.4" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.4" y="78.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.03%)</title><rect x="54.4" y="51.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="57.4" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (61 samples, 0.41%)</title><rect x="55.4" y="115.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.4" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (61 samples, 0.41%)</title><rect x="55.4" y="99.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="58.4" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (60 samples, 0.40%)</title><rect x="55.4" y="83.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (60 samples, 0.40%)</title><rect x="55.4" y="67.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="58.4" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (60 samples, 0.40%)</title><rect x="55.4" y="51.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.4" y="62.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.09%)</title><rect x="60.6" y="371.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.6" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.09%)</title><rect x="60.6" y="355.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="63.6" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.05%)</title><rect x="60.8" y="339.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="63.8" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.03%)</title><rect x="60.9" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="63.9" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.04%)</title><rect x="62.7" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="65.7" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.03%)</title><rect x="63.5" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.5" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.03%)</title><rect x="64.6" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (7 samples, 0.05%)</title><rect x="64.9" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (43 samples, 0.29%)</title><rect x="65.4" y="819.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (43 samples, 0.29%)</title><rect x="65.4" y="803.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (43 samples, 0.29%)</title><rect x="65.4" y="787.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.4" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (43 samples, 0.29%)</title><rect x="65.4" y="771.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (43 samples, 0.29%)</title><rect x="65.4" y="755.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (32 samples, 0.21%)</title><rect x="65.5" y="739.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (32 samples, 0.21%)</title><rect x="65.5" y="723.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (32 samples, 0.21%)</title><rect x="65.5" y="707.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (32 samples, 0.21%)</title><rect x="65.5" y="691.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.21%)</title><rect x="65.5" y="675.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.21%)</title><rect x="65.5" y="659.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.5" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.04%)</title><rect x="65.6" y="643.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="68.6" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.17%)</title><rect x="66.1" y="643.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="69.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.13%)</title><rect x="66.5" y="627.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="69.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.13%)</title><rect x="66.5" y="611.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="69.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.13%)</title><rect x="66.5" y="595.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="69.5" y="606.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.13%)</title><rect x="66.5" y="579.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="69.5" y="590.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.13%)</title><rect x="66.5" y="563.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.5" y="574.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.09%)</title><rect x="66.9" y="547.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="69.9" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.09%)</title><rect x="66.9" y="531.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="69.9" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.09%)</title><rect x="66.9" y="515.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.03%)</title><rect x="68.0" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.03%)</title><rect x="68.0" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="68.4" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="68.4" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.03%)</title><rect x="68.4" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (306 samples, 2.04%)</title><rect x="69.0" y="835.0" width="24.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.0" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (302 samples, 2.02%)</title><rect x="69.3" y="819.0" width="23.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.3" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (209 samples, 1.39%)</title><rect x="69.6" y="803.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.03%)</title><rect x="69.6" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.04%)</title><rect x="69.9" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (27 samples, 0.18%)</title><rect x="70.4" y="787.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.18%)</title><rect x="70.4" y="771.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.17%)</title><rect x="70.4" y="755.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.16%)</title><rect x="70.5" y="739.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.16%)</title><rect x="70.5" y="723.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 0.15%)</title><rect x="70.6" y="707.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="73.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.12%)</title><rect x="70.9" y="691.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="73.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.12%)</title><rect x="70.9" y="675.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="73.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.11%)</title><rect x="71.1" y="659.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="74.1" y="670.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.11%)</title><rect x="71.1" y="643.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.10%)</title><rect x="71.2" y="627.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="74.2" y="638.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.09%)</title><rect x="71.3" y="611.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.3" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.09%)</title><rect x="71.3" y="595.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="74.3" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.09%)</title><rect x="71.3" y="579.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (171 samples, 1.14%)</title><rect x="72.6" y="787.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (171 samples, 1.14%)</title><rect x="72.6" y="771.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.6" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (65 samples, 0.43%)</title><rect x="72.8" y="755.0" width="5.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="75.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.07%)</title><rect x="73.6" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="76.6" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.03%)</title><rect x="73.9" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="76.9" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (37 samples, 0.25%)</title><rect x="74.6" y="739.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="77.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.13%)</title><rect x="76.1" y="723.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.13%)</title><rect x="76.1" y="707.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="79.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.09%)</title><rect x="76.5" y="691.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.5" y="702.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.09%)</title><rect x="76.5" y="675.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="79.5" y="686.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.07%)</title><rect x="76.5" y="659.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.5" y="670.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.03%)</title><rect x="76.9" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 0.69%)</title><rect x="77.9" y="755.0" width="8.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="80.9" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.03%)</title><rect x="77.9" y="739.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="80.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (86 samples, 0.57%)</title><rect x="78.3" y="739.0" width="6.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.21%)</title><rect x="82.6" y="723.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.21%)</title><rect x="82.6" y="707.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="85.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.15%)</title><rect x="83.2" y="691.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.2" y="702.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.15%)</title><rect x="83.3" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="86.3" y="686.0"></text>
</g>
<g>
<title>futex_wait (21 samples, 0.14%)</title><rect x="83.4" y="659.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.4" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.04%)</title><rect x="83.7" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="86.7" y="654.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="83.8" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.8" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.03%)</title><rect x="83.9" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.9" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.06%)</title><rect x="84.2" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="87.2" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.05%)</title><rect x="85.0" y="739.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="88.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.05%)</title><rect x="86.2" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.05%)</title><rect x="86.2" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.05%)</title><rect x="86.2" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (79 samples, 0.53%)</title><rect x="86.8" y="803.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (79 samples, 0.53%)</title><rect x="86.8" y="787.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (79 samples, 0.53%)</title><rect x="86.8" y="771.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (79 samples, 0.53%)</title><rect x="86.8" y="755.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (61 samples, 0.41%)</title><rect x="88.2" y="739.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.2" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.06%)</title><rect x="88.3" y="723.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="91.3" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (50 samples, 0.33%)</title><rect x="89.0" y="723.0" width="4.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="92.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.32%)</title><rect x="89.2" y="707.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.32%)</title><rect x="89.2" y="691.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 0.28%)</title><rect x="89.7" y="675.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.7" y="686.0"></text>
</g>
<g>
<title>do_futex (42 samples, 0.28%)</title><rect x="89.7" y="659.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="92.7" y="670.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.27%)</title><rect x="89.8" y="643.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.8" y="654.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 0.23%)</title><rect x="90.2" y="627.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="93.2" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.23%)</title><rect x="90.2" y="611.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="93.2" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (35 samples, 0.23%)</title><rect x="90.2" y="595.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="93.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$64/313824963.run (13,322 samples, 88.89%)</title><rect x="93.1" y="835.0" width="1048.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.1" y="846.0">ru/mail/polis/service/boriskin/NewService$$Lambda$64/313824963.run</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (13,320 samples, 88.88%)</title><rect x="93.1" y="819.0" width="1048.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.1" y="830.0">ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (13,320 samples, 88.88%)</title><rect x="93.1" y="803.0" width="1048.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.1" y="814.0">ru/mail/polis/service/boriskin/NewService.operation</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.06%)</title><rect x="93.3" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.04%)</title><rect x="93.5" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.04%)</title><rect x="93.5" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (20 samples, 0.13%)</title><rect x="94.0" y="787.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.03%)</title><rect x="94.2" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="94.2" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="94.2" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.07%)</title><rect x="94.8" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="95.0" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="95.0" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.03%)</title><rect x="95.0" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (529 samples, 3.53%)</title><rect x="95.6" y="787.0" width="41.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.6" y="798.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (529 samples, 3.53%)</title><rect x="95.6" y="771.0" width="41.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.6" y="782.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (515 samples, 3.44%)</title><rect x="96.4" y="755.0" width="40.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.4" y="766.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.15%)</title><rect x="96.5" y="739.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.09%)</title><rect x="97.1" y="723.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (14 samples, 0.09%)</title><rect x="97.1" y="707.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.09%)</title><rect x="97.1" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="97.8" y="675.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="100.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (492 samples, 3.28%)</title><rect x="98.2" y="739.0" width="38.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.2" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (492 samples, 3.28%)</title><rect x="98.2" y="723.0" width="38.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.2" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (487 samples, 3.25%)</title><rect x="98.5" y="707.0" width="38.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.5" y="718.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (486 samples, 3.24%)</title><rect x="98.6" y="691.0" width="38.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.6" y="702.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (17 samples, 0.11%)</title><rect x="98.6" y="675.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="101.6" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.06%)</title><rect x="99.1" y="659.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="102.1" y="670.0"></text>
</g>
<g>
<title>__send (466 samples, 3.11%)</title><rect x="100.1" y="675.0" width="36.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="103.1" y="686.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (437 samples, 2.92%)</title><rect x="102.4" y="659.0" width="34.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.4" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (436 samples, 2.91%)</title><rect x="102.4" y="643.0" width="34.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.4" y="654.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (428 samples, 2.86%)</title><rect x="102.8" y="627.0" width="33.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.8" y="638.0">__..</text>
</g>
<g>
<title>__sys_sendto (428 samples, 2.86%)</title><rect x="102.8" y="611.0" width="33.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="105.8" y="622.0">__..</text>
</g>
<g>
<title>sock_sendmsg (415 samples, 2.77%)</title><rect x="103.1" y="595.0" width="32.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="106.1" y="606.0">so..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.04%)</title><rect x="103.1" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="106.1" y="590.0"></text>
</g>
<g>
<title>inet6_sendmsg (406 samples, 2.71%)</title><rect x="103.6" y="579.0" width="32.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.6" y="590.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (403 samples, 2.69%)</title><rect x="103.9" y="563.0" width="31.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="106.9" y="574.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (388 samples, 2.59%)</title><rect x="105.0" y="547.0" width="30.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="108.0" y="558.0">tc..</text>
</g>
<g>
<title>sk_stream_alloc_skb (24 samples, 0.16%)</title><rect x="106.2" y="531.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.2" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.14%)</title><rect x="106.5" y="515.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="109.5" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.05%)</title><rect x="106.7" y="499.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.7" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.03%)</title><rect x="106.7" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.03%)</title><rect x="107.4" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.4" y="510.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.04%)</title><rect x="108.1" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.1" y="542.0"></text>
</g>
<g>
<title>tcp_push (339 samples, 2.26%)</title><rect x="108.6" y="531.0" width="26.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.6" y="542.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (338 samples, 2.26%)</title><rect x="108.6" y="515.0" width="26.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.6" y="526.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (334 samples, 2.23%)</title><rect x="108.9" y="499.0" width="26.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="111.9" y="510.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (303 samples, 2.02%)</title><rect x="109.4" y="483.0" width="23.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="112.4" y="494.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (293 samples, 1.96%)</title><rect x="109.9" y="467.0" width="23.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.9" y="478.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (291 samples, 1.94%)</title><rect x="109.9" y="451.0" width="22.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="112.9" y="462.0">_..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.03%)</title><rect x="110.3" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.3" y="446.0"></text>
</g>
<g>
<title>ip_local_out (282 samples, 1.88%)</title><rect x="110.6" y="435.0" width="22.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.6" y="446.0">i..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.03%)</title><rect x="110.7" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.7" y="430.0"></text>
</g>
<g>
<title>ip_output (277 samples, 1.85%)</title><rect x="111.0" y="419.0" width="21.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.0" y="430.0">i..</text>
</g>
<g>
<title>ip_finish_output (276 samples, 1.84%)</title><rect x="111.1" y="403.0" width="21.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.1" y="414.0">i..</text>
</g>
<g>
<title>__ip_finish_output (271 samples, 1.81%)</title><rect x="111.3" y="387.0" width="21.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="114.3" y="398.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (269 samples, 1.79%)</title><rect x="111.5" y="371.0" width="21.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.5" y="382.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (244 samples, 1.63%)</title><rect x="111.6" y="355.0" width="19.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.6" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (243 samples, 1.62%)</title><rect x="111.7" y="339.0" width="19.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.7" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (242 samples, 1.61%)</title><rect x="111.8" y="323.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.8" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (242 samples, 1.61%)</title><rect x="111.8" y="307.0" width="19.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.8" y="318.0"></text>
</g>
<g>
<title>net_rx_action (233 samples, 1.55%)</title><rect x="112.3" y="291.0" width="18.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="115.3" y="302.0"></text>
</g>
<g>
<title>process_backlog (231 samples, 1.54%)</title><rect x="112.4" y="275.0" width="18.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (227 samples, 1.51%)</title><rect x="112.7" y="259.0" width="17.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="115.7" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (226 samples, 1.51%)</title><rect x="112.7" y="243.0" width="17.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.7" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.03%)</title><rect x="113.0" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv (218 samples, 1.45%)</title><rect x="113.4" y="227.0" width="17.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="116.4" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (211 samples, 1.41%)</title><rect x="113.9" y="211.0" width="16.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (209 samples, 1.39%)</title><rect x="113.9" y="195.0" width="16.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (209 samples, 1.39%)</title><rect x="113.9" y="179.0" width="16.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.9" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (208 samples, 1.39%)</title><rect x="113.9" y="163.0" width="16.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (202 samples, 1.35%)</title><rect x="114.4" y="147.0" width="15.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="117.4" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.05%)</title><rect x="114.6" y="131.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="117.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (187 samples, 1.25%)</title><rect x="115.5" y="131.0" width="14.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (180 samples, 1.20%)</title><rect x="116.1" y="115.0" width="14.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="119.1" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.05%)</title><rect x="116.1" y="99.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="119.1" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.05%)</title><rect x="116.2" y="83.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.2" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.05%)</title><rect x="116.2" y="67.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.2" y="78.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.05%)</title><rect x="116.2" y="51.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="119.2" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.05%)</title><rect x="116.2" y="35.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.2" y="46.0"></text>
</g>
<g>
<title>tcp_ack (41 samples, 0.27%)</title><rect x="116.8" y="99.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="119.8" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (32 samples, 0.21%)</title><rect x="117.4" y="83.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.4" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.09%)</title><rect x="118.3" y="67.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="121.3" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.04%)</title><rect x="118.3" y="51.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="121.3" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.03%)</title><rect x="118.3" y="35.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.3" y="46.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.05%)</title><rect x="118.7" y="51.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="121.7" y="62.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.05%)</title><rect x="118.7" y="35.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.7" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (122 samples, 0.81%)</title><rect x="120.1" y="99.0" width="9.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="123.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (122 samples, 0.81%)</title><rect x="120.1" y="83.0" width="9.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="123.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (122 samples, 0.81%)</title><rect x="120.1" y="67.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="123.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (122 samples, 0.81%)</title><rect x="120.1" y="51.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="123.1" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (119 samples, 0.79%)</title><rect x="120.2" y="35.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.2" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (22 samples, 0.15%)</title><rect x="130.9" y="355.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="133.9" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.14%)</title><rect x="130.9" y="339.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="133.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.08%)</title><rect x="131.0" y="323.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.0" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.05%)</title><rect x="131.1" y="307.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="134.1" y="318.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.03%)</title><rect x="131.2" y="291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="134.2" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.03%)</title><rect x="132.1" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="135.1" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.05%)</title><rect x="133.7" y="483.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.7" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.03%)</title><rect x="133.9" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="136.9" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.06%)</title><rect x="135.8" y="595.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.8" y="606.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.06%)</title><rect x="135.8" y="579.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.8" y="590.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.06%)</title><rect x="135.8" y="563.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="138.8" y="574.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.06%)</title><rect x="135.8" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.03%)</title><rect x="136.9" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getting (12,760 samples, 85.14%)</title><rect x="137.2" y="787.0" width="1004.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.2" y="798.0">ru/mail/polis/service/boriskin/ReplicaWorker.getting</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.03%)</title><rect x="137.4" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.03%)</title><rect x="137.4" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.getTableCell (12,510 samples, 83.47%)</title><rect x="138.1" y="771.0" width="985.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.1" y="782.0">ru/mail/polis/dao/boriskin/NewDAO.getTableCell</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (285 samples, 1.90%)</title><rect x="138.1" y="755.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.1" y="766.0">c..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (285 samples, 1.90%)</title><rect x="138.1" y="739.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.1" y="750.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (282 samples, 1.88%)</title><rect x="138.3" y="723.0" width="22.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.3" y="734.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (282 samples, 1.88%)</title><rect x="138.3" y="707.0" width="22.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.3" y="718.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (280 samples, 1.87%)</title><rect x="138.3" y="691.0" width="22.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.3" y="702.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.04%)</title><rect x="138.3" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.3" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.04%)</title><rect x="138.3" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.3" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.04%)</title><rect x="138.3" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="138.4" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="138.4" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.03%)</title><rect x="138.4" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.4" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.03%)</title><rect x="138.4" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.03%)</title><rect x="138.4" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.03%)</title><rect x="138.4" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.03%)</title><rect x="138.5" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.5" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.03%)</title><rect x="138.5" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (273 samples, 1.82%)</title><rect x="138.8" y="675.0" width="21.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.8" y="686.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (273 samples, 1.82%)</title><rect x="138.8" y="659.0" width="21.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.8" y="670.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (273 samples, 1.82%)</title><rect x="138.8" y="643.0" width="21.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (272 samples, 1.81%)</title><rect x="138.9" y="627.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.9" y="638.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (271 samples, 1.81%)</title><rect x="139.0" y="611.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.0" y="622.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (271 samples, 1.81%)</title><rect x="139.0" y="595.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.0" y="606.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (265 samples, 1.77%)</title><rect x="139.0" y="579.0" width="20.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (265 samples, 1.77%)</title><rect x="139.0" y="563.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (265 samples, 1.77%)</title><rect x="139.0" y="547.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (265 samples, 1.77%)</title><rect x="139.0" y="531.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (85 samples, 0.57%)</title><rect x="139.2" y="515.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (84 samples, 0.56%)</title><rect x="139.3" y="499.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (84 samples, 0.56%)</title><rect x="139.3" y="483.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (80 samples, 0.53%)</title><rect x="139.4" y="467.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (74 samples, 0.49%)</title><rect x="139.7" y="451.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (74 samples, 0.49%)</title><rect x="139.7" y="435.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (74 samples, 0.49%)</title><rect x="139.7" y="419.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.7" y="430.0"></text>
</g>
<g>
<title>__libc_pread64 (72 samples, 0.48%)</title><rect x="139.7" y="403.0" width="5.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="142.7" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.25%)</title><rect x="142.4" y="387.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="145.4" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.24%)</title><rect x="142.5" y="371.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.5" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.14%)</title><rect x="143.7" y="355.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="146.7" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.13%)</title><rect x="143.8" y="339.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="146.8" y="350.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.12%)</title><rect x="143.9" y="323.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="146.9" y="334.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.07%)</title><rect x="144.2" y="307.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="147.2" y="318.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.06%)</title><rect x="144.2" y="291.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="147.2" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.06%)</title><rect x="144.2" y="275.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="147.2" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.06%)</title><rect x="144.2" y="259.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="147.2" y="270.0"></text>
</g>
<g>
<title>generic_file_buffered_read (8 samples, 0.05%)</title><rect x="144.3" y="243.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="147.3" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.03%)</title><rect x="144.4" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.4" y="238.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="145.0" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (176 samples, 1.17%)</title><rect x="145.9" y="515.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (176 samples, 1.17%)</title><rect x="145.9" y="499.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.03%)</title><rect x="146.1" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.1" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.03%)</title><rect x="146.2" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (159 samples, 1.06%)</title><rect x="146.5" y="483.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (141 samples, 0.94%)</title><rect x="147.0" y="467.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (140 samples, 0.93%)</title><rect x="147.0" y="451.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (140 samples, 0.93%)</title><rect x="147.0" y="435.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.0" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (134 samples, 0.89%)</title><rect x="147.2" y="419.0" width="10.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="150.2" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 0.46%)</title><rect x="152.4" y="403.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.4" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 0.45%)</title><rect x="152.4" y="387.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="155.4" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (53 samples, 0.35%)</title><rect x="153.6" y="371.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="156.6" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (52 samples, 0.35%)</title><rect x="153.7" y="355.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="156.7" y="366.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.03%)</title><rect x="153.8" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="156.8" y="350.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="153.8" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="156.8" y="334.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="153.8" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="156.8" y="318.0"></text>
</g>
<g>
<title>vfs_read (45 samples, 0.30%)</title><rect x="154.2" y="339.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.2" y="350.0"></text>
</g>
<g>
<title>__vfs_read (35 samples, 0.23%)</title><rect x="154.5" y="323.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.5" y="334.0"></text>
</g>
<g>
<title>new_sync_read (34 samples, 0.23%)</title><rect x="154.6" y="307.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.6" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (32 samples, 0.21%)</title><rect x="154.7" y="291.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.7" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (31 samples, 0.21%)</title><rect x="154.8" y="275.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.8" y="286.0"></text>
</g>
<g>
<title>generic_file_buffered_read (29 samples, 0.19%)</title><rect x="154.9" y="259.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="157.9" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.03%)</title><rect x="155.9" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.9" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.04%)</title><rect x="156.4" y="243.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.4" y="254.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.03%)</title><rect x="156.4" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="159.4" y="238.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.03%)</title><rect x="156.8" y="243.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="159.8" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.03%)</title><rect x="156.8" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.8" y="238.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.04%)</title><rect x="157.3" y="323.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="160.3" y="334.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.03%)</title><rect x="157.5" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.5" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.03%)</title><rect x="157.5" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.5" y="302.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.03%)</title><rect x="157.5" y="275.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="160.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.06%)</title><rect x="158.1" y="467.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.1" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="158.1" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.03%)</title><rect x="159.0" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.03%)</title><rect x="159.4" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="159.8" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.04%)</title><rect x="159.8" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (6 samples, 0.04%)</title><rect x="159.8" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (6 samples, 0.04%)</title><rect x="159.8" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="159.8" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="159.8" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="159.8" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.03%)</title><rect x="160.5" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.5" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.03%)</title><rect x="160.5" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (12,221 samples, 81.54%)</title><rect x="160.9" y="755.0" width="962.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.9" y="766.0">ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.04%)</title><rect x="161.1" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (10 samples, 0.07%)</title><rect x="162.0" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (9 samples, 0.06%)</title><rect x="162.1" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (5 samples, 0.03%)</title><rect x="162.1" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (4 samples, 0.03%)</title><rect x="162.5" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (47 samples, 0.31%)</title><rect x="162.8" y="739.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (44 samples, 0.29%)</title><rect x="162.8" y="723.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (44 samples, 0.29%)</title><rect x="162.8" y="707.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (41 samples, 0.27%)</title><rect x="162.8" y="691.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (41 samples, 0.27%)</title><rect x="162.8" y="675.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (41 samples, 0.27%)</title><rect x="162.8" y="659.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (38 samples, 0.25%)</title><rect x="163.1" y="643.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (22 samples, 0.15%)</title><rect x="164.3" y="627.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="167.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (21 samples, 0.14%)</title><rect x="164.4" y="611.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.12%)</title><rect x="164.6" y="595.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.6" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.08%)</title><rect x="164.7" y="579.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.05%)</title><rect x="165.1" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.03%)</title><rect x="165.7" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (12,149 samples, 81.06%)</title><rect x="166.5" y="739.0" width="956.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.5" y="750.0">ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,363 samples, 9.09%)</title><rect x="166.5" y="723.0" width="107.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.5" y="734.0">com/google/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,362 samples, 9.09%)</title><rect x="166.5" y="707.0" width="107.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.5" y="718.0">com/google/co..</text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.03%)</title><rect x="167.2" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.2" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,346 samples, 8.98%)</title><rect x="167.5" y="691.0" width="106.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.5" y="702.0">java/util/Pri..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,346 samples, 8.98%)</title><rect x="167.5" y="675.0" width="106.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.5" y="686.0">java/util/Pri..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.03%)</title><rect x="167.5" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.5" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,342 samples, 8.95%)</title><rect x="167.9" y="659.0" width="105.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.9" y="670.0">java/util/Pri..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,342 samples, 8.95%)</title><rect x="167.9" y="643.0" width="105.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.9" y="654.0">java/util/Pri..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,340 samples, 8.94%)</title><rect x="168.0" y="627.0" width="105.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="638.0">com/google/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,337 samples, 8.92%)</title><rect x="168.3" y="611.0" width="105.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.3" y="622.0">com/google/co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,326 samples, 8.85%)</title><rect x="168.4" y="595.0" width="104.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.4" y="606.0">com/google/c..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.03%)</title><rect x="168.5" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,318 samples, 8.79%)</title><rect x="168.8" y="579.0" width="103.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.8" y="590.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,318 samples, 8.79%)</title><rect x="168.8" y="563.0" width="103.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.8" y="574.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (1,318 samples, 8.79%)</title><rect x="168.8" y="547.0" width="103.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.8" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.06%)</title><rect x="169.0" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="169.0" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="169.0" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="169.2" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (442 samples, 2.95%)</title><rect x="169.8" y="531.0" width="34.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.8" y="542.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.05%)</title><rect x="169.8" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="169.8" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="169.9" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="170.0" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="170.1" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.03%)</title><rect x="170.1" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (434 samples, 2.90%)</title><rect x="170.5" y="515.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.5" y="526.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (431 samples, 2.88%)</title><rect x="170.7" y="499.0" width="33.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.7" y="510.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (26 samples, 0.17%)</title><rect x="170.9" y="483.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.9" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (25 samples, 0.17%)</title><rect x="170.9" y="467.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.9" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (10 samples, 0.07%)</title><rect x="172.1" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.1" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (10 samples, 0.07%)</title><rect x="172.1" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (10 samples, 0.07%)</title><rect x="172.1" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (8 samples, 0.05%)</title><rect x="172.9" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.9" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.05%)</title><rect x="173.0" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.0" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.03%)</title><rect x="173.1" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.1" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.03%)</title><rect x="173.1" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.03%)</title><rect x="173.1" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (371 samples, 2.48%)</title><rect x="173.5" y="483.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.5" y="494.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (325 samples, 2.17%)</title><rect x="174.4" y="467.0" width="25.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.4" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (322 samples, 2.15%)</title><rect x="174.6" y="451.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.6" y="462.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (322 samples, 2.15%)</title><rect x="174.6" y="435.0" width="25.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.6" y="446.0">s..</text>
</g>
<g>
<title>__libc_pread64 (310 samples, 2.07%)</title><rect x="174.9" y="419.0" width="24.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="177.9" y="430.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (186 samples, 1.24%)</title><rect x="184.6" y="403.0" width="14.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="187.6" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (184 samples, 1.23%)</title><rect x="184.8" y="387.0" width="14.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.8" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (139 samples, 0.93%)</title><rect x="188.3" y="371.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="191.3" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (139 samples, 0.93%)</title><rect x="188.3" y="355.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="191.3" y="366.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.12%)</title><rect x="188.6" y="339.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.6" y="350.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.12%)</title><rect x="188.6" y="323.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.6" y="334.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.12%)</title><rect x="188.6" y="307.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="191.6" y="318.0"></text>
</g>
<g>
<title>vfs_read (109 samples, 0.73%)</title><rect x="190.7" y="339.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="193.7" y="350.0"></text>
</g>
<g>
<title>__vfs_read (76 samples, 0.51%)</title><rect x="191.2" y="323.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="194.2" y="334.0"></text>
</g>
<g>
<title>new_sync_read (73 samples, 0.49%)</title><rect x="191.5" y="307.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="194.5" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (67 samples, 0.45%)</title><rect x="192.0" y="291.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.0" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (66 samples, 0.44%)</title><rect x="192.0" y="275.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="195.0" y="286.0"></text>
</g>
<g>
<title>generic_file_buffered_read (63 samples, 0.42%)</title><rect x="192.2" y="259.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="195.2" y="270.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.03%)</title><rect x="193.1" y="243.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.1" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (17 samples, 0.11%)</title><rect x="193.5" y="243.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.5" y="254.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.03%)</title><rect x="193.8" y="227.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.8" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (7 samples, 0.05%)</title><rect x="194.2" y="227.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="197.2" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (18 samples, 0.12%)</title><rect x="194.9" y="243.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="197.9" y="254.0"></text>
</g>
<g>
<title>find_get_entry (17 samples, 0.11%)</title><rect x="195.0" y="227.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="198.0" y="238.0"></text>
</g>
<g>
<title>touch_atime (8 samples, 0.05%)</title><rect x="196.5" y="243.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="199.5" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (8 samples, 0.05%)</title><rect x="196.5" y="227.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.5" y="238.0"></text>
</g>
<g>
<title>current_time (8 samples, 0.05%)</title><rect x="196.5" y="211.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="199.5" y="222.0"></text>
</g>
<g>
<title>rw_verify_area (24 samples, 0.16%)</title><rect x="197.4" y="323.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.4" y="334.0"></text>
</g>
<g>
<title>security_file_permission (20 samples, 0.13%)</title><rect x="197.7" y="307.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.7" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (11 samples, 0.07%)</title><rect x="198.0" y="291.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="201.0" y="302.0"></text>
</g>
<g>
<title>common_file_perm (11 samples, 0.07%)</title><rect x="198.0" y="275.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="201.0" y="286.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.03%)</title><rect x="199.0" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="202.0" y="302.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.03%)</title><rect x="199.3" y="419.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="202.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (16 samples, 0.11%)</title><rect x="200.0" y="467.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.0" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="200.1" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (7 samples, 0.05%)</title><rect x="200.7" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (19 samples, 0.13%)</title><rect x="201.2" y="467.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.2" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.07%)</title><rect x="201.4" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.4" y="462.0"></text>
</g>
<g>
<title>vtable stub (7 samples, 0.05%)</title><rect x="201.7" y="435.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="204.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (4 samples, 0.03%)</title><rect x="202.4" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (15 samples, 0.10%)</title><rect x="202.7" y="483.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.05%)</title><rect x="203.4" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (9 samples, 0.06%)</title><rect x="203.9" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (862 samples, 5.75%)</title><rect x="204.7" y="531.0" width="67.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.7" y="542.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (860 samples, 5.74%)</title><rect x="204.9" y="515.0" width="67.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.9" y="526.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (30 samples, 0.20%)</title><rect x="205.3" y="499.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.3" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (30 samples, 0.20%)</title><rect x="205.3" y="483.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.3" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.05%)</title><rect x="207.1" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.1" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.05%)</title><rect x="207.1" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.05%)</title><rect x="207.1" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (15 samples, 0.10%)</title><rect x="207.7" y="499.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.7" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (14 samples, 0.09%)</title><rect x="207.8" y="483.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.8" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.05%)</title><rect x="208.3" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.3" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.05%)</title><rect x="208.3" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.05%)</title><rect x="208.3" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (773 samples, 5.16%)</title><rect x="208.9" y="499.0" width="60.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.9" y="510.0">sun/ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (19 samples, 0.13%)</title><rect x="210.5" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (16 samples, 0.11%)</title><rect x="210.7" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (6 samples, 0.04%)</title><rect x="210.8" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.04%)</title><rect x="211.5" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.04%)</title><rect x="211.5" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.04%)</title><rect x="211.5" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (6 samples, 0.04%)</title><rect x="211.5" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (698 samples, 4.66%)</title><rect x="212.1" y="483.0" width="55.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.1" y="494.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (695 samples, 4.64%)</title><rect x="212.3" y="467.0" width="54.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.3" y="478.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (695 samples, 4.64%)</title><rect x="212.3" y="451.0" width="54.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.3" y="462.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (6 samples, 0.04%)</title><rect x="213.9" y="435.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="216.9" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (653 samples, 4.36%)</title><rect x="214.4" y="435.0" width="51.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="217.4" y="446.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (354 samples, 2.36%)</title><rect x="237.9" y="419.0" width="27.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="240.9" y="430.0">e..</text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.05%)</title><rect x="237.9" y="403.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.9" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (346 samples, 2.31%)</title><rect x="238.5" y="403.0" width="27.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="241.5" y="414.0">d..</text>
</g>
<g>
<title>__x64_sys_pread64 (262 samples, 1.75%)</title><rect x="244.9" y="387.0" width="20.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="247.9" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (262 samples, 1.75%)</title><rect x="244.9" y="371.0" width="20.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.9" y="382.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.12%)</title><rect x="245.2" y="355.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="248.2" y="366.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.12%)</title><rect x="245.2" y="339.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="248.2" y="350.0"></text>
</g>
<g>
<title>__fget (17 samples, 0.11%)</title><rect x="245.3" y="323.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="248.3" y="334.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.07%)</title><rect x="246.6" y="355.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="249.6" y="366.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.03%)</title><rect x="247.8" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.8" y="366.0"></text>
</g>
<g>
<title>vfs_read (220 samples, 1.47%)</title><rect x="248.2" y="355.0" width="17.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="251.2" y="366.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.05%)</title><rect x="249.7" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="252.7" y="350.0"></text>
</g>
<g>
<title>__vfs_read (155 samples, 1.03%)</title><rect x="250.2" y="339.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="253.2" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.05%)</title><rect x="250.5" y="323.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.5" y="334.0"></text>
</g>
<g>
<title>iov_iter_init (4 samples, 0.03%)</title><rect x="251.0" y="323.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="254.0" y="334.0"></text>
</g>
<g>
<title>new_sync_read (141 samples, 0.94%)</title><rect x="251.3" y="323.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="254.3" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (129 samples, 0.86%)</title><rect x="252.3" y="307.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.3" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (125 samples, 0.83%)</title><rect x="252.6" y="291.0" width="9.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="255.6" y="302.0"></text>
</g>
<g>
<title>generic_file_buffered_read (122 samples, 0.81%)</title><rect x="252.7" y="275.0" width="9.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.7" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (34 samples, 0.23%)</title><rect x="255.8" y="259.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="258.8" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (14 samples, 0.09%)</title><rect x="257.1" y="243.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.1" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (31 samples, 0.21%)</title><rect x="258.6" y="259.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="261.6" y="270.0"></text>
</g>
<g>
<title>find_get_entry (28 samples, 0.19%)</title><rect x="258.8" y="243.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.8" y="254.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.03%)</title><rect x="260.7" y="227.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="263.7" y="238.0"></text>
</g>
<g>
<title>touch_atime (16 samples, 0.11%)</title><rect x="261.1" y="259.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.1" y="270.0"></text>
</g>
<g>
<title>atime_needs_update (14 samples, 0.09%)</title><rect x="261.2" y="243.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.2" y="254.0"></text>
</g>
<g>
<title>current_time (7 samples, 0.05%)</title><rect x="261.6" y="227.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.6" y="238.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.03%)</title><rect x="261.6" y="211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="264.6" y="222.0"></text>
</g>
<g>
<title>fsnotify (8 samples, 0.05%)</title><rect x="262.4" y="339.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="265.4" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (31 samples, 0.21%)</title><rect x="263.1" y="339.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="266.1" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="263.3" y="323.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="266.3" y="334.0"></text>
</g>
<g>
<title>security_file_permission (22 samples, 0.15%)</title><rect x="263.8" y="323.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="266.8" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.07%)</title><rect x="264.2" y="307.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.2" y="318.0"></text>
</g>
<g>
<title>common_file_perm (9 samples, 0.06%)</title><rect x="264.2" y="291.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.2" y="302.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.03%)</title><rect x="264.9" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="267.9" y="318.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.05%)</title><rect x="265.8" y="435.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="268.8" y="446.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (7 samples, 0.05%)</title><rect x="266.4" y="435.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="269.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (13 samples, 0.09%)</title><rect x="267.1" y="483.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="267.1" y="467.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.03%)</title><rect x="267.7" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (21 samples, 0.14%)</title><rect x="268.1" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.08%)</title><rect x="268.3" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.3" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.03%)</title><rect x="268.8" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (6 samples, 0.04%)</title><rect x="269.3" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (19 samples, 0.13%)</title><rect x="269.7" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.05%)</title><rect x="270.7" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (17 samples, 0.11%)</title><rect x="271.2" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.2" y="510.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.06%)</title><rect x="272.8" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.8" y="606.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.06%)</title><rect x="272.8" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (9 samples, 0.06%)</title><rect x="272.8" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (9 samples, 0.06%)</title><rect x="272.8" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.03%)</title><rect x="272.9" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.9" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.hasNext (5 samples, 0.03%)</title><rect x="274.0" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.0" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.next (11 samples, 0.07%)</title><rect x="274.4" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.4" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (11 samples, 0.07%)</title><rect x="274.4" y="707.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (10 samples, 0.07%)</title><rect x="274.4" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (10 samples, 0.07%)</title><rect x="274.4" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (10 samples, 0.07%)</title><rect x="274.4" y="659.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (8 samples, 0.05%)</title><rect x="274.5" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.5" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (7 samples, 0.05%)</title><rect x="275.3" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (7 samples, 0.05%)</title><rect x="275.3" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.3" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.04%)</title><rect x="275.3" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.3" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5 samples, 0.03%)</title><rect x="275.4" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (326 samples, 2.18%)</title><rect x="275.9" y="723.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.9" y="734.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (326 samples, 2.18%)</title><rect x="275.9" y="707.0" width="25.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.9" y="718.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (326 samples, 2.18%)</title><rect x="275.9" y="691.0" width="25.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.9" y="702.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.04%)</title><rect x="275.9" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.9" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.04%)</title><rect x="275.9" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.9" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (320 samples, 2.14%)</title><rect x="276.4" y="675.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.4" y="686.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (320 samples, 2.14%)</title><rect x="276.4" y="659.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (320 samples, 2.14%)</title><rect x="276.4" y="643.0" width="25.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.4" y="654.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (320 samples, 2.14%)</title><rect x="276.4" y="627.0" width="25.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.4" y="638.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (320 samples, 2.14%)</title><rect x="276.4" y="611.0" width="25.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.4" y="622.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (320 samples, 2.14%)</title><rect x="276.4" y="595.0" width="25.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.4" y="606.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (313 samples, 2.09%)</title><rect x="276.4" y="579.0" width="24.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.4" y="590.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (313 samples, 2.09%)</title><rect x="276.4" y="563.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.4" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (313 samples, 2.09%)</title><rect x="276.4" y="547.0" width="24.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.4" y="558.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (313 samples, 2.09%)</title><rect x="276.4" y="531.0" width="24.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.4" y="542.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.03%)</title><rect x="276.4" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (103 samples, 0.69%)</title><rect x="276.8" y="515.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (102 samples, 0.68%)</title><rect x="276.8" y="499.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (102 samples, 0.68%)</title><rect x="276.8" y="483.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.03%)</title><rect x="277.0" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.0" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.03%)</title><rect x="277.0" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (89 samples, 0.59%)</title><rect x="277.4" y="467.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="280.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.03%)</title><rect x="277.5" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (78 samples, 0.52%)</title><rect x="277.8" y="451.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (78 samples, 0.52%)</title><rect x="277.8" y="435.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (78 samples, 0.52%)</title><rect x="277.8" y="419.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.8" y="430.0"></text>
</g>
<g>
<title>__libc_pread64 (74 samples, 0.49%)</title><rect x="277.9" y="403.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="280.9" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.26%)</title><rect x="280.7" y="387.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="283.7" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.26%)</title><rect x="280.7" y="371.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.7" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (31 samples, 0.21%)</title><rect x="281.2" y="355.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="284.2" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (31 samples, 0.21%)</title><rect x="281.2" y="339.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="284.2" y="350.0"></text>
</g>
<g>
<title>vfs_read (28 samples, 0.19%)</title><rect x="281.5" y="323.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="284.5" y="334.0"></text>
</g>
<g>
<title>__vfs_read (19 samples, 0.13%)</title><rect x="281.6" y="307.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.6" y="318.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.11%)</title><rect x="281.8" y="291.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="284.8" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter (15 samples, 0.10%)</title><rect x="282.0" y="275.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="285.0" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (14 samples, 0.09%)</title><rect x="282.0" y="259.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="285.0" y="270.0"></text>
</g>
<g>
<title>generic_file_buffered_read (14 samples, 0.09%)</title><rect x="282.0" y="243.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="285.0" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.03%)</title><rect x="282.3" y="227.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="285.3" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.03%)</title><rect x="282.7" y="227.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="285.7" y="238.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.03%)</title><rect x="282.7" y="211.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="285.7" y="222.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.03%)</title><rect x="283.1" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="286.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.03%)</title><rect x="284.0" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.03%)</title><rect x="284.4" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (204 samples, 1.36%)</title><rect x="284.9" y="515.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (203 samples, 1.35%)</title><rect x="284.9" y="499.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.05%)</title><rect x="285.0" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.0" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.05%)</title><rect x="285.0" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.0" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.03%)</title><rect x="285.2" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.2" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.03%)</title><rect x="285.2" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.2" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.03%)</title><rect x="285.2" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (9 samples, 0.06%)</title><rect x="285.6" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.6" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (9 samples, 0.06%)</title><rect x="285.6" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.6" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.04%)</title><rect x="285.8" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.8" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.04%)</title><rect x="285.8" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.8" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.04%)</title><rect x="285.8" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (180 samples, 1.20%)</title><rect x="286.3" y="483.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (166 samples, 1.11%)</title><rect x="286.6" y="467.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (165 samples, 1.10%)</title><rect x="286.6" y="451.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (165 samples, 1.10%)</title><rect x="286.6" y="435.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.6" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (160 samples, 1.07%)</title><rect x="286.8" y="419.0" width="12.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="289.8" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 0.59%)</title><rect x="292.3" y="403.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="295.3" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 0.58%)</title><rect x="292.5" y="387.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="295.5" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (71 samples, 0.47%)</title><rect x="293.8" y="371.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.8" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (69 samples, 0.46%)</title><rect x="293.9" y="355.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="296.9" y="366.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.04%)</title><rect x="294.1" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="297.1" y="350.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="294.2" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.2" y="334.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="294.2" y="307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.2" y="318.0"></text>
</g>
<g>
<title>vfs_read (57 samples, 0.38%)</title><rect x="294.9" y="339.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="297.9" y="350.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.03%)</title><rect x="295.2" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.2" y="334.0"></text>
</g>
<g>
<title>__vfs_read (37 samples, 0.25%)</title><rect x="295.5" y="323.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="298.5" y="334.0"></text>
</g>
<g>
<title>new_sync_read (35 samples, 0.23%)</title><rect x="295.7" y="307.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="298.7" y="318.0"></text>
</g>
<g>
<title>ext4_file_read_iter (34 samples, 0.23%)</title><rect x="295.7" y="291.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="298.7" y="302.0"></text>
</g>
<g>
<title>generic_file_read_iter (32 samples, 0.21%)</title><rect x="295.9" y="275.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="298.9" y="286.0"></text>
</g>
<g>
<title>generic_file_buffered_read (30 samples, 0.20%)</title><rect x="296.0" y="259.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.0" y="270.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.07%)</title><rect x="296.5" y="243.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="299.5" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="296.9" y="227.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.9" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.03%)</title><rect x="297.4" y="243.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="300.4" y="254.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.03%)</title><rect x="297.4" y="227.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="300.4" y="238.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.05%)</title><rect x="297.8" y="243.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="300.8" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.05%)</title><rect x="297.8" y="227.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="300.8" y="238.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.03%)</title><rect x="297.9" y="211.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.9" y="222.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.06%)</title><rect x="298.6" y="323.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="301.6" y="334.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.06%)</title><rect x="298.6" y="307.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="301.6" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.04%)</title><rect x="298.6" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.6" y="302.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.03%)</title><rect x="298.8" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="301.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.03%)</title><rect x="299.7" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.03%)</title><rect x="300.1" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="303.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.03%)</title><rect x="300.5" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.5" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.05%)</title><rect x="301.0" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.05%)</title><rect x="301.0" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.05%)</title><rect x="301.0" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.05%)</title><rect x="301.0" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="301.0" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.0" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="301.1" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (10,434 samples, 69.62%)</title><rect x="301.6" y="723.0" width="821.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.6" y="734.0">ru/mail/polis/dao/boriskin/SortedStringTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (10,434 samples, 69.62%)</title><rect x="301.6" y="707.0" width="821.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.6" y="718.0">ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (10,433 samples, 69.61%)</title><rect x="301.6" y="691.0" width="821.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.6" y="702.0">ru/mail/polis/dao/boriskin/SortedStringTable.findNext</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (74 samples, 0.49%)</title><rect x="301.9" y="675.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.9" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.03%)</title><rect x="302.3" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.3" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (58 samples, 0.39%)</title><rect x="302.6" y="659.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (20 samples, 0.13%)</title><rect x="305.6" y="643.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.6" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (8 samples, 0.05%)</title><rect x="306.5" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="309.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.04%)</title><rect x="307.2" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (10,356 samples, 69.10%)</title><rect x="307.7" y="675.0" width="815.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.7" y="686.0">ru/mail/polis/dao/boriskin/SortedStringTable.findK</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (58 samples, 0.39%)</title><rect x="307.8" y="659.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.8" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.07%)</title><rect x="308.0" y="643.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="311.0" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (11 samples, 0.07%)</title><rect x="308.0" y="627.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="311.0" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (10 samples, 0.07%)</title><rect x="308.0" y="611.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="311.0" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.06%)</title><rect x="308.0" y="595.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="311.0" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="308.3" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="311.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (44 samples, 0.29%)</title><rect x="308.9" y="643.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.9" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.05%)</title><rect x="309.0" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="312.0" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.05%)</title><rect x="309.0" y="611.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="312.0" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.05%)</title><rect x="309.0" y="595.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="312.0" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.04%)</title><rect x="309.1" y="579.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="312.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.22%)</title><rect x="309.7" y="627.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.7" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.17%)</title><rect x="310.1" y="611.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (12 samples, 0.08%)</title><rect x="310.3" y="595.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.05%)</title><rect x="310.7" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.7" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.03%)</title><rect x="310.9" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.08%)</title><rect x="311.2" y="595.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.08%)</title><rect x="311.2" y="579.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.2" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="311.8" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (3,793 samples, 25.31%)</title><rect x="312.3" y="659.0" width="298.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.3" y="670.0">ru/mail/polis/dao/boriskin/SortedStringT..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (24 samples, 0.16%)</title><rect x="312.4" y="643.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.4" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="312.8" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="315.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="312.8" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="315.8" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="312.8" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="315.8" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="312.8" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="315.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.09%)</title><rect x="313.2" y="627.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="314.0" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.0" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (11 samples, 0.07%)</title><rect x="314.3" y="643.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,757 samples, 25.07%)</title><rect x="315.2" y="643.0" width="295.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.2" y="654.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (22 samples, 0.15%)</title><rect x="317.1" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.1" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (14 samples, 0.09%)</title><rect x="317.7" y="611.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="318.2" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,711 samples, 24.76%)</title><rect x="318.8" y="627.0" width="292.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.8" y="638.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (94 samples, 0.63%)</title><rect x="321.6" y="611.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (135 samples, 0.90%)</title><rect x="329.0" y="611.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.0" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (133 samples, 0.89%)</title><rect x="329.2" y="595.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.08%)</title><rect x="333.9" y="579.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.9" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (6 samples, 0.04%)</title><rect x="334.9" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.9" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (55 samples, 0.37%)</title><rect x="335.3" y="579.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.3" y="590.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (47 samples, 0.31%)</title><rect x="336.0" y="563.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (47 samples, 0.31%)</title><rect x="336.0" y="547.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.05%)</title><rect x="339.0" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (9 samples, 0.06%)</title><rect x="339.7" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.7" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.05%)</title><rect x="339.8" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.8" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.03%)</title><rect x="340.1" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.1" y="590.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.03%)</title><rect x="340.1" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.03%)</title><rect x="340.1" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3,261 samples, 21.76%)</title><rect x="340.4" y="611.0" width="256.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.4" y="622.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (65 samples, 0.43%)</title><rect x="341.8" y="595.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.05%)</title><rect x="342.4" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.4" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (47 samples, 0.31%)</title><rect x="343.0" y="579.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (43 samples, 0.29%)</title><rect x="343.4" y="563.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.4" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (7 samples, 0.05%)</title><rect x="345.3" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.3" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.08%)</title><rect x="345.8" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (4 samples, 0.03%)</title><rect x="345.8" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (8 samples, 0.05%)</title><rect x="346.1" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.1" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (7 samples, 0.05%)</title><rect x="346.9" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,824 samples, 18.84%)</title><rect x="347.5" y="595.0" width="222.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.5" y="606.0">sun/nio/ch/IOUtil.readIntoNat..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (56 samples, 0.37%)</title><rect x="352.7" y="579.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.7" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (53 samples, 0.35%)</title><rect x="353.0" y="563.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (51 samples, 0.34%)</title><rect x="353.1" y="547.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (51 samples, 0.34%)</title><rect x="353.1" y="531.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,701 samples, 18.02%)</title><rect x="357.1" y="579.0" width="212.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.1" y="590.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,701 samples, 18.02%)</title><rect x="357.1" y="563.0" width="212.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.1" y="574.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (8 samples, 0.05%)</title><rect x="362.1" y="547.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="365.1" y="558.0"></text>
</g>
<g>
<title>__libc_pread64 (2,550 samples, 17.01%)</title><rect x="362.7" y="547.0" width="200.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="365.7" y="558.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,468 samples, 9.80%)</title><rect x="447.8" y="531.0" width="115.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.8" y="542.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_pread64 (31 samples, 0.21%)</title><rect x="447.8" y="515.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="450.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (1,436 samples, 9.58%)</title><rect x="450.4" y="515.0" width="113.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.4" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (1,068 samples, 7.13%)</title><rect x="479.2" y="499.0" width="84.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="482.2" y="510.0">__x64_sys_..</text>
</g>
<g>
<title>ksys_pread64 (1,062 samples, 7.09%)</title><rect x="479.6" y="483.0" width="83.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="482.6" y="494.0">ksys_prea..</text>
</g>
<g>
<title>__fdget (92 samples, 0.61%)</title><rect x="481.1" y="467.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.1" y="478.0"></text>
</g>
<g>
<title>__fget_light (91 samples, 0.61%)</title><rect x="481.1" y="451.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="484.1" y="462.0"></text>
</g>
<g>
<title>__fget (89 samples, 0.59%)</title><rect x="481.3" y="435.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.3" y="446.0"></text>
</g>
<g>
<title>__fget_light (24 samples, 0.16%)</title><rect x="488.3" y="467.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="491.3" y="478.0"></text>
</g>
<g>
<title>fput_many (30 samples, 0.20%)</title><rect x="490.5" y="467.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="493.5" y="478.0"></text>
</g>
<g>
<title>vfs_read (888 samples, 5.93%)</title><rect x="493.3" y="467.0" width="69.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="496.3" y="478.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (17 samples, 0.11%)</title><rect x="497.1" y="451.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="500.1" y="462.0"></text>
</g>
<g>
<title>__vfs_read (612 samples, 4.08%)</title><rect x="498.5" y="451.0" width="48.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="501.5" y="462.0">__vf..</text>
</g>
<g>
<title>ext4_file_read_iter (33 samples, 0.22%)</title><rect x="498.7" y="435.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.7" y="446.0"></text>
</g>
<g>
<title>iov_iter_init (8 samples, 0.05%)</title><rect x="501.3" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="504.3" y="446.0"></text>
</g>
<g>
<title>new_sync_read (568 samples, 3.79%)</title><rect x="501.9" y="435.0" width="44.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="504.9" y="446.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (523 samples, 3.49%)</title><rect x="505.3" y="419.0" width="41.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.3" y="430.0">ext..</text>
</g>
<g>
<title>generic_file_read_iter (501 samples, 3.34%)</title><rect x="507.1" y="403.0" width="39.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="510.1" y="414.0">gen..</text>
</g>
<g>
<title>generic_file_buffered_read (479 samples, 3.20%)</title><rect x="508.1" y="387.0" width="37.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.1" y="398.0">gen..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.03%)</title><rect x="516.4" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.4" y="382.0"></text>
</g>
<g>
<title>copy_page_to_iter (143 samples, 0.95%)</title><rect x="516.8" y="371.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="519.8" y="382.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.03%)</title><rect x="520.1" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="523.1" y="366.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (15 samples, 0.10%)</title><rect x="520.5" y="355.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="523.5" y="366.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (61 samples, 0.41%)</title><rect x="521.7" y="355.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.7" y="366.0"></text>
</g>
<g>
<title>copyout (11 samples, 0.07%)</title><rect x="526.5" y="355.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.5" y="366.0"></text>
</g>
<g>
<title>rcu_all_qs (9 samples, 0.06%)</title><rect x="527.4" y="355.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="530.4" y="366.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.03%)</title><rect x="528.1" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="531.1" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (15 samples, 0.10%)</title><rect x="528.5" y="371.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.5" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (131 samples, 0.87%)</title><rect x="529.7" y="371.0" width="10.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="532.7" y="382.0"></text>
</g>
<g>
<title>find_get_entry (120 samples, 0.80%)</title><rect x="530.4" y="355.0" width="9.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="533.4" y="366.0"></text>
</g>
<g>
<title>xas_load (19 samples, 0.13%)</title><rect x="535.9" y="339.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="538.9" y="350.0"></text>
</g>
<g>
<title>xas_start (30 samples, 0.20%)</title><rect x="537.4" y="339.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.4" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (7 samples, 0.05%)</title><rect x="540.0" y="371.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="543.0" y="382.0"></text>
</g>
<g>
<title>touch_atime (66 samples, 0.44%)</title><rect x="540.6" y="371.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="543.6" y="382.0"></text>
</g>
<g>
<title>atime_needs_update (52 samples, 0.35%)</title><rect x="541.4" y="355.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.4" y="366.0"></text>
</g>
<g>
<title>current_time (27 samples, 0.18%)</title><rect x="543.1" y="339.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="546.1" y="350.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (13 samples, 0.09%)</title><rect x="543.9" y="323.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="546.9" y="334.0"></text>
</g>
<g>
<title>timestamp_truncate (4 samples, 0.03%)</title><rect x="544.9" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="547.9" y="334.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.03%)</title><rect x="545.5" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.5" y="366.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.03%)</title><rect x="545.8" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="548.8" y="398.0"></text>
</g>
<g>
<title>fsnotify (30 samples, 0.20%)</title><rect x="546.7" y="451.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="549.7" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (179 samples, 1.19%)</title><rect x="549.1" y="451.0" width="14.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="552.1" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (32 samples, 0.21%)</title><rect x="549.9" y="435.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="552.9" y="446.0"></text>
</g>
<g>
<title>security_file_permission (136 samples, 0.91%)</title><rect x="552.5" y="435.0" width="10.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="555.5" y="446.0"></text>
</g>
<g>
<title>__fsnotify_parent (19 samples, 0.13%)</title><rect x="553.6" y="419.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="556.6" y="430.0"></text>
</g>
<g>
<title>apparmor_file_permission (52 samples, 0.35%)</title><rect x="555.1" y="419.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="558.1" y="430.0"></text>
</g>
<g>
<title>common_file_perm (50 samples, 0.33%)</title><rect x="555.2" y="403.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.2" y="414.0"></text>
</g>
<g>
<title>aa_file_perm (10 samples, 0.07%)</title><rect x="558.4" y="387.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="561.4" y="398.0"></text>
</g>
<g>
<title>common_file_perm (12 samples, 0.08%)</title><rect x="559.2" y="419.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="562.2" y="430.0"></text>
</g>
<g>
<title>fsnotify (39 samples, 0.26%)</title><rect x="560.1" y="419.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="563.1" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (37 samples, 0.25%)</title><rect x="563.5" y="547.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="566.5" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (35 samples, 0.23%)</title><rect x="566.4" y="547.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="569.4" y="558.0"></text>
</g>
<g>
<title>fdval (7 samples, 0.05%)</title><rect x="569.3" y="547.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="572.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (246 samples, 1.64%)</title><rect x="569.8" y="595.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.8" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (44 samples, 0.29%)</title><rect x="572.1" y="579.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.04%)</title><rect x="573.2" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (14 samples, 0.09%)</title><rect x="573.7" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.7" y="574.0"></text>
</g>
<g>
<title>vtable stub (10 samples, 0.07%)</title><rect x="574.8" y="563.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="577.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.07%)</title><rect x="575.6" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (162 samples, 1.08%)</title><rect x="576.4" y="579.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.4" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (73 samples, 0.49%)</title><rect x="583.0" y="563.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.0" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (72 samples, 0.48%)</title><rect x="583.0" y="547.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (70 samples, 0.47%)</title><rect x="583.2" y="531.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.2" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.05%)</title><rect x="588.2" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (5 samples, 0.03%)</title><rect x="588.8" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (101 samples, 0.67%)</title><rect x="589.2" y="595.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (46 samples, 0.31%)</title><rect x="590.1" y="579.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (9 samples, 0.06%)</title><rect x="590.4" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (17 samples, 0.11%)</title><rect x="591.1" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.1" y="574.0"></text>
</g>
<g>
<title>vtable stub (16 samples, 0.11%)</title><rect x="592.5" y="563.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="595.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.05%)</title><rect x="593.7" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (16 samples, 0.11%)</title><rect x="594.3" y="579.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.03%)</title><rect x="595.2" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (20 samples, 0.13%)</title><rect x="595.6" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.6" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (14 samples, 0.09%)</title><rect x="595.8" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.05%)</title><rect x="596.3" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (170 samples, 1.13%)</title><rect x="597.1" y="611.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.1" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.07%)</title><rect x="605.3" y="595.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="608.3" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.07%)</title><rect x="605.4" y="579.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="608.4" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.06%)</title><rect x="605.5" y="563.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="608.5" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.05%)</title><rect x="605.5" y="547.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="608.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.10%)</title><rect x="606.2" y="595.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (39 samples, 0.26%)</title><rect x="607.4" y="595.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.4" y="606.0"></text>
</g>
<g>
<title>pthread_self (7 samples, 0.05%)</title><rect x="609.9" y="579.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="612.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (6 samples, 0.04%)</title><rect x="610.5" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.5" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="610.6" y="595.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="613.6" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.03%)</title><rect x="610.6" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="613.6" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.03%)</title><rect x="610.6" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="613.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6,504 samples, 43.40%)</title><rect x="611.0" y="659.0" width="512.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.0" y="670.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6,504 samples, 43.40%)</title><rect x="611.0" y="643.0" width="512.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.0" y="654.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (82 samples, 0.55%)</title><rect x="614.7" y="627.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.7" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (78 samples, 0.52%)</title><rect x="615.0" y="611.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.03%)</title><rect x="615.5" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.5" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (64 samples, 0.43%)</title><rect x="616.1" y="595.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.1" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (64 samples, 0.43%)</title><rect x="616.1" y="579.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (64 samples, 0.43%)</title><rect x="616.1" y="563.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (64 samples, 0.43%)</title><rect x="621.1" y="627.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.1" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (61 samples, 0.41%)</title><rect x="621.4" y="611.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.4" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (57 samples, 0.38%)</title><rect x="621.7" y="595.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.7" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (38 samples, 0.25%)</title><rect x="623.2" y="579.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (38 samples, 0.25%)</title><rect x="623.2" y="563.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (5 samples, 0.03%)</title><rect x="626.2" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6,199 samples, 41.36%)</title><rect x="626.6" y="627.0" width="488.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.6" y="638.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (121 samples, 0.81%)</title><rect x="630.0" y="611.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.05%)</title><rect x="631.9" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.05%)</title><rect x="631.9" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.9" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (82 samples, 0.55%)</title><rect x="632.6" y="595.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (40 samples, 0.27%)</title><rect x="633.3" y="579.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.3" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (13 samples, 0.09%)</title><rect x="635.5" y="563.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.5" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (4 samples, 0.03%)</title><rect x="635.5" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (9 samples, 0.06%)</title><rect x="635.8" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.8" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.09%)</title><rect x="636.5" y="579.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (13 samples, 0.09%)</title><rect x="636.5" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.5" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (13 samples, 0.09%)</title><rect x="636.5" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.5" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="636.8" y="531.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="639.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (19 samples, 0.13%)</title><rect x="637.5" y="579.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (16 samples, 0.11%)</title><rect x="637.8" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (15 samples, 0.10%)</title><rect x="637.8" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (13 samples, 0.09%)</title><rect x="637.9" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (6 samples, 0.04%)</title><rect x="639.0" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.0" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (27 samples, 0.18%)</title><rect x="639.5" y="611.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.5" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (27 samples, 0.18%)</title><rect x="639.5" y="595.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5,461 samples, 36.44%)</title><rect x="641.6" y="611.0" width="430.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.6" y="622.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (56 samples, 0.37%)</title><rect x="649.6" y="595.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.6" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (53 samples, 0.35%)</title><rect x="649.8" y="579.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (52 samples, 0.35%)</title><rect x="649.9" y="563.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (52 samples, 0.35%)</title><rect x="649.9" y="547.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5,304 samples, 35.39%)</title><rect x="654.0" y="595.0" width="417.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.0" y="606.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5,300 samples, 35.36%)</title><rect x="654.3" y="579.0" width="417.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.3" y="590.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (17 samples, 0.11%)</title><rect x="664.9" y="563.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="667.9" y="574.0"></text>
</g>
<g>
<title>__libc_pread64 (5,015 samples, 33.46%)</title><rect x="666.3" y="563.0" width="394.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="669.3" y="574.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,844 samples, 18.98%)</title><rect x="837.3" y="547.0" width="223.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.3" y="558.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_pread64 (74 samples, 0.49%)</title><rect x="837.3" y="531.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="840.3" y="542.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.03%)</title><rect x="843.1" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="846.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (2,765 samples, 18.45%)</title><rect x="843.5" y="531.0" width="217.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.5" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (2,064 samples, 13.77%)</title><rect x="897.7" y="515.0" width="162.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="900.7" y="526.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (4 samples, 0.03%)</title><rect x="897.7" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="900.7" y="510.0"></text>
</g>
<g>
<title>ksys_pread64 (2,057 samples, 13.73%)</title><rect x="898.2" y="499.0" width="162.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.2" y="510.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (200 samples, 1.33%)</title><rect x="901.6" y="483.0" width="15.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.6" y="494.0"></text>
</g>
<g>
<title>__fget_light (199 samples, 1.33%)</title><rect x="901.7" y="467.0" width="15.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="904.7" y="478.0"></text>
</g>
<g>
<title>__fget (198 samples, 1.32%)</title><rect x="901.8" y="451.0" width="15.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="904.8" y="462.0"></text>
</g>
<g>
<title>__fget_light (55 samples, 0.37%)</title><rect x="917.3" y="483.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.3" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.05%)</title><rect x="921.7" y="483.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="924.7" y="494.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.04%)</title><rect x="922.3" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="925.3" y="494.0"></text>
</g>
<g>
<title>fput_many (61 samples, 0.41%)</title><rect x="922.9" y="483.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="925.9" y="494.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.04%)</title><rect x="927.7" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="930.7" y="494.0"></text>
</g>
<g>
<title>vfs_read (1,677 samples, 11.19%)</title><rect x="928.1" y="483.0" width="132.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="931.1" y="494.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (43 samples, 0.29%)</title><rect x="934.7" y="467.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="937.7" y="478.0"></text>
</g>
<g>
<title>__vfs_read (1,152 samples, 7.69%)</title><rect x="938.0" y="467.0" width="90.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.0" y="478.0">__vfs_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.03%)</title><rect x="938.8" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="941.8" y="462.0"></text>
</g>
<g>
<title>ext4_file_read_iter (52 samples, 0.35%)</title><rect x="939.1" y="451.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="942.1" y="462.0"></text>
</g>
<g>
<title>iov_iter_init (21 samples, 0.14%)</title><rect x="943.2" y="451.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="946.2" y="462.0"></text>
</g>
<g>
<title>new_sync_read (1,066 samples, 7.11%)</title><rect x="944.8" y="451.0" width="84.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="947.8" y="462.0">new_sync_..</text>
</g>
<g>
<title>ext4_file_read_iter (982 samples, 6.55%)</title><rect x="951.1" y="435.0" width="77.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="954.1" y="446.0">ext4_file..</text>
</g>
<g>
<title>generic_file_read_iter (915 samples, 6.11%)</title><rect x="956.4" y="419.0" width="72.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="959.4" y="430.0">generic_..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.03%)</title><rect x="957.2" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="960.2" y="414.0"></text>
</g>
<g>
<title>generic_file_buffered_read (888 samples, 5.93%)</title><rect x="957.7" y="403.0" width="69.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.7" y="414.0">generic..</text>
</g>
<g>
<title>_cond_resched (11 samples, 0.07%)</title><rect x="973.0" y="387.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.0" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (279 samples, 1.86%)</title><rect x="974.0" y="387.0" width="22.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="977.0" y="398.0">c..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.03%)</title><rect x="981.0" y="371.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="984.0" y="382.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (28 samples, 0.19%)</title><rect x="981.4" y="371.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="984.4" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (128 samples, 0.85%)</title><rect x="983.6" y="371.0" width="10.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="986.6" y="382.0"></text>
</g>
<g>
<title>copyout (22 samples, 0.15%)</title><rect x="993.6" y="371.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="996.6" y="382.0"></text>
</g>
<g>
<title>rcu_all_qs (8 samples, 0.05%)</title><rect x="995.4" y="371.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.4" y="382.0"></text>
</g>
<g>
<title>copyout (13 samples, 0.09%)</title><rect x="996.0" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="999.0" y="398.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.04%)</title><rect x="997.0" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1000.0" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (12 samples, 0.08%)</title><rect x="997.5" y="387.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.5" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (237 samples, 1.58%)</title><rect x="998.4" y="387.0" width="18.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1001.4" y="398.0"></text>
</g>
<g>
<title>PageHuge (5 samples, 0.03%)</title><rect x="999.5" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1002.5" y="382.0"></text>
</g>
<g>
<title>find_get_entry (215 samples, 1.43%)</title><rect x="999.9" y="371.0" width="17.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1002.9" y="382.0"></text>
</g>
<g>
<title>PageHuge (6 samples, 0.04%)</title><rect x="1010.6" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1013.6" y="366.0"></text>
</g>
<g>
<title>xas_load (33 samples, 0.22%)</title><rect x="1011.2" y="355.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1014.2" y="366.0"></text>
</g>
<g>
<title>xas_start (39 samples, 0.26%)</title><rect x="1013.8" y="355.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1016.8" y="366.0"></text>
</g>
<g>
<title>touch_atime (131 samples, 0.87%)</title><rect x="1017.3" y="387.0" width="10.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1020.3" y="398.0"></text>
</g>
<g>
<title>atime_needs_update (109 samples, 0.73%)</title><rect x="1018.8" y="371.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1021.8" y="382.0"></text>
</g>
<g>
<title>current_time (70 samples, 0.47%)</title><rect x="1021.1" y="355.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1024.1" y="366.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (36 samples, 0.24%)</title><rect x="1022.5" y="339.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1025.5" y="350.0"></text>
</g>
<g>
<title>timestamp_truncate (16 samples, 0.11%)</title><rect x="1025.4" y="339.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1028.4" y="350.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (5 samples, 0.03%)</title><rect x="1026.6" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1029.6" y="366.0"></text>
</g>
<g>
<title>timestamp_truncate (4 samples, 0.03%)</title><rect x="1027.0" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1030.0" y="366.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.03%)</title><rect x="1027.3" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1030.3" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.03%)</title><rect x="1027.9" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1030.9" y="414.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.03%)</title><rect x="1028.4" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1031.4" y="446.0"></text>
</g>
<g>
<title>fsnotify (69 samples, 0.46%)</title><rect x="1028.8" y="467.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1031.8" y="478.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.07%)</title><rect x="1034.2" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.2" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (317 samples, 2.12%)</title><rect x="1035.0" y="467.0" width="24.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.0" y="478.0">r..</text>
</g>
<g>
<title>apparmor_file_permission (29 samples, 0.19%)</title><rect x="1036.0" y="451.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1039.0" y="462.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.03%)</title><rect x="1038.3" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1041.3" y="462.0"></text>
</g>
<g>
<title>security_file_permission (271 samples, 1.81%)</title><rect x="1038.6" y="451.0" width="21.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1041.6" y="462.0">s..</text>
</g>
<g>
<title>__fsnotify_parent (22 samples, 0.15%)</title><rect x="1041.7" y="435.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1044.7" y="446.0"></text>
</g>
<g>
<title>apparmor_file_permission (118 samples, 0.79%)</title><rect x="1043.4" y="435.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1046.4" y="446.0"></text>
</g>
<g>
<title>common_file_perm (116 samples, 0.77%)</title><rect x="1043.6" y="419.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1046.6" y="430.0"></text>
</g>
<g>
<title>aa_file_perm (24 samples, 0.16%)</title><rect x="1050.8" y="403.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1053.8" y="414.0"></text>
</g>
<g>
<title>common_file_perm (29 samples, 0.19%)</title><rect x="1052.7" y="435.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.7" y="446.0"></text>
</g>
<g>
<title>fsnotify (63 samples, 0.42%)</title><rect x="1055.0" y="435.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1058.0" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.07%)</title><rect x="1060.3" y="515.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.3" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (72 samples, 0.48%)</title><rect x="1061.2" y="563.0" width="5.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1064.2" y="574.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (47 samples, 0.31%)</title><rect x="1066.9" y="563.0" width="3.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1069.9" y="574.0"></text>
</g>
<g>
<title>fdval (11 samples, 0.07%)</title><rect x="1070.7" y="563.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1073.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (248 samples, 1.65%)</title><rect x="1071.6" y="611.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (45 samples, 0.30%)</title><rect x="1072.8" y="595.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1075.8" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.03%)</title><rect x="1073.5" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.5" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (17 samples, 0.11%)</title><rect x="1073.9" y="579.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.9" y="590.0"></text>
</g>
<g>
<title>vtable stub (14 samples, 0.09%)</title><rect x="1075.2" y="579.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1078.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (186 samples, 1.24%)</title><rect x="1076.5" y="595.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.5" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (72 samples, 0.48%)</title><rect x="1085.0" y="579.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1088.0" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (72 samples, 0.48%)</title><rect x="1085.0" y="563.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (42 samples, 0.28%)</title><rect x="1087.4" y="547.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (42 samples, 0.28%)</title><rect x="1087.4" y="531.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (299 samples, 2.00%)</title><rect x="1091.1" y="611.0" width="23.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.1" y="622.0">s..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (98 samples, 0.65%)</title><rect x="1096.9" y="595.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.9" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (14 samples, 0.09%)</title><rect x="1098.4" y="579.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.4" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (8 samples, 0.05%)</title><rect x="1098.8" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.8" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (36 samples, 0.24%)</title><rect x="1099.5" y="579.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.5" y="590.0"></text>
</g>
<g>
<title>vtable stub (29 samples, 0.19%)</title><rect x="1102.3" y="579.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1105.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (104 samples, 0.69%)</title><rect x="1104.6" y="595.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (24 samples, 0.16%)</title><rect x="1112.8" y="595.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1115.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (97 samples, 0.65%)</title><rect x="1114.7" y="627.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (84 samples, 0.56%)</title><rect x="1115.7" y="611.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.7" y="622.0"></text>
</g>
<g>
<title>pthread_self (5 samples, 0.03%)</title><rect x="1121.9" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1124.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (10 samples, 0.07%)</title><rect x="1122.3" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.3" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.05%)</title><rect x="1122.4" y="611.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1125.4" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.04%)</title><rect x="1122.6" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.6" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.04%)</title><rect x="1122.6" y="579.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (15 samples, 0.10%)</title><rect x="1123.1" y="771.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (7 samples, 0.05%)</title><rect x="1123.7" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (4 samples, 0.03%)</title><rect x="1123.9" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (4 samples, 0.03%)</title><rect x="1123.9" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getResponses (153 samples, 1.02%)</title><rect x="1124.3" y="771.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (37 samples, 0.25%)</title><rect x="1124.7" y="755.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.24%)</title><rect x="1124.8" y="739.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.24%)</title><rect x="1124.8" y="723.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (28 samples, 0.19%)</title><rect x="1124.8" y="707.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (28 samples, 0.19%)</title><rect x="1124.8" y="691.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (28 samples, 0.19%)</title><rect x="1124.8" y="675.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (28 samples, 0.19%)</title><rect x="1124.8" y="659.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 0.19%)</title><rect x="1124.8" y="643.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 0.19%)</title><rect x="1124.8" y="627.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.8" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="1124.9" y="611.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1127.9" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.13%)</title><rect x="1125.3" y="611.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1128.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.11%)</title><rect x="1125.5" y="595.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1128.5" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.11%)</title><rect x="1125.5" y="579.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1128.5" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.11%)</title><rect x="1125.6" y="563.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.6" y="574.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.11%)</title><rect x="1125.6" y="547.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1128.6" y="558.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.11%)</title><rect x="1125.6" y="531.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1128.6" y="542.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.11%)</title><rect x="1125.6" y="515.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1128.6" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.11%)</title><rect x="1125.6" y="499.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.6" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.11%)</title><rect x="1125.6" y="483.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.05%)</title><rect x="1127.0" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.05%)</title><rect x="1127.0" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.04%)</title><rect x="1127.1" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (4 samples, 0.03%)</title><rect x="1127.2" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (4 samples, 0.03%)</title><rect x="1127.2" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (4 samples, 0.03%)</title><rect x="1127.2" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (107 samples, 0.71%)</title><rect x="1127.6" y="755.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (107 samples, 0.71%)</title><rect x="1127.6" y="739.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (83 samples, 0.55%)</title><rect x="1127.6" y="723.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (11 samples, 0.07%)</title><rect x="1127.8" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.07%)</title><rect x="1127.8" y="691.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.07%)</title><rect x="1127.8" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.07%)</title><rect x="1127.8" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.07%)</title><rect x="1127.8" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.8" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.06%)</title><rect x="1128.0" y="627.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1131.0" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.06%)</title><rect x="1128.0" y="611.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1131.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.06%)</title><rect x="1128.0" y="595.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1131.0" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.06%)</title><rect x="1128.0" y="579.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1131.0" y="590.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.06%)</title><rect x="1128.0" y="563.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1131.0" y="574.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.06%)</title><rect x="1128.0" y="547.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1131.0" y="558.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.05%)</title><rect x="1128.0" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1131.0" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.05%)</title><rect x="1128.0" y="515.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1131.0" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="1128.0" y="499.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1131.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (70 samples, 0.47%)</title><rect x="1128.7" y="707.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (70 samples, 0.47%)</title><rect x="1128.7" y="691.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.7" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park (29 samples, 0.19%)</title><rect x="1128.7" y="675.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1131.7" y="686.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.04%)</title><rect x="1128.8" y="659.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.8" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (20 samples, 0.13%)</title><rect x="1129.4" y="659.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1132.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="1130.5" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="1130.5" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1133.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.27%)</title><rect x="1130.9" y="675.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1133.9" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (35 samples, 0.23%)</title><rect x="1130.9" y="659.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1133.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.05%)</title><rect x="1133.2" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1136.2" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.05%)</title><rect x="1133.2" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.2" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="1133.2" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.2" y="622.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.04%)</title><rect x="1133.2" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1136.2" y="606.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.04%)</title><rect x="1133.2" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1136.2" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.03%)</title><rect x="1133.4" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1136.4" y="574.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.03%)</title><rect x="1133.7" y="659.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1136.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.14%)</title><rect x="1134.4" y="723.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.14%)</title><rect x="1134.4" y="707.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.14%)</title><rect x="1134.4" y="691.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.14%)</title><rect x="1134.4" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.13%)</title><rect x="1134.5" y="659.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.5" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.05%)</title><rect x="1134.5" y="643.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1137.5" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.03%)</title><rect x="1134.8" y="627.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1137.8" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.08%)</title><rect x="1135.1" y="643.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1138.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.08%)</title><rect x="1135.1" y="627.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1138.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.08%)</title><rect x="1135.1" y="611.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1138.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.08%)</title><rect x="1135.1" y="595.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.1" y="606.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.08%)</title><rect x="1135.1" y="579.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1138.1" y="590.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.07%)</title><rect x="1135.1" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1138.1" y="574.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.07%)</title><rect x="1135.2" y="547.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1138.2" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.07%)</title><rect x="1135.2" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1138.2" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.07%)</title><rect x="1135.2" y="515.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1138.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (10 samples, 0.07%)</title><rect x="1136.3" y="771.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.03%)</title><rect x="1136.6" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.merge (4 samples, 0.03%)</title><rect x="1137.1" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (57 samples, 0.38%)</title><rect x="1137.4" y="771.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1406947162.linkToTargetMethod (6 samples, 0.04%)</title><rect x="1140.2" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1824422708.invoke (6 samples, 0.04%)</title><rect x="1140.2" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1141.3" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.3" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (518 samples, 3.46%)</title><rect x="1142.1" y="883.0" width="40.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.1" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (155 samples, 1.03%)</title><rect x="1142.4" y="867.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (150 samples, 1.00%)</title><rect x="1142.8" y="851.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.8" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.05%)</title><rect x="1142.9" y="835.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1145.9" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.03%)</title><rect x="1143.5" y="835.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1146.5" y="846.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.03%)</title><rect x="1143.8" y="835.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1146.8" y="846.0"></text>
</g>
<g>
<title>epoll_wait (132 samples, 0.88%)</title><rect x="1144.2" y="835.0" width="10.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1147.2" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 0.65%)</title><rect x="1146.9" y="819.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 0.64%)</title><rect x="1147.0" y="803.0" width="7.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (84 samples, 0.56%)</title><rect x="1148.0" y="787.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1151.0" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (84 samples, 0.56%)</title><rect x="1148.0" y="771.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1151.0" y="782.0"></text>
</g>
<g>
<title>ep_poll (72 samples, 0.48%)</title><rect x="1148.3" y="755.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.3" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (52 samples, 0.35%)</title><rect x="1148.6" y="739.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1151.6" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (41 samples, 0.27%)</title><rect x="1149.3" y="723.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1152.3" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (34 samples, 0.23%)</title><rect x="1149.6" y="707.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1152.6" y="718.0"></text>
</g>
<g>
<title>sock_poll (23 samples, 0.15%)</title><rect x="1150.4" y="691.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.06%)</title><rect x="1151.3" y="675.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1154.3" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 0.10%)</title><rect x="1152.8" y="739.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1155.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.09%)</title><rect x="1153.0" y="723.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1156.0" y="734.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.07%)</title><rect x="1153.2" y="707.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1156.2" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.06%)</title><rect x="1153.3" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.3" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.03%)</title><rect x="1153.6" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.6" y="686.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.05%)</title><rect x="1154.0" y="755.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (360 samples, 2.40%)</title><rect x="1154.6" y="867.0" width="28.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.6" y="878.0">on..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.07%)</title><rect x="1155.2" y="851.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.2" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.07%)</title><rect x="1155.3" y="835.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (340 samples, 2.27%)</title><rect x="1156.1" y="851.0" width="26.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.1" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (218 samples, 1.45%)</title><rect x="1156.2" y="835.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (152 samples, 1.01%)</title><rect x="1156.5" y="819.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (152 samples, 1.01%)</title><rect x="1156.5" y="803.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.5" y="814.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (145 samples, 0.97%)</title><rect x="1156.5" y="787.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.07%)</title><rect x="1156.5" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (134 samples, 0.89%)</title><rect x="1157.3" y="771.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (70 samples, 0.47%)</title><rect x="1157.4" y="755.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 0.45%)</title><rect x="1157.6" y="739.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (67 samples, 0.45%)</title><rect x="1157.6" y="723.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (52 samples, 0.35%)</title><rect x="1157.6" y="707.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (52 samples, 0.35%)</title><rect x="1157.6" y="691.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 0.35%)</title><rect x="1157.6" y="675.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 0.35%)</title><rect x="1157.6" y="659.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (52 samples, 0.35%)</title><rect x="1157.6" y="643.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 0.35%)</title><rect x="1157.6" y="627.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.6" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.05%)</title><rect x="1157.8" y="611.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1160.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (41 samples, 0.27%)</title><rect x="1158.3" y="611.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1161.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.25%)</title><rect x="1158.6" y="595.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.25%)</title><rect x="1158.6" y="579.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.6" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (36 samples, 0.24%)</title><rect x="1158.7" y="563.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1161.7" y="574.0"></text>
</g>
<g>
<title>do_futex (35 samples, 0.23%)</title><rect x="1158.8" y="547.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1161.8" y="558.0"></text>
</g>
<g>
<title>futex_wake (35 samples, 0.23%)</title><rect x="1158.8" y="531.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.8" y="542.0"></text>
</g>
<g>
<title>wake_up_q (32 samples, 0.21%)</title><rect x="1159.1" y="515.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.1" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (31 samples, 0.21%)</title><rect x="1159.1" y="499.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1162.1" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (31 samples, 0.21%)</title><rect x="1159.1" y="483.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.07%)</title><rect x="1161.9" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.07%)</title><rect x="1161.9" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (8 samples, 0.05%)</title><rect x="1161.9" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1161.9" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (63 samples, 0.42%)</title><rect x="1162.9" y="755.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.9" y="766.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (63 samples, 0.42%)</title><rect x="1162.9" y="739.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.9" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (14 samples, 0.09%)</title><rect x="1162.9" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (33 samples, 0.22%)</title><rect x="1164.0" y="723.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.0" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (31 samples, 0.21%)</title><rect x="1164.2" y="707.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (26 samples, 0.17%)</title><rect x="1164.4" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1167.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (23 samples, 0.15%)</title><rect x="1164.6" y="675.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (23 samples, 0.15%)</title><rect x="1164.6" y="659.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="1165.0" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.06%)</title><rect x="1165.4" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.03%)</title><rect x="1166.1" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.1" y="654.0"></text>
</g>
<g>
<title>java/util/Set.of (16 samples, 0.11%)</title><rect x="1166.6" y="723.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.6" y="734.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1167.2" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.2" y="718.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (5 samples, 0.03%)</title><rect x="1167.5" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.03%)</title><rect x="1168.0" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="1168.1" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (32 samples, 0.21%)</title><rect x="1168.4" y="819.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.11%)</title><rect x="1168.7" y="803.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1169.3" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1169.3" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="1169.4" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1169.9" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1169.9" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.06%)</title><rect x="1170.2" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (8 samples, 0.05%)</title><rect x="1171.1" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.1" y="830.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="1171.4" y="803.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1174.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.05%)</title><rect x="1171.7" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.09%)</title><rect x="1172.4" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.09%)</title><rect x="1172.4" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (117 samples, 0.78%)</title><rect x="1173.6" y="835.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (113 samples, 0.75%)</title><rect x="1173.9" y="819.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1176.9" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (20 samples, 0.13%)</title><rect x="1173.9" y="803.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1176.9" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.10%)</title><rect x="1174.3" y="787.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1177.3" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.05%)</title><rect x="1175.0" y="771.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1178.0" y="782.0"></text>
</g>
<g>
<title>recv (92 samples, 0.61%)</title><rect x="1175.6" y="803.0" width="7.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1178.6" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 0.47%)</title><rect x="1177.3" y="787.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (70 samples, 0.47%)</title><rect x="1177.3" y="771.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (59 samples, 0.39%)</title><rect x="1178.2" y="755.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1181.2" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (58 samples, 0.39%)</title><rect x="1178.2" y="739.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.2" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (49 samples, 0.33%)</title><rect x="1178.3" y="723.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1181.3" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (42 samples, 0.28%)</title><rect x="1178.6" y="707.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.6" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (41 samples, 0.27%)</title><rect x="1178.7" y="691.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.03%)</title><rect x="1179.6" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1182.6" y="686.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.03%)</title><rect x="1179.6" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.6" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.05%)</title><rect x="1180.6" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.6" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.05%)</title><rect x="1180.6" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1183.6" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.04%)</title><rect x="1180.7" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.7" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.05%)</title><rect x="1181.2" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 0.05%)</title><rect x="1181.2" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (7 samples, 0.05%)</title><rect x="1181.2" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.2" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.04%)</title><rect x="1181.3" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1184.3" y="638.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.04%)</title><rect x="1181.3" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.3" y="622.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 0.04%)</title><rect x="1181.3" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.3" y="606.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.04%)</title><rect x="1181.3" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.3" y="590.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.04%)</title><rect x="1181.3" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.3" y="574.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.04%)</title><rect x="1181.3" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1184.3" y="558.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.04%)</title><rect x="1181.3" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.3" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.04%)</title><rect x="1181.3" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.3" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.03%)</title><rect x="1181.3" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.3" y="510.0"></text>
</g>
<g>
<title>do_softirq.part.0 (5 samples, 0.03%)</title><rect x="1181.3" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.3" y="494.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.03%)</title><rect x="1181.3" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1184.3" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="1181.3" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.3" y="462.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.03%)</title><rect x="1181.4" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1184.4" y="446.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.03%)</title><rect x="1181.4" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1184.4" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.03%)</title><rect x="1181.4" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.4" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.03%)</title><rect x="1181.4" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.4" y="398.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.03%)</title><rect x="1181.4" y="371.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.4" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.03%)</title><rect x="1181.4" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.4" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.03%)</title><rect x="1181.4" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1184.4" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="1181.4" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1184.4" y="334.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="1181.4" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1184.4" y="318.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.03%)</title><rect x="1181.9" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.9" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.03%)</title><rect x="1181.9" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.9" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.03%)</title><rect x="1181.9" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.9" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.05%)</title><rect x="1182.2" y="723.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.2" y="734.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.03%)</title><rect x="1182.2" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1185.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="1182.2" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.2" y="702.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="1182.2" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1185.2" y="686.0"></text>
</g>
<g>
<title>start_thread (90 samples, 0.60%)</title><rect x="1182.9" y="883.0" width="7.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1185.9" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (90 samples, 0.60%)</title><rect x="1182.9" y="867.0" width="7.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1185.9" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (90 samples, 0.60%)</title><rect x="1182.9" y="851.0" width="7.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.9" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (52 samples, 0.35%)</title><rect x="1182.9" y="835.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.9" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (48 samples, 0.32%)</title><rect x="1183.0" y="819.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.0" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (37 samples, 0.25%)</title><rect x="1183.0" y="803.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.0" y="814.0"></text>
</g>
<g>
<title>SpinPause (33 samples, 0.22%)</title><rect x="1183.3" y="787.0" width="2.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1186.3" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (9 samples, 0.06%)</title><rect x="1186.1" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.1" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (8 samples, 0.05%)</title><rect x="1186.1" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.1" y="798.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (7 samples, 0.05%)</title><rect x="1186.2" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="782.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (6 samples, 0.04%)</title><rect x="1186.3" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.03%)</title><rect x="1186.4" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>JavaThread::run() (33 samples, 0.22%)</title><rect x="1187.0" y="835.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (33 samples, 0.22%)</title><rect x="1187.0" y="819.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.0" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (33 samples, 0.22%)</title><rect x="1187.0" y="803.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.0" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (32 samples, 0.21%)</title><rect x="1187.0" y="787.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.0" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (31 samples, 0.21%)</title><rect x="1187.0" y="771.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.0" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (18 samples, 0.12%)</title><rect x="1187.0" y="755.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (15 samples, 0.10%)</title><rect x="1187.2" y="739.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.2" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (7 samples, 0.05%)</title><rect x="1187.4" y="723.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (8 samples, 0.05%)</title><rect x="1188.4" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1189.1" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.1" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1189.1" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1189.1" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="1189.1" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.03%)</title><rect x="1189.1" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.03%)</title><rect x="1189.1" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.03%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.03%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
</g>
</svg>
