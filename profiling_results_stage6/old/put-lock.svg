<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (778,021 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (674,388 samples, 86.68%)</title><rect x="10.0" y="563.0" width="1022.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (674,388 samples, 86.68%)</title><rect x="10.0" y="547.0" width="1022.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (674,388 samples, 86.68%)</title><rect x="10.0" y="531.0" width="1022.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (253,279 samples, 32.55%)</title><rect x="10.0" y="515.0" width="384.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (253,279 samples, 32.55%)</title><rect x="10.0" y="499.0" width="384.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (253,279 samples, 32.55%)</title><rect x="10.0" y="483.0" width="384.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniCompose.tr..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1931669415.apply (253,279 samples, 32.55%)</title><rect x="10.0" y="467.0" width="384.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$178/1931..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (253,279 samples, 32.55%)</title><rect x="10.0" y="451.0" width="384.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$responseA..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (253,279 samples, 32.55%)</title><rect x="10.0" y="435.0" width="384.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (252,694 samples, 32.48%)</title><rect x="10.0" y="419.0" width="383.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (252,694 samples, 32.48%)</title><rect x="10.0" y="403.0" width="383.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (252,694 samples, 32.48%)</title><rect x="10.0" y="387.0" width="383.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (211,232 samples, 27.15%)</title><rect x="10.0" y="371.0" width="320.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/CompletableFuture.handle</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (211,232 samples, 27.15%)</title><rect x="10.0" y="355.0" width="320.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/CompletableFuture.uniH..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (211,232 samples, 27.15%)</title><rect x="10.0" y="339.0" width="320.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/CompletableFuture.uniH..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/200602872.apply (211,232 samples, 27.15%)</title><rect x="10.0" y="323.0" width="320.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Exchange$$Lambda$312/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (211,232 samples, 27.15%)</title><rect x="10.0" y="307.0" width="320.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Exchange.lambda$respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (211,232 samples, 27.15%)</title><rect x="10.0" y="291.0" width="320.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Exchange.checkFor407</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1307445114.apply (211,232 samples, 27.15%)</title><rect x="10.0" y="275.0" width="320.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Exchange$$Lambda$204/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (211,232 samples, 27.15%)</title><rect x="10.0" y="259.0" width="320.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Exchange.lambda$respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (211,232 samples, 27.15%)</title><rect x="10.0" y="243.0" width="320.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1Exchange.sendHea..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (211,232 samples, 27.15%)</title><rect x="10.0" y="227.0" width="320.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/CompletableFuture.then..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (211,232 samples, 27.15%)</title><rect x="10.0" y="211.0" width="320.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/CompletableFuture.uniC..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$352/1381405359.apply (211,232 samples, 27.15%)</title><rect x="10.0" y="195.0" width="320.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1Exchange$$Lambda..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (211,232 samples, 27.15%)</title><rect x="10.0" y="179.0" width="320.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1Exchange.lambda$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (211,232 samples, 27.15%)</title><rect x="10.0" y="163.0" width="320.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1Exchange.connect..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (211,232 samples, 27.15%)</title><rect x="10.0" y="147.0" width="320.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/SocketTube.connectFlows</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (15,343 samples, 1.97%)</title><rect x="10.0" y="131.0" width="23.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="142.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (15,343 samples, 1.97%)</title><rect x="10.0" y="115.0" width="23.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (15,343 samples, 1.97%)</title><rect x="10.0" y="99.0" width="23.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="110.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15,343 samples, 1.97%)</title><rect x="10.0" y="83.0" width="23.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="94.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15,343 samples, 1.97%)</title><rect x="10.0" y="67.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="78.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (14,113 samples, 1.81%)</title><rect x="10.0" y="51.0" width="21.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="62.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,230 samples, 0.16%)</title><rect x="31.4" y="51.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,230 samples, 0.16%)</title><rect x="31.4" y="35.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="34.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (195,889 samples, 25.18%)</title><rect x="33.3" y="131.0" width="297.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.3" y="142.0">jdk/internal/net/http/SocketTube.subscribe</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (195,889 samples, 25.18%)</title><rect x="33.3" y="115.0" width="297.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.3" y="126.0">jdk/internal/net/http/SocketTube$Interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (195,888 samples, 25.18%)</title><rect x="33.3" y="99.0" width="297.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.3" y="110.0">jdk/internal/net/http/SocketTube$Interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (195,888 samples, 25.18%)</title><rect x="33.3" y="83.0" width="297.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.3" y="94.0">jdk/internal/net/http/HttpClientImpl.reg..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (195,888 samples, 25.18%)</title><rect x="33.3" y="67.0" width="297.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.3" y="78.0">jdk/internal/net/http/HttpClientImpl$Sel..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (194,226 samples, 24.96%)</title><rect x="33.3" y="51.0" width="294.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="36.3" y="62.0">jdk.internal.net.http.HttpClientImpl$Sel..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,662 samples, 0.21%)</title><rect x="327.8" y="51.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.8" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,662 samples, 0.21%)</title><rect x="327.8" y="35.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="330.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (41,462 samples, 5.33%)</title><rect x="330.4" y="371.0" width="62.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.4" y="382.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (41,462 samples, 5.33%)</title><rect x="330.4" y="355.0" width="62.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.4" y="366.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (41,462 samples, 5.33%)</title><rect x="330.4" y="339.0" width="62.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.4" y="350.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (41,462 samples, 5.33%)</title><rect x="330.4" y="323.0" width="62.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.4" y="334.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (41,461 samples, 5.33%)</title><rect x="330.4" y="307.0" width="62.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.4" y="318.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (41,461 samples, 5.33%)</title><rect x="330.4" y="291.0" width="62.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.4" y="302.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (41,461 samples, 5.33%)</title><rect x="330.4" y="275.0" width="62.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="333.4" y="286.0">jdk.in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (585 samples, 0.08%)</title><rect x="393.3" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (585 samples, 0.08%)</title><rect x="393.3" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (538 samples, 0.07%)</title><rect x="393.3" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (538 samples, 0.07%)</title><rect x="393.3" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="396.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21,980 samples, 2.83%)</title><rect x="394.1" y="515.0" width="33.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (21,979 samples, 2.82%)</title><rect x="394.1" y="499.0" width="33.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,512 samples, 0.19%)</title><rect x="394.1" y="483.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,512 samples, 0.19%)</title><rect x="394.1" y="467.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,512 samples, 0.19%)</title><rect x="394.1" y="451.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,512 samples, 0.19%)</title><rect x="394.1" y="435.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,512 samples, 0.19%)</title><rect x="394.1" y="419.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,512 samples, 0.19%)</title><rect x="394.1" y="403.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="397.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (20,467 samples, 2.63%)</title><rect x="396.4" y="483.0" width="31.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.4" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (20,467 samples, 2.63%)</title><rect x="396.4" y="467.0" width="31.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.4" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (20,467 samples, 2.63%)</title><rect x="396.4" y="451.0" width="31.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.4" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20,467 samples, 2.63%)</title><rect x="396.4" y="435.0" width="31.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.4" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20,467 samples, 2.63%)</title><rect x="396.4" y="419.0" width="31.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.4" y="430.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20,467 samples, 2.63%)</title><rect x="396.4" y="403.0" width="31.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.4" y="414.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (20,467 samples, 2.63%)</title><rect x="396.4" y="387.0" width="31.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="399.4" y="398.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (399,119 samples, 51.30%)</title><rect x="427.5" y="515.0" width="605.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.5" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (399,119 samples, 51.30%)</title><rect x="427.5" y="499.0" width="605.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.5" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (136,019 samples, 17.48%)</title><rect x="427.5" y="483.0" width="206.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.5" y="494.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (136,019 samples, 17.48%)</title><rect x="427.5" y="467.0" width="206.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.5" y="478.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (136,019 samples, 17.48%)</title><rect x="427.5" y="451.0" width="206.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.5" y="462.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (135,028 samples, 17.36%)</title><rect x="427.5" y="435.0" width="204.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.5" y="446.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (135,028 samples, 17.36%)</title><rect x="427.5" y="419.0" width="204.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.5" y="430.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (135,028 samples, 17.36%)</title><rect x="427.5" y="403.0" width="204.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.5" y="414.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (135,028 samples, 17.36%)</title><rect x="427.5" y="387.0" width="204.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.5" y="398.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (135,028 samples, 17.36%)</title><rect x="427.5" y="371.0" width="204.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.5" y="382.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (135,028 samples, 17.36%)</title><rect x="427.5" y="355.0" width="204.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.5" y="366.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (135,028 samples, 17.36%)</title><rect x="427.5" y="339.0" width="204.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.5" y="350.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (135,028 samples, 17.36%)</title><rect x="427.5" y="323.0" width="204.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.5" y="334.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (135,028 samples, 17.36%)</title><rect x="427.5" y="307.0" width="204.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.5" y="318.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (132,066 samples, 16.97%)</title><rect x="427.5" y="291.0" width="200.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="430.5" y="302.0">jdk.internal.net.http.Http..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,962 samples, 0.38%)</title><rect x="627.8" y="291.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (2,962 samples, 0.38%)</title><rect x="627.8" y="275.0" width="4.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="630.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (991 samples, 0.13%)</title><rect x="632.3" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (991 samples, 0.13%)</title><rect x="632.3" y="419.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (991 samples, 0.13%)</title><rect x="632.3" y="403.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (991 samples, 0.13%)</title><rect x="632.3" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (991 samples, 0.13%)</title><rect x="632.3" y="371.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (991 samples, 0.13%)</title><rect x="632.3" y="355.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (991 samples, 0.13%)</title><rect x="632.3" y="339.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (991 samples, 0.13%)</title><rect x="632.3" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (991 samples, 0.13%)</title><rect x="632.3" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (991 samples, 0.13%)</title><rect x="632.3" y="291.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (991 samples, 0.13%)</title><rect x="632.3" y="275.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (991 samples, 0.13%)</title><rect x="632.3" y="259.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (991 samples, 0.13%)</title><rect x="632.3" y="243.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (991 samples, 0.13%)</title><rect x="632.3" y="227.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$356/1965787041.apply (991 samples, 0.13%)</title><rect x="632.3" y="211.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (991 samples, 0.13%)</title><rect x="632.3" y="195.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (991 samples, 0.13%)</title><rect x="632.3" y="179.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (991 samples, 0.13%)</title><rect x="632.3" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (991 samples, 0.13%)</title><rect x="632.3" y="147.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (991 samples, 0.13%)</title><rect x="632.3" y="131.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="635.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (263,100 samples, 33.82%)</title><rect x="633.8" y="483.0" width="399.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.8" y="494.0">jdk/internal/net/http/common/SequentialScheduler$TryEnd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (263,100 samples, 33.82%)</title><rect x="633.8" y="467.0" width="399.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.8" y="478.0">jdk/internal/net/http/common/SequentialScheduler$Comple..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (263,100 samples, 33.82%)</title><rect x="633.8" y="451.0" width="399.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.8" y="462.0">jdk/internal/net/http/common/SequentialScheduler$Synchr..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (263,100 samples, 33.82%)</title><rect x="633.8" y="435.0" width="399.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.8" y="446.0">jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/16..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (263,100 samples, 33.82%)</title><rect x="633.8" y="419.0" width="399.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.8" y="430.0">jdk/internal/net/http/Http1AsyncReceiver.flush</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (263,014 samples, 33.81%)</title><rect x="633.8" y="403.0" width="398.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.8" y="414.0">jdk/internal/net/http/Http1AsyncReceiver.handlePending..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (263,014 samples, 33.81%)</title><rect x="633.8" y="387.0" width="398.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.8" y="398.0">jdk/internal/net/http/Http1Response$BodyReader.onSubsc..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (263,014 samples, 33.81%)</title><rect x="633.8" y="371.0" width="398.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.8" y="382.0">jdk/internal/net/http/ResponseContent$FixedLengthBodyP..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/1409112802.run (263,014 samples, 33.81%)</title><rect x="633.8" y="355.0" width="398.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.8" y="366.0">jdk/internal/net/http/Http1Response$$Lambda$453/140911..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (263,014 samples, 33.81%)</title><rect x="633.8" y="339.0" width="398.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.8" y="350.0">jdk/internal/net/http/Http1Response.onFinished</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (263,014 samples, 33.81%)</title><rect x="633.8" y="323.0" width="398.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.8" y="334.0">jdk/internal/net/http/HttpConnection.closeOrReturnToCa..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (263,014 samples, 33.81%)</title><rect x="633.8" y="307.0" width="398.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.8" y="318.0">jdk/internal/net/http/ConnectionPool.returnToPool</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (263,014 samples, 33.81%)</title><rect x="633.8" y="291.0" width="398.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.8" y="302.0">jdk/internal/net/http/ConnectionPool.returnToPool</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (54,350 samples, 6.99%)</title><rect x="633.8" y="275.0" width="82.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="636.8" y="286.0">jdk.inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (208,664 samples, 26.82%)</title><rect x="716.2" y="275.0" width="316.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.2" y="286.0">jdk/internal/net/http/ConnectionPool.regist..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (208,664 samples, 26.82%)</title><rect x="716.2" y="259.0" width="316.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.2" y="270.0">jdk/internal/net/http/SocketTube.connectFlows</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (25,430 samples, 3.27%)</title><rect x="716.2" y="243.0" width="38.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.2" y="254.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (25,430 samples, 3.27%)</title><rect x="716.2" y="227.0" width="38.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.2" y="238.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (25,430 samples, 3.27%)</title><rect x="716.2" y="211.0" width="38.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.2" y="222.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (25,430 samples, 3.27%)</title><rect x="716.2" y="195.0" width="38.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.2" y="206.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (25,430 samples, 3.27%)</title><rect x="716.2" y="179.0" width="38.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.2" y="190.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (23,913 samples, 3.07%)</title><rect x="716.2" y="163.0" width="36.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="719.2" y="174.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,517 samples, 0.19%)</title><rect x="752.5" y="163.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,517 samples, 0.19%)</title><rect x="752.5" y="147.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="755.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (183,234 samples, 23.55%)</title><rect x="754.8" y="243.0" width="277.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.8" y="254.0">jdk/internal/net/http/SocketTube.subs..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (183,234 samples, 23.55%)</title><rect x="754.8" y="227.0" width="277.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.8" y="238.0">jdk/internal/net/http/SocketTube$Inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (183,234 samples, 23.55%)</title><rect x="754.8" y="211.0" width="277.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.8" y="222.0">jdk/internal/net/http/SocketTube$Inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (183,234 samples, 23.55%)</title><rect x="754.8" y="195.0" width="277.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.8" y="206.0">jdk/internal/net/http/HttpClientImpl...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (183,234 samples, 23.55%)</title><rect x="754.8" y="179.0" width="277.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.8" y="190.0">jdk/internal/net/http/HttpClientImpl$..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (180,993 samples, 23.26%)</title><rect x="754.8" y="163.0" width="274.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="757.8" y="174.0">jdk.internal.net.http.HttpClientImpl$..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,241 samples, 0.29%)</title><rect x="1029.3" y="163.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (2,241 samples, 0.29%)</title><rect x="1029.3" y="147.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1032.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (18,057 samples, 2.32%)</title><rect x="1032.8" y="563.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.8" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (18,057 samples, 2.32%)</title><rect x="1032.8" y="547.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.8" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (18,057 samples, 2.32%)</title><rect x="1032.8" y="531.0" width="27.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.8" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (18,057 samples, 2.32%)</title><rect x="1032.8" y="515.0" width="27.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (18,057 samples, 2.32%)</title><rect x="1032.8" y="499.0" width="27.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.8" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (2,094 samples, 0.27%)</title><rect x="1032.8" y="483.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (2,094 samples, 0.27%)</title><rect x="1032.8" y="467.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$427/1238028632.run (2,094 samples, 0.27%)</title><rect x="1032.8" y="451.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$12 (2,094 samples, 0.27%)</title><rect x="1032.8" y="435.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (2,091 samples, 0.27%)</title><rect x="1032.8" y="419.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,091 samples, 0.27%)</title><rect x="1032.8" y="403.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.8" y="414.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (2,091 samples, 0.27%)</title><rect x="1032.8" y="387.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1035.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (15,960 samples, 2.05%)</title><rect x="1036.0" y="483.0" width="24.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10,567 samples, 1.36%)</title><rect x="1036.0" y="467.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$133/1429318088.apply (10,567 samples, 1.36%)</title><rect x="1036.0" y="451.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1039.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (10,567 samples, 1.36%)</title><rect x="1036.0" y="435.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (10,567 samples, 1.36%)</title><rect x="1036.0" y="419.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,338 samples, 0.56%)</title><rect x="1036.0" y="403.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,338 samples, 0.56%)</title><rect x="1036.0" y="387.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1039.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,338 samples, 0.56%)</title><rect x="1036.0" y="371.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,338 samples, 0.56%)</title><rect x="1036.0" y="355.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (4,338 samples, 0.56%)</title><rect x="1036.0" y="339.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4,338 samples, 0.56%)</title><rect x="1036.0" y="323.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4,338 samples, 0.56%)</title><rect x="1036.0" y="307.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4,338 samples, 0.56%)</title><rect x="1036.0" y="291.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4,303 samples, 0.55%)</title><rect x="1036.1" y="275.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,303 samples, 0.55%)</title><rect x="1036.1" y="259.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,303 samples, 0.55%)</title><rect x="1036.1" y="243.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,303 samples, 0.55%)</title><rect x="1036.1" y="227.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,303 samples, 0.55%)</title><rect x="1036.1" y="211.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,303 samples, 0.55%)</title><rect x="1036.1" y="195.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,303 samples, 0.55%)</title><rect x="1036.1" y="179.0" width="6.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1039.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (6,229 samples, 0.80%)</title><rect x="1042.6" y="403.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6,229 samples, 0.80%)</title><rect x="1042.6" y="387.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$207/689816463.accept (6,229 samples, 0.80%)</title><rect x="1042.6" y="371.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (6,229 samples, 0.80%)</title><rect x="1042.6" y="355.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (6,229 samples, 0.80%)</title><rect x="1042.6" y="339.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (6,229 samples, 0.80%)</title><rect x="1042.6" y="323.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (6,229 samples, 0.80%)</title><rect x="1042.6" y="307.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (6,229 samples, 0.80%)</title><rect x="1042.6" y="291.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (6,229 samples, 0.80%)</title><rect x="1042.6" y="275.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (6,229 samples, 0.80%)</title><rect x="1042.6" y="259.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (6,229 samples, 0.80%)</title><rect x="1042.6" y="243.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6,229 samples, 0.80%)</title><rect x="1042.6" y="227.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6,229 samples, 0.80%)</title><rect x="1042.6" y="211.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6,229 samples, 0.80%)</title><rect x="1042.6" y="195.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6,229 samples, 0.80%)</title><rect x="1042.6" y="179.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6,229 samples, 0.80%)</title><rect x="1042.6" y="163.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6,229 samples, 0.80%)</title><rect x="1042.6" y="147.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (6,229 samples, 0.80%)</title><rect x="1042.6" y="131.0" width="9.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1045.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5,393 samples, 0.69%)</title><rect x="1052.0" y="467.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5,371 samples, 0.69%)</title><rect x="1052.0" y="451.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,371 samples, 0.69%)</title><rect x="1052.0" y="435.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5,371 samples, 0.69%)</title><rect x="1052.0" y="419.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5,371 samples, 0.69%)</title><rect x="1052.0" y="403.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (5,371 samples, 0.69%)</title><rect x="1052.0" y="387.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (5,371 samples, 0.69%)</title><rect x="1052.0" y="371.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (5,371 samples, 0.69%)</title><rect x="1052.0" y="355.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (5,371 samples, 0.69%)</title><rect x="1052.0" y="339.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (5,371 samples, 0.69%)</title><rect x="1052.0" y="323.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5,371 samples, 0.69%)</title><rect x="1052.0" y="307.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5,371 samples, 0.69%)</title><rect x="1052.0" y="291.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5,371 samples, 0.69%)</title><rect x="1052.0" y="275.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5,371 samples, 0.69%)</title><rect x="1052.0" y="259.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5,371 samples, 0.69%)</title><rect x="1052.0" y="243.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5,371 samples, 0.69%)</title><rect x="1052.0" y="227.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5,371 samples, 0.69%)</title><rect x="1052.0" y="211.0" width="8.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1055.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (74,603 samples, 9.59%)</title><rect x="1060.2" y="563.0" width="113.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1063.2" y="574.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (360 samples, 0.05%)</title><rect x="1060.2" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/442313598.accept (360 samples, 0.05%)</title><rect x="1060.2" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1063.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (360 samples, 0.05%)</title><rect x="1060.2" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1063.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (360 samples, 0.05%)</title><rect x="1060.2" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (360 samples, 0.05%)</title><rect x="1060.2" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (360 samples, 0.05%)</title><rect x="1060.2" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (360 samples, 0.05%)</title><rect x="1060.2" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (360 samples, 0.05%)</title><rect x="1060.2" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (360 samples, 0.05%)</title><rect x="1060.2" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (360 samples, 0.05%)</title><rect x="1060.2" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (360 samples, 0.05%)</title><rect x="1060.2" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1063.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1887377102.run (360 samples, 0.05%)</title><rect x="1060.2" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (360 samples, 0.05%)</title><rect x="1060.2" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (357 samples, 0.05%)</title><rect x="1060.2" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (357 samples, 0.05%)</title><rect x="1060.2" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (357 samples, 0.05%)</title><rect x="1060.2" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (357 samples, 0.05%)</title><rect x="1060.2" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (357 samples, 0.05%)</title><rect x="1060.2" y="275.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (357 samples, 0.05%)</title><rect x="1060.2" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (357 samples, 0.05%)</title><rect x="1060.2" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (357 samples, 0.05%)</title><rect x="1060.2" y="227.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (331 samples, 0.04%)</title><rect x="1060.2" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (331 samples, 0.04%)</title><rect x="1060.2" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (331 samples, 0.04%)</title><rect x="1060.2" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (331 samples, 0.04%)</title><rect x="1060.2" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (331 samples, 0.04%)</title><rect x="1060.2" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (331 samples, 0.04%)</title><rect x="1060.2" y="131.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (331 samples, 0.04%)</title><rect x="1060.2" y="115.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1063.2" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (63,313 samples, 8.14%)</title><rect x="1060.8" y="547.0" width="96.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1063.8" y="558.0">jdk.interna..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,187 samples, 0.15%)</title><rect x="1156.8" y="547.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/558941923.run (325 samples, 0.04%)</title><rect x="1156.8" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (325 samples, 0.04%)</title><rect x="1156.8" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (325 samples, 0.04%)</title><rect x="1156.8" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (325 samples, 0.04%)</title><rect x="1156.8" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (325 samples, 0.04%)</title><rect x="1156.8" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (325 samples, 0.04%)</title><rect x="1156.8" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1887377102.run (325 samples, 0.04%)</title><rect x="1156.8" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (325 samples, 0.04%)</title><rect x="1156.8" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (325 samples, 0.04%)</title><rect x="1156.8" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (325 samples, 0.04%)</title><rect x="1156.8" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (325 samples, 0.04%)</title><rect x="1156.8" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (325 samples, 0.04%)</title><rect x="1156.8" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (325 samples, 0.04%)</title><rect x="1156.8" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (325 samples, 0.04%)</title><rect x="1156.8" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (325 samples, 0.04%)</title><rect x="1156.8" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1159.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (325 samples, 0.04%)</title><rect x="1156.8" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (312 samples, 0.04%)</title><rect x="1156.8" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (312 samples, 0.04%)</title><rect x="1156.8" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (312 samples, 0.04%)</title><rect x="1156.8" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (312 samples, 0.04%)</title><rect x="1156.8" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (312 samples, 0.04%)</title><rect x="1156.8" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (312 samples, 0.04%)</title><rect x="1156.8" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (312 samples, 0.04%)</title><rect x="1156.8" y="179.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1159.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/255901250.run (862 samples, 0.11%)</title><rect x="1157.3" y="531.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (862 samples, 0.11%)</title><rect x="1157.3" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (862 samples, 0.11%)</title><rect x="1157.3" y="499.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (862 samples, 0.11%)</title><rect x="1157.3" y="483.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (862 samples, 0.11%)</title><rect x="1157.3" y="467.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (747 samples, 0.10%)</title><rect x="1157.4" y="451.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (747 samples, 0.10%)</title><rect x="1157.4" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (747 samples, 0.10%)</title><rect x="1157.4" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (747 samples, 0.10%)</title><rect x="1157.4" y="403.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (747 samples, 0.10%)</title><rect x="1157.4" y="387.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (747 samples, 0.10%)</title><rect x="1157.4" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (747 samples, 0.10%)</title><rect x="1157.4" y="355.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1160.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9,428 samples, 1.21%)</title><rect x="1158.6" y="547.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1161.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9,428 samples, 1.21%)</title><rect x="1158.6" y="531.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (9,428 samples, 1.21%)</title><rect x="1158.6" y="515.0" width="14.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1161.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (217 samples, 0.03%)</title><rect x="1172.9" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (217 samples, 0.03%)</title><rect x="1172.9" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (217 samples, 0.03%)</title><rect x="1172.9" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (217 samples, 0.03%)</title><rect x="1172.9" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (217 samples, 0.03%)</title><rect x="1172.9" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (217 samples, 0.03%)</title><rect x="1172.9" y="467.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1175.9" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,973 samples, 1.41%)</title><rect x="1173.4" y="563.0" width="16.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10,973 samples, 1.41%)</title><rect x="1173.4" y="547.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.4" y="558.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (8,390 samples, 1.08%)</title><rect x="1173.4" y="531.0" width="12.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1176.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,583 samples, 0.33%)</title><rect x="1186.1" y="531.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,583 samples, 0.33%)</title><rect x="1186.1" y="515.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,583 samples, 0.33%)</title><rect x="1186.1" y="499.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,583 samples, 0.33%)</title><rect x="1186.1" y="483.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.1" y="494.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,583 samples, 0.33%)</title><rect x="1186.1" y="467.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (2,583 samples, 0.33%)</title><rect x="1186.1" y="451.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (2,583 samples, 0.33%)</title><rect x="1186.1" y="435.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,583 samples, 0.33%)</title><rect x="1186.1" y="419.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,583 samples, 0.33%)</title><rect x="1186.1" y="403.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2,269 samples, 0.29%)</title><rect x="1186.1" y="387.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,269 samples, 0.29%)</title><rect x="1186.1" y="371.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,269 samples, 0.29%)</title><rect x="1186.1" y="355.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,269 samples, 0.29%)</title><rect x="1186.1" y="339.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,269 samples, 0.29%)</title><rect x="1186.1" y="323.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,269 samples, 0.29%)</title><rect x="1186.1" y="307.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,269 samples, 0.29%)</title><rect x="1186.1" y="291.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,269 samples, 0.29%)</title><rect x="1186.1" y="275.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1189.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (314 samples, 0.04%)</title><rect x="1189.5" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (314 samples, 0.04%)</title><rect x="1189.5" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (314 samples, 0.04%)</title><rect x="1189.5" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (314 samples, 0.04%)</title><rect x="1189.5" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (314 samples, 0.04%)</title><rect x="1189.5" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (314 samples, 0.04%)</title><rect x="1189.5" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (314 samples, 0.04%)</title><rect x="1189.5" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1192.5" y="302.0"></text>
</g>
</g>
</svg>
