<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1333"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1333"> </text>
<g id="frames">
<g>
<title>all (17,749 samples, 100.00%)</title><rect x="10.0" y="1299.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1310.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (8 samples, 0.05%)</title><rect x="10.0" y="1283.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1294.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.03%)</title><rect x="10.5" y="1283.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.5" y="1294.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (34 samples, 0.19%)</title><rect x="11.1" y="1283.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.1" y="1294.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.03%)</title><rect x="11.3" y="1267.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.3" y="1278.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.02%)</title><rect x="11.4" y="1251.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.4" y="1262.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (18 samples, 0.10%)</title><rect x="11.7" y="1267.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.7" y="1278.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (7 samples, 0.04%)</title><rect x="12.3" y="1251.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.3" y="1262.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.04%)</title><rect x="12.9" y="1267.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.9" y="1278.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (5 samples, 0.03%)</title><rect x="13.1" y="1251.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.1" y="1262.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.02%)</title><rect x="13.1" y="1235.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.1" y="1246.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="13.1" y="1219.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.1" y="1230.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (112 samples, 0.63%)</title><rect x="13.4" y="1283.0" width="7.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.4" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (111 samples, 0.63%)</title><rect x="13.5" y="1267.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.5" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (108 samples, 0.61%)</title><rect x="13.7" y="1251.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.7" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (102 samples, 0.57%)</title><rect x="13.9" y="1235.0" width="6.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.9" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (78 samples, 0.44%)</title><rect x="14.0" y="1219.0" width="5.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.0" y="1230.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.05%)</title><rect x="19.2" y="1219.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="22.2" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (11 samples, 0.06%)</title><rect x="19.8" y="1219.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="22.8" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="20.2" y="1203.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="23.2" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="20.2" y="1187.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="23.2" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (93 samples, 0.52%)</title><rect x="20.9" y="1283.0" width="6.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.9" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (93 samples, 0.52%)</title><rect x="20.9" y="1267.0" width="6.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.9" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (92 samples, 0.52%)</title><rect x="21.0" y="1251.0" width="6.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="24.0" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (88 samples, 0.50%)</title><rect x="21.2" y="1235.0" width="5.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.2" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (52 samples, 0.29%)</title><rect x="21.4" y="1219.0" width="3.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.4" y="1230.0"></text>
</g>
<g>
<title>SpinPause (19 samples, 0.11%)</title><rect x="24.8" y="1219.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="27.8" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (15 samples, 0.08%)</title><rect x="26.1" y="1219.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="29.1" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="26.6" y="1203.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.6" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="26.6" y="1187.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.6" y="1198.0"></text>
</g>
<g>
<title>[no_Java_frame] (37 samples, 0.21%)</title><rect x="27.2" y="1283.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="30.2" y="1294.0"></text>
</g>
<g>
<title>[not_walkable_Java] (50 samples, 0.28%)</title><rect x="29.7" y="1283.0" width="3.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="32.7" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (4 samples, 0.02%)</title><rect x="29.9" y="1267.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.9" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (18 samples, 0.10%)</title><rect x="30.2" y="1267.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.2" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (16 samples, 0.09%)</title><rect x="30.3" y="1251.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="33.3" y="1262.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.04%)</title><rect x="30.3" y="1235.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="33.3" y="1246.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.02%)</title><rect x="30.5" y="1219.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="33.5" y="1230.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (9 samples, 0.05%)</title><rect x="30.8" y="1235.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="33.8" y="1246.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (22 samples, 0.12%)</title><rect x="31.5" y="1267.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="34.5" y="1278.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (12 samples, 0.07%)</title><rect x="31.8" y="1251.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="34.8" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (6 samples, 0.03%)</title><rect x="31.9" y="1235.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.9" y="1246.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="32.6" y="1251.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="35.6" y="1262.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 0.64%)</title><rect x="33.0" y="1283.0" width="7.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="36.0" y="1294.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (23 samples, 0.13%)</title><rect x="33.0" y="1267.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="36.0" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.11%)</title><rect x="34.6" y="1267.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.6" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="35.3" y="1251.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="38.3" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="35.3" y="1235.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="38.3" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="35.6" y="1219.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.6" y="1230.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="35.6" y="1203.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.6" y="1214.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.02%)</title><rect x="35.6" y="1187.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="38.6" y="1198.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.02%)</title><rect x="35.9" y="1267.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="38.9" y="1278.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (6 samples, 0.03%)</title><rect x="36.4" y="1267.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="39.4" y="1278.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (53 samples, 0.30%)</title><rect x="36.9" y="1267.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="39.9" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.14%)</title><rect x="38.8" y="1251.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="41.8" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.13%)</title><rect x="38.9" y="1235.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="41.9" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.08%)</title><rect x="39.3" y="1219.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="42.3" y="1230.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.07%)</title><rect x="39.4" y="1203.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="42.4" y="1214.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.06%)</title><rect x="39.5" y="1187.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="42.5" y="1198.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.03%)</title><rect x="39.9" y="1171.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.9" y="1182.0"></text>
</g>
<g>
<title>[unknown_Java] (157 samples, 0.88%)</title><rect x="40.5" y="1283.0" width="10.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="43.5" y="1294.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (18 samples, 0.10%)</title><rect x="41.4" y="1267.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="44.4" y="1278.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (10 samples, 0.06%)</title><rect x="41.8" y="1251.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.8" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (6 samples, 0.03%)</title><rect x="42.0" y="1235.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="45.0" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (6 samples, 0.03%)</title><rect x="42.7" y="1267.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="45.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="43.1" y="1267.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="46.1" y="1278.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (5 samples, 0.03%)</title><rect x="43.1" y="1251.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="46.1" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_signal (89 samples, 0.50%)</title><rect x="43.4" y="1267.0" width="6.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="46.4" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 0.40%)</title><rect x="44.6" y="1251.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.6" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 0.40%)</title><rect x="44.6" y="1235.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.6" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (70 samples, 0.39%)</title><rect x="44.6" y="1219.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.6" y="1230.0"></text>
</g>
<g>
<title>do_futex (70 samples, 0.39%)</title><rect x="44.6" y="1203.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.6" y="1214.0"></text>
</g>
<g>
<title>futex_wake (68 samples, 0.38%)</title><rect x="44.7" y="1187.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.7" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (64 samples, 0.36%)</title><rect x="45.0" y="1171.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="48.0" y="1182.0"></text>
</g>
<g>
<title>try_to_wake_up (64 samples, 0.36%)</title><rect x="45.0" y="1155.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.0" y="1166.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 0.35%)</title><rect x="45.1" y="1139.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.1" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.05%)</title><rect x="49.4" y="1267.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="52.4" y="1278.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (10 samples, 0.06%)</title><rect x="50.3" y="1267.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="53.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/NullPointerException.&lt;init&gt; (5 samples, 0.03%)</title><rect x="51.4" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.02%)</title><rect x="51.4" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.02%)</title><rect x="51.4" y="1251.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.02%)</title><rect x="51.4" y="1235.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.02%)</title><rect x="51.4" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.02%)</title><rect x="51.4" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.4" y="1214.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.02%)</title><rect x="51.4" y="1187.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="54.4" y="1198.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.02%)</title><rect x="51.4" y="1171.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="54.4" y="1182.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (4 samples, 0.02%)</title><rect x="51.4" y="1155.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="54.4" y="1166.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (4 samples, 0.02%)</title><rect x="51.4" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="54.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7,485 samples, 42.17%)</title><rect x="51.7" y="1283.0" width="497.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.7" y="1294.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,485 samples, 42.17%)</title><rect x="51.7" y="1267.0" width="497.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.7" y="1278.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,485 samples, 42.17%)</title><rect x="51.7" y="1251.0" width="497.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.7" y="1262.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="53.8" y="1235.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="56.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (27 samples, 0.15%)</title><rect x="54.1" y="1235.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (26 samples, 0.15%)</title><rect x="54.2" y="1219.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.2" y="1230.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (20 samples, 0.11%)</title><rect x="54.3" y="1203.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="57.3" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (6 samples, 0.03%)</title><rect x="54.7" y="1187.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="57.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,391 samples, 7.84%)</title><rect x="55.9" y="1235.0" width="92.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.9" y="1246.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.02%)</title><rect x="56.1" y="1219.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,384 samples, 7.80%)</title><rect x="56.3" y="1219.0" width="92.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.3" y="1230.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,378 samples, 7.76%)</title><rect x="56.6" y="1203.0" width="91.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.6" y="1214.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1931669415.apply (1,367 samples, 7.70%)</title><rect x="57.3" y="1187.0" width="90.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.3" y="1198.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,365 samples, 7.69%)</title><rect x="57.5" y="1171.0" width="90.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.5" y="1182.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,365 samples, 7.69%)</title><rect x="57.5" y="1155.0" width="90.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.5" y="1166.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.02%)</title><rect x="58.0" y="1139.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="58.3" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.03%)</title><rect x="58.4" y="1123.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,287 samples, 7.25%)</title><rect x="58.9" y="1139.0" width="85.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.9" y="1150.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,287 samples, 7.25%)</title><rect x="58.9" y="1123.0" width="85.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.9" y="1134.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkPermissions (5 samples, 0.03%)</title><rect x="58.9" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,281 samples, 7.22%)</title><rect x="59.3" y="1107.0" width="85.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.3" y="1118.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.08%)</title><rect x="59.5" y="1091.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.08%)</title><rect x="59.5" y="1075.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1806345872.get$Lambda (4 samples, 0.02%)</title><rect x="59.5" y="1059.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1307445114.get$Lambda (7 samples, 0.04%)</title><rect x="59.7" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1307445114.&lt;init&gt; (6 samples, 0.03%)</title><rect x="59.8" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (706 samples, 3.98%)</title><rect x="60.4" y="1091.0" width="46.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.4" y="1102.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (703 samples, 3.96%)</title><rect x="60.5" y="1075.0" width="46.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.5" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (700 samples, 3.94%)</title><rect x="60.7" y="1059.0" width="46.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.7" y="1070.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (7 samples, 0.04%)</title><rect x="60.7" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.7" y="1054.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="60.7" y="1027.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="63.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/200602872.apply (693 samples, 3.90%)</title><rect x="61.1" y="1043.0" width="46.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.1" y="1054.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (693 samples, 3.90%)</title><rect x="61.1" y="1027.0" width="46.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.1" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (693 samples, 3.90%)</title><rect x="61.1" y="1011.0" width="46.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.1" y="1022.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1806345872.apply (8 samples, 0.05%)</title><rect x="61.2" y="995.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.05%)</title><rect x="61.2" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (8 samples, 0.05%)</title><rect x="61.2" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (8 samples, 0.05%)</title><rect x="61.2" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (8 samples, 0.05%)</title><rect x="61.2" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (8 samples, 0.05%)</title><rect x="61.2" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (6 samples, 0.03%)</title><rect x="61.3" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (6 samples, 0.03%)</title><rect x="61.3" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.03%)</title><rect x="61.3" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1307445114.apply (681 samples, 3.84%)</title><rect x="61.7" y="995.0" width="45.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.7" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (681 samples, 3.84%)</title><rect x="61.7" y="979.0" width="45.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.7" y="990.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10 samples, 0.06%)</title><rect x="61.8" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 0.05%)</title><rect x="61.9" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="62.2" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="62.2" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.04%)</title><rect x="62.5" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.03%)</title><rect x="62.5" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (663 samples, 3.74%)</title><rect x="62.9" y="963.0" width="44.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.9" y="974.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (580 samples, 3.27%)</title><rect x="63.6" y="947.0" width="38.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.6" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (580 samples, 3.27%)</title><rect x="63.6" y="931.0" width="38.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.6" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (4 samples, 0.02%)</title><rect x="63.7" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.03%)</title><rect x="64.0" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$352/1381405359.apply (563 samples, 3.17%)</title><rect x="64.3" y="915.0" width="37.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.3" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (561 samples, 3.16%)</title><rect x="64.4" y="899.0" width="37.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.4" y="910.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.03%)</title><rect x="65.4" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.02%)</title><rect x="65.5" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="65.5" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.05%)</title><rect x="65.8" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.03%)</title><rect x="66.0" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (18 samples, 0.10%)</title><rect x="66.5" y="883.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.09%)</title><rect x="66.6" y="867.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (5 samples, 0.03%)</title><rect x="66.8" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5 samples, 0.03%)</title><rect x="66.8" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5 samples, 0.03%)</title><rect x="66.8" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.05%)</title><rect x="67.1" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.05%)</title><rect x="67.1" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.04%)</title><rect x="67.2" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.04%)</title><rect x="67.2" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.03%)</title><rect x="67.4" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.02%)</title><rect x="67.4" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (165 samples, 0.93%)</title><rect x="67.7" y="883.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (164 samples, 0.92%)</title><rect x="67.8" y="867.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.8" y="878.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="67.8" y="851.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="70.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (48 samples, 0.27%)</title><rect x="68.2" y="851.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (41 samples, 0.23%)</title><rect x="68.7" y="835.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (37 samples, 0.21%)</title><rect x="69.0" y="819.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (16 samples, 0.09%)</title><rect x="69.5" y="803.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (16 samples, 0.09%)</title><rect x="69.5" y="787.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.5" y="798.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (8 samples, 0.05%)</title><rect x="69.5" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="72.5" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.04%)</title><rect x="69.6" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="72.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.04%)</title><rect x="69.6" y="739.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="72.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.04%)</title><rect x="70.1" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.02%)</title><rect x="70.3" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.3" y="766.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.02%)</title><rect x="70.3" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="73.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (11 samples, 0.06%)</title><rect x="70.7" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (109 samples, 0.61%)</title><rect x="71.4" y="851.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (107 samples, 0.60%)</title><rect x="71.6" y="835.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (91 samples, 0.51%)</title><rect x="72.0" y="819.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (87 samples, 0.49%)</title><rect x="72.1" y="803.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (87 samples, 0.49%)</title><rect x="72.1" y="787.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.1" y="798.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (18 samples, 0.10%)</title><rect x="72.8" y="771.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="75.8" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.10%)</title><rect x="72.9" y="755.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="75.9" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.08%)</title><rect x="73.0" y="739.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="76.0" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (11 samples, 0.06%)</title><rect x="73.2" y="723.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="76.2" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.05%)</title><rect x="74.0" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="77.0" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.05%)</title><rect x="74.0" y="755.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="77.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.03%)</title><rect x="74.0" y="739.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="77.0" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (6 samples, 0.03%)</title><rect x="74.0" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="77.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.05%)</title><rect x="74.6" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.6" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.04%)</title><rect x="74.6" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.6" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="74.8" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="74.8" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (42 samples, 0.24%)</title><rect x="75.1" y="771.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.1" y="782.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (4 samples, 0.02%)</title><rect x="75.2" y="755.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="78.2" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="75.2" y="739.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="78.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (37 samples, 0.21%)</title><rect x="75.4" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.4" y="766.0"></text>
</g>
<g>
<title>__libc_write (37 samples, 0.21%)</title><rect x="75.4" y="739.0" width="2.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="78.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.16%)</title><rect x="76.0" y="723.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.15%)</title><rect x="76.1" y="707.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (27 samples, 0.15%)</title><rect x="76.1" y="691.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.1" y="702.0"></text>
</g>
<g>
<title>ksys_write (26 samples, 0.15%)</title><rect x="76.2" y="675.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.2" y="686.0"></text>
</g>
<g>
<title>vfs_write (25 samples, 0.14%)</title><rect x="76.2" y="659.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.2" y="670.0"></text>
</g>
<g>
<title>__vfs_write (20 samples, 0.11%)</title><rect x="76.3" y="643.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.3" y="654.0"></text>
</g>
<g>
<title>new_sync_write (20 samples, 0.11%)</title><rect x="76.3" y="627.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="79.3" y="638.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.10%)</title><rect x="76.4" y="611.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.4" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 0.09%)</title><rect x="76.5" y="595.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.5" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.09%)</title><rect x="76.5" y="579.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="79.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.09%)</title><rect x="76.5" y="563.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (8 samples, 0.05%)</title><rect x="78.0" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (345 samples, 1.94%)</title><rect x="78.7" y="883.0" width="22.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.7" y="894.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (22 samples, 0.12%)</title><rect x="78.9" y="867.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (20 samples, 0.11%)</title><rect x="78.9" y="851.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (20 samples, 0.11%)</title><rect x="78.9" y="835.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.02%)</title><rect x="80.4" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.4" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.04%)</title><rect x="80.9" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.9" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.04%)</title><rect x="80.9" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.9" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="81.0" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="81.1" y="819.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (203 samples, 1.14%)</title><rect x="81.4" y="867.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.02%)</title><rect x="81.7" y="851.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.7" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.02%)</title><rect x="81.7" y="835.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (25 samples, 0.14%)</title><rect x="82.1" y="851.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (16 samples, 0.09%)</title><rect x="82.3" y="835.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.3" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (14 samples, 0.08%)</title><rect x="82.5" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (12 samples, 0.07%)</title><rect x="82.6" y="803.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (11 samples, 0.06%)</title><rect x="82.7" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.06%)</title><rect x="82.7" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="82.9" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="82.9" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.05%)</title><rect x="82.9" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.9" y="734.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.02%)</title><rect x="83.4" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (85 samples, 0.48%)</title><rect x="83.8" y="851.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.08%)</title><rect x="84.1" y="835.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.1" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.08%)</title><rect x="84.1" y="819.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.1" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.03%)</title><rect x="84.2" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.2" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (7 samples, 0.04%)</title><rect x="84.6" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.6" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (12 samples, 0.07%)</title><rect x="85.1" y="835.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.1" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (12 samples, 0.07%)</title><rect x="85.1" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.1" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (12 samples, 0.07%)</title><rect x="85.1" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.1" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (11 samples, 0.06%)</title><rect x="85.2" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (11 samples, 0.06%)</title><rect x="85.2" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.02%)</title><rect x="85.7" y="755.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.7" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey (4 samples, 0.02%)</title><rect x="85.9" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.9" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (25 samples, 0.14%)</title><rect x="86.2" y="835.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.2" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (23 samples, 0.13%)</title><rect x="86.3" y="819.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.3" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (21 samples, 0.12%)</title><rect x="86.5" y="803.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (19 samples, 0.11%)</title><rect x="86.5" y="787.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (17 samples, 0.10%)</title><rect x="86.7" y="771.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (7 samples, 0.04%)</title><rect x="87.9" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.9" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.&lt;init&gt; (5 samples, 0.03%)</title><rect x="87.9" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.9" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.&lt;init&gt; (5 samples, 0.03%)</title><rect x="87.9" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.9" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.&lt;init&gt; (5 samples, 0.03%)</title><rect x="87.9" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.9" y="798.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$377/1053259218.test (16 samples, 0.09%)</title><rect x="88.4" y="835.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.4" y="846.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (16 samples, 0.09%)</title><rect x="88.4" y="819.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$281/1615728115.test (7 samples, 0.04%)</title><rect x="88.4" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (7 samples, 0.04%)</title><rect x="88.4" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="88.6" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="88.6" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (7 samples, 0.04%)</title><rect x="88.9" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (6 samples, 0.03%)</title><rect x="88.9" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.9" y="798.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (6 samples, 0.03%)</title><rect x="88.9" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.9" y="782.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (6 samples, 0.03%)</title><rect x="88.9" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (6 samples, 0.03%)</title><rect x="88.9" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (6 samples, 0.03%)</title><rect x="88.9" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.03%)</title><rect x="88.9" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.03%)</title><rect x="88.9" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="89.0" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (6 samples, 0.03%)</title><rect x="89.4" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (76 samples, 0.43%)</title><rect x="89.8" y="851.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.8" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (76 samples, 0.43%)</title><rect x="89.8" y="835.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.8" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (75 samples, 0.42%)</title><rect x="89.9" y="819.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.05%)</title><rect x="90.5" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.05%)</title><rect x="90.5" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.5" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.get$Lambda (8 samples, 0.05%)</title><rect x="90.5" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (54 samples, 0.30%)</title><rect x="91.3" y="803.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.3" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (53 samples, 0.30%)</title><rect x="91.3" y="787.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.3" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (53 samples, 0.30%)</title><rect x="91.3" y="771.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.trim (10 samples, 0.06%)</title><rect x="91.5" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (10 samples, 0.06%)</title><rect x="91.5" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="91.8" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (22 samples, 0.12%)</title><rect x="92.2" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (22 samples, 0.12%)</title><rect x="92.2" y="739.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.2" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (19 samples, 0.11%)</title><rect x="92.4" y="723.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.4" y="734.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="92.4" y="707.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="95.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.03%)</title><rect x="92.9" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.02%)</title><rect x="93.0" y="691.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.0" y="702.0"></text>
</g>
<g>
<title>java/util/List.copyOf (5 samples, 0.03%)</title><rect x="93.6" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.6" y="766.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (5 samples, 0.03%)</title><rect x="93.6" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.06%)</title><rect x="94.1" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (22 samples, 0.12%)</title><rect x="94.9" y="867.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 0.02%)</title><rect x="95.0" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.09%)</title><rect x="95.3" y="851.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (16 samples, 0.09%)</title><rect x="95.3" y="835.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (16 samples, 0.09%)</title><rect x="95.3" y="819.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.08%)</title><rect x="95.3" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.02%)</title><rect x="95.4" y="787.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.03%)</title><rect x="95.8" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (49 samples, 0.28%)</title><rect x="96.6" y="867.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (44 samples, 0.25%)</title><rect x="96.8" y="851.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.8" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.14%)</title><rect x="97.4" y="835.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (24 samples, 0.14%)</title><rect x="97.4" y="819.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (24 samples, 0.14%)</title><rect x="97.4" y="803.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.10%)</title><rect x="97.4" y="787.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (11 samples, 0.06%)</title><rect x="97.7" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.02%)</title><rect x="98.0" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/476800120.invoke (6 samples, 0.03%)</title><rect x="98.6" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="98.6" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (6 samples, 0.03%)</title><rect x="98.6" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (10 samples, 0.06%)</title><rect x="99.1" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.04%)</title><rect x="99.3" y="819.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (5 samples, 0.03%)</title><rect x="99.4" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (5 samples, 0.03%)</title><rect x="99.4" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (26 samples, 0.15%)</title><rect x="99.8" y="867.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.8" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (17 samples, 0.10%)</title><rect x="100.4" y="851.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.05%)</title><rect x="100.9" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.05%)</title><rect x="100.9" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (9 samples, 0.05%)</title><rect x="100.9" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="101.8" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="101.9" y="899.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (4 samples, 0.02%)</title><rect x="102.1" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (67 samples, 0.38%)</title><rect x="102.4" y="947.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (45 samples, 0.25%)</title><rect x="103.3" y="931.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.23%)</title><rect x="103.7" y="915.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.22%)</title><rect x="103.7" y="899.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 0.21%)</title><rect x="103.8" y="883.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (38 samples, 0.21%)</title><rect x="103.8" y="867.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (12 samples, 0.07%)</title><rect x="103.8" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (6 samples, 0.03%)</title><rect x="104.1" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.03%)</title><rect x="104.1" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$DataPair.&lt;init&gt; (4 samples, 0.02%)</title><rect x="104.1" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (20 samples, 0.11%)</title><rect x="104.6" y="851.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (20 samples, 0.11%)</title><rect x="104.6" y="835.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (20 samples, 0.11%)</title><rect x="104.6" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (4 samples, 0.02%)</title><rect x="104.8" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (13 samples, 0.07%)</title><rect x="105.1" y="803.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (7 samples, 0.04%)</title><rect x="105.5" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (4 samples, 0.02%)</title><rect x="105.7" y="771.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.03%)</title><rect x="105.9" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.03%)</title><rect x="105.9" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.03%)</title><rect x="105.9" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (4 samples, 0.02%)</title><rect x="106.0" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.02%)</title><rect x="106.0" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (4 samples, 0.02%)</title><rect x="106.3" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.03%)</title><rect x="107.3" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.03%)</title><rect x="107.3" y="1075.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.3" y="1086.0"></text>
</g>
<g>
<title>java/util/function/Function.identity (15 samples, 0.08%)</title><rect x="107.7" y="1091.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (538 samples, 3.03%)</title><rect x="108.7" y="1091.0" width="35.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.7" y="1102.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.10%)</title><rect x="108.9" y="1075.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17 samples, 0.10%)</title><rect x="108.9" y="1059.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/72149394.apply (6 samples, 0.03%)</title><rect x="109.4" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (4 samples, 0.02%)</title><rect x="109.5" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.09%)</title><rect x="110.0" y="1075.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (14 samples, 0.08%)</title><rect x="110.1" y="1059.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (6 samples, 0.03%)</title><rect x="110.2" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (6 samples, 0.03%)</title><rect x="110.2" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$305/1843807218.accept (4 samples, 0.02%)</title><rect x="110.3" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="110.8" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="110.8" y="1027.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (497 samples, 2.80%)</title><rect x="111.3" y="1075.0" width="33.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.3" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (492 samples, 2.77%)</title><rect x="111.6" y="1059.0" width="32.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.6" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (485 samples, 2.73%)</title><rect x="111.6" y="1043.0" width="32.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.6" y="1054.0">jd..</text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.06%)</title><rect x="112.6" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.6" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.02%)</title><rect x="113.0" y="1011.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (24 samples, 0.14%)</title><rect x="113.4" y="1027.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="113.8" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="113.8" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.get$Lambda (5 samples, 0.03%)</title><rect x="113.9" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.&lt;init&gt; (5 samples, 0.03%)</title><rect x="113.9" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (6 samples, 0.03%)</title><rect x="114.4" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (26 samples, 0.15%)</title><rect x="115.0" y="1027.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (5 samples, 0.03%)</title><rect x="116.3" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (7 samples, 0.04%)</title><rect x="116.7" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (166 samples, 0.94%)</title><rect x="117.2" y="1027.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (145 samples, 0.82%)</title><rect x="117.4" y="1011.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.4" y="1022.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (29 samples, 0.16%)</title><rect x="118.8" y="995.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="121.8" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (27 samples, 0.15%)</title><rect x="119.0" y="979.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="122.0" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (26 samples, 0.15%)</title><rect x="119.0" y="963.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="122.0" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (24 samples, 0.14%)</title><rect x="119.1" y="947.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="122.1" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.12%)</title><rect x="120.8" y="995.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="123.8" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (22 samples, 0.12%)</title><rect x="120.8" y="979.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.8" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (21 samples, 0.12%)</title><rect x="120.8" y="963.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="123.8" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (20 samples, 0.11%)</title><rect x="120.8" y="947.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="123.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (72 samples, 0.41%)</title><rect x="122.3" y="995.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (36 samples, 0.20%)</title><rect x="122.6" y="979.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (32 samples, 0.18%)</title><rect x="122.6" y="963.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (29 samples, 0.16%)</title><rect x="122.8" y="947.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.8" y="958.0"></text>
</g>
<g>
<title>java/util/Objects.equals (29 samples, 0.16%)</title><rect x="122.8" y="931.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.8" y="942.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (28 samples, 0.16%)</title><rect x="122.8" y="915.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.8" y="926.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (26 samples, 0.15%)</title><rect x="123.0" y="899.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.0" y="910.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (6 samples, 0.03%)</title><rect x="124.3" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.02%)</title><rect x="124.7" y="963.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.02%)</title><rect x="124.7" y="947.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.7" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.removeFirst (6 samples, 0.03%)</title><rect x="124.9" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (25 samples, 0.14%)</title><rect x="125.4" y="979.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.4" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (15 samples, 0.08%)</title><rect x="125.9" y="963.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (15 samples, 0.08%)</title><rect x="127.1" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (6 samples, 0.03%)</title><rect x="127.7" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (227 samples, 1.28%)</title><rect x="128.2" y="1027.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.2" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (224 samples, 1.26%)</title><rect x="128.4" y="1011.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.4" y="1022.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (113 samples, 0.64%)</title><rect x="128.7" y="995.0" width="7.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="131.7" y="1006.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (4 samples, 0.02%)</title><rect x="129.4" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="132.4" y="990.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.02%)</title><rect x="129.9" y="979.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="132.9" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (6 samples, 0.03%)</title><rect x="130.2" y="979.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="133.2" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (6 samples, 0.03%)</title><rect x="130.2" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="133.2" y="974.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (17 samples, 0.10%)</title><rect x="130.9" y="979.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="133.9" y="990.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (5 samples, 0.03%)</title><rect x="131.7" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="134.7" y="974.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (26 samples, 0.15%)</title><rect x="132.7" y="979.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="135.7" y="990.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (20 samples, 0.11%)</title><rect x="132.9" y="963.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="135.9" y="974.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (9 samples, 0.05%)</title><rect x="133.1" y="947.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="136.1" y="958.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="133.4" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="136.4" y="942.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="133.7" y="947.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="136.7" y="958.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (5 samples, 0.03%)</title><rect x="133.9" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="136.9" y="958.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (28 samples, 0.16%)</title><rect x="134.4" y="979.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="137.4" y="990.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (10 samples, 0.06%)</title><rect x="134.7" y="963.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="137.7" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (12 samples, 0.07%)</title><rect x="135.5" y="963.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="138.5" y="974.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (12 samples, 0.07%)</title><rect x="135.5" y="947.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="138.5" y="958.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (8 samples, 0.05%)</title><rect x="135.5" y="931.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="138.5" y="942.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="135.7" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="138.7" y="926.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.02%)</title><rect x="136.3" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="139.3" y="1006.0"></text>
</g>
<g>
<title>call_stub (5 samples, 0.03%)</title><rect x="136.8" y="995.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="139.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$215/274122757.run (88 samples, 0.50%)</title><rect x="137.1" y="995.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (85 samples, 0.48%)</title><rect x="137.3" y="979.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.3" y="990.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (84 samples, 0.47%)</title><rect x="137.4" y="963.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.4" y="974.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (78 samples, 0.44%)</title><rect x="137.5" y="947.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.5" y="958.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (78 samples, 0.44%)</title><rect x="137.5" y="931.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.5" y="942.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (78 samples, 0.44%)</title><rect x="137.5" y="915.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.05%)</title><rect x="137.8" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (6 samples, 0.03%)</title><rect x="138.0" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (6 samples, 0.03%)</title><rect x="138.0" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.0" y="878.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (62 samples, 0.35%)</title><rect x="138.6" y="899.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.6" y="910.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="138.7" y="883.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="141.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.clone (33 samples, 0.19%)</title><rect x="139.2" y="883.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.2" y="894.0"></text>
</g>
<g>
<title>JVM_Clone (25 samples, 0.14%)</title><rect x="139.5" y="867.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="142.5" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;540784ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)9, 540784ul&gt;::access_barrier(oopDesc*, oopDesc*, unsigned long) (7 samples, 0.04%)</title><rect x="139.6" y="851.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="142.6" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.04%)</title><rect x="140.1" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="143.1" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="140.1" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="143.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.04%)</title><rect x="141.4" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.02%)</title><rect x="141.6" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (8 samples, 0.05%)</title><rect x="142.2" y="883.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (6 samples, 0.03%)</title><rect x="142.3" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="142.4" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (4 samples, 0.02%)</title><rect x="142.4" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.04%)</title><rect x="143.4" y="1027.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.03%)</title><rect x="143.4" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.03%)</title><rect x="143.5" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.03%)</title><rect x="143.5" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.5" y="990.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.03%)</title><rect x="143.5" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.03%)</title><rect x="143.8" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (54 samples, 0.30%)</title><rect x="144.6" y="1139.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (39 samples, 0.22%)</title><rect x="145.5" y="1123.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (18 samples, 0.10%)</title><rect x="145.7" y="1107.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.7" y="1118.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (6 samples, 0.03%)</title><rect x="145.8" y="1091.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="148.8" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (7 samples, 0.04%)</title><rect x="146.3" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.3" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (7 samples, 0.04%)</title><rect x="146.3" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.3" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (7 samples, 0.04%)</title><rect x="146.3" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.3" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (6 samples, 0.03%)</title><rect x="146.4" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (16 samples, 0.09%)</title><rect x="146.9" y="1107.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.9" y="1118.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (12 samples, 0.07%)</title><rect x="147.2" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.2" y="1102.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (9 samples, 0.05%)</title><rect x="147.4" y="1075.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.03%)</title><rect x="147.6" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.6" y="1070.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.03%)</title><rect x="147.6" y="1043.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="150.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (16 samples, 0.09%)</title><rect x="148.5" y="1235.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (16 samples, 0.09%)</title><rect x="148.5" y="1219.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (12 samples, 0.07%)</title><rect x="148.7" y="1203.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (11 samples, 0.06%)</title><rect x="148.8" y="1187.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (11 samples, 0.06%)</title><rect x="148.8" y="1171.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (11 samples, 0.06%)</title><rect x="148.8" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Class.cast (5 samples, 0.03%)</title><rect x="149.2" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (21 samples, 0.12%)</title><rect x="149.5" y="1235.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.08%)</title><rect x="150.0" y="1219.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (10 samples, 0.06%)</title><rect x="150.2" y="1203.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,120 samples, 6.31%)</title><rect x="150.9" y="1235.0" width="74.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.9" y="1246.0">java/uti..</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="153.0" y="1219.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="156.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.02%)</title><rect x="153.3" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,062 samples, 5.98%)</title><rect x="153.6" y="1219.0" width="70.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.6" y="1230.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (4 samples, 0.02%)</title><rect x="153.9" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (736 samples, 4.15%)</title><rect x="154.2" y="1203.0" width="48.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.2" y="1214.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.03%)</title><rect x="154.8" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (12 samples, 0.07%)</title><rect x="155.1" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (11 samples, 0.06%)</title><rect x="155.1" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (9 samples, 0.05%)</title><rect x="155.3" y="1155.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.3" y="1166.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (5 samples, 0.03%)</title><rect x="155.3" y="1139.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="158.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (80 samples, 0.45%)</title><rect x="156.1" y="1187.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (80 samples, 0.45%)</title><rect x="156.1" y="1171.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (76 samples, 0.43%)</title><rect x="156.1" y="1155.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (74 samples, 0.42%)</title><rect x="156.2" y="1139.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (73 samples, 0.41%)</title><rect x="156.3" y="1123.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="156.5" y="1107.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="159.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (65 samples, 0.37%)</title><rect x="156.8" y="1107.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="159.8" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.30%)</title><rect x="157.6" y="1091.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="160.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (52 samples, 0.29%)</title><rect x="157.7" y="1075.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="160.7" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (52 samples, 0.29%)</title><rect x="157.7" y="1059.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="160.7" y="1070.0"></text>
</g>
<g>
<title>do_futex (52 samples, 0.29%)</title><rect x="157.7" y="1043.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.7" y="1054.0"></text>
</g>
<g>
<title>futex_wake (51 samples, 0.29%)</title><rect x="157.7" y="1027.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.7" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (45 samples, 0.25%)</title><rect x="158.1" y="1011.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="161.1" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (44 samples, 0.25%)</title><rect x="158.1" y="995.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="161.1" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (44 samples, 0.25%)</title><rect x="158.1" y="979.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="161.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.02%)</title><rect x="161.1" y="1155.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (625 samples, 3.52%)</title><rect x="161.6" y="1187.0" width="41.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.6" y="1198.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (623 samples, 3.51%)</title><rect x="161.7" y="1171.0" width="41.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.7" y="1182.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (261 samples, 1.47%)</title><rect x="162.4" y="1155.0" width="17.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="165.4" y="1166.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (14 samples, 0.08%)</title><rect x="163.8" y="1139.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="166.8" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (47 samples, 0.26%)</title><rect x="164.9" y="1139.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="167.9" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (14 samples, 0.08%)</title><rect x="166.6" y="1123.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="169.6" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.03%)</title><rect x="168.2" y="1139.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="171.2" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (160 samples, 0.90%)</title><rect x="168.9" y="1139.0" width="10.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="171.9" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 0.45%)</title><rect x="174.2" y="1123.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="177.2" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 0.43%)</title><rect x="174.4" y="1107.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="177.4" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 0.21%)</title><rect x="176.9" y="1091.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="179.9" y="1102.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.19%)</title><rect x="177.1" y="1075.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.1" y="1086.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.15%)</title><rect x="177.3" y="1059.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="180.3" y="1070.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.05%)</title><rect x="178.5" y="1043.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="181.5" y="1054.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (6 samples, 0.03%)</title><rect x="178.7" y="1027.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="181.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (352 samples, 1.98%)</title><rect x="179.7" y="1155.0" width="23.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="182.7" y="1166.0">[..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (4 samples, 0.02%)</title><rect x="179.7" y="1139.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="182.7" y="1150.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (6 samples, 0.03%)</title><rect x="180.0" y="1139.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="183.0" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (297 samples, 1.67%)</title><rect x="180.4" y="1139.0" width="19.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="183.4" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 0.56%)</title><rect x="193.5" y="1123.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.5" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 0.56%)</title><rect x="193.6" y="1107.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.6" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (76 samples, 0.43%)</title><rect x="195.1" y="1091.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.1" y="1102.0"></text>
</g>
<g>
<title>do_futex (70 samples, 0.39%)</title><rect x="195.5" y="1075.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.5" y="1086.0"></text>
</g>
<g>
<title>futex_wait (67 samples, 0.38%)</title><rect x="195.6" y="1059.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="198.6" y="1070.0"></text>
</g>
<g>
<title>futex_wait_queue_me (32 samples, 0.18%)</title><rect x="196.0" y="1043.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.0" y="1054.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.14%)</title><rect x="196.5" y="1027.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.5" y="1038.0"></text>
</g>
<g>
<title>__sched_text_start (19 samples, 0.11%)</title><rect x="196.9" y="1011.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="199.9" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.04%)</title><rect x="197.7" y="995.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait_setup (22 samples, 0.12%)</title><rect x="198.1" y="1043.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="201.1" y="1054.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="198.7" y="1027.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="201.7" y="1038.0"></text>
</g>
<g>
<title>get_futex_value_locked (9 samples, 0.05%)</title><rect x="199.0" y="1027.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="202.0" y="1038.0"></text>
</g>
<g>
<title>plist_add (5 samples, 0.03%)</title><rect x="199.7" y="1043.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="202.7" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (27 samples, 0.15%)</title><rect x="200.1" y="1139.0" width="1.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="203.1" y="1150.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.03%)</title><rect x="201.9" y="1139.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="204.9" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (6 samples, 0.03%)</title><rect x="202.3" y="1139.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="205.3" y="1150.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (6 samples, 0.03%)</title><rect x="202.7" y="1139.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="205.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (151 samples, 0.85%)</title><rect x="203.3" y="1203.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (151 samples, 0.85%)</title><rect x="203.3" y="1187.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (24 samples, 0.14%)</title><rect x="203.4" y="1171.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (11 samples, 0.06%)</title><rect x="204.3" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.3" y="1166.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (6 samples, 0.03%)</title><rect x="204.3" y="1139.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="207.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (111 samples, 0.63%)</title><rect x="205.0" y="1171.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (58 samples, 0.33%)</title><rect x="205.2" y="1155.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (13 samples, 0.07%)</title><rect x="205.3" y="1139.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (13 samples, 0.07%)</title><rect x="205.3" y="1123.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (9 samples, 0.05%)</title><rect x="205.6" y="1107.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (20 samples, 0.11%)</title><rect x="206.2" y="1139.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (20 samples, 0.11%)</title><rect x="206.2" y="1123.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (23 samples, 0.13%)</title><rect x="207.5" y="1139.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (19 samples, 0.11%)</title><rect x="207.5" y="1123.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (18 samples, 0.10%)</title><rect x="207.6" y="1107.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="208.8" y="1123.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (30 samples, 0.17%)</title><rect x="209.0" y="1155.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.15%)</title><rect x="209.2" y="1139.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (24 samples, 0.14%)</title><rect x="209.4" y="1123.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.4" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.07%)</title><rect x="209.4" y="1107.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="212.4" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.05%)</title><rect x="209.7" y="1091.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="212.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.07%)</title><rect x="210.2" y="1107.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="213.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.06%)</title><rect x="210.2" y="1091.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="213.2" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="210.6" y="1075.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="213.6" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="210.6" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="213.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (14 samples, 0.08%)</title><rect x="211.1" y="1155.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (14 samples, 0.08%)</title><rect x="211.1" y="1139.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (7 samples, 0.04%)</title><rect x="211.6" y="1123.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.03%)</title><rect x="212.0" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.03%)</title><rect x="212.0" y="1139.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.02%)</title><rect x="212.1" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.02%)</title><rect x="212.1" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="212.1" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (14 samples, 0.08%)</title><rect x="212.4" y="1171.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (14 samples, 0.08%)</title><rect x="212.4" y="1155.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.03%)</title><rect x="213.0" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.03%)</title><rect x="213.0" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="213.0" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (164 samples, 0.92%)</title><rect x="213.3" y="1203.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (164 samples, 0.92%)</title><rect x="213.3" y="1187.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (162 samples, 0.91%)</title><rect x="213.3" y="1171.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (161 samples, 0.91%)</title><rect x="213.3" y="1155.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (161 samples, 0.91%)</title><rect x="213.3" y="1139.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.3" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (27 samples, 0.15%)</title><rect x="213.4" y="1123.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="216.4" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.03%)</title><rect x="213.8" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="216.8" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.04%)</title><rect x="214.3" y="1107.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="217.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (132 samples, 0.74%)</title><rect x="215.2" y="1123.0" width="8.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="218.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 0.60%)</title><rect x="217.0" y="1107.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="220.0" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (104 samples, 0.59%)</title><rect x="217.1" y="1091.0" width="6.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.1" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (99 samples, 0.56%)</title><rect x="217.4" y="1075.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="220.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (98 samples, 0.55%)</title><rect x="217.5" y="1059.0" width="6.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="220.5" y="1070.0"></text>
</g>
<g>
<title>futex_wake (98 samples, 0.55%)</title><rect x="217.5" y="1043.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="220.5" y="1054.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.04%)</title><rect x="217.9" y="1027.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.9" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (85 samples, 0.48%)</title><rect x="218.4" y="1027.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.4" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (84 samples, 0.47%)</title><rect x="218.4" y="1011.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="221.4" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (84 samples, 0.47%)</title><rect x="218.4" y="995.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (9 samples, 0.05%)</title><rect x="224.2" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (9 samples, 0.05%)</title><rect x="224.2" y="1203.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (6 samples, 0.03%)</title><rect x="224.4" y="1187.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1482582287.run (4 samples, 0.02%)</title><rect x="224.9" y="1219.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1482582287.run (1,909 samples, 10.76%)</title><rect x="225.5" y="1235.0" width="126.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.5" y="1246.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,905 samples, 10.73%)</title><rect x="225.7" y="1219.0" width="126.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.7" y="1230.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,895 samples, 10.68%)</title><rect x="226.4" y="1203.0" width="126.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.4" y="1214.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,877 samples, 10.58%)</title><rect x="227.4" y="1187.0" width="124.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.4" y="1198.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,868 samples, 10.52%)</title><rect x="227.9" y="1171.0" width="124.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.9" y="1182.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,867 samples, 10.52%)</title><rect x="228.0" y="1155.0" width="124.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.0" y="1166.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,866 samples, 10.51%)</title><rect x="228.1" y="1139.0" width="124.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.1" y="1150.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,864 samples, 10.50%)</title><rect x="228.2" y="1123.0" width="123.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.2" y="1134.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,864 samples, 10.50%)</title><rect x="228.2" y="1107.0" width="123.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.2" y="1118.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (7 samples, 0.04%)</title><rect x="228.3" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (5 samples, 0.03%)</title><rect x="228.4" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.03%)</title><rect x="228.4" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$DataPair.&lt;init&gt; (5 samples, 0.03%)</title><rect x="228.4" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,856 samples, 10.46%)</title><rect x="228.7" y="1091.0" width="123.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.7" y="1102.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,856 samples, 10.46%)</title><rect x="228.7" y="1075.0" width="123.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.7" y="1086.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (342 samples, 1.93%)</title><rect x="229.1" y="1059.0" width="22.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.1" y="1070.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="229.8" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="229.8" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (291 samples, 1.64%)</title><rect x="230.1" y="1043.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (286 samples, 1.61%)</title><rect x="230.4" y="1027.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (283 samples, 1.59%)</title><rect x="230.5" y="1011.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (18 samples, 0.10%)</title><rect x="231.1" y="995.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.1" y="1006.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="231.1" y="979.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="234.1" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.06%)</title><rect x="231.3" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.06%)</title><rect x="231.3" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Class.cast (10 samples, 0.06%)</title><rect x="231.3" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (255 samples, 1.44%)</title><rect x="232.3" y="995.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (86 samples, 0.48%)</title><rect x="232.5" y="979.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.5" y="990.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="232.9" y="963.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="235.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.09%)</title><rect x="233.2" y="963.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.08%)</title><rect x="233.2" y="947.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.08%)</title><rect x="233.3" y="931.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.08%)</title><rect x="233.3" y="915.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (10 samples, 0.06%)</title><rect x="233.3" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.3" y="910.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="233.3" y="883.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="236.3" y="894.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/63001505.apply (5 samples, 0.03%)</title><rect x="233.6" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$407/634219692.apply (38 samples, 0.21%)</title><rect x="234.8" y="963.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (37 samples, 0.21%)</title><rect x="234.8" y="947.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (33 samples, 0.19%)</title><rect x="235.1" y="931.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.1" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.03%)</title><rect x="235.6" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (16 samples, 0.09%)</title><rect x="236.0" y="915.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (11 samples, 0.06%)</title><rect x="236.3" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (10 samples, 0.06%)</title><rect x="236.3" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.02%)</title><rect x="236.6" y="867.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/2099274115.apply (12 samples, 0.07%)</title><rect x="237.4" y="963.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (12 samples, 0.07%)</title><rect x="237.4" y="947.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (12 samples, 0.07%)</title><rect x="237.4" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (11 samples, 0.06%)</title><rect x="237.4" y="915.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (10 samples, 0.06%)</title><rect x="237.5" y="899.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.06%)</title><rect x="237.5" y="883.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$452/1083543256.run (10 samples, 0.06%)</title><rect x="237.5" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (10 samples, 0.06%)</title><rect x="237.5" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (7 samples, 0.04%)</title><rect x="237.7" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (7 samples, 0.04%)</title><rect x="237.7" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.04%)</title><rect x="237.7" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.04%)</title><rect x="237.7" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.04%)</title><rect x="237.7" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.03%)</title><rect x="237.8" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.02%)</title><rect x="237.8" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (4 samples, 0.02%)</title><rect x="237.8" y="723.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (4 samples, 0.02%)</title><rect x="237.8" y="707.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.8" y="718.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.02%)</title><rect x="237.8" y="691.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.02%)</title><rect x="237.8" y="675.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.02%)</title><rect x="237.8" y="659.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (162 samples, 0.91%)</title><rect x="238.2" y="979.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (156 samples, 0.88%)</title><rect x="238.5" y="963.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$355/1359626944.apply (151 samples, 0.85%)</title><rect x="238.8" y="947.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (150 samples, 0.85%)</title><rect x="238.9" y="931.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (149 samples, 0.84%)</title><rect x="239.0" y="915.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1806345872.apply (123 samples, 0.69%)</title><rect x="239.1" y="899.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (123 samples, 0.69%)</title><rect x="239.1" y="883.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (14 samples, 0.08%)</title><rect x="239.1" y="867.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.05%)</title><rect x="239.4" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (108 samples, 0.61%)</title><rect x="240.1" y="867.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (61 samples, 0.34%)</title><rect x="240.1" y="851.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (59 samples, 0.33%)</title><rect x="240.2" y="835.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (54 samples, 0.30%)</title><rect x="240.6" y="819.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (6 samples, 0.03%)</title><rect x="240.7" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$392/946012687.accept (12 samples, 0.07%)</title><rect x="241.1" y="803.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (11 samples, 0.06%)</title><rect x="241.2" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (11 samples, 0.06%)</title><rect x="241.2" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (11 samples, 0.06%)</title><rect x="241.2" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.05%)</title><rect x="241.3" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (7 samples, 0.04%)</title><rect x="241.3" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (7 samples, 0.04%)</title><rect x="241.3" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$404/904631296.accept (32 samples, 0.18%)</title><rect x="241.9" y="803.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (31 samples, 0.17%)</title><rect x="242.0" y="787.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (31 samples, 0.17%)</title><rect x="242.0" y="771.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (30 samples, 0.17%)</title><rect x="242.0" y="755.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (29 samples, 0.16%)</title><rect x="242.0" y="739.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.15%)</title><rect x="242.2" y="723.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.14%)</title><rect x="242.3" y="707.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23 samples, 0.13%)</title><rect x="242.4" y="691.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (23 samples, 0.13%)</title><rect x="242.4" y="675.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (20 samples, 0.11%)</title><rect x="242.6" y="659.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (12 samples, 0.07%)</title><rect x="243.0" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (12 samples, 0.07%)</title><rect x="243.0" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.05%)</title><rect x="243.2" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.05%)</title><rect x="243.2" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (9 samples, 0.05%)</title><rect x="243.2" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="246.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (9 samples, 0.05%)</title><rect x="243.2" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.05%)</title><rect x="243.2" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.03%)</title><rect x="243.2" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (5 samples, 0.03%)</title><rect x="243.2" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (46 samples, 0.26%)</title><rect x="244.2" y="851.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (7 samples, 0.04%)</title><rect x="244.3" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (6 samples, 0.03%)</title><rect x="244.4" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (38 samples, 0.21%)</title><rect x="244.8" y="835.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (21 samples, 0.12%)</title><rect x="244.9" y="819.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (5 samples, 0.03%)</title><rect x="245.0" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (11 samples, 0.06%)</title><rect x="245.3" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (6 samples, 0.03%)</title><rect x="245.7" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="246.1" y="803.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (14 samples, 0.08%)</title><rect x="246.3" y="819.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.3" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.02%)</title><rect x="246.7" y="803.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.7" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="246.9" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="246.9" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.03%)</title><rect x="246.9" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.9" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.03%)</title><rect x="246.9" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1307445114.apply (22 samples, 0.12%)</title><rect x="247.3" y="899.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (22 samples, 0.12%)</title><rect x="247.3" y="883.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (22 samples, 0.12%)</title><rect x="247.3" y="867.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (22 samples, 0.12%)</title><rect x="247.3" y="851.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.03%)</title><rect x="248.4" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.03%)</title><rect x="248.4" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.03%)</title><rect x="248.4" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.02%)</title><rect x="248.5" y="787.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (22 samples, 0.12%)</title><rect x="249.4" y="1043.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (14 samples, 0.08%)</title><rect x="249.9" y="1027.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (10 samples, 0.06%)</title><rect x="250.0" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (5 samples, 0.03%)</title><rect x="250.3" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.06%)</title><rect x="251.1" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/776488445.run (6 samples, 0.03%)</title><rect x="251.3" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (14 samples, 0.08%)</title><rect x="251.9" y="1059.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (14 samples, 0.08%)</title><rect x="251.9" y="1043.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (12 samples, 0.07%)</title><rect x="252.0" y="1027.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,488 samples, 8.38%)</title><rect x="252.8" y="1059.0" width="98.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.8" y="1070.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,485 samples, 8.37%)</title><rect x="253.0" y="1043.0" width="98.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.0" y="1054.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,484 samples, 8.36%)</title><rect x="253.1" y="1027.0" width="98.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.1" y="1038.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,481 samples, 8.34%)</title><rect x="253.3" y="1011.0" width="98.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.3" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$414/616759919.run (19 samples, 0.11%)</title><rect x="254.3" y="995.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (18 samples, 0.10%)</title><rect x="254.4" y="979.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (17 samples, 0.10%)</title><rect x="254.5" y="963.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (4 samples, 0.02%)</title><rect x="255.3" y="947.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,432 samples, 8.07%)</title><rect x="255.7" y="995.0" width="95.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.7" y="1006.0">jdk/interna..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1,378 samples, 7.76%)</title><rect x="256.0" y="979.0" width="91.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.0" y="990.0">java/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,378 samples, 7.76%)</title><rect x="256.0" y="963.0" width="91.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.0" y="974.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.03%)</title><rect x="256.0" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.03%)</title><rect x="256.0" y="931.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.02%)</title><rect x="256.1" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="256.1" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.02%)</title><rect x="256.1" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,372 samples, 7.73%)</title><rect x="256.4" y="947.0" width="91.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.4" y="958.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,371 samples, 7.72%)</title><rect x="256.5" y="931.0" width="91.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.5" y="942.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="257.2" y="915.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.2" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="257.2" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.2" y="910.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (8 samples, 0.05%)</title><rect x="257.7" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.7" y="926.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (7 samples, 0.04%)</title><rect x="257.8" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (7 samples, 0.04%)</title><rect x="257.8" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.03%)</title><rect x="257.9" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.02%)</title><rect x="257.9" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (4 samples, 0.02%)</title><rect x="258.8" y="915.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.8" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.02%)</title><rect x="258.8" y="899.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (6 samples, 0.03%)</title><rect x="259.1" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setShadow (4 samples, 0.02%)</title><rect x="259.5" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1,292 samples, 7.28%)</title><rect x="259.8" y="915.0" width="85.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.8" y="926.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1,291 samples, 7.27%)</title><rect x="259.8" y="899.0" width="85.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.8" y="910.0">sun/nio/ch..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.06%)</title><rect x="260.6" y="883.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="263.6" y="894.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (4 samples, 0.02%)</title><rect x="261.4" y="883.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="264.4" y="894.0"></text>
</g>
<g>
<title>writev (1,261 samples, 7.10%)</title><rect x="261.8" y="883.0" width="83.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="264.8" y="894.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,178 samples, 6.64%)</title><rect x="267.4" y="867.0" width="78.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="270.4" y="878.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (1,175 samples, 6.62%)</title><rect x="267.6" y="851.0" width="78.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="270.6" y="862.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_writev (1,152 samples, 6.49%)</title><rect x="268.7" y="835.0" width="76.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.7" y="846.0">__x64_sy..</text>
</g>
<g>
<title>do_writev (1,151 samples, 6.48%)</title><rect x="268.7" y="819.0" width="76.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.7" y="830.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (13 samples, 0.07%)</title><rect x="269.1" y="803.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.1" y="814.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.07%)</title><rect x="269.2" y="787.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.2" y="798.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.07%)</title><rect x="269.2" y="771.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.05%)</title><rect x="270.0" y="803.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.0" y="814.0"></text>
</g>
<g>
<title>vfs_writev (1,120 samples, 6.31%)</title><rect x="270.7" y="803.0" width="74.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="273.7" y="814.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (1,094 samples, 6.16%)</title><rect x="271.3" y="787.0" width="72.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.3" y="798.0">do_iter_..</text>
</g>
<g>
<title>__fsnotify_parent (11 samples, 0.06%)</title><rect x="271.6" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.6" y="782.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1,051 samples, 5.92%)</title><rect x="272.3" y="771.0" width="69.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.3" y="782.0">do_iter..</text>
</g>
<g>
<title>sock_write_iter (1,044 samples, 5.88%)</title><rect x="272.8" y="755.0" width="69.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.8" y="766.0">sock_wr..</text>
</g>
<g>
<title>sock_sendmsg (1,031 samples, 5.81%)</title><rect x="273.7" y="739.0" width="68.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="276.7" y="750.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.04%)</title><rect x="273.9" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.9" y="734.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,013 samples, 5.71%)</title><rect x="274.3" y="723.0" width="67.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="277.3" y="734.0">inet6_s..</text>
</g>
<g>
<title>release_sock (5 samples, 0.03%)</title><rect x="274.5" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="277.5" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,005 samples, 5.66%)</title><rect x="274.9" y="707.0" width="66.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="277.9" y="718.0">tcp_sen..</text>
</g>
<g>
<title>_raw_spin_lock_bh (11 samples, 0.06%)</title><rect x="275.1" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.1" y="702.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.03%)</title><rect x="276.3" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="279.3" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.02%)</title><rect x="276.7" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="279.7" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (962 samples, 5.42%)</title><rect x="277.1" y="691.0" width="63.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="280.1" y="702.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.03%)</title><rect x="278.9" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="281.9" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="279.0" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="282.0" y="670.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.04%)</title><rect x="279.4" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="282.4" y="686.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.03%)</title><rect x="280.0" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.0" y="686.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.03%)</title><rect x="280.0" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.0" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (67 samples, 0.38%)</title><rect x="280.3" y="675.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.3" y="686.0"></text>
</g>
<g>
<title>__alloc_skb (61 samples, 0.34%)</title><rect x="280.7" y="659.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.7" y="670.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (27 samples, 0.15%)</title><rect x="281.1" y="643.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="284.1" y="654.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (15 samples, 0.08%)</title><rect x="281.2" y="627.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.2" y="638.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.02%)</title><rect x="281.7" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="284.7" y="622.0"></text>
</g>
<g>
<title>memset_erms (7 samples, 0.04%)</title><rect x="282.4" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.4" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.06%)</title><rect x="283.1" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.1" y="654.0"></text>
</g>
<g>
<title>ksize (8 samples, 0.05%)</title><rect x="283.8" y="643.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.8" y="654.0"></text>
</g>
<g>
<title>__ksize (8 samples, 0.05%)</title><rect x="283.8" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="286.8" y="638.0"></text>
</g>
<g>
<title>memset_erms (5 samples, 0.03%)</title><rect x="284.4" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="287.4" y="654.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.02%)</title><rect x="284.8" y="675.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.8" y="686.0"></text>
</g>
<g>
<title>tcp_push (823 samples, 4.64%)</title><rect x="285.1" y="675.0" width="54.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="288.1" y="686.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (821 samples, 4.63%)</title><rect x="285.2" y="659.0" width="54.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="288.2" y="670.0">__tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.02%)</title><rect x="285.2" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="288.2" y="654.0"></text>
</g>
<g>
<title>tcp_write_xmit (814 samples, 4.59%)</title><rect x="285.6" y="643.0" width="54.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.6" y="654.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (731 samples, 4.12%)</title><rect x="286.9" y="627.0" width="48.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="289.9" y="638.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (698 samples, 3.93%)</title><rect x="288.3" y="611.0" width="46.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="291.3" y="622.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (692 samples, 3.90%)</title><rect x="288.4" y="595.0" width="46.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="291.4" y="606.0">__ip..</text>
</g>
<g>
<title>ip_local_out (674 samples, 3.80%)</title><rect x="289.0" y="579.0" width="44.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="292.0" y="590.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.03%)</title><rect x="289.2" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.2" y="574.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.02%)</title><rect x="289.2" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.2" y="558.0"></text>
</g>
<g>
<title>ip_output (665 samples, 3.75%)</title><rect x="289.6" y="563.0" width="44.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="292.6" y="574.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (659 samples, 3.71%)</title><rect x="290.0" y="547.0" width="43.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="293.0" y="558.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.05%)</title><rect x="290.0" y="531.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="293.0" y="542.0"></text>
</g>
<g>
<title>__ip_finish_output (648 samples, 3.65%)</title><rect x="290.6" y="531.0" width="43.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="293.6" y="542.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (645 samples, 3.63%)</title><rect x="290.8" y="515.0" width="42.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="293.8" y="526.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (583 samples, 3.28%)</title><rect x="291.6" y="499.0" width="38.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="294.6" y="510.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (582 samples, 3.28%)</title><rect x="291.7" y="483.0" width="38.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.7" y="494.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (576 samples, 3.25%)</title><rect x="292.1" y="467.0" width="38.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="295.1" y="478.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (576 samples, 3.25%)</title><rect x="292.1" y="451.0" width="38.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="295.1" y="462.0">__s..</text>
</g>
<g>
<title>net_rx_action (557 samples, 3.14%)</title><rect x="293.1" y="435.0" width="37.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.1" y="446.0">net..</text>
</g>
<g>
<title>process_backlog (544 samples, 3.06%)</title><rect x="293.9" y="419.0" width="36.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="296.9" y="430.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (528 samples, 2.97%)</title><rect x="294.9" y="403.0" width="35.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="297.9" y="414.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (526 samples, 2.96%)</title><rect x="295.0" y="387.0" width="35.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="298.0" y="398.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (16 samples, 0.09%)</title><rect x="295.3" y="371.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="298.3" y="382.0"></text>
</g>
<g>
<title>ip_rcv (504 samples, 2.84%)</title><rect x="296.3" y="371.0" width="33.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="299.3" y="382.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.02%)</title><rect x="296.5" y="355.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="299.5" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (498 samples, 2.81%)</title><rect x="296.7" y="355.0" width="33.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.7" y="366.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (494 samples, 2.78%)</title><rect x="296.8" y="339.0" width="32.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="299.8" y="350.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (491 samples, 2.77%)</title><rect x="296.9" y="323.0" width="32.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.9" y="334.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (489 samples, 2.76%)</title><rect x="297.0" y="307.0" width="32.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.0" y="318.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (479 samples, 2.70%)</title><rect x="297.7" y="291.0" width="31.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="300.7" y="302.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (24 samples, 0.14%)</title><rect x="298.5" y="275.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.5" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (12 samples, 0.07%)</title><rect x="300.3" y="275.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="303.3" y="286.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.03%)</title><rect x="300.5" y="259.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="303.5" y="270.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.02%)</title><rect x="300.8" y="259.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="303.8" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (423 samples, 2.38%)</title><rect x="301.3" y="275.0" width="28.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="304.3" y="286.0">tc..</text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.03%)</title><rect x="301.5" y="259.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="304.5" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (411 samples, 2.32%)</title><rect x="302.1" y="259.0" width="27.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="305.1" y="270.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (19 samples, 0.11%)</title><rect x="303.7" y="243.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="306.7" y="254.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.10%)</title><rect x="303.9" y="227.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="306.9" y="238.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.08%)</title><rect x="304.0" y="211.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.0" y="222.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.08%)</title><rect x="304.1" y="195.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="307.1" y="206.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="304.3" y="179.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="307.3" y="190.0"></text>
</g>
<g>
<title>tcp_ack (71 samples, 0.40%)</title><rect x="305.2" y="243.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.2" y="254.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (39 samples, 0.22%)</title><rect x="306.7" y="227.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.7" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.15%)</title><rect x="307.0" y="211.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="310.0" y="222.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.03%)</title><rect x="307.0" y="195.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.0" y="206.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.02%)</title><rect x="307.1" y="179.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.1" y="190.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.11%)</title><rect x="307.4" y="195.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.4" y="206.0"></text>
</g>
<g>
<title>skb_release_data (20 samples, 0.11%)</title><rect x="307.4" y="179.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="310.4" y="190.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.05%)</title><rect x="308.2" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="311.2" y="174.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.04%)</title><rect x="308.2" y="147.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="311.2" y="158.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="308.4" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="311.4" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.02%)</title><rect x="308.9" y="211.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="311.9" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (274 samples, 1.54%)</title><rect x="309.9" y="243.0" width="18.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="312.9" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (274 samples, 1.54%)</title><rect x="309.9" y="227.0" width="18.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="312.9" y="238.0"></text>
</g>
<g>
<title>__wake_up_sync_key (269 samples, 1.52%)</title><rect x="310.2" y="211.0" width="17.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="313.2" y="222.0"></text>
</g>
<g>
<title>__wake_up_common_lock (267 samples, 1.50%)</title><rect x="310.4" y="195.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.4" y="206.0"></text>
</g>
<g>
<title>__lock_text_start (265 samples, 1.49%)</title><rect x="310.5" y="179.0" width="17.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="313.5" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.05%)</title><rect x="328.4" y="243.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="331.4" y="254.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.03%)</title><rect x="328.7" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="331.7" y="238.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.02%)</title><rect x="330.1" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="333.1" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (48 samples, 0.27%)</title><rect x="330.4" y="499.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="333.4" y="510.0"></text>
</g>
<g>
<title>__dev_queue_xmit (48 samples, 0.27%)</title><rect x="330.4" y="483.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="333.4" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (24 samples, 0.14%)</title><rect x="330.9" y="467.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="333.9" y="478.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.03%)</title><rect x="331.0" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.0" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 0.08%)</title><rect x="331.3" y="451.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="334.3" y="462.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.04%)</title><rect x="331.8" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="334.8" y="446.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.04%)</title><rect x="331.8" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.8" y="430.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.04%)</title><rect x="331.8" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="334.8" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.05%)</title><rect x="332.9" y="467.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="335.9" y="478.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.03%)</title><rect x="333.2" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="336.2" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 0.04%)</title><rect x="333.9" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="336.9" y="590.0"></text>
</g>
<g>
<title>skb_clone (10 samples, 0.06%)</title><rect x="334.7" y="611.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="337.7" y="622.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.04%)</title><rect x="334.9" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="337.9" y="606.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.03%)</title><rect x="336.2" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="339.2" y="638.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (28 samples, 0.16%)</title><rect x="336.6" y="627.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.6" y="638.0"></text>
</g>
<g>
<title>tcp_rearm_rto (16 samples, 0.09%)</title><rect x="337.4" y="611.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="340.4" y="622.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.06%)</title><rect x="337.8" y="595.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="340.8" y="606.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.05%)</title><rect x="337.9" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.9" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="338.2" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="341.2" y="574.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (12 samples, 0.07%)</title><rect x="338.8" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.8" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.06%)</title><rect x="338.9" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="341.9" y="622.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.06%)</title><rect x="339.0" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="342.0" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="339.0" y="579.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.0" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.10%)</title><rect x="339.9" y="675.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="342.9" y="686.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.07%)</title><rect x="340.2" y="659.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="343.2" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.03%)</title><rect x="340.6" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.6" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (8 samples, 0.05%)</title><rect x="341.0" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="344.0" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (24 samples, 0.14%)</title><rect x="342.3" y="771.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="345.3" y="782.0"></text>
</g>
<g>
<title>security_file_permission (19 samples, 0.11%)</title><rect x="342.6" y="755.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="345.6" y="766.0"></text>
</g>
<g>
<title>apparmor_file_permission (16 samples, 0.09%)</title><rect x="342.7" y="739.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="345.7" y="750.0"></text>
</g>
<g>
<title>common_file_perm (16 samples, 0.09%)</title><rect x="342.7" y="723.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="345.7" y="734.0"></text>
</g>
<g>
<title>aa_file_perm (12 samples, 0.07%)</title><rect x="342.9" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="345.9" y="718.0"></text>
</g>
<g>
<title>import_iovec (16 samples, 0.09%)</title><rect x="344.0" y="787.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="347.0" y="798.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (13 samples, 0.07%)</title><rect x="344.2" y="771.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="347.2" y="782.0"></text>
</g>
<g>
<title>_copy_from_user (4 samples, 0.02%)</title><rect x="344.2" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.2" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="344.5" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.5" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.02%)</title><rect x="344.8" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="347.8" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.03%)</title><rect x="345.3" y="835.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (23 samples, 0.13%)</title><rect x="345.7" y="915.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.7" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.06%)</title><rect x="345.9" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.9" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.04%)</title><rect x="345.9" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.06%)</title><rect x="346.5" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.5" y="910.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="346.8" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.8" y="894.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="346.8" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.8" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="346.8" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.8" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="346.8" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (5 samples, 0.03%)</title><rect x="347.2" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.2" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (48 samples, 0.27%)</title><rect x="347.6" y="979.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (6 samples, 0.03%)</title><rect x="349.1" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.1" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (8 samples, 0.05%)</title><rect x="349.7" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.7" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (6 samples, 0.03%)</title><rect x="349.9" y="947.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.9" y="958.0"></text>
</g>
<g>
<title>JVM_NewArray (5 samples, 0.03%)</title><rect x="349.9" y="931.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="352.9" y="942.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (7 samples, 0.04%)</title><rect x="350.3" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.3" y="974.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (4 samples, 0.02%)</title><rect x="350.3" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (4 samples, 0.02%)</title><rect x="351.0" y="995.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (7 samples, 0.04%)</title><rect x="351.3" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (5 samples, 0.03%)</title><rect x="351.7" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (5 samples, 0.03%)</title><rect x="351.7" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="354.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,425 samples, 13.66%)</title><rect x="352.4" y="1235.0" width="161.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.4" y="1246.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,417 samples, 13.62%)</title><rect x="352.9" y="1219.0" width="160.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.9" y="1230.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (22 samples, 0.12%)</title><rect x="353.0" y="1203.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (8 samples, 0.05%)</title><rect x="353.5" y="1187.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.05%)</title><rect x="353.5" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$DataPair.&lt;init&gt; (8 samples, 0.05%)</title><rect x="353.5" y="1155.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.03%)</title><rect x="354.0" y="1187.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.03%)</title><rect x="354.1" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.02%)</title><rect x="354.2" y="1155.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.02%)</title><rect x="354.2" y="1139.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.02%)</title><rect x="354.2" y="1123.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.02%)</title><rect x="354.2" y="1107.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.02%)</title><rect x="354.2" y="1091.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,061 samples, 5.98%)</title><rect x="354.4" y="1203.0" width="70.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.4" y="1214.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (1,059 samples, 5.97%)</title><rect x="354.6" y="1187.0" width="70.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.6" y="1198.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,058 samples, 5.96%)</title><rect x="354.6" y="1171.0" width="70.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.6" y="1182.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (7 samples, 0.04%)</title><rect x="355.3" y="1155.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.03%)</title><rect x="355.4" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (112 samples, 0.63%)</title><rect x="356.0" y="1155.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (105 samples, 0.59%)</title><rect x="356.0" y="1139.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (105 samples, 0.59%)</title><rect x="356.0" y="1123.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (104 samples, 0.59%)</title><rect x="356.1" y="1107.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (6 samples, 0.03%)</title><rect x="356.4" y="1091.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (6 samples, 0.03%)</title><rect x="356.4" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="356.4" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (4 samples, 0.02%)</title><rect x="356.4" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="359.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (88 samples, 0.50%)</title><rect x="356.8" y="1091.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (86 samples, 0.48%)</title><rect x="357.0" y="1075.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (81 samples, 0.46%)</title><rect x="357.1" y="1059.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (81 samples, 0.46%)</title><rect x="357.1" y="1043.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (80 samples, 0.45%)</title><rect x="357.2" y="1027.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.2" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 0.11%)</title><rect x="357.5" y="1011.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="360.5" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (18 samples, 0.10%)</title><rect x="357.6" y="995.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="360.6" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (18 samples, 0.10%)</title><rect x="357.6" y="979.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="360.6" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (10 samples, 0.06%)</title><rect x="357.7" y="963.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="360.7" y="974.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.04%)</title><rect x="358.4" y="963.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="361.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (54 samples, 0.30%)</title><rect x="358.9" y="1011.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (52 samples, 0.29%)</title><rect x="359.0" y="995.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.0" y="1006.0"></text>
</g>
<g>
<title>__libc_write (51 samples, 0.29%)</title><rect x="359.0" y="979.0" width="3.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="362.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.24%)</title><rect x="359.6" y="963.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="362.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.23%)</title><rect x="359.7" y="947.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="362.7" y="958.0"></text>
</g>
<g>
<title>__x64_sys_write (39 samples, 0.22%)</title><rect x="359.8" y="931.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="362.8" y="942.0"></text>
</g>
<g>
<title>ksys_write (39 samples, 0.22%)</title><rect x="359.8" y="915.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="362.8" y="926.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.02%)</title><rect x="359.9" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.9" y="910.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="359.9" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.9" y="894.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="359.9" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="362.9" y="878.0"></text>
</g>
<g>
<title>vfs_write (33 samples, 0.19%)</title><rect x="360.2" y="899.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.2" y="910.0"></text>
</g>
<g>
<title>__vfs_write (27 samples, 0.15%)</title><rect x="360.5" y="883.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.5" y="894.0"></text>
</g>
<g>
<title>new_sync_write (27 samples, 0.15%)</title><rect x="360.5" y="867.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="363.5" y="878.0"></text>
</g>
<g>
<title>pipe_write (24 samples, 0.14%)</title><rect x="360.7" y="851.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="363.7" y="862.0"></text>
</g>
<g>
<title>__wake_up_sync_key (18 samples, 0.10%)</title><rect x="360.8" y="835.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.8" y="846.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.10%)</title><rect x="360.8" y="819.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.8" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.10%)</title><rect x="360.9" y="803.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="363.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (5 samples, 0.03%)</title><rect x="362.7" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (6 samples, 0.03%)</title><rect x="363.0" y="1139.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (30 samples, 0.17%)</title><rect x="363.4" y="1155.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="363.7" y="1139.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="363.7" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/157599009.get$Lambda (7 samples, 0.04%)</title><rect x="363.7" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/157599009.&lt;init&gt; (7 samples, 0.04%)</title><rect x="363.7" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (4 samples, 0.02%)</title><rect x="364.2" y="1139.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (12 samples, 0.07%)</title><rect x="364.6" y="1139.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (6 samples, 0.03%)</title><rect x="365.4" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (888 samples, 5.00%)</title><rect x="365.9" y="1155.0" width="59.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.9" y="1166.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (885 samples, 4.99%)</title><rect x="365.9" y="1139.0" width="58.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.9" y="1150.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (884 samples, 4.98%)</title><rect x="365.9" y="1123.0" width="58.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.9" y="1134.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (884 samples, 4.98%)</title><rect x="365.9" y="1107.0" width="58.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.9" y="1118.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (563 samples, 3.17%)</title><rect x="366.5" y="1091.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (555 samples, 3.13%)</title><rect x="366.8" y="1075.0" width="36.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.8" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (551 samples, 3.10%)</title><rect x="367.1" y="1059.0" width="36.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.1" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (548 samples, 3.09%)</title><rect x="367.1" y="1043.0" width="36.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.1" y="1054.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (545 samples, 3.07%)</title><rect x="367.3" y="1027.0" width="36.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.3" y="1038.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (541 samples, 3.05%)</title><rect x="367.5" y="1011.0" width="36.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.5" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (536 samples, 3.02%)</title><rect x="367.9" y="995.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.9" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.03%)</title><rect x="367.9" y="979.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.03%)</title><rect x="367.9" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (8 samples, 0.05%)</title><rect x="368.3" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.05%)</title><rect x="368.3" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.05%)</title><rect x="368.3" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.3" y="958.0"></text>
</g>
<g>
<title>java/lang/Class.cast (7 samples, 0.04%)</title><rect x="368.4" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (477 samples, 2.69%)</title><rect x="368.9" y="979.0" width="31.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.9" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (467 samples, 2.63%)</title><rect x="369.5" y="963.0" width="31.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.5" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (419 samples, 2.36%)</title><rect x="369.8" y="947.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.8" y="958.0">j..</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="370.3" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="373.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17 samples, 0.10%)</title><rect x="370.6" y="931.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.08%)</title><rect x="370.8" y="915.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.08%)</title><rect x="370.8" y="899.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.08%)</title><rect x="370.8" y="883.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (9 samples, 0.05%)</title><rect x="370.8" y="867.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.8" y="878.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="370.8" y="851.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="373.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.02%)</title><rect x="371.9" y="931.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/2099274115.apply (309 samples, 1.74%)</title><rect x="372.3" y="931.0" width="20.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (305 samples, 1.72%)</title><rect x="372.5" y="915.0" width="20.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="372.5" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="372.5" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$487/1843175951.get$Lambda (5 samples, 0.03%)</title><rect x="372.5" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (10 samples, 0.06%)</title><rect x="372.9" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (9 samples, 0.05%)</title><rect x="372.9" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (287 samples, 1.62%)</title><rect x="373.5" y="899.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.04%)</title><rect x="373.8" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="374.0" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (274 samples, 1.54%)</title><rect x="374.3" y="883.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$157/29509426.apply (21 samples, 0.12%)</title><rect x="374.3" y="867.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (18 samples, 0.10%)</title><rect x="374.4" y="851.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.4" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (18 samples, 0.10%)</title><rect x="374.4" y="835.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (17 samples, 0.10%)</title><rect x="374.5" y="819.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.5" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.02%)</title><rect x="375.0" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (253 samples, 1.43%)</title><rect x="375.7" y="867.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.7" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (75 samples, 0.42%)</title><rect x="376.2" y="851.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.2" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.03%)</title><rect x="376.2" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.2" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.03%)</title><rect x="376.3" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.3" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.03%)</title><rect x="376.3" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="379.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="376.3" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.03%)</title><rect x="376.3" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="376.3" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.3" y="766.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.03%)</title><rect x="376.6" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (54 samples, 0.30%)</title><rect x="376.9" y="835.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (54 samples, 0.30%)</title><rect x="376.9" y="819.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (4 samples, 0.02%)</title><rect x="377.1" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (46 samples, 0.26%)</title><rect x="377.4" y="803.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (34 samples, 0.19%)</title><rect x="377.8" y="787.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (26 samples, 0.15%)</title><rect x="378.2" y="771.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (19 samples, 0.11%)</title><rect x="378.4" y="755.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (16 samples, 0.09%)</title><rect x="378.4" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.4" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (15 samples, 0.08%)</title><rect x="378.4" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (10 samples, 0.06%)</title><rect x="378.8" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.8" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$445/61030937.applyAsLong (7 samples, 0.04%)</title><rect x="378.9" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 0.03%)</title><rect x="379.0" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (4 samples, 0.02%)</title><rect x="379.1" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (4 samples, 0.02%)</title><rect x="379.6" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (10 samples, 0.06%)</title><rect x="380.5" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (10 samples, 0.06%)</title><rect x="380.5" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (10 samples, 0.06%)</title><rect x="380.5" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (10 samples, 0.06%)</title><rect x="380.5" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (8 samples, 0.05%)</title><rect x="380.6" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (6 samples, 0.03%)</title><rect x="381.9" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (150 samples, 0.85%)</title><rect x="382.3" y="851.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$452/1083543256.run (149 samples, 0.84%)</title><rect x="382.4" y="835.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (146 samples, 0.82%)</title><rect x="382.6" y="819.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.05%)</title><rect x="383.0" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.05%)</title><rect x="383.0" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$454/1502158743.get$Lambda (5 samples, 0.03%)</title><rect x="383.1" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$454/1502158743.&lt;init&gt; (4 samples, 0.02%)</title><rect x="383.2" y="755.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.03%)</title><rect x="383.7" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.03%)</title><rect x="384.0" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (9 samples, 0.05%)</title><rect x="384.6" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (60 samples, 0.34%)</title><rect x="385.3" y="803.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (59 samples, 0.33%)</title><rect x="385.4" y="787.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.4" y="798.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (54 samples, 0.30%)</title><rect x="385.5" y="771.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.5" y="782.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (4 samples, 0.02%)</title><rect x="386.0" y="755.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="389.0" y="766.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (43 samples, 0.24%)</title><rect x="386.2" y="755.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.2" y="766.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (40 samples, 0.23%)</title><rect x="386.4" y="739.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.4" y="750.0"></text>
</g>
<g>
<title>JVM_IHashCode (29 samples, 0.16%)</title><rect x="386.6" y="723.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="389.6" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (11 samples, 0.06%)</title><rect x="387.4" y="707.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="390.4" y="718.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (4 samples, 0.02%)</title><rect x="387.6" y="691.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="390.6" y="702.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (4 samples, 0.02%)</title><rect x="387.8" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="390.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (23 samples, 0.13%)</title><rect x="389.3" y="803.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.3" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.05%)</title><rect x="389.4" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (8 samples, 0.05%)</title><rect x="389.4" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="389.4" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (11 samples, 0.06%)</title><rect x="390.1" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.05%)</title><rect x="390.2" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148433881.invoke (9 samples, 0.05%)</title><rect x="390.2" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1109108085.invoke (9 samples, 0.05%)</title><rect x="390.2" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="390.2" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (22 samples, 0.12%)</title><rect x="390.8" y="803.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (17 samples, 0.10%)</title><rect x="391.1" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="391.4" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (5 samples, 0.03%)</title><rect x="391.5" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.03%)</title><rect x="391.9" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.03%)</title><rect x="391.9" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (6 samples, 0.03%)</title><rect x="391.9" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (6 samples, 0.03%)</title><rect x="391.9" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$356/1965787041.apply (73 samples, 0.41%)</title><rect x="392.8" y="931.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (69 samples, 0.39%)</title><rect x="393.1" y="915.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (62 samples, 0.35%)</title><rect x="393.2" y="899.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.2" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (5 samples, 0.03%)</title><rect x="394.3" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.3" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="394.3" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (39 samples, 0.22%)</title><rect x="394.6" y="883.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (35 samples, 0.20%)</title><rect x="394.8" y="867.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.8" y="878.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (14 samples, 0.08%)</title><rect x="395.4" y="851.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="398.4" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.06%)</title><rect x="395.7" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="398.7" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.04%)</title><rect x="395.9" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="398.9" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.03%)</title><rect x="396.0" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="399.0" y="814.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (11 samples, 0.06%)</title><rect x="396.4" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.4" y="862.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.03%)</title><rect x="396.7" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.02%)</title><rect x="396.9" y="819.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.02%)</title><rect x="397.3" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (19 samples, 0.11%)</title><rect x="397.7" y="947.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (16 samples, 0.09%)</title><rect x="397.9" y="931.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="397.9" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.03%)</title><rect x="398.2" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$357/1666950950.apply (6 samples, 0.03%)</title><rect x="398.5" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (6 samples, 0.03%)</title><rect x="398.5" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.03%)</title><rect x="398.5" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.02%)</title><rect x="398.6" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.02%)</title><rect x="398.6" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.6" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="398.6" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="398.6" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (25 samples, 0.14%)</title><rect x="398.9" y="947.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (4 samples, 0.02%)</title><rect x="400.3" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$425/255487445.apply (43 samples, 0.24%)</title><rect x="400.6" y="979.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (41 samples, 0.23%)</title><rect x="400.7" y="963.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (31 samples, 0.17%)</title><rect x="401.3" y="947.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.05%)</title><rect x="401.4" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="401.6" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (21 samples, 0.12%)</title><rect x="402.0" y="931.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.channel (4 samples, 0.02%)</title><rect x="402.3" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (12 samples, 0.07%)</title><rect x="402.6" y="915.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (298 samples, 1.68%)</title><rect x="403.9" y="1091.0" width="19.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (6 samples, 0.03%)</title><rect x="404.8" y="1075.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (8 samples, 0.05%)</title><rect x="405.2" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.03%)</title><rect x="405.3" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (39 samples, 0.22%)</title><rect x="405.7" y="1075.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.08%)</title><rect x="406.8" y="1059.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.03%)</title><rect x="407.2" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="407.5" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="407.9" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (39 samples, 0.22%)</title><rect x="408.3" y="1075.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (21 samples, 0.12%)</title><rect x="408.7" y="1059.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.08%)</title><rect x="408.9" y="1043.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.03%)</title><rect x="409.5" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.06%)</title><rect x="410.2" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (23 samples, 0.13%)</title><rect x="410.9" y="1075.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.04%)</title><rect x="411.2" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.03%)</title><rect x="411.3" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.02%)</title><rect x="412.0" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="412.0" y="1043.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (80 samples, 0.45%)</title><rect x="412.4" y="1075.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.4" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (74 samples, 0.42%)</title><rect x="412.8" y="1059.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.8" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (68 samples, 0.38%)</title><rect x="412.8" y="1043.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.8" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (6 samples, 0.03%)</title><rect x="413.3" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (6 samples, 0.03%)</title><rect x="413.3" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (4 samples, 0.02%)</title><rect x="413.4" y="995.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (54 samples, 0.30%)</title><rect x="413.7" y="1027.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.7" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (49 samples, 0.28%)</title><rect x="414.0" y="1011.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.0" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (45 samples, 0.25%)</title><rect x="414.3" y="995.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.3" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (17 samples, 0.10%)</title><rect x="415.1" y="979.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.1" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (15 samples, 0.08%)</title><rect x="415.2" y="963.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.2" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (15 samples, 0.08%)</title><rect x="415.2" y="947.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.2" y="958.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.05%)</title><rect x="415.2" y="931.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="418.2" y="942.0"></text>
</g>
<g>
<title>java/util/List.copyOf (7 samples, 0.04%)</title><rect x="416.2" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.2" y="990.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (7 samples, 0.04%)</title><rect x="416.2" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.2" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (6 samples, 0.03%)</title><rect x="416.2" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.2" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.03%)</title><rect x="416.2" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.04%)</title><rect x="416.8" y="979.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.8" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (6 samples, 0.03%)</title><rect x="417.3" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (5 samples, 0.03%)</title><rect x="417.4" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (87 samples, 0.49%)</title><rect x="417.9" y="1075.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.02%)</title><rect x="418.5" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="418.5" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (73 samples, 0.41%)</title><rect x="418.9" y="1059.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="419.1" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="419.1" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.09%)</title><rect x="419.4" y="1043.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.04%)</title><rect x="419.9" y="1027.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (19 samples, 0.11%)</title><rect x="420.5" y="1043.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (17 samples, 0.10%)</title><rect x="420.6" y="1027.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.trim (12 samples, 0.07%)</title><rect x="421.7" y="1043.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (11 samples, 0.06%)</title><rect x="421.8" y="1027.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="422.1" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.1" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="422.5" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.5" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="422.5" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.5" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="422.5" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.5" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="422.5" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (14 samples, 0.08%)</title><rect x="422.8" y="1043.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.03%)</title><rect x="422.9" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$326/1800006958.accept (14 samples, 0.08%)</title><rect x="423.7" y="1091.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (13 samples, 0.07%)</title><rect x="423.8" y="1075.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (11 samples, 0.06%)</title><rect x="423.9" y="1059.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,333 samples, 7.51%)</title><rect x="425.0" y="1203.0" width="88.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.0" y="1214.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,332 samples, 7.50%)</title><rect x="425.1" y="1187.0" width="88.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.1" y="1198.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,331 samples, 7.50%)</title><rect x="425.1" y="1171.0" width="88.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.1" y="1182.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (1,331 samples, 7.50%)</title><rect x="425.1" y="1155.0" width="88.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.1" y="1166.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,331 samples, 7.50%)</title><rect x="425.1" y="1139.0" width="88.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.1" y="1150.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (4 samples, 0.02%)</title><rect x="425.6" y="1123.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="428.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.02%)</title><rect x="425.6" y="1107.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,306 samples, 7.36%)</title><rect x="426.0" y="1123.0" width="86.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.0" y="1134.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,299 samples, 7.32%)</title><rect x="426.5" y="1107.0" width="86.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.5" y="1118.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,293 samples, 7.28%)</title><rect x="426.9" y="1091.0" width="86.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.9" y="1102.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/1409112802.run (938 samples, 5.28%)</title><rect x="427.4" y="1075.0" width="62.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.4" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (936 samples, 5.27%)</title><rect x="427.5" y="1059.0" width="62.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.5" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (4 samples, 0.02%)</title><rect x="427.6" y="1043.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (930 samples, 5.24%)</title><rect x="427.8" y="1043.0" width="61.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.8" y="1054.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (60 samples, 0.34%)</title><rect x="428.1" y="1027.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.1" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (16 samples, 0.09%)</title><rect x="428.2" y="1011.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.2" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (11 samples, 0.06%)</title><rect x="428.4" y="995.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (10 samples, 0.06%)</title><rect x="428.4" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.06%)</title><rect x="428.4" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.4" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.06%)</title><rect x="428.4" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (9 samples, 0.05%)</title><rect x="428.5" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.04%)</title><rect x="428.6" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.02%)</title><rect x="428.8" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.8" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.10%)</title><rect x="429.2" y="1011.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (17 samples, 0.10%)</title><rect x="429.3" y="995.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (12 samples, 0.07%)</title><rect x="429.4" y="979.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (12 samples, 0.07%)</title><rect x="429.4" y="963.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (10 samples, 0.06%)</title><rect x="429.5" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (4 samples, 0.02%)</title><rect x="430.2" y="979.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.2" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (25 samples, 0.14%)</title><rect x="430.4" y="1011.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (24 samples, 0.14%)</title><rect x="430.5" y="995.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.5" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (19 samples, 0.11%)</title><rect x="430.8" y="979.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.06%)</title><rect x="431.0" y="963.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.02%)</title><rect x="431.5" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.02%)</title><rect x="431.5" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (4 samples, 0.02%)</title><rect x="431.8" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (4 samples, 0.02%)</title><rect x="431.8" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.8" y="958.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.02%)</title><rect x="431.8" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.8" y="942.0"></text>
</g>
<g>
<title>java/util/Optional.map (13 samples, 0.07%)</title><rect x="432.1" y="1027.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.1" y="1038.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.02%)</title><rect x="432.2" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$492/1587750339.apply (7 samples, 0.04%)</title><rect x="432.5" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (6 samples, 0.03%)</title><rect x="432.6" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.02%)</title><rect x="432.7" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="432.7" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.02%)</title><rect x="432.7" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (847 samples, 4.77%)</title><rect x="433.0" y="1027.0" width="56.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.0" y="1038.0">jdk/in..</text>
</g>
<g>
<title>java/time/Instant.now (19 samples, 0.11%)</title><rect x="433.0" y="1011.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.0" y="1022.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (18 samples, 0.10%)</title><rect x="433.0" y="995.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.0" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (7 samples, 0.04%)</title><rect x="433.2" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.05%)</title><rect x="433.6" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.6" y="990.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.05%)</title><rect x="433.7" y="963.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="436.7" y="974.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.02%)</title><rect x="434.0" y="947.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="437.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (828 samples, 4.67%)</title><rect x="434.2" y="1011.0" width="55.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.2" y="1022.0">jdk/i..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (155 samples, 0.87%)</title><rect x="437.5" y="995.0" width="10.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="440.5" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (155 samples, 0.87%)</title><rect x="437.5" y="979.0" width="10.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="440.5" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (152 samples, 0.86%)</title><rect x="437.6" y="963.0" width="10.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="440.6" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (142 samples, 0.80%)</title><rect x="437.7" y="947.0" width="9.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="440.7" y="958.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.05%)</title><rect x="447.2" y="947.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="450.2" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (57 samples, 0.32%)</title><rect x="447.9" y="995.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="450.9" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (56 samples, 0.32%)</title><rect x="447.9" y="979.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.9" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (56 samples, 0.32%)</title><rect x="447.9" y="963.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="450.9" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (49 samples, 0.28%)</title><rect x="447.9" y="947.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="450.9" y="958.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.04%)</title><rect x="451.2" y="947.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="454.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (370 samples, 2.08%)</title><rect x="451.6" y="995.0" width="24.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.6" y="1006.0">j..</text>
</g>
<g>
<title>java/time/Instant.isAfter (64 samples, 0.36%)</title><rect x="460.0" y="979.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.0" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (46 samples, 0.26%)</title><rect x="461.2" y="963.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Long.compare (43 samples, 0.24%)</title><rect x="461.4" y="947.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.4" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.03%)</title><rect x="464.3" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.3" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (14 samples, 0.08%)</title><rect x="464.6" y="979.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.6" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (10 samples, 0.06%)</title><rect x="464.8" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.8" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plus (8 samples, 0.05%)</title><rect x="464.9" y="947.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.9" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (7 samples, 0.04%)</title><rect x="465.0" y="931.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.0" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (6 samples, 0.03%)</title><rect x="465.5" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.5" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (6 samples, 0.03%)</title><rect x="465.5" y="963.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.5" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (5 samples, 0.03%)</title><rect x="465.6" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.6" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (21 samples, 0.12%)</title><rect x="465.9" y="979.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.9" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (128 samples, 0.72%)</title><rect x="467.4" y="979.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.4" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.03%)</title><rect x="475.9" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.9" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.03%)</title><rect x="475.9" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (27 samples, 0.15%)</title><rect x="476.2" y="995.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (22 samples, 0.12%)</title><rect x="476.3" y="979.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.07%)</title><rect x="476.3" y="963.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (8 samples, 0.05%)</title><rect x="476.6" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.6" y="958.0"></text>
</g>
<g>
<title>java/util/Objects.equals (8 samples, 0.05%)</title><rect x="476.6" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.6" y="942.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (8 samples, 0.05%)</title><rect x="476.6" y="915.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.6" y="926.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (8 samples, 0.05%)</title><rect x="476.6" y="899.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.6" y="910.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (6 samples, 0.03%)</title><rect x="476.7" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (9 samples, 0.05%)</title><rect x="477.2" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (9 samples, 0.05%)</title><rect x="477.2" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.2" y="958.0"></text>
</g>
<g>
<title>java/util/Objects.hash (8 samples, 0.05%)</title><rect x="477.2" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.2" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (5 samples, 0.03%)</title><rect x="477.4" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (169 samples, 0.95%)</title><rect x="478.0" y="995.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (166 samples, 0.94%)</title><rect x="478.2" y="979.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (32 samples, 0.18%)</title><rect x="478.5" y="963.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (31 samples, 0.17%)</title><rect x="478.6" y="947.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (28 samples, 0.16%)</title><rect x="478.8" y="931.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.06%)</title><rect x="479.2" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.05%)</title><rect x="479.2" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.2" y="910.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (4 samples, 0.02%)</title><rect x="479.3" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="482.3" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="479.3" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="482.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (9 samples, 0.05%)</title><rect x="480.0" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (130 samples, 0.73%)</title><rect x="480.6" y="963.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (128 samples, 0.72%)</title><rect x="480.7" y="947.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (117 samples, 0.66%)</title><rect x="480.9" y="931.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (111 samples, 0.63%)</title><rect x="481.2" y="915.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (111 samples, 0.63%)</title><rect x="481.2" y="899.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.2" y="910.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (22 samples, 0.12%)</title><rect x="481.9" y="883.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="484.9" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (22 samples, 0.12%)</title><rect x="481.9" y="867.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="484.9" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (22 samples, 0.12%)</title><rect x="481.9" y="851.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="484.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (16 samples, 0.09%)</title><rect x="482.0" y="835.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="485.0" y="846.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="483.1" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="486.1" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.06%)</title><rect x="483.4" y="883.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="486.4" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.06%)</title><rect x="483.4" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="486.4" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.06%)</title><rect x="483.4" y="851.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="486.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.05%)</title><rect x="483.4" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="486.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.06%)</title><rect x="484.2" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.2" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.05%)</title><rect x="484.3" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.04%)</title><rect x="484.4" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.04%)</title><rect x="484.4" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (56 samples, 0.32%)</title><rect x="484.9" y="883.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (52 samples, 0.29%)</title><rect x="485.2" y="867.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.2" y="878.0"></text>
</g>
<g>
<title>__libc_write (49 samples, 0.28%)</title><rect x="485.2" y="851.0" width="3.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="488.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.24%)</title><rect x="485.7" y="835.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.23%)</title><rect x="485.7" y="819.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_write (38 samples, 0.21%)</title><rect x="485.9" y="803.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="488.9" y="814.0"></text>
</g>
<g>
<title>ksys_write (38 samples, 0.21%)</title><rect x="485.9" y="787.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="488.9" y="798.0"></text>
</g>
<g>
<title>vfs_write (33 samples, 0.19%)</title><rect x="486.3" y="771.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.3" y="782.0"></text>
</g>
<g>
<title>__vfs_write (29 samples, 0.16%)</title><rect x="486.3" y="755.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="489.3" y="766.0"></text>
</g>
<g>
<title>new_sync_write (29 samples, 0.16%)</title><rect x="486.3" y="739.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="489.3" y="750.0"></text>
</g>
<g>
<title>pipe_write (27 samples, 0.15%)</title><rect x="486.5" y="723.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.5" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 0.13%)</title><rect x="486.5" y="707.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="489.5" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 0.13%)</title><rect x="486.5" y="691.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.5" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.13%)</title><rect x="486.5" y="675.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="489.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.03%)</title><rect x="488.7" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (6 samples, 0.03%)</title><rect x="489.3" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (5 samples, 0.03%)</title><rect x="489.3" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$454/1502158743.accept (65 samples, 0.37%)</title><rect x="489.7" y="1075.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (60 samples, 0.34%)</title><rect x="490.1" y="1059.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (58 samples, 0.33%)</title><rect x="490.2" y="1043.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (47 samples, 0.26%)</title><rect x="490.3" y="1027.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (44 samples, 0.25%)</title><rect x="490.5" y="1011.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (43 samples, 0.24%)</title><rect x="490.5" y="995.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (42 samples, 0.24%)</title><rect x="490.6" y="979.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (21 samples, 0.12%)</title><rect x="490.6" y="963.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.11%)</title><rect x="490.7" y="947.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.11%)</title><rect x="490.7" y="931.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.11%)</title><rect x="490.7" y="915.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (18 samples, 0.10%)</title><rect x="490.8" y="899.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (18 samples, 0.10%)</title><rect x="490.8" y="883.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (16 samples, 0.09%)</title><rect x="490.8" y="867.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (16 samples, 0.09%)</title><rect x="490.8" y="851.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.09%)</title><rect x="490.8" y="835.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (16 samples, 0.09%)</title><rect x="490.8" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.8" y="830.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="490.9" y="803.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="493.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$456/1035384948.accept (8 samples, 0.05%)</title><rect x="491.3" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$456/1035384948.accept (8 samples, 0.05%)</title><rect x="492.0" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (7 samples, 0.04%)</title><rect x="492.1" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (5 samples, 0.03%)</title><rect x="492.1" y="931.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$463/752846039.accept (13 samples, 0.07%)</title><rect x="492.5" y="963.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (9 samples, 0.05%)</title><rect x="492.8" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (8 samples, 0.05%)</title><rect x="492.9" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.9" y="942.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (5 samples, 0.03%)</title><rect x="493.1" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$329/337931062.accept (10 samples, 0.06%)</title><rect x="493.4" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (9 samples, 0.05%)</title><rect x="493.5" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.02%)</title><rect x="493.8" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (274 samples, 1.54%)</title><rect x="494.1" y="1075.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (273 samples, 1.54%)</title><rect x="494.1" y="1059.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (267 samples, 1.50%)</title><rect x="494.5" y="1043.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (257 samples, 1.45%)</title><rect x="494.6" y="1027.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (254 samples, 1.43%)</title><rect x="494.7" y="1011.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (252 samples, 1.42%)</title><rect x="494.9" y="995.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (252 samples, 1.42%)</title><rect x="494.9" y="979.0" width="16.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.05%)</title><rect x="494.9" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.05%)</title><rect x="494.9" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.03%)</title><rect x="495.1" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.03%)</title><rect x="495.1" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.03%)</title><rect x="495.1" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.03%)</title><rect x="495.1" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.03%)</title><rect x="495.1" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.03%)</title><rect x="495.1" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.03%)</title><rect x="495.1" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (5 samples, 0.03%)</title><rect x="495.1" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/621309814.accept (243 samples, 1.37%)</title><rect x="495.5" y="963.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (243 samples, 1.37%)</title><rect x="495.5" y="947.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (243 samples, 1.37%)</title><rect x="495.5" y="931.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (239 samples, 1.35%)</title><rect x="495.7" y="915.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (26 samples, 0.15%)</title><rect x="496.1" y="899.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.02%)</title><rect x="496.3" y="883.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.02%)</title><rect x="496.3" y="867.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.02%)</title><rect x="496.3" y="851.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (4 samples, 0.02%)</title><rect x="496.3" y="835.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$487/1843175951.apply (17 samples, 0.10%)</title><rect x="496.7" y="883.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (16 samples, 0.09%)</title><rect x="496.7" y="867.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (13 samples, 0.07%)</title><rect x="496.9" y="851.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.9" y="862.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.02%)</title><rect x="497.1" y="835.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.connection (4 samples, 0.02%)</title><rect x="497.4" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.02%)</title><rect x="497.8" y="899.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (202 samples, 1.14%)</title><rect x="498.0" y="899.0" width="13.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (201 samples, 1.13%)</title><rect x="498.1" y="883.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (188 samples, 1.06%)</title><rect x="498.1" y="867.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (158 samples, 0.89%)</title><rect x="498.1" y="851.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (158 samples, 0.89%)</title><rect x="498.1" y="835.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (158 samples, 0.89%)</title><rect x="498.1" y="819.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (157 samples, 0.88%)</title><rect x="498.2" y="803.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (157 samples, 0.88%)</title><rect x="498.2" y="787.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (157 samples, 0.88%)</title><rect x="498.2" y="771.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.2" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.12%)</title><rect x="498.2" y="755.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="501.2" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.02%)</title><rect x="498.4" y="739.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="501.4" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.04%)</title><rect x="499.1" y="739.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="502.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (134 samples, 0.75%)</title><rect x="499.6" y="755.0" width="8.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="502.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (114 samples, 0.64%)</title><rect x="500.9" y="739.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (114 samples, 0.64%)</title><rect x="500.9" y="723.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (105 samples, 0.59%)</title><rect x="501.5" y="707.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.5" y="718.0"></text>
</g>
<g>
<title>do_futex (99 samples, 0.56%)</title><rect x="501.8" y="691.0" width="6.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="504.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (96 samples, 0.54%)</title><rect x="501.9" y="675.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="504.9" y="686.0"></text>
</g>
<g>
<title>wake_up_q (83 samples, 0.47%)</title><rect x="502.8" y="659.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="505.8" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (81 samples, 0.46%)</title><rect x="502.9" y="643.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="505.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (81 samples, 0.46%)</title><rect x="502.9" y="627.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="505.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.17%)</title><rect x="508.6" y="851.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.14%)</title><rect x="509.0" y="835.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (23 samples, 0.13%)</title><rect x="509.1" y="819.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="512.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (17 samples, 0.10%)</title><rect x="509.5" y="803.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (17 samples, 0.10%)</title><rect x="509.5" y="787.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.05%)</title><rect x="509.5" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.05%)</title><rect x="509.5" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.05%)</title><rect x="509.5" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (8 samples, 0.05%)</title><rect x="509.5" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.02%)</title><rect x="510.0" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.03%)</title><rect x="510.3" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="510.3" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$481/786373511.accept (6 samples, 0.03%)</title><rect x="510.6" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (4 samples, 0.02%)</title><rect x="510.7" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$198/901262753.accept (5 samples, 0.03%)</title><rect x="511.1" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (4 samples, 0.02%)</title><rect x="511.1" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (8 samples, 0.05%)</title><rect x="511.7" y="1027.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (9 samples, 0.05%)</title><rect x="512.3" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (4 samples, 0.02%)</title><rect x="512.6" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6 samples, 0.03%)</title><rect x="513.1" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6 samples, 0.03%)</title><rect x="513.1" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6 samples, 0.03%)</title><rect x="513.1" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6 samples, 0.03%)</title><rect x="513.1" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.02%)</title><rect x="513.1" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.02%)</title><rect x="513.1" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.02%)</title><rect x="513.1" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.02%)</title><rect x="513.1" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.02%)</title><rect x="513.1" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.02%)</title><rect x="513.1" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.02%)</title><rect x="513.1" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/363603817.run (537 samples, 3.03%)</title><rect x="513.6" y="1235.0" width="35.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.6" y="1246.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (535 samples, 3.01%)</title><rect x="513.7" y="1219.0" width="35.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.7" y="1230.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (534 samples, 3.01%)</title><rect x="513.8" y="1203.0" width="35.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.8" y="1214.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.13%)</title><rect x="514.1" y="1187.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.08%)</title><rect x="514.3" y="1171.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.03%)</title><rect x="514.3" y="1155.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.05%)</title><rect x="514.7" y="1155.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.03%)</title><rect x="515.3" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.03%)</title><rect x="515.3" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.3" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (53 samples, 0.30%)</title><rect x="515.9" y="1187.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="516.4" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="516.4" y="1155.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.4" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.06%)</title><rect x="516.9" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.9" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.06%)</title><rect x="516.9" y="1155.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.9" y="1166.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (5 samples, 0.03%)</title><rect x="517.0" y="1139.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="520.0" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="517.0" y="1123.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="520.0" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="517.0" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="520.0" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="517.0" y="1091.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="520.0" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="517.0" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="520.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="517.4" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.13%)</title><rect x="517.9" y="1171.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.05%)</title><rect x="518.3" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.05%)</title><rect x="518.3" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.3" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.02%)</title><rect x="518.7" y="1123.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.04%)</title><rect x="518.9" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="519.0" y="1139.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="519.0" y="1123.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.upserting (450 samples, 2.54%)</title><rect x="519.4" y="1187.0" width="29.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.4" y="1198.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (19 samples, 0.11%)</title><rect x="519.8" y="1171.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (18 samples, 0.10%)</title><rect x="519.9" y="1155.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.06%)</title><rect x="520.4" y="1139.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.06%)</title><rect x="520.4" y="1123.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (10 samples, 0.06%)</title><rect x="520.4" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.06%)</title><rect x="520.4" y="1091.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.06%)</title><rect x="520.4" y="1075.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.06%)</title><rect x="520.4" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.4" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.06%)</title><rect x="520.4" y="1043.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="523.4" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="520.4" y="1027.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="523.4" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="520.4" y="1011.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="523.4" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="520.5" y="995.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="523.5" y="1006.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="520.5" y="979.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.5" y="990.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.05%)</title><rect x="520.5" y="963.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="523.5" y="974.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="520.6" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="523.6" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="520.7" y="931.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.7" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="520.7" y="915.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6 samples, 0.03%)</title><rect x="521.1" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.03%)</title><rect x="521.1" y="1155.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (6 samples, 0.03%)</title><rect x="521.1" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (6 samples, 0.03%)</title><rect x="521.1" y="1123.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (107 samples, 0.60%)</title><rect x="521.5" y="1171.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.5" y="1182.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (5 samples, 0.03%)</title><rect x="522.0" y="1155.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (4 samples, 0.02%)</title><rect x="522.1" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.1" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.06%)</title><rect x="522.4" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.4" y="1166.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (11 samples, 0.06%)</title><rect x="522.4" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.4" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (11 samples, 0.06%)</title><rect x="522.4" y="1123.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.4" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (8 samples, 0.05%)</title><rect x="522.6" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.6" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (4 samples, 0.02%)</title><rect x="522.8" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.02%)</title><rect x="522.8" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.8" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.06%)</title><rect x="523.2" y="1155.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.2" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.06%)</title><rect x="523.2" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.2" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.05%)</title><rect x="523.4" y="1123.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.05%)</title><rect x="523.4" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.02%)</title><rect x="523.6" y="1091.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.6" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (5 samples, 0.03%)</title><rect x="524.0" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (5 samples, 0.03%)</title><rect x="524.0" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (64 samples, 0.36%)</title><rect x="524.4" y="1155.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.4" y="1166.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (43 samples, 0.24%)</title><rect x="524.5" y="1139.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.5" y="1150.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (7 samples, 0.04%)</title><rect x="524.7" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.7" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (7 samples, 0.04%)</title><rect x="524.7" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.7" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (5 samples, 0.03%)</title><rect x="524.8" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.8" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5 samples, 0.03%)</title><rect x="524.8" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.8" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5 samples, 0.03%)</title><rect x="524.8" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.03%)</title><rect x="524.8" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.8" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (26 samples, 0.15%)</title><rect x="525.2" y="1123.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.2" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (9 samples, 0.05%)</title><rect x="525.4" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.4" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (13 samples, 0.07%)</title><rect x="526.0" y="1107.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="526.6" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.6" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (7 samples, 0.04%)</title><rect x="526.9" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.9" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (4 samples, 0.02%)</title><rect x="527.0" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.0" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (11 samples, 0.06%)</title><rect x="527.8" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.8" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (9 samples, 0.05%)</title><rect x="527.9" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.9" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.02%)</title><rect x="528.2" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doUpsert (233 samples, 1.31%)</title><rect x="528.6" y="1171.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="528.6" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="528.7" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$427/1238028632.get$Lambda (6 samples, 0.03%)</title><rect x="528.7" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (19 samples, 0.11%)</title><rect x="529.1" y="1155.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (18 samples, 0.10%)</title><rect x="529.2" y="1139.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (6 samples, 0.03%)</title><rect x="530.0" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (4 samples, 0.02%)</title><rect x="530.1" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (207 samples, 1.17%)</title><rect x="530.4" y="1155.0" width="13.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (204 samples, 1.15%)</title><rect x="530.6" y="1139.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (200 samples, 1.13%)</title><rect x="530.8" y="1123.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (199 samples, 1.12%)</title><rect x="530.9" y="1107.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (196 samples, 1.10%)</title><rect x="531.1" y="1091.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (6 samples, 0.03%)</title><rect x="531.4" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (184 samples, 1.04%)</title><rect x="531.9" y="1075.0" width="12.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (179 samples, 1.01%)</title><rect x="532.2" y="1059.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (179 samples, 1.01%)</title><rect x="532.2" y="1043.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.2" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.12%)</title><rect x="532.5" y="1027.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="535.5" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (4 samples, 0.02%)</title><rect x="532.8" y="1011.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="535.8" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.02%)</title><rect x="533.1" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="536.1" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.02%)</title><rect x="533.6" y="1011.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="536.6" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (153 samples, 0.86%)</title><rect x="533.9" y="1027.0" width="10.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="536.9" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (124 samples, 0.70%)</title><rect x="535.8" y="1011.0" width="8.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="538.8" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (124 samples, 0.70%)</title><rect x="535.8" y="995.0" width="8.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="538.8" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (113 samples, 0.64%)</title><rect x="536.5" y="979.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.5" y="990.0"></text>
</g>
<g>
<title>do_futex (110 samples, 0.62%)</title><rect x="536.7" y="963.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="539.7" y="974.0"></text>
</g>
<g>
<title>futex_wake (109 samples, 0.61%)</title><rect x="536.7" y="947.0" width="7.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="539.7" y="958.0"></text>
</g>
<g>
<title>wake_up_q (97 samples, 0.55%)</title><rect x="537.5" y="931.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.5" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (97 samples, 0.55%)</title><rect x="537.5" y="915.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.5" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (97 samples, 0.55%)</title><rect x="537.5" y="899.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="540.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (78 samples, 0.44%)</title><rect x="544.1" y="1171.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (78 samples, 0.44%)</title><rect x="544.1" y="1155.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (78 samples, 0.44%)</title><rect x="544.1" y="1139.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (78 samples, 0.44%)</title><rect x="544.1" y="1123.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (78 samples, 0.44%)</title><rect x="544.1" y="1107.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (78 samples, 0.44%)</title><rect x="544.1" y="1091.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (5 samples, 0.03%)</title><rect x="544.1" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (73 samples, 0.41%)</title><rect x="544.5" y="1075.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (73 samples, 0.41%)</title><rect x="544.5" y="1059.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (73 samples, 0.41%)</title><rect x="544.5" y="1043.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.5" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="544.5" y="1027.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="547.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (66 samples, 0.37%)</title><rect x="544.9" y="1027.0" width="4.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="547.9" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.28%)</title><rect x="546.0" y="1011.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.0" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 0.28%)</title><rect x="546.0" y="995.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="549.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 0.25%)</title><rect x="546.3" y="979.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="549.3" y="990.0"></text>
</g>
<g>
<title>do_futex (45 samples, 0.25%)</title><rect x="546.3" y="963.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="549.3" y="974.0"></text>
</g>
<g>
<title>futex_wake (43 samples, 0.24%)</title><rect x="546.4" y="947.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.4" y="958.0"></text>
</g>
<g>
<title>wake_up_q (38 samples, 0.21%)</title><rect x="546.7" y="931.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="549.7" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (38 samples, 0.21%)</title><rect x="546.7" y="915.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.7" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (38 samples, 0.21%)</title><rect x="546.7" y="899.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="549.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (3,709 samples, 20.90%)</title><rect x="549.8" y="1283.0" width="246.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.8" y="1294.0">java/util/concurrent/ForkJoinWork..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (3,709 samples, 20.90%)</title><rect x="549.8" y="1267.0" width="246.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.8" y="1278.0">java/util/concurrent/ForkJoinPool..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.03%)</title><rect x="552.3" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.02%)</title><rect x="552.4" y="1235.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.4" y="1246.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.02%)</title><rect x="552.4" y="1219.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="555.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (4 samples, 0.02%)</title><rect x="552.6" y="1251.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet (4 samples, 0.02%)</title><rect x="552.6" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,063 samples, 17.26%)</title><rect x="552.9" y="1251.0" width="203.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.9" y="1262.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (8 samples, 0.05%)</title><rect x="560.5" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (8 samples, 0.05%)</title><rect x="560.5" y="1219.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (34 samples, 0.19%)</title><rect x="561.1" y="1235.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (34 samples, 0.19%)</title><rect x="561.1" y="1219.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,872 samples, 16.18%)</title><rect x="563.3" y="1235.0" width="191.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.3" y="1246.0">java/util/concurrent/Fork..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (20 samples, 0.11%)</title><rect x="564.2" y="1219.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (10 samples, 0.06%)</title><rect x="564.8" y="1203.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (10 samples, 0.06%)</title><rect x="564.8" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (10 samples, 0.06%)</title><rect x="564.8" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.reflectiveTypeCheck (10 samples, 0.06%)</title><rect x="564.8" y="1155.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (10 samples, 0.06%)</title><rect x="564.8" y="1139.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (14 samples, 0.08%)</title><rect x="565.5" y="1219.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (4 samples, 0.02%)</title><rect x="565.9" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.9" y="1214.0"></text>
</g>
<g>
<title>__sched_yield (4 samples, 0.02%)</title><rect x="565.9" y="1187.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="568.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,825 samples, 15.92%)</title><rect x="566.5" y="1219.0" width="187.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.5" y="1230.0">java/util/concurrent/For..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (853 samples, 4.81%)</title><rect x="566.9" y="1203.0" width="56.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.9" y="1214.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (849 samples, 4.78%)</title><rect x="567.2" y="1187.0" width="56.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.2" y="1198.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeNull (8 samples, 0.05%)</title><rect x="567.4" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.05%)</title><rect x="567.4" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.03%)</title><rect x="567.5" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.cast (4 samples, 0.02%)</title><rect x="567.7" y="1123.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.08%)</title><rect x="568.0" y="1171.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (8 samples, 0.05%)</title><rect x="568.1" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.1" y="1166.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.02%)</title><rect x="568.7" y="1155.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="571.7" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$427/1238028632.run (823 samples, 4.64%)</title><rect x="568.9" y="1171.0" width="54.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.9" y="1182.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$12 (821 samples, 4.63%)</title><rect x="569.0" y="1155.0" width="54.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.0" y="1166.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.02%)</title><rect x="569.2" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.02%)</title><rect x="569.2" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.02%)</title><rect x="569.2" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.07%)</title><rect x="569.5" y="1139.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.5" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.07%)</title><rect x="569.5" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.5" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="569.6" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="569.7" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.13%)</title><rect x="570.3" y="1139.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.06%)</title><rect x="571.0" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.05%)</title><rect x="571.1" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (181 samples, 1.02%)</title><rect x="571.8" y="1139.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (26 samples, 0.15%)</title><rect x="572.0" y="1123.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (26 samples, 0.15%)</title><rect x="572.0" y="1107.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (24 samples, 0.14%)</title><rect x="572.2" y="1091.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.03%)</title><rect x="572.4" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.03%)</title><rect x="572.5" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.03%)</title><rect x="572.5" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.02%)</title><rect x="573.0" y="1075.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.02%)</title><rect x="573.0" y="1059.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (4 samples, 0.02%)</title><rect x="573.3" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (4 samples, 0.02%)</title><rect x="573.8" y="1123.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (131 samples, 0.74%)</title><rect x="574.1" y="1123.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.04%)</title><rect x="574.3" y="1107.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.3" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="574.5" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="574.5" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (117 samples, 0.66%)</title><rect x="574.8" y="1107.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (116 samples, 0.65%)</title><rect x="574.9" y="1091.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (22 samples, 0.12%)</title><rect x="576.4" y="1075.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (21 samples, 0.12%)</title><rect x="576.4" y="1059.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.03%)</title><rect x="578.0" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (62 samples, 0.35%)</title><rect x="578.4" y="1075.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (58 samples, 0.33%)</title><rect x="578.6" y="1059.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (58 samples, 0.33%)</title><rect x="578.6" y="1043.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (21 samples, 0.12%)</title><rect x="580.3" y="1027.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (15 samples, 0.08%)</title><rect x="580.7" y="1011.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.02%)</title><rect x="581.3" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.07%)</title><rect x="581.7" y="1027.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.05%)</title><rect x="581.9" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (16 samples, 0.09%)</title><rect x="582.8" y="1123.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (15 samples, 0.08%)</title><rect x="582.9" y="1107.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.9" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (14 samples, 0.08%)</title><rect x="582.9" y="1091.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.9" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.07%)</title><rect x="583.0" y="1075.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.0" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (6 samples, 0.03%)</title><rect x="583.3" y="1059.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (5 samples, 0.03%)</title><rect x="583.3" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (5 samples, 0.03%)</title><rect x="583.3" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.3" y="1038.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.03%)</title><rect x="583.3" y="1011.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="586.3" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="583.3" y="995.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="586.3" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="583.3" y="979.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.3" y="990.0"></text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.03%)</title><rect x="583.3" y="963.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.3" y="974.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.03%)</title><rect x="583.3" y="947.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.3" y="958.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.03%)</title><rect x="583.3" y="931.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="586.3" y="942.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.03%)</title><rect x="583.3" y="915.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.3" y="926.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.03%)</title><rect x="583.3" y="899.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.3" y="910.0"></text>
</g>
<g>
<title>ext4_file_write_iter (5 samples, 0.03%)</title><rect x="583.3" y="883.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.3" y="894.0"></text>
</g>
<g>
<title>__generic_file_write_iter (5 samples, 0.03%)</title><rect x="583.3" y="867.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (596 samples, 3.36%)</title><rect x="583.9" y="1139.0" width="39.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.9" y="1150.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (595 samples, 3.35%)</title><rect x="583.9" y="1123.0" width="39.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.9" y="1134.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.02%)</title><rect x="584.5" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="584.5" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.02%)</title><rect x="584.5" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (568 samples, 3.20%)</title><rect x="584.9" y="1107.0" width="37.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.9" y="1118.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (33 samples, 0.19%)</title><rect x="584.9" y="1091.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (28 samples, 0.16%)</title><rect x="585.2" y="1075.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.05%)</title><rect x="585.5" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.09%)</title><rect x="586.0" y="1059.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.09%)</title><rect x="586.0" y="1043.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.07%)</title><rect x="586.2" y="1027.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (535 samples, 3.01%)</title><rect x="587.1" y="1091.0" width="35.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.1" y="1102.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (530 samples, 2.99%)</title><rect x="587.4" y="1075.0" width="35.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.4" y="1086.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (518 samples, 2.92%)</title><rect x="587.9" y="1059.0" width="34.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.9" y="1070.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (517 samples, 2.91%)</title><rect x="587.9" y="1043.0" width="34.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.9" y="1054.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (31 samples, 0.17%)</title><rect x="588.3" y="1027.0" width="2.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="591.3" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (17 samples, 0.10%)</title><rect x="589.3" y="1011.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="592.3" y="1022.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.04%)</title><rect x="589.9" y="995.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="592.9" y="1006.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.03%)</title><rect x="590.1" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="593.1" y="990.0"></text>
</g>
<g>
<title>__send (477 samples, 2.69%)</title><rect x="590.5" y="1027.0" width="31.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="593.5" y="1038.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (437 samples, 2.46%)</title><rect x="593.1" y="1011.0" width="29.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="596.1" y="1022.0">en..</text>
</g>
<g>
<title>do_syscall_64 (434 samples, 2.45%)</title><rect x="593.3" y="995.0" width="28.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="596.3" y="1006.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (421 samples, 2.37%)</title><rect x="594.2" y="979.0" width="28.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="597.2" y="990.0">_..</text>
</g>
<g>
<title>__sys_sendto (421 samples, 2.37%)</title><rect x="594.2" y="963.0" width="28.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.2" y="974.0">_..</text>
</g>
<g>
<title>sock_sendmsg (404 samples, 2.28%)</title><rect x="594.6" y="947.0" width="26.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="597.6" y="958.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (399 samples, 2.25%)</title><rect x="594.6" y="931.0" width="26.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.6" y="942.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (399 samples, 2.25%)</title><rect x="594.6" y="915.0" width="26.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="597.6" y="926.0">t..</text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.03%)</title><rect x="594.7" y="899.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.7" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (386 samples, 2.17%)</title><rect x="595.4" y="899.0" width="25.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="598.4" y="910.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (10 samples, 0.06%)</title><rect x="596.2" y="883.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="599.2" y="894.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.04%)</title><rect x="596.2" y="867.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="599.2" y="878.0"></text>
</g>
<g>
<title>sk_page_frag_refill (8 samples, 0.05%)</title><rect x="596.9" y="883.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="599.9" y="894.0"></text>
</g>
<g>
<title>skb_page_frag_refill (7 samples, 0.04%)</title><rect x="597.0" y="867.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.0" y="878.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (35 samples, 0.20%)</title><rect x="597.4" y="883.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.4" y="894.0"></text>
</g>
<g>
<title>__alloc_skb (33 samples, 0.19%)</title><rect x="597.6" y="867.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.6" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.09%)</title><rect x="597.6" y="851.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.6" y="862.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.04%)</title><rect x="597.7" y="835.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.7" y="846.0"></text>
</g>
<g>
<title>kmalloc_slab (4 samples, 0.02%)</title><rect x="597.9" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.9" y="830.0"></text>
</g>
<g>
<title>memset_erms (6 samples, 0.03%)</title><rect x="598.3" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.3" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.05%)</title><rect x="598.7" y="851.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="601.7" y="862.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.03%)</title><rect x="599.3" y="851.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.3" y="862.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.03%)</title><rect x="599.3" y="835.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.3" y="846.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.02%)</title><rect x="599.8" y="883.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="602.8" y="894.0"></text>
</g>
<g>
<title>tcp_push (303 samples, 1.71%)</title><rect x="600.0" y="883.0" width="20.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.0" y="894.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (301 samples, 1.70%)</title><rect x="600.0" y="867.0" width="20.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="603.0" y="878.0"></text>
</g>
<g>
<title>tcp_write_xmit (295 samples, 1.66%)</title><rect x="600.4" y="851.0" width="19.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.4" y="862.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (257 samples, 1.45%)</title><rect x="601.0" y="835.0" width="17.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="604.0" y="846.0"></text>
</g>
<g>
<title>ip_queue_xmit (235 samples, 1.32%)</title><rect x="602.2" y="819.0" width="15.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="605.2" y="830.0"></text>
</g>
<g>
<title>__ip_queue_xmit (233 samples, 1.31%)</title><rect x="602.2" y="803.0" width="15.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="605.2" y="814.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.03%)</title><rect x="602.4" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="605.4" y="798.0"></text>
</g>
<g>
<title>ip_local_out (219 samples, 1.23%)</title><rect x="602.8" y="787.0" width="14.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="605.8" y="798.0"></text>
</g>
<g>
<title>ip_output (218 samples, 1.23%)</title><rect x="602.8" y="771.0" width="14.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="605.8" y="782.0"></text>
</g>
<g>
<title>ip_finish_output (210 samples, 1.18%)</title><rect x="603.4" y="755.0" width="13.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="606.4" y="766.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.03%)</title><rect x="603.4" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.4" y="750.0"></text>
</g>
<g>
<title>__ip_finish_output (200 samples, 1.13%)</title><rect x="603.8" y="739.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="606.8" y="750.0"></text>
</g>
<g>
<title>ip_finish_output2 (198 samples, 1.12%)</title><rect x="603.9" y="723.0" width="13.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="606.9" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (147 samples, 0.83%)</title><rect x="604.7" y="707.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.7" y="718.0"></text>
</g>
<g>
<title>do_softirq.part.0 (147 samples, 0.83%)</title><rect x="604.7" y="691.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.7" y="702.0"></text>
</g>
<g>
<title>do_softirq_own_stack (146 samples, 0.82%)</title><rect x="604.8" y="675.0" width="9.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="607.8" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (145 samples, 0.82%)</title><rect x="604.8" y="659.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="607.8" y="670.0"></text>
</g>
<g>
<title>net_rx_action (138 samples, 0.78%)</title><rect x="605.2" y="643.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="608.2" y="654.0"></text>
</g>
<g>
<title>process_backlog (133 samples, 0.75%)</title><rect x="605.5" y="627.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="608.5" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb (125 samples, 0.70%)</title><rect x="606.0" y="611.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.0" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (125 samples, 0.70%)</title><rect x="606.0" y="595.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="609.0" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.02%)</title><rect x="606.0" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.0" y="590.0"></text>
</g>
<g>
<title>ip_rcv (120 samples, 0.68%)</title><rect x="606.3" y="579.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.3" y="590.0"></text>
</g>
<g>
<title>ip_rcv_finish (116 samples, 0.65%)</title><rect x="606.5" y="563.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="609.5" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (115 samples, 0.65%)</title><rect x="606.5" y="547.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.5" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (113 samples, 0.64%)</title><rect x="606.5" y="531.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.5" y="542.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (112 samples, 0.63%)</title><rect x="606.5" y="515.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (102 samples, 0.57%)</title><rect x="607.2" y="499.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="610.2" y="510.0"></text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.06%)</title><rect x="607.3" y="483.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.3" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.03%)</title><rect x="608.1" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="611.1" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (83 samples, 0.47%)</title><rect x="608.4" y="483.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.4" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (81 samples, 0.46%)</title><rect x="608.5" y="467.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="611.5" y="478.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (22 samples, 0.12%)</title><rect x="609.1" y="451.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.1" y="462.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.10%)</title><rect x="609.5" y="435.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.5" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.08%)</title><rect x="609.6" y="419.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="612.6" y="430.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.07%)</title><rect x="609.7" y="403.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.7" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.06%)</title><rect x="609.8" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.8" y="398.0"></text>
</g>
<g>
<title>tcp_data_ready (40 samples, 0.23%)</title><rect x="610.7" y="451.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.7" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (40 samples, 0.23%)</title><rect x="610.7" y="435.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="613.7" y="446.0"></text>
</g>
<g>
<title>__wake_up_sync_key (37 samples, 0.21%)</title><rect x="610.9" y="419.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.9" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 0.20%)</title><rect x="610.9" y="403.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.9" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (36 samples, 0.20%)</title><rect x="610.9" y="387.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.9" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (38 samples, 0.21%)</title><rect x="614.5" y="707.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="617.5" y="718.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.21%)</title><rect x="614.5" y="691.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="617.5" y="702.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (17 samples, 0.10%)</title><rect x="614.8" y="675.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="617.8" y="686.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 0.08%)</title><rect x="614.9" y="659.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="617.9" y="670.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.04%)</title><rect x="615.1" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="618.1" y="654.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.03%)</title><rect x="615.1" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="618.1" y="638.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.03%)</title><rect x="615.2" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="618.2" y="622.0"></text>
</g>
<g>
<title>validate_xmit_skb (11 samples, 0.06%)</title><rect x="616.2" y="675.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="619.2" y="686.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.03%)</title><rect x="616.6" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="619.6" y="670.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.03%)</title><rect x="617.4" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="620.4" y="798.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.08%)</title><rect x="618.3" y="835.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="621.3" y="846.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.05%)</title><rect x="618.6" y="819.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="621.6" y="830.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.05%)</title><rect x="618.7" y="803.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.7" y="814.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.05%)</title><rect x="618.7" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="621.7" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="618.7" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="621.7" y="782.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.02%)</title><rect x="619.6" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="622.6" y="846.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.07%)</title><rect x="620.2" y="883.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.2" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.05%)</title><rect x="620.6" y="867.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="623.6" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.06%)</title><rect x="621.4" y="947.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="624.4" y="958.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.05%)</title><rect x="621.4" y="931.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="624.4" y="942.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.05%)</title><rect x="621.4" y="915.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="624.4" y="926.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.05%)</title><rect x="621.4" y="899.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="624.4" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.03%)</title><rect x="622.3" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="625.3" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="622.3" y="1043.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="625.3" y="1054.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.03%)</title><rect x="622.3" y="1027.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="625.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.05%)</title><rect x="622.6" y="1107.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.03%)</title><rect x="622.8" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.03%)</title><rect x="622.8" y="1075.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (196 samples, 1.10%)</title><rect x="623.6" y="1203.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (195 samples, 1.10%)</title><rect x="623.7" y="1187.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.03%)</title><rect x="623.7" y="1171.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="623.8" y="1155.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.02%)</title><rect x="623.8" y="1139.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.cast (4 samples, 0.02%)</title><rect x="623.8" y="1123.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 0.36%)</title><rect x="624.0" y="1171.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (64 samples, 0.36%)</title><rect x="624.0" y="1155.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (61 samples, 0.34%)</title><rect x="624.2" y="1139.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (56 samples, 0.32%)</title><rect x="624.3" y="1123.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (56 samples, 0.32%)</title><rect x="624.3" y="1107.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (55 samples, 0.31%)</title><rect x="624.4" y="1091.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (52 samples, 0.29%)</title><rect x="624.6" y="1075.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (51 samples, 0.29%)</title><rect x="624.6" y="1059.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 0.29%)</title><rect x="624.6" y="1043.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.6" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="624.7" y="1027.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="627.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (45 samples, 0.25%)</title><rect x="625.0" y="1027.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="628.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.21%)</title><rect x="625.6" y="1011.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="628.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.21%)</title><rect x="625.6" y="995.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="628.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 0.19%)</title><rect x="625.8" y="979.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="628.8" y="990.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.19%)</title><rect x="625.8" y="963.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="628.8" y="974.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 0.19%)</title><rect x="625.8" y="947.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="628.8" y="958.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.16%)</title><rect x="626.1" y="931.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="629.1" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.16%)</title><rect x="626.2" y="915.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="629.2" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.15%)</title><rect x="626.2" y="899.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$127/1271192315.get (126 samples, 0.71%)</title><rect x="628.3" y="1171.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$21 (125 samples, 0.70%)</title><rect x="628.4" y="1155.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (4 samples, 0.02%)</title><rect x="628.4" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (4 samples, 0.02%)</title><rect x="628.4" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (4 samples, 0.02%)</title><rect x="628.4" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$117/662670926.run (120 samples, 0.68%)</title><rect x="628.7" y="1139.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$7 (118 samples, 0.66%)</title><rect x="628.8" y="1123.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.8" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.05%)</title><rect x="629.1" y="1107.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.03%)</title><rect x="629.2" y="1091.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (106 samples, 0.60%)</title><rect x="629.6" y="1107.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (13 samples, 0.07%)</title><rect x="629.7" y="1091.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (13 samples, 0.07%)</title><rect x="629.7" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (12 samples, 0.07%)</title><rect x="629.8" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.02%)</title><rect x="630.0" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.02%)</title><rect x="630.0" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (4 samples, 0.02%)</title><rect x="630.3" y="1043.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="633.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (4 samples, 0.02%)</title><rect x="630.5" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (4 samples, 0.02%)</title><rect x="630.5" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (4 samples, 0.02%)</title><rect x="630.5" y="1059.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (81 samples, 0.46%)</title><rect x="630.8" y="1091.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (73 samples, 0.41%)</title><rect x="631.1" y="1075.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (71 samples, 0.40%)</title><rect x="631.3" y="1059.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (7 samples, 0.04%)</title><rect x="631.9" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (7 samples, 0.04%)</title><rect x="631.9" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (6 samples, 0.03%)</title><rect x="632.5" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (44 samples, 0.25%)</title><rect x="632.9" y="1043.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (41 samples, 0.23%)</title><rect x="633.1" y="1027.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (39 samples, 0.22%)</title><rect x="633.3" y="1011.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 0.10%)</title><rect x="634.3" y="995.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.06%)</title><rect x="634.8" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.8" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="635.5" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (7 samples, 0.04%)</title><rect x="636.2" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (7 samples, 0.04%)</title><rect x="636.2" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (6 samples, 0.03%)</title><rect x="636.3" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (4 samples, 0.02%)</title><rect x="636.4" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (4 samples, 0.02%)</title><rect x="636.4" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,762 samples, 9.93%)</title><rect x="636.7" y="1203.0" width="117.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.7" y="1214.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (853 samples, 4.81%)</title><rect x="637.2" y="1187.0" width="56.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.2" y="1198.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.02%)</title><rect x="637.3" y="1171.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.02%)</title><rect x="637.3" y="1155.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.02%)</title><rect x="637.3" y="1139.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.02%)</title><rect x="637.3" y="1123.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$133/1429318088.apply (847 samples, 4.77%)</title><rect x="637.6" y="1171.0" width="56.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.6" y="1182.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (844 samples, 4.76%)</title><rect x="637.8" y="1155.0" width="56.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.8" y="1166.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (844 samples, 4.76%)</title><rect x="637.8" y="1139.0" width="56.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.8" y="1150.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.11%)</title><rect x="637.9" y="1123.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (18 samples, 0.10%)</title><rect x="638.0" y="1107.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.10%)</title><rect x="638.0" y="1091.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (6 samples, 0.03%)</title><rect x="638.6" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.6" y="1086.0"></text>
</g>
<g>
<title>java/net/URI.create (99 samples, 0.56%)</title><rect x="639.2" y="1123.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.2" y="1134.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (98 samples, 0.55%)</title><rect x="639.3" y="1107.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.3" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (97 samples, 0.55%)</title><rect x="639.3" y="1091.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="639.4" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="639.4" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.4" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (5 samples, 0.03%)</title><rect x="640.1" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.1" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.03%)</title><rect x="640.1" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="640.1" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.1" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (77 samples, 0.43%)</title><rect x="640.4" y="1075.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.4" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (5 samples, 0.03%)</title><rect x="640.5" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.5" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.03%)</title><rect x="640.5" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.5" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (63 samples, 0.35%)</title><rect x="640.9" y="1059.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.9" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (58 samples, 0.33%)</title><rect x="640.9" y="1043.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.9" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (8 samples, 0.05%)</title><rect x="641.3" y="1027.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.03%)</title><rect x="641.3" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.3" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (15 samples, 0.08%)</title><rect x="642.1" y="1027.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.1" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.05%)</title><rect x="642.5" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.5" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (5 samples, 0.03%)</title><rect x="643.0" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.0" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (20 samples, 0.11%)</title><rect x="643.4" y="1027.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.09%)</title><rect x="643.6" y="1011.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.09%)</title><rect x="643.6" y="995.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.05%)</title><rect x="644.1" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.1" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.03%)</title><rect x="644.7" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.7" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.03%)</title><rect x="645.0" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="645.0" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="645.0" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.03%)</title><rect x="645.0" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.0" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.02%)</title><rect x="645.5" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.5" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (5 samples, 0.03%)</title><rect x="646.0" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (5 samples, 0.03%)</title><rect x="646.0" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (4 samples, 0.02%)</title><rect x="646.0" y="1091.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.0" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.ofByteArray (68 samples, 0.38%)</title><rect x="646.3" y="1123.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.3" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="650.2" y="1107.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="653.2" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.05%)</title><rect x="650.9" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.9" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.05%)</title><rect x="650.9" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.9" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.05%)</title><rect x="651.0" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.0" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.05%)</title><rect x="651.0" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.0" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.02%)</title><rect x="651.2" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (469 samples, 2.64%)</title><rect x="651.6" y="1123.0" width="31.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="1134.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (464 samples, 2.61%)</title><rect x="652.0" y="1107.0" width="30.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.0" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (463 samples, 2.61%)</title><rect x="652.0" y="1091.0" width="30.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.0" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (462 samples, 2.60%)</title><rect x="652.1" y="1075.0" width="30.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.1" y="1086.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.03%)</title><rect x="652.8" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.03%)</title><rect x="652.8" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6 samples, 0.03%)</title><rect x="653.2" y="1059.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (293 samples, 1.65%)</title><rect x="653.7" y="1059.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.02%)</title><rect x="655.1" y="1043.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.1" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (41 samples, 0.23%)</title><rect x="655.3" y="1043.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.06%)</title><rect x="655.5" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.5" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.04%)</title><rect x="655.7" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.7" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (4 samples, 0.02%)</title><rect x="655.9" y="995.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.9" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.02%)</title><rect x="655.9" y="979.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (29 samples, 0.16%)</title><rect x="656.1" y="1027.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.1" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (28 samples, 0.16%)</title><rect x="656.2" y="1011.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (20 samples, 0.11%)</title><rect x="656.7" y="995.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.7" y="1006.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="656.8" y="979.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="659.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (15 samples, 0.08%)</title><rect x="657.1" y="979.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.1" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.06%)</title><rect x="657.3" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.3" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (9 samples, 0.05%)</title><rect x="657.3" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.3" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (5 samples, 0.03%)</title><rect x="657.5" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (49 samples, 0.28%)</title><rect x="658.1" y="1043.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.1" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (48 samples, 0.27%)</title><rect x="658.1" y="1027.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.1" y="1038.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (37 samples, 0.21%)</title><rect x="658.8" y="1011.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.8" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (37 samples, 0.21%)</title><rect x="658.8" y="995.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.8" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (37 samples, 0.21%)</title><rect x="658.8" y="979.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.8" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (36 samples, 0.20%)</title><rect x="658.9" y="963.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (25 samples, 0.14%)</title><rect x="658.9" y="947.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (23 samples, 0.13%)</title><rect x="659.0" y="931.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.0" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (23 samples, 0.13%)</title><rect x="659.0" y="915.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.0" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="659.1" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.1" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="659.2" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.2" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="659.2" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.2" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="659.2" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/119290689.test (16 samples, 0.09%)</title><rect x="659.5" y="899.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (14 samples, 0.08%)</title><rect x="659.6" y="883.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (9 samples, 0.05%)</title><rect x="659.6" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (9 samples, 0.05%)</title><rect x="659.6" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.6" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (9 samples, 0.05%)</title><rect x="659.6" y="835.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.6" y="846.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (8 samples, 0.05%)</title><rect x="659.7" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.7" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (8 samples, 0.05%)</title><rect x="659.7" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.7" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.05%)</title><rect x="659.7" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (8 samples, 0.05%)</title><rect x="659.7" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.04%)</title><rect x="659.7" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.04%)</title><rect x="659.7" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.03%)</title><rect x="659.8" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (4 samples, 0.02%)</title><rect x="660.3" y="867.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.02%)</title><rect x="660.6" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.02%)</title><rect x="660.6" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (6 samples, 0.03%)</title><rect x="661.7" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (154 samples, 0.87%)</title><rect x="662.2" y="1043.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.2" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (4 samples, 0.02%)</title><rect x="662.3" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.3" y="1038.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (148 samples, 0.83%)</title><rect x="662.6" y="1027.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.6" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (140 samples, 0.79%)</title><rect x="663.0" y="1011.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.0" y="1022.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (89 samples, 0.50%)</title><rect x="663.5" y="995.0" width="5.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="666.5" y="1006.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (13 samples, 0.07%)</title><rect x="664.7" y="979.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="667.7" y="990.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (28 samples, 0.16%)</title><rect x="666.3" y="979.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="669.3" y="990.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (23 samples, 0.13%)</title><rect x="666.4" y="963.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="669.4" y="974.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (16 samples, 0.09%)</title><rect x="666.5" y="947.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="669.5" y="958.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (5 samples, 0.03%)</title><rect x="667.6" y="947.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="670.6" y="958.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (19 samples, 0.11%)</title><rect x="668.2" y="979.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="671.2" y="990.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (6 samples, 0.03%)</title><rect x="668.6" y="963.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="671.6" y="974.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.02%)</title><rect x="668.7" y="947.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="671.7" y="958.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.03%)</title><rect x="669.0" y="963.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="672.0" y="974.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (6 samples, 0.03%)</title><rect x="669.0" y="947.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="672.0" y="958.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.03%)</title><rect x="669.0" y="931.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="672.0" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (36 samples, 0.20%)</title><rect x="669.8" y="995.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.8" y="1006.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (34 samples, 0.19%)</title><rect x="670.0" y="979.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.07%)</title><rect x="670.2" y="963.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.07%)</title><rect x="670.2" y="947.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.05%)</title><rect x="670.3" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.3" y="942.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (15 samples, 0.08%)</title><rect x="671.2" y="963.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.2" y="974.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (5 samples, 0.03%)</title><rect x="671.2" y="947.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.2" y="958.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.03%)</title><rect x="671.2" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.2" y="942.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.03%)</title><rect x="671.2" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.03%)</title><rect x="671.2" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.03%)</title><rect x="671.2" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.2" y="894.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (10 samples, 0.06%)</title><rect x="671.6" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (9 samples, 0.05%)</title><rect x="671.6" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="672.6" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.02%)</title><rect x="672.9" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.9" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="672.9" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (92 samples, 0.52%)</title><rect x="673.2" y="1059.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (8 samples, 0.05%)</title><rect x="673.6" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (79 samples, 0.45%)</title><rect x="674.1" y="1043.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (78 samples, 0.44%)</title><rect x="674.2" y="1027.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (16 samples, 0.09%)</title><rect x="674.5" y="1011.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (10 samples, 0.06%)</title><rect x="674.5" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (7 samples, 0.04%)</title><rect x="674.7" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (4 samples, 0.02%)</title><rect x="674.9" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (5 samples, 0.03%)</title><rect x="675.2" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (5 samples, 0.03%)</title><rect x="675.2" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.2" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (5 samples, 0.03%)</title><rect x="675.2" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.2" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (38 samples, 0.21%)</title><rect x="675.6" y="1011.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (22 samples, 0.12%)</title><rect x="675.7" y="995.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (21 samples, 0.12%)</title><rect x="675.8" y="979.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.8" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (20 samples, 0.11%)</title><rect x="675.8" y="963.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (16 samples, 0.09%)</title><rect x="676.1" y="947.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getClassAccessFlags (6 samples, 0.03%)</title><rect x="676.3" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.3" y="942.0"></text>
</g>
<g>
<title>JVM_GetClassAccessFlags (5 samples, 0.03%)</title><rect x="676.3" y="915.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="679.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (7 samples, 0.04%)</title><rect x="676.7" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (4 samples, 0.02%)</title><rect x="676.9" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (4 samples, 0.02%)</title><rect x="677.2" y="995.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (10 samples, 0.06%)</title><rect x="677.4" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.4" y="1006.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (10 samples, 0.06%)</title><rect x="677.4" y="979.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="680.4" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (7 samples, 0.04%)</title><rect x="678.1" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.1" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (7 samples, 0.04%)</title><rect x="678.1" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.1" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (7 samples, 0.04%)</title><rect x="678.1" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.1" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (6 samples, 0.03%)</title><rect x="678.1" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (5 samples, 0.03%)</title><rect x="678.7" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (51 samples, 0.29%)</title><rect x="679.3" y="1059.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (33 samples, 0.19%)</title><rect x="679.4" y="1043.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.4" y="1054.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="679.5" y="1027.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="682.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.13%)</title><rect x="680.1" y="1027.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.12%)</title><rect x="680.1" y="1011.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.03%)</title><rect x="680.3" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="680.3" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="680.3" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="680.3" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="680.3" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="680.3" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.3" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="680.4" y="899.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="683.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="680.4" y="883.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="683.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="680.4" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="683.4" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="680.4" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="683.4" y="862.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="680.4" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="683.4" y="846.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="680.4" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="683.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.03%)</title><rect x="680.7" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="681.1" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="681.1" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (15 samples, 0.08%)</title><rect x="681.6" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.07%)</title><rect x="681.7" y="1027.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.05%)</title><rect x="681.9" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (4 samples, 0.02%)</title><rect x="682.0" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (59 samples, 0.33%)</title><rect x="682.9" y="1123.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (57 samples, 0.32%)</title><rect x="683.1" y="1107.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.1" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (50 samples, 0.28%)</title><rect x="683.4" y="1091.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.4" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (49 samples, 0.28%)</title><rect x="683.4" y="1075.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="683.7" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="683.7" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.7" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.get$Lambda (5 samples, 0.03%)</title><rect x="683.7" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (36 samples, 0.20%)</title><rect x="684.1" y="1059.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.1" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (35 samples, 0.20%)</title><rect x="684.2" y="1043.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.2" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (34 samples, 0.19%)</title><rect x="684.3" y="1027.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.02%)</title><rect x="684.5" y="1011.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.02%)</title><rect x="684.5" y="995.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.5" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (21 samples, 0.12%)</title><rect x="684.7" y="1011.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.7" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (21 samples, 0.12%)</title><rect x="684.7" y="995.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.7" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (21 samples, 0.12%)</title><rect x="684.7" y="979.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.7" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="685.0" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.0" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="685.1" y="947.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="688.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (12 samples, 0.07%)</title><rect x="685.3" y="963.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (8 samples, 0.05%)</title><rect x="685.6" y="947.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.6" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (8 samples, 0.05%)</title><rect x="685.6" y="931.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.6" y="942.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (7 samples, 0.04%)</title><rect x="685.7" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.7" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.03%)</title><rect x="685.7" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.7" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.03%)</title><rect x="685.7" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.7" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.03%)</title><rect x="685.7" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="685.8" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="685.8" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="685.8" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (21 samples, 0.12%)</title><rect x="686.9" y="1123.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (21 samples, 0.12%)</title><rect x="686.9" y="1107.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (12 samples, 0.07%)</title><rect x="686.9" y="1091.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (7 samples, 0.04%)</title><rect x="686.9" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (7 samples, 0.04%)</title><rect x="686.9" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (7 samples, 0.04%)</title><rect x="686.9" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.9" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (7 samples, 0.04%)</title><rect x="686.9" y="1027.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.9" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (7 samples, 0.04%)</title><rect x="686.9" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.9" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.04%)</title><rect x="686.9" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.9" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.04%)</title><rect x="686.9" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.03%)</title><rect x="687.0" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.03%)</title><rect x="687.0" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.02%)</title><rect x="687.1" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.05%)</title><rect x="687.7" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (81 samples, 0.46%)</title><rect x="688.3" y="1123.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="688.4" y="1107.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="688.4" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$207/689816463.get$Lambda (4 samples, 0.02%)</title><rect x="688.4" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.4" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (73 samples, 0.41%)</title><rect x="688.7" y="1107.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.7" y="1118.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="688.7" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="691.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$207/689816463.accept (67 samples, 0.38%)</title><rect x="689.1" y="1091.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (66 samples, 0.37%)</title><rect x="689.1" y="1075.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (4 samples, 0.02%)</title><rect x="689.2" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4 samples, 0.02%)</title><rect x="689.2" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (54 samples, 0.30%)</title><rect x="689.5" y="1059.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (46 samples, 0.26%)</title><rect x="689.5" y="1043.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (44 samples, 0.25%)</title><rect x="689.7" y="1027.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (7 samples, 0.04%)</title><rect x="689.7" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (35 samples, 0.20%)</title><rect x="690.1" y="1011.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (29 samples, 0.16%)</title><rect x="690.3" y="995.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (27 samples, 0.15%)</title><rect x="690.4" y="979.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (27 samples, 0.15%)</title><rect x="690.4" y="963.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftUp (10 samples, 0.06%)</title><rect x="690.5" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (5 samples, 0.03%)</title><rect x="690.8" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (11 samples, 0.06%)</title><rect x="691.2" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.06%)</title><rect x="691.2" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.03%)</title><rect x="691.2" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.02%)</title><rect x="691.2" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.02%)</title><rect x="691.2" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.02%)</title><rect x="691.2" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="691.2" y="851.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="694.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.03%)</title><rect x="691.6" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.03%)</title><rect x="691.6" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.02%)</title><rect x="691.9" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="691.9" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.04%)</title><rect x="692.6" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.04%)</title><rect x="692.6" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="692.8" y="1011.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="692.8" y="995.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (7 samples, 0.04%)</title><rect x="693.0" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.03%)</title><rect x="693.1" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (901 samples, 5.08%)</title><rect x="693.9" y="1187.0" width="59.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.9" y="1198.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (201 samples, 1.13%)</title><rect x="694.1" y="1171.0" width="13.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (200 samples, 1.13%)</title><rect x="694.2" y="1155.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (8 samples, 0.05%)</title><rect x="694.2" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionally (5 samples, 0.03%)</title><rect x="694.4" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (191 samples, 1.08%)</title><rect x="694.8" y="1139.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (191 samples, 1.08%)</title><rect x="694.8" y="1123.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (65 samples, 0.37%)</title><rect x="694.8" y="1107.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (63 samples, 0.35%)</title><rect x="694.9" y="1091.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (61 samples, 0.34%)</title><rect x="695.0" y="1075.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.cancel (6 samples, 0.03%)</title><rect x="695.2" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (53 samples, 0.30%)</title><rect x="695.6" y="1059.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (52 samples, 0.29%)</title><rect x="695.6" y="1043.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (29 samples, 0.16%)</title><rect x="696.0" y="1027.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (10 samples, 0.06%)</title><rect x="697.2" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (5 samples, 0.03%)</title><rect x="697.6" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.05%)</title><rect x="698.0" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.05%)</title><rect x="698.0" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.03%)</title><rect x="698.2" y="995.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="698.3" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.05%)</title><rect x="698.6" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.04%)</title><rect x="698.6" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="698.7" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="698.7" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="698.7" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (126 samples, 0.71%)</title><rect x="699.1" y="1107.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (104 samples, 0.59%)</title><rect x="699.2" y="1091.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (104 samples, 0.59%)</title><rect x="699.2" y="1075.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (104 samples, 0.59%)</title><rect x="699.2" y="1059.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (103 samples, 0.58%)</title><rect x="699.2" y="1043.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (103 samples, 0.58%)</title><rect x="699.2" y="1027.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (102 samples, 0.57%)</title><rect x="699.3" y="1011.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.3" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.05%)</title><rect x="699.3" y="995.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="702.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (93 samples, 0.52%)</title><rect x="699.9" y="995.0" width="6.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="702.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.41%)</title><rect x="701.2" y="979.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="704.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.41%)</title><rect x="701.3" y="963.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="704.3" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (66 samples, 0.37%)</title><rect x="701.7" y="947.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.7" y="958.0"></text>
</g>
<g>
<title>do_futex (66 samples, 0.37%)</title><rect x="701.7" y="931.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.7" y="942.0"></text>
</g>
<g>
<title>futex_wake (63 samples, 0.35%)</title><rect x="701.9" y="915.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="704.9" y="926.0"></text>
</g>
<g>
<title>wake_up_q (56 samples, 0.32%)</title><rect x="702.3" y="899.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="705.3" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (56 samples, 0.32%)</title><rect x="702.3" y="883.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="705.3" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (55 samples, 0.31%)</title><rect x="702.4" y="867.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.12%)</title><rect x="706.1" y="1091.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.11%)</title><rect x="706.2" y="1075.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.10%)</title><rect x="706.3" y="1059.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.08%)</title><rect x="706.5" y="1043.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.08%)</title><rect x="706.5" y="1027.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.03%)</title><rect x="706.5" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.03%)</title><rect x="706.5" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.03%)</title><rect x="706.5" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (6 samples, 0.03%)</title><rect x="706.5" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.5" y="974.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="706.6" y="947.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="709.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.03%)</title><rect x="707.1" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.03%)</title><rect x="707.1" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (5 samples, 0.03%)</title><rect x="707.1" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (697 samples, 3.93%)</title><rect x="707.5" y="1171.0" width="46.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.5" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (50 samples, 0.28%)</title><rect x="707.5" y="1155.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (50 samples, 0.28%)</title><rect x="707.5" y="1139.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (49 samples, 0.28%)</title><rect x="707.6" y="1123.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (47 samples, 0.26%)</title><rect x="707.7" y="1107.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (45 samples, 0.25%)</title><rect x="707.9" y="1091.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (45 samples, 0.25%)</title><rect x="707.9" y="1075.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (36 samples, 0.20%)</title><rect x="707.9" y="1059.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (26 samples, 0.15%)</title><rect x="707.9" y="1043.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.15%)</title><rect x="707.9" y="1027.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (26 samples, 0.15%)</title><rect x="707.9" y="1011.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.9" y="1022.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.06%)</title><rect x="708.3" y="995.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="711.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$140/636183480.accept (4 samples, 0.02%)</title><rect x="709.3" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (10 samples, 0.06%)</title><rect x="709.6" y="1043.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (8 samples, 0.05%)</title><rect x="709.6" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (8 samples, 0.05%)</title><rect x="710.3" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (6 samples, 0.03%)</title><rect x="710.4" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.03%)</title><rect x="710.4" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.03%)</title><rect x="710.4" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$205/933343823.accept (56 samples, 0.32%)</title><rect x="710.9" y="1155.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.9" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (55 samples, 0.31%)</title><rect x="710.9" y="1139.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (49 samples, 0.28%)</title><rect x="711.0" y="1123.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (45 samples, 0.25%)</title><rect x="711.3" y="1107.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (41 samples, 0.23%)</title><rect x="711.5" y="1091.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (40 samples, 0.23%)</title><rect x="711.6" y="1075.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (40 samples, 0.23%)</title><rect x="711.6" y="1059.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (39 samples, 0.22%)</title><rect x="711.6" y="1043.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (39 samples, 0.22%)</title><rect x="711.6" y="1027.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (39 samples, 0.22%)</title><rect x="711.6" y="1011.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (38 samples, 0.21%)</title><rect x="711.7" y="995.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.21%)</title><rect x="711.7" y="979.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 0.21%)</title><rect x="711.7" y="963.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.7" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="711.7" y="947.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="714.7" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.17%)</title><rect x="712.1" y="947.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="715.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.16%)</title><rect x="712.3" y="931.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="715.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.16%)</title><rect x="712.3" y="915.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.3" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.15%)</title><rect x="712.4" y="899.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.4" y="910.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.15%)</title><rect x="712.5" y="883.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.5" y="894.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.15%)</title><rect x="712.5" y="867.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="715.5" y="878.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.14%)</title><rect x="712.6" y="851.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.6" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.13%)</title><rect x="712.7" y="835.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="715.7" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.13%)</title><rect x="712.7" y="819.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="715.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (5 samples, 0.03%)</title><rect x="714.3" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$140/636183480.accept (590 samples, 3.32%)</title><rect x="714.6" y="1155.0" width="39.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.6" y="1166.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$10 (589 samples, 3.32%)</title><rect x="714.6" y="1139.0" width="39.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.6" y="1150.0">ru/..</text>
</g>
<g>
<title>java/util/ArrayList.contains (10 samples, 0.06%)</title><rect x="715.3" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.3" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (7 samples, 0.04%)</title><rect x="715.5" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.5" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (6 samples, 0.03%)</title><rect x="715.6" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.06%)</title><rect x="716.0" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.03%)</title><rect x="716.1" y="1107.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.03%)</title><rect x="716.2" y="1091.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getNumberOfSuccessfulResponses (9 samples, 0.05%)</title><rect x="716.8" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (548 samples, 3.09%)</title><rect x="717.4" y="1123.0" width="36.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.4" y="1134.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (546 samples, 3.08%)</title><rect x="717.5" y="1107.0" width="36.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.5" y="1118.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (541 samples, 3.05%)</title><rect x="717.8" y="1091.0" width="35.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.8" y="1102.0">one..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (8 samples, 0.05%)</title><rect x="718.0" y="1075.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="721.0" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="718.2" y="1059.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="721.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (516 samples, 2.91%)</title><rect x="718.6" y="1075.0" width="34.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.6" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.07%)</title><rect x="718.6" y="1059.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.06%)</title><rect x="718.8" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.03%)</title><rect x="718.9" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (503 samples, 2.83%)</title><rect x="719.4" y="1059.0" width="33.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.4" y="1070.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (502 samples, 2.83%)</title><rect x="719.5" y="1043.0" width="33.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.5" y="1054.0">on..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="719.7" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="722.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (490 samples, 2.76%)</title><rect x="720.1" y="1027.0" width="32.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.1" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (485 samples, 2.73%)</title><rect x="720.4" y="1011.0" width="32.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.4" y="1022.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.11%)</title><rect x="720.7" y="995.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="723.7" y="1006.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.04%)</title><rect x="721.4" y="979.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="724.4" y="990.0"></text>
</g>
<g>
<title>__send (454 samples, 2.56%)</title><rect x="722.3" y="995.0" width="30.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="725.3" y="1006.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (425 samples, 2.39%)</title><rect x="724.2" y="979.0" width="28.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="727.2" y="990.0">en..</text>
</g>
<g>
<title>do_syscall_64 (423 samples, 2.38%)</title><rect x="724.4" y="963.0" width="28.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.4" y="974.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (414 samples, 2.33%)</title><rect x="724.8" y="947.0" width="27.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="727.8" y="958.0">_..</text>
</g>
<g>
<title>__sys_sendto (414 samples, 2.33%)</title><rect x="724.8" y="931.0" width="27.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="727.8" y="942.0">_..</text>
</g>
<g>
<title>sock_sendmsg (391 samples, 2.20%)</title><rect x="725.3" y="915.0" width="26.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="728.3" y="926.0">s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.02%)</title><rect x="725.4" y="899.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="728.4" y="910.0"></text>
</g>
<g>
<title>inet6_sendmsg (385 samples, 2.17%)</title><rect x="725.6" y="899.0" width="25.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="728.6" y="910.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (384 samples, 2.16%)</title><rect x="725.7" y="883.0" width="25.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="728.7" y="894.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (375 samples, 2.11%)</title><rect x="726.2" y="867.0" width="24.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.2" y="878.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.07%)</title><rect x="726.9" y="851.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="729.9" y="862.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.05%)</title><rect x="727.0" y="835.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="730.0" y="846.0"></text>
</g>
<g>
<title>tcp_push (342 samples, 1.93%)</title><rect x="727.9" y="851.0" width="22.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.9" y="862.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (342 samples, 1.93%)</title><rect x="727.9" y="835.0" width="22.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="730.9" y="846.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (336 samples, 1.89%)</title><rect x="728.3" y="819.0" width="22.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="731.3" y="830.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (312 samples, 1.76%)</title><rect x="728.5" y="803.0" width="20.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="731.5" y="814.0"></text>
</g>
<g>
<title>ip_queue_xmit (295 samples, 1.66%)</title><rect x="729.5" y="787.0" width="19.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="732.5" y="798.0"></text>
</g>
<g>
<title>__ip_queue_xmit (293 samples, 1.65%)</title><rect x="729.5" y="771.0" width="19.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="732.5" y="782.0"></text>
</g>
<g>
<title>ip_local_out (286 samples, 1.61%)</title><rect x="729.7" y="755.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="732.7" y="766.0"></text>
</g>
<g>
<title>ip_output (285 samples, 1.61%)</title><rect x="729.7" y="739.0" width="19.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.7" y="750.0"></text>
</g>
<g>
<title>ip_finish_output (283 samples, 1.59%)</title><rect x="729.9" y="723.0" width="18.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="732.9" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.02%)</title><rect x="729.9" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.9" y="718.0"></text>
</g>
<g>
<title>__ip_finish_output (278 samples, 1.57%)</title><rect x="730.2" y="707.0" width="18.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.2" y="718.0"></text>
</g>
<g>
<title>ip_finish_output2 (276 samples, 1.56%)</title><rect x="730.3" y="691.0" width="18.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.3" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (259 samples, 1.46%)</title><rect x="730.5" y="675.0" width="17.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="733.5" y="686.0"></text>
</g>
<g>
<title>do_softirq.part.0 (258 samples, 1.45%)</title><rect x="730.6" y="659.0" width="17.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="733.6" y="670.0"></text>
</g>
<g>
<title>do_softirq_own_stack (255 samples, 1.44%)</title><rect x="730.8" y="643.0" width="17.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="733.8" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (254 samples, 1.43%)</title><rect x="730.8" y="627.0" width="16.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.8" y="638.0"></text>
</g>
<g>
<title>net_rx_action (250 samples, 1.41%)</title><rect x="731.1" y="611.0" width="16.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="734.1" y="622.0"></text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.02%)</title><rect x="731.1" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="734.1" y="606.0"></text>
</g>
<g>
<title>process_backlog (245 samples, 1.38%)</title><rect x="731.4" y="595.0" width="16.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="734.4" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb (242 samples, 1.36%)</title><rect x="731.5" y="579.0" width="16.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.5" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (242 samples, 1.36%)</title><rect x="731.5" y="563.0" width="16.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="734.5" y="574.0"></text>
</g>
<g>
<title>ip_rcv (235 samples, 1.32%)</title><rect x="731.8" y="547.0" width="15.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.8" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish (232 samples, 1.31%)</title><rect x="731.9" y="531.0" width="15.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="734.9" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver (229 samples, 1.29%)</title><rect x="732.0" y="515.0" width="15.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="735.0" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (229 samples, 1.29%)</title><rect x="732.0" y="499.0" width="15.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.0" y="510.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (229 samples, 1.29%)</title><rect x="732.0" y="483.0" width="15.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="735.0" y="494.0"></text>
</g>
<g>
<title>tcp_v4_rcv (223 samples, 1.26%)</title><rect x="732.4" y="467.0" width="14.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.4" y="478.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.03%)</title><rect x="732.7" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="735.7" y="462.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (209 samples, 1.18%)</title><rect x="733.3" y="451.0" width="13.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="736.3" y="462.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.03%)</title><rect x="733.5" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="736.5" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_established (201 samples, 1.13%)</title><rect x="733.9" y="435.0" width="13.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="736.9" y="446.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.05%)</title><rect x="734.3" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="737.3" y="430.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.04%)</title><rect x="734.4" y="403.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="737.4" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.04%)</title><rect x="734.4" y="387.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="737.4" y="398.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.04%)</title><rect x="734.4" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="737.4" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="734.4" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="737.4" y="366.0"></text>
</g>
<g>
<title>tcp_ack (42 samples, 0.24%)</title><rect x="735.1" y="419.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="738.1" y="430.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (22 samples, 0.12%)</title><rect x="736.3" y="403.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="739.3" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.06%)</title><rect x="736.6" y="387.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.6" y="398.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.04%)</title><rect x="736.8" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="739.8" y="382.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.04%)</title><rect x="736.8" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.8" y="366.0"></text>
</g>
<g>
<title>tcp_data_ready (136 samples, 0.77%)</title><rect x="737.9" y="419.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.9" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (135 samples, 0.76%)</title><rect x="738.0" y="403.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="741.0" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (130 samples, 0.73%)</title><rect x="738.3" y="387.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="741.3" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (130 samples, 0.73%)</title><rect x="738.3" y="371.0" width="8.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="741.3" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (130 samples, 0.73%)</title><rect x="738.3" y="355.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.3" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (13 samples, 0.07%)</title><rect x="747.8" y="675.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="750.8" y="686.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.07%)</title><rect x="747.8" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="750.8" y="670.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="748.0" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="751.0" y="654.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="748.1" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.1" y="638.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.07%)</title><rect x="749.5" y="803.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="752.5" y="814.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.05%)</title><rect x="749.7" y="787.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="752.7" y="798.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.04%)</title><rect x="749.8" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.8" y="782.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.03%)</title><rect x="749.9" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="752.9" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="750.0" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.0" y="750.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.04%)</title><rect x="750.6" y="851.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.6" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.09%)</title><rect x="751.3" y="915.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="754.3" y="926.0"></text>
</g>
<g>
<title>__fdget (12 samples, 0.07%)</title><rect x="751.3" y="899.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="754.3" y="910.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.07%)</title><rect x="751.3" y="883.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="754.3" y="894.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.07%)</title><rect x="751.3" y="867.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="754.3" y="878.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="752.1" y="899.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="755.1" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.06%)</title><rect x="752.9" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.03%)</title><rect x="753.1" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.02%)</title><rect x="753.3" y="1043.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (34 samples, 0.19%)</title><rect x="754.3" y="1235.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.19%)</title><rect x="754.3" y="1219.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 0.19%)</title><rect x="754.3" y="1203.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.3" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (30 samples, 0.17%)</title><rect x="754.5" y="1187.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="757.5" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.15%)</title><rect x="754.8" y="1171.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="757.8" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.15%)</title><rect x="754.8" y="1155.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="757.8" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 0.15%)</title><rect x="754.8" y="1139.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="757.8" y="1150.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.15%)</title><rect x="754.8" y="1123.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.8" y="1134.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.15%)</title><rect x="754.8" y="1107.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.8" y="1118.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.14%)</title><rect x="754.9" y="1091.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="757.9" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (24 samples, 0.14%)</title><rect x="754.9" y="1075.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="757.9" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.14%)</title><rect x="754.9" y="1059.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="757.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (537 samples, 3.03%)</title><rect x="756.5" y="1251.0" width="35.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.5" y="1262.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (4 samples, 0.02%)</title><rect x="756.7" y="1235.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (531 samples, 2.99%)</title><rect x="756.9" y="1235.0" width="35.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.9" y="1246.0">jdk..</text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="757.2" y="1219.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="760.2" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Park (217 samples, 1.22%)</title><rect x="757.6" y="1219.0" width="14.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="760.6" y="1230.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (32 samples, 0.18%)</title><rect x="758.7" y="1203.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="761.7" y="1214.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (11 samples, 0.06%)</title><rect x="759.7" y="1187.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="762.7" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.03%)</title><rect x="761.1" y="1203.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="764.1" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (146 samples, 0.82%)</title><rect x="761.6" y="1203.0" width="9.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="764.6" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.37%)</title><rect x="767.0" y="1187.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.0" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="767.0" y="1171.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.0" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 0.34%)</title><rect x="767.2" y="1171.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.2" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 0.14%)</title><rect x="769.6" y="1155.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="772.6" y="1166.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.12%)</title><rect x="769.7" y="1139.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="772.7" y="1150.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.08%)</title><rect x="769.8" y="1123.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.8" y="1134.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.03%)</title><rect x="770.3" y="1107.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="773.3" y="1118.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.03%)</title><rect x="770.8" y="1123.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="773.8" y="1134.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.02%)</title><rect x="771.7" y="1203.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="774.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (303 samples, 1.71%)</title><rect x="772.0" y="1219.0" width="20.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="775.0" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_wait (260 samples, 1.46%)</title><rect x="772.4" y="1203.0" width="17.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="775.4" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.41%)</title><rect x="784.9" y="1187.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.9" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 0.41%)</title><rect x="784.9" y="1171.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="787.9" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (52 samples, 0.29%)</title><rect x="786.3" y="1155.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="789.3" y="1166.0"></text>
</g>
<g>
<title>do_futex (47 samples, 0.26%)</title><rect x="786.5" y="1139.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="789.5" y="1150.0"></text>
</g>
<g>
<title>futex_wait (46 samples, 0.26%)</title><rect x="786.5" y="1123.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="789.5" y="1134.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.10%)</title><rect x="786.8" y="1107.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="789.8" y="1118.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.08%)</title><rect x="787.0" y="1091.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="790.0" y="1102.0"></text>
</g>
<g>
<title>__sched_text_start (12 samples, 0.07%)</title><rect x="787.2" y="1075.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="790.2" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="787.7" y="1059.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="790.7" y="1070.0"></text>
</g>
<g>
<title>futex_wait_setup (18 samples, 0.10%)</title><rect x="788.0" y="1107.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="791.0" y="1118.0"></text>
</g>
<g>
<title>get_futex_value_locked (6 samples, 0.03%)</title><rect x="788.8" y="1091.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.8" y="1102.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.02%)</title><rect x="789.3" y="1107.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="792.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (25 samples, 0.14%)</title><rect x="789.7" y="1203.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="792.7" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (7 samples, 0.04%)</title><rect x="791.6" y="1203.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="794.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (63 samples, 0.35%)</title><rect x="792.2" y="1251.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (63 samples, 0.35%)</title><rect x="792.2" y="1235.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.2" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 0.14%)</title><rect x="792.4" y="1219.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="795.4" y="1230.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="792.5" y="1203.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="795.5" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (17 samples, 0.10%)</title><rect x="792.8" y="1203.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="795.8" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="793.2" y="1187.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.2" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="793.2" y="1171.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="796.2" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="793.6" y="1155.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.6" y="1166.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="793.6" y="1139.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.6" y="1150.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="793.6" y="1123.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="796.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.20%)</title><rect x="794.0" y="1219.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="797.0" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (32 samples, 0.18%)</title><rect x="794.3" y="1203.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="797.3" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="795.6" y="1187.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="798.6" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="795.6" y="1171.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="798.6" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="795.7" y="1155.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="798.7" y="1166.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="795.8" y="1139.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="798.8" y="1150.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.05%)</title><rect x="795.8" y="1123.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="798.8" y="1134.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.02%)</title><rect x="795.9" y="1107.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="798.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,150 samples, 6.48%)</title><rect x="796.6" y="1283.0" width="76.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.6" y="1294.0">jdk/inte..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.06%)</title><rect x="802.5" y="1267.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="805.5" y="1278.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.06%)</title><rect x="802.5" y="1251.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="805.5" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.05%)</title><rect x="802.7" y="1235.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="805.7" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (4 samples, 0.02%)</title><rect x="802.7" y="1219.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="805.7" y="1230.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="802.9" y="1219.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="805.9" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.02%)</title><rect x="803.5" y="1267.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.5" y="1278.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (4 samples, 0.02%)</title><rect x="803.5" y="1251.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.5" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="803.9" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.9" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="803.9" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.9" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="803.9" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.9" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="803.9" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.9" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.02%)</title><rect x="803.9" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.9" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.03%)</title><rect x="804.2" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.2" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (426 samples, 2.40%)</title><rect x="804.6" y="1267.0" width="28.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.6" y="1278.0">ja..</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="804.7" y="1251.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="807.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/442313598.accept (385 samples, 2.17%)</title><rect x="805.1" y="1251.0" width="25.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.1" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (381 samples, 2.15%)</title><rect x="805.3" y="1235.0" width="25.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.3" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (381 samples, 2.15%)</title><rect x="805.3" y="1219.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.3" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (380 samples, 2.14%)</title><rect x="805.4" y="1203.0" width="25.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.4" y="1214.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (379 samples, 2.14%)</title><rect x="805.5" y="1187.0" width="25.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.5" y="1198.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (19 samples, 0.11%)</title><rect x="805.5" y="1171.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (17 samples, 0.10%)</title><rect x="805.7" y="1155.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.7" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (6 samples, 0.03%)</title><rect x="805.7" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (10 samples, 0.06%)</title><rect x="806.1" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.1" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.03%)</title><rect x="806.3" y="1123.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.03%)</title><rect x="806.3" y="1107.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.03%)</title><rect x="806.3" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (359 samples, 2.02%)</title><rect x="806.8" y="1171.0" width="23.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.8" y="1182.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (359 samples, 2.02%)</title><rect x="806.8" y="1155.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.8" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (359 samples, 2.02%)</title><rect x="806.8" y="1139.0" width="23.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.8" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (358 samples, 2.02%)</title><rect x="806.9" y="1123.0" width="23.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.9" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (355 samples, 2.00%)</title><rect x="807.1" y="1107.0" width="23.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.1" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1887377102.run (349 samples, 1.97%)</title><rect x="807.3" y="1091.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.3" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (349 samples, 1.97%)</title><rect x="807.3" y="1075.0" width="23.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.3" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (38 samples, 0.21%)</title><rect x="807.7" y="1059.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (34 samples, 0.19%)</title><rect x="807.9" y="1043.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (30 samples, 0.17%)</title><rect x="808.2" y="1027.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.15%)</title><rect x="808.5" y="1011.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.15%)</title><rect x="808.5" y="995.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.14%)</title><rect x="808.5" y="979.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.14%)</title><rect x="808.5" y="963.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.11%)</title><rect x="808.9" y="947.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.05%)</title><rect x="809.1" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.05%)</title><rect x="809.1" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.05%)</title><rect x="809.1" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.05%)</title><rect x="809.1" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.05%)</title><rect x="809.1" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.05%)</title><rect x="809.1" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.1" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="809.3" y="835.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="812.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="809.3" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="812.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="809.3" y="803.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="812.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="809.3" y="787.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="812.3" y="798.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="809.3" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="812.3" y="782.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="809.3" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="812.3" y="766.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="809.4" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="812.4" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="809.4" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="812.4" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="809.4" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="812.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.04%)</title><rect x="810.4" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.03%)</title><rect x="810.5" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.02%)</title><rect x="810.5" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.02%)</title><rect x="810.5" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (284 samples, 1.60%)</title><rect x="810.8" y="1059.0" width="18.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (13 samples, 0.07%)</title><rect x="811.4" y="1043.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="814.4" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="811.6" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.6" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="811.6" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="811.6" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="811.6" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.6" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="811.7" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (7 samples, 0.04%)</title><rect x="812.3" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$239/1312469269.get (5 samples, 0.03%)</title><rect x="812.4" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (5 samples, 0.03%)</title><rect x="812.4" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.03%)</title><rect x="812.4" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="812.4" y="979.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.4" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="812.5" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (254 samples, 1.43%)</title><rect x="812.8" y="1043.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (247 samples, 1.39%)</title><rect x="813.0" y="1027.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (245 samples, 1.38%)</title><rect x="813.1" y="1011.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="816.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (20 samples, 0.11%)</title><rect x="813.2" y="995.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (20 samples, 0.11%)</title><rect x="813.2" y="979.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (20 samples, 0.11%)</title><rect x="813.2" y="963.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory0 (6 samples, 0.03%)</title><rect x="813.2" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (14 samples, 0.08%)</title><rect x="813.6" y="947.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (10 samples, 0.06%)</title><rect x="813.9" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (9 samples, 0.05%)</title><rect x="814.0" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (9 samples, 0.05%)</title><rect x="814.0" y="899.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (6 samples, 0.03%)</title><rect x="814.2" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (187 samples, 1.05%)</title><rect x="814.6" y="995.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (184 samples, 1.04%)</title><rect x="814.8" y="979.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.8" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (184 samples, 1.04%)</title><rect x="814.8" y="963.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.8" y="974.0"></text>
</g>
<g>
<title>__read (177 samples, 1.00%)</title><rect x="815.1" y="947.0" width="11.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="818.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 0.75%)</title><rect x="818.0" y="931.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="821.0" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (131 samples, 0.74%)</title><rect x="818.2" y="915.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="821.2" y="926.0"></text>
</g>
<g>
<title>__x64_sys_read (117 samples, 0.66%)</title><rect x="819.0" y="899.0" width="7.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.0" y="910.0"></text>
</g>
<g>
<title>ksys_read (116 samples, 0.65%)</title><rect x="819.0" y="883.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="822.0" y="894.0"></text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.05%)</title><rect x="819.1" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.1" y="878.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.04%)</title><rect x="819.2" y="851.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="822.2" y="862.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.04%)</title><rect x="819.2" y="835.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="822.2" y="846.0"></text>
</g>
<g>
<title>vfs_read (103 samples, 0.58%)</title><rect x="819.9" y="867.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="822.9" y="878.0"></text>
</g>
<g>
<title>__vfs_read (85 samples, 0.48%)</title><rect x="820.0" y="851.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="823.0" y="862.0"></text>
</g>
<g>
<title>new_sync_read (84 samples, 0.47%)</title><rect x="820.0" y="835.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="823.0" y="846.0"></text>
</g>
<g>
<title>sock_read_iter (82 samples, 0.46%)</title><rect x="820.1" y="819.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="823.1" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (79 samples, 0.45%)</title><rect x="820.3" y="803.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="823.3" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.03%)</title><rect x="820.4" y="787.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="823.4" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (71 samples, 0.40%)</title><rect x="820.8" y="787.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="823.8" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (68 samples, 0.38%)</title><rect x="821.0" y="771.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="824.0" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.06%)</title><rect x="821.6" y="755.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="824.6" y="766.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.05%)</title><rect x="821.8" y="739.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="824.8" y="750.0"></text>
</g>
<g>
<title>sock_rfree (7 samples, 0.04%)</title><rect x="821.9" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="824.9" y="734.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.04%)</title><rect x="822.8" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="825.8" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (17 samples, 0.10%)</title><rect x="823.2" y="755.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.2" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (16 samples, 0.09%)</title><rect x="823.3" y="739.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="826.3" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.05%)</title><rect x="823.7" y="723.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="826.7" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.03%)</title><rect x="823.9" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="826.9" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.05%)</title><rect x="824.3" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.3" y="766.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 0.04%)</title><rect x="824.5" y="739.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="827.5" y="750.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (7 samples, 0.04%)</title><rect x="824.5" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="827.5" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.04%)</title><rect x="824.5" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.5" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.04%)</title><rect x="824.5" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="827.5" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.04%)</title><rect x="824.5" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="827.5" y="686.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.04%)</title><rect x="824.5" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="827.5" y="670.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.04%)</title><rect x="824.5" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="827.5" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (7 samples, 0.04%)</title><rect x="824.5" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.5" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (7 samples, 0.04%)</title><rect x="824.5" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="827.5" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 0.04%)</title><rect x="824.5" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="827.5" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.03%)</title><rect x="824.5" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="827.5" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.0 (6 samples, 0.03%)</title><rect x="824.5" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="827.5" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.03%)</title><rect x="824.5" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.5" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.03%)</title><rect x="824.5" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.5" y="542.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.03%)</title><rect x="824.5" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="827.5" y="526.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.03%)</title><rect x="824.5" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="827.5" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.03%)</title><rect x="824.5" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="827.5" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.03%)</title><rect x="824.5" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="827.5" y="478.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.02%)</title><rect x="824.5" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.5" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.02%)</title><rect x="824.5" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="827.5" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.02%)</title><rect x="824.5" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="827.5" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.02%)</title><rect x="824.5" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="827.5" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.02%)</title><rect x="824.5" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="827.5" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.02%)</title><rect x="824.5" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.5" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.02%)</title><rect x="824.9" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="827.9" y="766.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.02%)</title><rect x="825.2" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="828.2" y="766.0"></text>
</g>
<g>
<title>rw_verify_area (16 samples, 0.09%)</title><rect x="825.7" y="851.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="828.7" y="862.0"></text>
</g>
<g>
<title>security_file_permission (16 samples, 0.09%)</title><rect x="825.7" y="835.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.7" y="846.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.03%)</title><rect x="825.7" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="828.7" y="830.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.02%)</title><rect x="826.1" y="819.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="829.1" y="830.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.02%)</title><rect x="826.1" y="803.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="829.1" y="814.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.03%)</title><rect x="826.4" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="829.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (26 samples, 0.15%)</title><rect x="827.0" y="995.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (14 samples, 0.08%)</title><rect x="827.2" y="979.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.2" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (11 samples, 0.06%)</title><rect x="827.3" y="963.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.3" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (11 samples, 0.06%)</title><rect x="827.3" y="947.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.3" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.02%)</title><rect x="828.1" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.1" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (5 samples, 0.03%)</title><rect x="828.4" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.4" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (10 samples, 0.06%)</title><rect x="828.7" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.7" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (5 samples, 0.03%)</title><rect x="829.1" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (8 samples, 0.05%)</title><rect x="830.0" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$366/1660416884.accept (34 samples, 0.19%)</title><rect x="830.7" y="1251.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (31 samples, 0.17%)</title><rect x="830.9" y="1235.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$362/1344263302.run (31 samples, 0.17%)</title><rect x="830.9" y="1219.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (30 samples, 0.17%)</title><rect x="830.9" y="1203.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (29 samples, 0.16%)</title><rect x="831.0" y="1187.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.0" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (7 samples, 0.04%)</title><rect x="831.3" y="1171.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.3" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (4 samples, 0.02%)</title><rect x="831.8" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.8" y="1182.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.07%)</title><rect x="832.1" y="1171.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.1" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.03%)</title><rect x="832.2" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.2" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="832.3" y="1139.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.3" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="832.3" y="1123.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (5 samples, 0.03%)</title><rect x="832.5" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.5" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (12 samples, 0.07%)</title><rect x="833.1" y="1267.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.1" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (12 samples, 0.07%)</title><rect x="833.1" y="1251.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.1" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (24 samples, 0.14%)</title><rect x="834.1" y="1267.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.1" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.12%)</title><rect x="834.2" y="1251.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.2" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (19 samples, 0.11%)</title><rect x="834.4" y="1235.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.4" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (19 samples, 0.11%)</title><rect x="834.4" y="1219.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.4" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.11%)</title><rect x="834.4" y="1203.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.4" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.09%)</title><rect x="834.4" y="1187.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.4" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (11 samples, 0.06%)</title><rect x="834.5" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.5" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (7 samples, 0.04%)</title><rect x="834.7" y="1155.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.7" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (5 samples, 0.03%)</title><rect x="834.7" y="1139.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$361/1415195538.accept (5 samples, 0.03%)</title><rect x="834.7" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.7" y="1134.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (4 samples, 0.02%)</title><rect x="835.2" y="1171.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (122 samples, 0.69%)</title><rect x="835.7" y="1267.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/558941923.run (102 samples, 0.57%)</title><rect x="835.7" y="1251.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (100 samples, 0.56%)</title><rect x="835.8" y="1235.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (100 samples, 0.56%)</title><rect x="835.8" y="1219.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (100 samples, 0.56%)</title><rect x="835.8" y="1203.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (98 samples, 0.55%)</title><rect x="836.0" y="1187.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (98 samples, 0.55%)</title><rect x="836.0" y="1171.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1887377102.run (87 samples, 0.49%)</title><rect x="836.2" y="1155.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (86 samples, 0.48%)</title><rect x="836.3" y="1139.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (82 samples, 0.46%)</title><rect x="836.4" y="1123.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (5 samples, 0.03%)</title><rect x="837.8" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (5 samples, 0.03%)</title><rect x="837.8" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (5 samples, 0.03%)</title><rect x="837.8" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (54 samples, 0.30%)</title><rect x="838.2" y="1107.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (30 samples, 0.17%)</title><rect x="838.4" y="1091.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (30 samples, 0.17%)</title><rect x="838.4" y="1075.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (29 samples, 0.16%)</title><rect x="838.5" y="1059.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (6 samples, 0.03%)</title><rect x="838.6" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (6 samples, 0.03%)</title><rect x="838.6" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="838.6" y="1011.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (4 samples, 0.02%)</title><rect x="838.6" y="995.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20 samples, 0.11%)</title><rect x="839.0" y="1043.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (19 samples, 0.11%)</title><rect x="839.0" y="1027.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (17 samples, 0.10%)</title><rect x="839.0" y="1011.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (17 samples, 0.10%)</title><rect x="839.0" y="995.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (7 samples, 0.04%)</title><rect x="839.0" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (9 samples, 0.05%)</title><rect x="839.5" y="979.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.05%)</title><rect x="839.5" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.05%)</title><rect x="839.5" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.04%)</title><rect x="839.6" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (21 samples, 0.12%)</title><rect x="840.4" y="1091.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.07%)</title><rect x="841.0" y="1075.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.06%)</title><rect x="841.1" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.05%)</title><rect x="841.2" y="1043.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.05%)</title><rect x="841.2" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.05%)</title><rect x="841.2" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.03%)</title><rect x="841.3" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="841.3" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="841.3" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="841.3" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="841.3" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="841.3" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5 samples, 0.03%)</title><rect x="842.2" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/255901250.run (20 samples, 0.11%)</title><rect x="842.5" y="1251.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (19 samples, 0.11%)</title><rect x="842.6" y="1235.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.08%)</title><rect x="842.8" y="1219.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.08%)</title><rect x="842.8" y="1203.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.07%)</title><rect x="842.9" y="1187.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.05%)</title><rect x="843.2" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.05%)</title><rect x="843.2" y="1155.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.03%)</title><rect x="843.4" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.03%)</title><rect x="843.4" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (60 samples, 0.34%)</title><rect x="843.8" y="1267.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.8" y="1278.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.04%)</title><rect x="843.8" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.8" y="1262.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.04%)</title><rect x="843.8" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.04%)</title><rect x="843.8" y="1219.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.8" y="1230.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.03%)</title><rect x="843.8" y="1203.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="846.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (53 samples, 0.30%)</title><rect x="844.3" y="1251.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.3" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (35 samples, 0.20%)</title><rect x="845.2" y="1235.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="848.2" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (34 samples, 0.19%)</title><rect x="845.3" y="1219.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="848.3" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (34 samples, 0.19%)</title><rect x="845.3" y="1203.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="848.3" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (28 samples, 0.16%)</title><rect x="845.4" y="1187.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="848.4" y="1198.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="847.2" y="1187.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="850.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (8 samples, 0.05%)</title><rect x="847.9" y="1267.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.9" y="1278.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.03%)</title><rect x="847.9" y="1251.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (12 samples, 0.07%)</title><rect x="848.4" y="1267.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.4" y="1278.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (6 samples, 0.03%)</title><rect x="848.4" y="1251.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.4" y="1262.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.03%)</title><rect x="848.8" y="1251.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.8" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.03%)</title><rect x="848.8" y="1235.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.8" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.03%)</title><rect x="848.8" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.8" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (270 samples, 1.52%)</title><rect x="849.6" y="1267.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (270 samples, 1.52%)</title><rect x="849.6" y="1251.0" width="18.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.6" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (269 samples, 1.52%)</title><rect x="849.7" y="1235.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.7" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (143 samples, 0.81%)</title><rect x="849.8" y="1219.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.8" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (137 samples, 0.77%)</title><rect x="850.2" y="1203.0" width="9.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="853.2" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 0.57%)</title><rect x="852.6" y="1187.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.6" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (100 samples, 0.56%)</title><rect x="852.7" y="1171.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.7" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (90 samples, 0.51%)</title><rect x="853.3" y="1155.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="856.3" y="1166.0"></text>
</g>
<g>
<title>do_epoll_wait (90 samples, 0.51%)</title><rect x="853.3" y="1139.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.3" y="1150.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.03%)</title><rect x="853.4" y="1123.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="856.4" y="1134.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="853.4" y="1107.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="856.4" y="1118.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="853.4" y="1091.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.4" y="1102.0"></text>
</g>
<g>
<title>ep_poll (81 samples, 0.46%)</title><rect x="853.8" y="1123.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.8" y="1134.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (58 samples, 0.33%)</title><rect x="854.0" y="1107.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="857.0" y="1118.0"></text>
</g>
<g>
<title>ep_send_events_proc (54 samples, 0.30%)</title><rect x="854.3" y="1091.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.3" y="1102.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (37 samples, 0.21%)</title><rect x="855.3" y="1075.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="858.3" y="1086.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.15%)</title><rect x="856.0" y="1059.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="859.0" y="1070.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.05%)</title><rect x="856.9" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.9" y="1054.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.02%)</title><rect x="857.5" y="1043.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="860.5" y="1054.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.07%)</title><rect x="857.9" y="1107.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="860.9" y="1118.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.06%)</title><rect x="858.0" y="1091.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="861.0" y="1102.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (6 samples, 0.03%)</title><rect x="858.2" y="1075.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.2" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="858.3" y="1059.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="861.3" y="1070.0"></text>
</g>
<g>
<title>select_estimate_accuracy (6 samples, 0.03%)</title><rect x="858.7" y="1107.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="861.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (95 samples, 0.54%)</title><rect x="859.3" y="1219.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.3" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.07%)</title><rect x="859.6" y="1203.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.6" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.06%)</title><rect x="859.6" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.6" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (70 samples, 0.39%)</title><rect x="860.6" y="1203.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.6" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (67 samples, 0.38%)</title><rect x="860.8" y="1187.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.8" y="1198.0"></text>
</g>
<g>
<title>__read (63 samples, 0.35%)</title><rect x="861.0" y="1171.0" width="4.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="864.0" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.26%)</title><rect x="862.2" y="1155.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="865.2" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.25%)</title><rect x="862.2" y="1139.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="865.2" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_read (40 samples, 0.23%)</title><rect x="862.5" y="1123.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="865.5" y="1134.0"></text>
</g>
<g>
<title>ksys_read (40 samples, 0.23%)</title><rect x="862.5" y="1107.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="865.5" y="1118.0"></text>
</g>
<g>
<title>vfs_read (38 samples, 0.21%)</title><rect x="862.6" y="1091.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.6" y="1102.0"></text>
</g>
<g>
<title>__vfs_read (25 samples, 0.14%)</title><rect x="862.8" y="1075.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.8" y="1086.0"></text>
</g>
<g>
<title>new_sync_read (25 samples, 0.14%)</title><rect x="862.8" y="1059.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="865.8" y="1070.0"></text>
</g>
<g>
<title>pipe_read (18 samples, 0.10%)</title><rect x="863.3" y="1043.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="866.3" y="1054.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.04%)</title><rect x="863.4" y="1027.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="866.4" y="1038.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.04%)</title><rect x="863.4" y="1011.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="866.4" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="863.4" y="995.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="866.4" y="1006.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.02%)</title><rect x="864.2" y="1027.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.2" y="1038.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.06%)</title><rect x="864.5" y="1075.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="867.5" y="1086.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.04%)</title><rect x="864.7" y="1059.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.03%)</title><rect x="865.2" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.2" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.02%)</title><rect x="865.2" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.2" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.02%)</title><rect x="865.2" y="1171.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.2" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.02%)</title><rect x="865.2" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="868.2" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (5 samples, 0.03%)</title><rect x="865.6" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.6" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (11 samples, 0.06%)</title><rect x="866.0" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.0" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (10 samples, 0.06%)</title><rect x="866.0" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.04%)</title><rect x="866.0" y="1187.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.03%)</title><rect x="866.2" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.2" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (11 samples, 0.06%)</title><rect x="866.8" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.8" y="1230.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.05%)</title><rect x="866.9" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.9" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.02%)</title><rect x="867.1" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="870.1" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (62 samples, 0.35%)</title><rect x="867.6" y="1267.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="870.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (61 samples, 0.34%)</title><rect x="867.6" y="1251.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.6" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (59 samples, 0.33%)</title><rect x="867.8" y="1235.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (38 samples, 0.21%)</title><rect x="867.8" y="1219.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.8" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (37 samples, 0.21%)</title><rect x="867.9" y="1203.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="870.9" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.15%)</title><rect x="868.6" y="1187.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.6" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.15%)</title><rect x="868.6" y="1171.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.6" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (24 samples, 0.14%)</title><rect x="868.8" y="1155.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="871.8" y="1166.0"></text>
</g>
<g>
<title>do_epoll_wait (24 samples, 0.14%)</title><rect x="868.8" y="1139.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="871.8" y="1150.0"></text>
</g>
<g>
<title>ep_poll (21 samples, 0.12%)</title><rect x="869.0" y="1123.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="872.0" y="1134.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (19 samples, 0.11%)</title><rect x="869.1" y="1107.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.1" y="1118.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.10%)</title><rect x="869.2" y="1091.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.2" y="1102.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (16 samples, 0.09%)</title><rect x="869.2" y="1075.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="872.2" y="1086.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.07%)</title><rect x="869.4" y="1059.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="872.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (18 samples, 0.10%)</title><rect x="870.4" y="1219.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.4" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (8 samples, 0.05%)</title><rect x="870.6" y="1203.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.6" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (8 samples, 0.05%)</title><rect x="870.6" y="1187.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.6" y="1198.0"></text>
</g>
<g>
<title>__read (8 samples, 0.05%)</title><rect x="870.6" y="1171.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="873.6" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="870.9" y="1155.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="873.9" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.03%)</title><rect x="871.1" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.1" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (4 samples, 0.02%)</title><rect x="871.3" y="1187.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.3" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (4 samples, 0.02%)</title><rect x="871.3" y="1171.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.3" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (4 samples, 0.02%)</title><rect x="871.3" y="1155.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.3" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (7 samples, 0.04%)</title><rect x="871.9" y="1267.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.9" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (5 samples, 0.03%)</title><rect x="872.0" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.0" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (4 samples, 0.02%)</title><rect x="872.1" y="1235.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.1" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (9 samples, 0.05%)</title><rect x="872.3" y="1267.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.3" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.05%)</title><rect x="872.3" y="1251.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.3" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.03%)</title><rect x="872.3" y="1235.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.3" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="872.3" y="1219.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.3" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="872.3" y="1203.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,192 samples, 12.35%)</title><rect x="873.1" y="1283.0" width="145.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.1" y="1294.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (12 samples, 0.07%)</title><rect x="875.3" y="1267.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.3" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (11 samples, 0.06%)</title><rect x="875.3" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.3" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (500 samples, 2.82%)</title><rect x="876.3" y="1267.0" width="33.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.3" y="1278.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (22 samples, 0.12%)</title><rect x="876.9" y="1251.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="879.9" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (12 samples, 0.07%)</title><rect x="877.4" y="1235.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (470 samples, 2.65%)</title><rect x="878.3" y="1251.0" width="31.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.3" y="1262.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (16 samples, 0.09%)</title><rect x="879.6" y="1235.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="882.6" y="1246.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.03%)</title><rect x="880.7" y="1235.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="883.7" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 0.08%)</title><rect x="881.1" y="1235.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="884.1" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.02%)</title><rect x="881.8" y="1219.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="884.8" y="1230.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.02%)</title><rect x="881.8" y="1203.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="884.8" y="1214.0"></text>
</g>
<g>
<title>epoll_wait (410 samples, 2.31%)</title><rect x="882.1" y="1235.0" width="27.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="885.1" y="1246.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (282 samples, 1.59%)</title><rect x="890.6" y="1219.0" width="18.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.6" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (278 samples, 1.57%)</title><rect x="890.9" y="1203.0" width="18.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="893.9" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (249 samples, 1.40%)</title><rect x="892.8" y="1187.0" width="16.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="895.8" y="1198.0"></text>
</g>
<g>
<title>do_epoll_wait (249 samples, 1.40%)</title><rect x="892.8" y="1171.0" width="16.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.8" y="1182.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.05%)</title><rect x="893.1" y="1155.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="896.1" y="1166.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="893.1" y="1139.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="896.1" y="1150.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="893.1" y="1123.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="896.1" y="1134.0"></text>
</g>
<g>
<title>ep_poll (226 samples, 1.27%)</title><rect x="893.8" y="1155.0" width="15.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="896.8" y="1166.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (164 samples, 0.92%)</title><rect x="895.0" y="1139.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.0" y="1150.0"></text>
</g>
<g>
<title>ep_send_events_proc (139 samples, 0.78%)</title><rect x="896.1" y="1123.0" width="9.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="899.1" y="1134.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (102 samples, 0.57%)</title><rect x="898.1" y="1107.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="901.1" y="1118.0"></text>
</g>
<g>
<title>sock_poll (76 samples, 0.43%)</title><rect x="899.6" y="1091.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="902.6" y="1102.0"></text>
</g>
<g>
<title>tcp_poll (15 samples, 0.08%)</title><rect x="902.7" y="1075.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="905.7" y="1086.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (14 samples, 0.08%)</title><rect x="903.7" y="1075.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="906.7" y="1086.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.04%)</title><rect x="904.9" y="1107.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.9" y="1118.0"></text>
</g>
<g>
<title>mutex_lock (9 samples, 0.05%)</title><rect x="905.3" y="1123.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="908.3" y="1134.0"></text>
</g>
<g>
<title>mutex_unlock (8 samples, 0.05%)</title><rect x="906.1" y="1139.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="909.1" y="1150.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (30 samples, 0.17%)</title><rect x="906.7" y="1139.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="909.7" y="1150.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (28 samples, 0.16%)</title><rect x="906.8" y="1123.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="909.8" y="1134.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.11%)</title><rect x="907.4" y="1107.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="910.4" y="1118.0"></text>
</g>
<g>
<title>__sched_text_start (16 samples, 0.09%)</title><rect x="907.6" y="1091.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="910.6" y="1102.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.03%)</title><rect x="908.2" y="1075.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="911.2" y="1086.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.05%)</title><rect x="908.8" y="1155.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="911.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,643 samples, 9.26%)</title><rect x="909.6" y="1267.0" width="109.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.6" y="1278.0">one/nio/net/S..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (10 samples, 0.06%)</title><rect x="910.4" y="1251.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="913.4" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.04%)</title><rect x="910.6" y="1235.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="913.6" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.03%)</title><rect x="910.6" y="1219.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="913.6" y="1230.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="910.7" y="1203.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="913.7" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="911.2" y="1251.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="914.2" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,606 samples, 9.05%)</title><rect x="911.6" y="1251.0" width="106.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.6" y="1262.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (889 samples, 5.01%)</title><rect x="912.2" y="1235.0" width="59.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.2" y="1246.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (725 samples, 4.08%)</title><rect x="915.2" y="1219.0" width="48.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.2" y="1230.0">one/..</text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="916.2" y="1203.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="919.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (703 samples, 3.96%)</title><rect x="916.6" y="1203.0" width="46.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.6" y="1214.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (598 samples, 3.37%)</title><rect x="917.2" y="1187.0" width="39.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.2" y="1198.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 0.21%)</title><rect x="917.8" y="1171.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.05%)</title><rect x="918.0" y="1155.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.05%)</title><rect x="918.0" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (6 samples, 0.03%)</title><rect x="918.6" y="1155.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.02%)</title><rect x="918.8" y="1139.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.02%)</title><rect x="919.0" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="919.0" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (14 samples, 0.08%)</title><rect x="919.3" y="1155.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="919.8" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="919.8" y="1123.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.02%)</title><rect x="919.9" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (553 samples, 3.12%)</title><rect x="920.2" y="1171.0" width="36.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.2" y="1182.0">ru/..</text>
</g>
<g>
<title>java/util/Set.of (6 samples, 0.03%)</title><rect x="920.8" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.8" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (362 samples, 2.04%)</title><rect x="921.3" y="1155.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.3" y="1166.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.05%)</title><rect x="921.3" y="1139.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.05%)</title><rect x="921.3" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/363603817.get$Lambda (8 samples, 0.05%)</title><rect x="921.3" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (354 samples, 1.99%)</title><rect x="921.8" y="1139.0" width="23.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.8" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (349 samples, 1.97%)</title><rect x="922.0" y="1123.0" width="23.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.0" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (5 samples, 0.03%)</title><rect x="922.2" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (320 samples, 1.80%)</title><rect x="922.5" y="1107.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.5" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.03%)</title><rect x="922.5" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="925.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.02%)</title><rect x="922.9" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.02%)</title><rect x="922.9" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (310 samples, 1.75%)</title><rect x="923.2" y="1091.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="926.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (310 samples, 1.75%)</title><rect x="923.2" y="1075.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (310 samples, 1.75%)</title><rect x="923.2" y="1059.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (310 samples, 1.75%)</title><rect x="923.2" y="1043.0" width="20.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (310 samples, 1.75%)</title><rect x="923.2" y="1027.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="926.2" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (40 samples, 0.23%)</title><rect x="923.7" y="1011.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="926.7" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.03%)</title><rect x="924.6" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="927.6" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.03%)</title><rect x="925.1" y="995.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="928.1" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.04%)</title><rect x="925.9" y="995.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="928.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (253 samples, 1.43%)</title><rect x="926.5" y="1011.0" width="16.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="929.5" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (219 samples, 1.23%)</title><rect x="928.8" y="995.0" width="14.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="931.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (217 samples, 1.22%)</title><rect x="928.9" y="979.0" width="14.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="931.9" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (206 samples, 1.16%)</title><rect x="929.7" y="963.0" width="13.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="932.7" y="974.0"></text>
</g>
<g>
<title>do_futex (205 samples, 1.15%)</title><rect x="929.7" y="947.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="932.7" y="958.0"></text>
</g>
<g>
<title>futex_wake (200 samples, 1.13%)</title><rect x="929.9" y="931.0" width="13.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="932.9" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (8 samples, 0.05%)</title><rect x="930.9" y="915.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="933.9" y="926.0"></text>
</g>
<g>
<title>wake_up_q (177 samples, 1.00%)</title><rect x="931.4" y="915.0" width="11.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="934.4" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (175 samples, 0.99%)</title><rect x="931.5" y="899.0" width="11.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.5" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (175 samples, 0.99%)</title><rect x="931.5" y="883.0" width="11.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="934.5" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="943.3" y="1011.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="946.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.05%)</title><rect x="943.9" y="1107.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.03%)</title><rect x="944.1" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.03%)</title><rect x="944.1" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.02%)</title><rect x="944.2" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.04%)</title><rect x="944.5" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.04%)</title><rect x="944.5" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.02%)</title><rect x="944.7" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="944.7" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (175 samples, 0.99%)</title><rect x="945.3" y="1155.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.3" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (175 samples, 0.99%)</title><rect x="945.3" y="1139.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.3" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (51 samples, 0.29%)</title><rect x="945.9" y="1123.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (15 samples, 0.08%)</title><rect x="946.7" y="1107.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (15 samples, 0.08%)</title><rect x="946.7" y="1091.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (24 samples, 0.14%)</title><rect x="947.7" y="1107.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (10 samples, 0.06%)</title><rect x="947.8" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="948.2" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="948.2" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (13 samples, 0.07%)</title><rect x="948.5" y="1091.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.5" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (95 samples, 0.54%)</title><rect x="949.3" y="1123.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.3" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (75 samples, 0.42%)</title><rect x="949.8" y="1107.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (30 samples, 0.17%)</title><rect x="950.1" y="1091.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (27 samples, 0.15%)</title><rect x="950.1" y="1075.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.04%)</title><rect x="950.1" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (20 samples, 0.11%)</title><rect x="950.5" y="1059.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (10 samples, 0.06%)</title><rect x="951.2" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.2" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="951.6" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="954.6" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (10 samples, 0.06%)</title><rect x="952.1" y="1091.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (9 samples, 0.05%)</title><rect x="952.1" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="955.1" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (7 samples, 0.04%)</title><rect x="952.3" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="955.3" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (6 samples, 0.03%)</title><rect x="952.7" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.7" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (25 samples, 0.14%)</title><rect x="953.1" y="1091.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="956.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (15 samples, 0.08%)</title><rect x="953.3" y="1075.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.3" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.03%)</title><rect x="953.4" y="1059.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.02%)</title><rect x="953.7" y="1059.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.7" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (5 samples, 0.03%)</title><rect x="954.0" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.0" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (5 samples, 0.03%)</title><rect x="954.3" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (11 samples, 0.06%)</title><rect x="954.8" y="1107.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (7 samples, 0.04%)</title><rect x="955.0" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.0" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.tableSizeFor (4 samples, 0.02%)</title><rect x="955.1" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.1" y="1086.0"></text>
</g>
<g>
<title>java/util/Set.of (20 samples, 0.11%)</title><rect x="955.6" y="1123.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.6" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (15 samples, 0.08%)</title><rect x="956.0" y="1107.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.0" y="1118.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (7 samples, 0.04%)</title><rect x="956.5" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="959.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (6 samples, 0.03%)</title><rect x="956.6" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (6 samples, 0.03%)</title><rect x="956.6" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.6" y="1070.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="957.0" y="1187.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="960.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (64 samples, 0.36%)</title><rect x="957.5" y="1187.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.5" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.get (59 samples, 0.33%)</title><rect x="957.8" y="1171.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.8" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (43 samples, 0.24%)</title><rect x="957.9" y="1155.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.equals (26 samples, 0.15%)</title><rect x="959.0" y="1139.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.coder (10 samples, 0.06%)</title><rect x="959.6" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (5 samples, 0.03%)</title><rect x="960.2" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="963.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (14 samples, 0.08%)</title><rect x="960.8" y="1155.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (11 samples, 0.06%)</title><rect x="961.0" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (11 samples, 0.06%)</title><rect x="961.0" y="1123.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.13%)</title><rect x="961.8" y="1187.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.12%)</title><rect x="961.8" y="1171.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.12%)</title><rect x="961.8" y="1155.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.8" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.02%)</title><rect x="962.8" y="1139.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (45 samples, 0.25%)</title><rect x="963.4" y="1219.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.02%)</title><rect x="964.0" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.13%)</title><rect x="964.3" y="1203.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.12%)</title><rect x="964.4" y="1187.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.4" y="1198.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (5 samples, 0.03%)</title><rect x="965.5" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (8 samples, 0.05%)</title><rect x="965.8" y="1203.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19 samples, 0.11%)</title><rect x="966.4" y="1219.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.04%)</title><rect x="967.0" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.03%)</title><rect x="967.6" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (25 samples, 0.14%)</title><rect x="967.9" y="1219.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.08%)</title><rect x="968.3" y="1203.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.08%)</title><rect x="968.3" y="1187.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.3" y="1198.0"></text>
</g>
<g>
<title>jbyte_arraycopy (7 samples, 0.04%)</title><rect x="968.7" y="1171.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="971.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="969.3" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="969.3" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.14%)</title><rect x="969.7" y="1219.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.14%)</title><rect x="969.7" y="1203.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.7" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="970.3" y="1187.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="973.3" y="1198.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="970.4" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="973.4" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="970.4" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="973.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.02%)</title><rect x="970.9" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (708 samples, 3.99%)</title><rect x="971.3" y="1235.0" width="47.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.3" y="1246.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (698 samples, 3.93%)</title><rect x="971.9" y="1219.0" width="46.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.9" y="1230.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (71 samples, 0.40%)</title><rect x="972.1" y="1203.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="975.1" y="1214.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.03%)</title><rect x="972.5" y="1187.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="975.5" y="1198.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.02%)</title><rect x="972.9" y="1187.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="975.9" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.02%)</title><rect x="973.3" y="1187.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="976.3" y="1198.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (44 samples, 0.25%)</title><rect x="973.6" y="1187.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="976.6" y="1198.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (8 samples, 0.05%)</title><rect x="974.0" y="1171.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="977.0" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.03%)</title><rect x="974.9" y="1171.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="977.9" y="1182.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (19 samples, 0.11%)</title><rect x="975.3" y="1171.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="978.3" y="1182.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.03%)</title><rect x="976.2" y="1155.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="979.2" y="1166.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (5 samples, 0.03%)</title><rect x="976.5" y="1187.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="979.5" y="1198.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.03%)</title><rect x="977.1" y="1203.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="980.1" y="1214.0"></text>
</g>
<g>
<title>recv (613 samples, 3.45%)</title><rect x="977.5" y="1203.0" width="40.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="980.5" y="1214.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (535 samples, 3.01%)</title><rect x="982.6" y="1187.0" width="35.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="985.6" y="1198.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (531 samples, 2.99%)</title><rect x="982.9" y="1171.0" width="35.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="985.9" y="1182.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (504 samples, 2.84%)</title><rect x="984.7" y="1155.0" width="33.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.7" y="1166.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (500 samples, 2.82%)</title><rect x="984.7" y="1139.0" width="33.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="987.7" y="1150.0">__..</text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="985.0" y="1123.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="988.0" y="1134.0"></text>
</g>
<g>
<title>sock_recvmsg (480 samples, 2.70%)</title><rect x="985.4" y="1123.0" width="31.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="988.4" y="1134.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (461 samples, 2.60%)</title><rect x="985.6" y="1107.0" width="30.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="988.6" y="1118.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (454 samples, 2.56%)</title><rect x="986.0" y="1091.0" width="30.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="989.0" y="1102.0">tc..</text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.13%)</title><rect x="987.6" y="1075.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="990.6" y="1086.0"></text>
</g>
<g>
<title>skb_release_all (23 samples, 0.13%)</title><rect x="987.6" y="1059.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="990.6" y="1070.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.03%)</title><rect x="987.7" y="1043.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="990.7" y="1054.0"></text>
</g>
<g>
<title>skb_release_head_state (12 samples, 0.07%)</title><rect x="988.0" y="1043.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.0" y="1054.0"></text>
</g>
<g>
<title>dst_release (12 samples, 0.07%)</title><rect x="988.0" y="1027.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="991.0" y="1038.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.03%)</title><rect x="988.8" y="1043.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="991.8" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.04%)</title><rect x="989.6" y="1075.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.6" y="1086.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.05%)</title><rect x="990.3" y="1075.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="993.3" y="1086.0"></text>
</g>
<g>
<title>__release_sock (5 samples, 0.03%)</title><rect x="990.6" y="1059.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="993.6" y="1070.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.03%)</title><rect x="990.6" y="1043.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="993.6" y="1054.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.03%)</title><rect x="990.6" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="993.6" y="1038.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (26 samples, 0.15%)</title><rect x="990.9" y="1075.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="993.9" y="1086.0"></text>
</g>
<g>
<title>__skb_datagram_iter (25 samples, 0.14%)</title><rect x="991.0" y="1059.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="994.0" y="1070.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.11%)</title><rect x="991.3" y="1043.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="994.3" y="1054.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.05%)</title><rect x="991.3" y="1027.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.3" y="1038.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.04%)</title><rect x="991.4" y="1011.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.4" y="1022.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.06%)</title><rect x="991.9" y="1027.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.9" y="1038.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.05%)</title><rect x="991.9" y="1011.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="994.9" y="1022.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (338 samples, 1.90%)</title><rect x="992.7" y="1075.0" width="22.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="995.7" y="1086.0">t..</text>
</g>
<g>
<title>tcp_send_ack (332 samples, 1.87%)</title><rect x="993.1" y="1059.0" width="22.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.1" y="1070.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (331 samples, 1.86%)</title><rect x="993.1" y="1043.0" width="22.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="996.1" y="1054.0">_..</text>
</g>
<g>
<title>__alloc_skb (38 samples, 0.21%)</title><rect x="993.3" y="1027.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.3" y="1038.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (15 samples, 0.08%)</title><rect x="993.7" y="1011.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.7" y="1022.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.06%)</title><rect x="993.7" y="995.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.7" y="1006.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.05%)</title><rect x="994.7" y="1011.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="997.7" y="1022.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.02%)</title><rect x="995.3" y="1011.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="998.3" y="1022.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.02%)</title><rect x="995.3" y="995.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.3" y="1006.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (287 samples, 1.62%)</title><rect x="995.8" y="1027.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="998.8" y="1038.0"></text>
</g>
<g>
<title>ip_queue_xmit (271 samples, 1.53%)</title><rect x="996.6" y="1011.0" width="18.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="999.6" y="1022.0"></text>
</g>
<g>
<title>__ip_queue_xmit (268 samples, 1.51%)</title><rect x="996.6" y="995.0" width="17.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="999.6" y="1006.0"></text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.03%)</title><rect x="997.0" y="979.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1000.0" y="990.0"></text>
</g>
<g>
<title>ip_local_out (252 samples, 1.42%)</title><rect x="997.4" y="979.0" width="16.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1000.4" y="990.0"></text>
</g>
<g>
<title>ip_output (246 samples, 1.39%)</title><rect x="997.8" y="963.0" width="16.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.8" y="974.0"></text>
</g>
<g>
<title>ip_finish_output (241 samples, 1.36%)</title><rect x="998.1" y="947.0" width="16.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1001.1" y="958.0"></text>
</g>
<g>
<title>__ip_finish_output (238 samples, 1.34%)</title><rect x="998.3" y="931.0" width="15.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.3" y="942.0"></text>
</g>
<g>
<title>ip_finish_output2 (233 samples, 1.31%)</title><rect x="998.5" y="915.0" width="15.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.5" y="926.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (187 samples, 1.05%)</title><rect x="999.0" y="899.0" width="12.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1002.0" y="910.0"></text>
</g>
<g>
<title>do_softirq.part.0 (186 samples, 1.05%)</title><rect x="999.1" y="883.0" width="12.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1002.1" y="894.0"></text>
</g>
<g>
<title>do_softirq_own_stack (186 samples, 1.05%)</title><rect x="999.1" y="867.0" width="12.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.1" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (186 samples, 1.05%)</title><rect x="999.1" y="851.0" width="12.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.1" y="862.0"></text>
</g>
<g>
<title>net_rx_action (178 samples, 1.00%)</title><rect x="999.5" y="835.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.5" y="846.0"></text>
</g>
<g>
<title>process_backlog (172 samples, 0.97%)</title><rect x="999.9" y="819.0" width="11.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.9" y="830.0"></text>
</g>
<g>
<title>__netif_receive_skb (168 samples, 0.95%)</title><rect x="1000.1" y="803.0" width="11.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.1" y="814.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (165 samples, 0.93%)</title><rect x="1000.2" y="787.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.2" y="798.0"></text>
</g>
<g>
<title>ip_rcv (158 samples, 0.89%)</title><rect x="1000.5" y="771.0" width="10.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1003.5" y="782.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.02%)</title><rect x="1000.5" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.5" y="766.0"></text>
</g>
<g>
<title>ip_rcv_finish (153 samples, 0.86%)</title><rect x="1000.8" y="755.0" width="10.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.8" y="766.0"></text>
</g>
<g>
<title>ip_local_deliver (152 samples, 0.86%)</title><rect x="1000.8" y="739.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.8" y="750.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (150 samples, 0.85%)</title><rect x="1000.9" y="723.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1003.9" y="734.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (148 samples, 0.83%)</title><rect x="1000.9" y="707.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1003.9" y="718.0"></text>
</g>
<g>
<title>tcp_v4_rcv (139 samples, 0.78%)</title><rect x="1001.5" y="691.0" width="9.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1004.5" y="702.0"></text>
</g>
<g>
<title>__inet_lookup_established (11 samples, 0.06%)</title><rect x="1001.6" y="675.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1004.6" y="686.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.02%)</title><rect x="1002.3" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.3" y="686.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (121 samples, 0.68%)</title><rect x="1002.6" y="675.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1005.6" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_established (111 samples, 0.63%)</title><rect x="1003.1" y="659.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1006.1" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.05%)</title><rect x="1003.3" y="643.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1006.3" y="654.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.03%)</title><rect x="1003.3" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.3" y="638.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.03%)</title><rect x="1003.3" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1006.3" y="622.0"></text>
</g>
<g>
<title>tcp_ack (85 samples, 0.48%)</title><rect x="1003.8" y="643.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1006.8" y="654.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (55 samples, 0.31%)</title><rect x="1005.4" y="627.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.4" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (34 samples, 0.19%)</title><rect x="1006.1" y="611.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1009.1" y="622.0"></text>
</g>
<g>
<title>kfree_skbmem (15 samples, 0.08%)</title><rect x="1006.1" y="595.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1009.1" y="606.0"></text>
</g>
<g>
<title>kmem_cache_free (15 samples, 0.08%)</title><rect x="1006.1" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1009.1" y="590.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="1006.8" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.8" y="574.0"></text>
</g>
<g>
<title>skb_release_all (19 samples, 0.11%)</title><rect x="1007.1" y="595.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1010.1" y="606.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.10%)</title><rect x="1007.2" y="579.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1010.2" y="590.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.05%)</title><rect x="1007.8" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.8" y="574.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.05%)</title><rect x="1007.8" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1010.8" y="558.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.03%)</title><rect x="1007.9" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1010.9" y="542.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.03%)</title><rect x="1008.6" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1011.6" y="622.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.04%)</title><rect x="1009.6" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.6" y="654.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.03%)</title><rect x="1009.7" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.7" y="638.0"></text>
</g>
<g>
<title>dev_queue_xmit (38 samples, 0.21%)</title><rect x="1011.4" y="899.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1014.4" y="910.0"></text>
</g>
<g>
<title>__dev_queue_xmit (35 samples, 0.20%)</title><rect x="1011.4" y="883.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1014.4" y="894.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13 samples, 0.07%)</title><rect x="1012.0" y="867.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1015.0" y="878.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.03%)</title><rect x="1012.2" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.2" y="862.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.02%)</title><rect x="1012.6" y="851.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1015.6" y="862.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.05%)</title><rect x="1013.1" y="867.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1016.1" y="878.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.06%)</title><rect x="1015.2" y="1075.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.2" y="1086.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.05%)</title><rect x="1015.3" y="1059.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.3" y="1070.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.03%)</title><rect x="1015.5" y="1043.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.5" y="1054.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.02%)</title><rect x="1015.9" y="1075.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1018.9" y="1086.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.09%)</title><rect x="1016.2" y="1107.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1019.2" y="1118.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (13 samples, 0.07%)</title><rect x="1016.4" y="1091.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1019.4" y="1102.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 0.07%)</title><rect x="1016.5" y="1075.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1019.5" y="1086.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.06%)</title><rect x="1017.3" y="1123.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.3" y="1134.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.04%)</title><rect x="1017.3" y="1107.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1020.3" y="1118.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.04%)</title><rect x="1017.3" y="1091.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1020.3" y="1102.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.04%)</title><rect x="1017.3" y="1075.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1020.3" y="1086.0"></text>
</g>
<g>
<title>start_thread (2,572 samples, 14.49%)</title><rect x="1019.0" y="1283.0" width="171.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1022.0" y="1294.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2,572 samples, 14.49%)</title><rect x="1019.0" y="1267.0" width="171.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1022.0" y="1278.0">thread_native_entry(Th..</text>
</g>
<g>
<title>Thread::call_run() (2,572 samples, 14.49%)</title><rect x="1019.0" y="1251.0" width="171.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1022.0" y="1262.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (246 samples, 1.39%)</title><rect x="1019.0" y="1235.0" width="16.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1022.0" y="1246.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (240 samples, 1.35%)</title><rect x="1019.0" y="1219.0" width="16.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1022.0" y="1230.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (106 samples, 0.60%)</title><rect x="1019.0" y="1203.0" width="7.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1022.0" y="1214.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (44 samples, 0.25%)</title><rect x="1019.2" y="1187.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1022.2" y="1198.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (21 samples, 0.12%)</title><rect x="1020.1" y="1171.0" width="1.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1023.1" y="1182.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.05%)</title><rect x="1021.5" y="1171.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1024.5" y="1182.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.02%)</title><rect x="1021.9" y="1155.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1024.9" y="1166.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (6 samples, 0.03%)</title><rect x="1022.1" y="1187.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1025.1" y="1198.0"></text>
</g>
<g>
<title>SpinPause (53 samples, 0.30%)</title><rect x="1022.5" y="1187.0" width="3.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1025.5" y="1198.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (117 samples, 0.66%)</title><rect x="1026.1" y="1203.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1029.1" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (117 samples, 0.66%)</title><rect x="1026.1" y="1187.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1029.1" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (117 samples, 0.66%)</title><rect x="1026.1" y="1171.0" width="7.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1029.1" y="1182.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (117 samples, 0.66%)</title><rect x="1026.1" y="1155.0" width="7.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1029.1" y="1166.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (115 samples, 0.65%)</title><rect x="1026.1" y="1139.0" width="7.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1029.1" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (71 samples, 0.40%)</title><rect x="1026.1" y="1123.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1029.1" y="1134.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (29 samples, 0.16%)</title><rect x="1027.1" y="1107.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1030.1" y="1118.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (27 samples, 0.15%)</title><rect x="1029.0" y="1107.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1032.0" y="1118.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (12 samples, 0.07%)</title><rect x="1030.0" y="1091.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1033.0" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (44 samples, 0.25%)</title><rect x="1030.8" y="1123.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1033.8" y="1134.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (40 samples, 0.23%)</title><rect x="1030.8" y="1107.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1033.8" y="1118.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (6 samples, 0.03%)</title><rect x="1031.4" y="1091.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1034.4" y="1102.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (17 samples, 0.10%)</title><rect x="1032.0" y="1091.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1035.0" y="1102.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (5 samples, 0.03%)</title><rect x="1033.2" y="1091.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1036.2" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.03%)</title><rect x="1033.8" y="1203.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1036.8" y="1214.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (5 samples, 0.03%)</title><rect x="1033.8" y="1187.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1036.8" y="1198.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.03%)</title><rect x="1033.8" y="1171.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1036.8" y="1182.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (11 samples, 0.06%)</title><rect x="1034.2" y="1203.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1037.2" y="1214.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (9 samples, 0.05%)</title><rect x="1034.2" y="1187.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1037.2" y="1198.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="1034.2" y="1171.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1037.2" y="1182.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="1034.2" y="1155.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1037.2" y="1166.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="1035.0" y="1219.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.0" y="1230.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (5 samples, 0.03%)</title><rect x="1035.0" y="1203.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.0" y="1214.0"></text>
</g>
<g>
<title>JavaThread::run() (2,312 samples, 13.03%)</title><rect x="1035.4" y="1235.0" width="153.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1038.4" y="1246.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2,293 samples, 12.92%)</title><rect x="1035.4" y="1219.0" width="152.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1038.4" y="1230.0">CompileBroker::comp..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2,282 samples, 12.86%)</title><rect x="1035.4" y="1203.0" width="151.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1038.4" y="1214.0">CompileBroker::invo..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2,200 samples, 12.40%)</title><rect x="1035.4" y="1187.0" width="146.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1038.4" y="1198.0">C2Compiler::compil..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2,200 samples, 12.40%)</title><rect x="1035.4" y="1171.0" width="146.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.4" y="1182.0">Compile::Compile(c..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (6 samples, 0.03%)</title><rect x="1035.4" y="1155.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1038.4" y="1166.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (6 samples, 0.03%)</title><rect x="1035.4" y="1139.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1038.4" y="1150.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (6 samples, 0.03%)</title><rect x="1035.4" y="1123.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1038.4" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (6 samples, 0.03%)</title><rect x="1035.4" y="1107.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.4" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (6 samples, 0.03%)</title><rect x="1035.4" y="1091.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.4" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.03%)</title><rect x="1035.4" y="1075.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1038.4" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.03%)</title><rect x="1035.4" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1038.4" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (5 samples, 0.03%)</title><rect x="1035.5" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.5" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (4 samples, 0.02%)</title><rect x="1035.6" y="1027.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1038.6" y="1038.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.02%)</title><rect x="1035.6" y="1011.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1038.6" y="1022.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1,386 samples, 7.81%)</title><rect x="1035.9" y="1155.0" width="92.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1038.9" y="1166.0">Compile::Co..</text>
</g>
<g>
<title>Compile::Output() (52 samples, 0.29%)</title><rect x="1036.0" y="1139.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1039.0" y="1150.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.03%)</title><rect x="1036.0" y="1123.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1039.0" y="1134.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (31 samples, 0.17%)</title><rect x="1036.4" y="1123.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1039.4" y="1134.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (6 samples, 0.03%)</title><rect x="1038.0" y="1107.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.0" y="1118.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (14 samples, 0.08%)</title><rect x="1038.4" y="1123.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.4" y="1134.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (14 samples, 0.08%)</title><rect x="1038.4" y="1107.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1041.4" y="1118.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (11 samples, 0.06%)</title><rect x="1038.6" y="1091.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1041.6" y="1102.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (20 samples, 0.11%)</title><rect x="1039.5" y="1139.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1042.5" y="1150.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (6 samples, 0.03%)</title><rect x="1040.1" y="1123.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1043.1" y="1134.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (4 samples, 0.02%)</title><rect x="1040.1" y="1107.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.1" y="1118.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (4 samples, 0.02%)</title><rect x="1040.8" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1043.8" y="1150.0"></text>
</g>
<g>
<title>Matcher::match() (107 samples, 0.60%)</title><rect x="1041.1" y="1139.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1044.1" y="1150.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (9 samples, 0.05%)</title><rect x="1041.6" y="1123.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1044.6" y="1134.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (89 samples, 0.50%)</title><rect x="1042.2" y="1123.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1045.2" y="1134.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (21 samples, 0.12%)</title><rect x="1043.1" y="1107.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1046.1" y="1118.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (6 samples, 0.03%)</title><rect x="1044.6" y="1107.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1047.6" y="1118.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.02%)</title><rect x="1044.7" y="1091.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1047.7" y="1102.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (40 samples, 0.23%)</title><rect x="1045.0" y="1107.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1048.0" y="1118.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (15 samples, 0.08%)</title><rect x="1045.8" y="1091.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1048.8" y="1102.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (9 samples, 0.05%)</title><rect x="1046.0" y="1075.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1049.0" y="1086.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (5 samples, 0.03%)</title><rect x="1046.1" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.1" y="1070.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (4 samples, 0.02%)</title><rect x="1046.2" y="1043.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1049.2" y="1054.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (13 samples, 0.07%)</title><rect x="1046.8" y="1091.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1049.8" y="1102.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (7 samples, 0.04%)</title><rect x="1046.9" y="1075.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1049.9" y="1086.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (6 samples, 0.03%)</title><rect x="1046.9" y="1059.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1049.9" y="1070.0"></text>
</g>
<g>
<title>Node::clone() const (4 samples, 0.02%)</title><rect x="1047.7" y="1107.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.7" y="1118.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (7 samples, 0.04%)</title><rect x="1048.3" y="1139.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1051.3" y="1150.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (5 samples, 0.03%)</title><rect x="1048.3" y="1123.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.3" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (5 samples, 0.03%)</title><rect x="1048.7" y="1139.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1051.7" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (5 samples, 0.03%)</title><rect x="1048.7" y="1123.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1051.7" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (131 samples, 0.74%)</title><rect x="1049.1" y="1139.0" width="8.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.1" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (128 samples, 0.72%)</title><rect x="1049.3" y="1123.0" width="8.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1052.3" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (7 samples, 0.04%)</title><rect x="1049.9" y="1107.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1052.9" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (30 samples, 0.17%)</title><rect x="1050.3" y="1107.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.3" y="1118.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (7 samples, 0.04%)</title><rect x="1050.7" y="1091.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1053.7" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (6 samples, 0.03%)</title><rect x="1051.2" y="1091.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1054.2" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (5 samples, 0.03%)</title><rect x="1051.6" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1054.6" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (5 samples, 0.03%)</title><rect x="1051.9" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.9" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (22 samples, 0.12%)</title><rect x="1052.3" y="1107.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.3" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (4 samples, 0.02%)</title><rect x="1052.8" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1055.8" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (4 samples, 0.02%)</title><rect x="1053.1" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.1" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_exit_block_pressure(Block*) (4 samples, 0.02%)</title><rect x="1053.5" y="1091.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.5" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (7 samples, 0.04%)</title><rect x="1053.8" y="1107.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.8" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (14 samples, 0.08%)</title><rect x="1054.2" y="1107.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1057.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (7 samples, 0.04%)</title><rect x="1055.4" y="1107.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1058.4" y="1118.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (5 samples, 0.03%)</title><rect x="1055.5" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.5" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (26 samples, 0.15%)</title><rect x="1055.8" y="1107.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1058.8" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (13 samples, 0.07%)</title><rect x="1056.4" y="1091.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1059.4" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.03%)</title><rect x="1057.0" y="1075.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.0" y="1086.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (4 samples, 0.02%)</title><rect x="1057.3" y="1091.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1060.3" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (5 samples, 0.03%)</title><rect x="1057.8" y="1139.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1060.8" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1,046 samples, 5.89%)</title><rect x="1058.3" y="1139.0" width="69.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.3" y="1150.0">PhaseCh..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.03%)</title><rect x="1058.4" y="1123.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1061.4" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (6 samples, 0.03%)</title><rect x="1058.9" y="1123.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1061.9" y="1134.0"></text>
</g>
<g>
<title>Node::jvms() const (4 samples, 0.02%)</title><rect x="1060.0" y="1123.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1063.0" y="1134.0"></text>
</g>
<g>
<title>Node::rematerialize() const (5 samples, 0.03%)</title><rect x="1060.3" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1063.3" y="1134.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (37 samples, 0.21%)</title><rect x="1060.6" y="1123.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1063.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (67 samples, 0.38%)</title><rect x="1063.1" y="1123.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1066.1" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.05%)</title><rect x="1064.3" y="1107.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1067.3" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (7 samples, 0.04%)</title><rect x="1064.8" y="1107.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1067.8" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (27 samples, 0.15%)</title><rect x="1065.3" y="1107.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1068.3" y="1118.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (4 samples, 0.02%)</title><rect x="1066.0" y="1091.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1069.0" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (10 samples, 0.06%)</title><rect x="1066.4" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1069.4" y="1102.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (5 samples, 0.03%)</title><rect x="1067.1" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.1" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (56 samples, 0.32%)</title><rect x="1067.5" y="1123.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1070.5" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.05%)</title><rect x="1067.9" y="1107.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1070.9" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (43 samples, 0.24%)</title><rect x="1068.4" y="1107.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1071.4" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (19 samples, 0.11%)</title><rect x="1070.0" y="1091.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1073.0" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (117 samples, 0.66%)</title><rect x="1071.3" y="1123.0" width="7.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1074.3" y="1134.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (5 samples, 0.03%)</title><rect x="1077.3" y="1107.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1080.3" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (5 samples, 0.03%)</title><rect x="1078.2" y="1107.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1081.2" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (222 samples, 1.25%)</title><rect x="1079.2" y="1123.0" width="14.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1082.2" y="1134.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (12 samples, 0.07%)</title><rect x="1081.4" y="1107.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1084.4" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (9 samples, 0.05%)</title><rect x="1082.2" y="1107.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1085.2" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (18 samples, 0.10%)</title><rect x="1083.2" y="1107.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.2" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (4 samples, 0.02%)</title><rect x="1084.4" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1087.4" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (86 samples, 0.48%)</title><rect x="1084.7" y="1107.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1087.7" y="1118.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.03%)</title><rect x="1088.2" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1091.2" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (28 samples, 0.16%)</title><rect x="1088.5" y="1091.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1091.5" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (42 samples, 0.24%)</title><rect x="1090.4" y="1107.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1093.4" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.03%)</title><rect x="1091.5" y="1091.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1094.5" y="1102.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.02%)</title><rect x="1091.9" y="1091.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1094.9" y="1102.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (15 samples, 0.08%)</title><rect x="1092.1" y="1091.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1095.1" y="1102.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (5 samples, 0.03%)</title><rect x="1093.3" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1096.3" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (11 samples, 0.06%)</title><rect x="1093.9" y="1123.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.9" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (6 samples, 0.03%)</title><rect x="1094.3" y="1107.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1097.3" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (5 samples, 0.03%)</title><rect x="1094.7" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1097.7" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (4 samples, 0.02%)</title><rect x="1095.4" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.4" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (100 samples, 0.56%)</title><rect x="1095.7" y="1123.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1098.7" y="1134.0"></text>
</g>
<g>
<title>RegMask::Size() const (33 samples, 0.19%)</title><rect x="1098.9" y="1107.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1101.9" y="1118.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (7 samples, 0.04%)</title><rect x="1101.1" y="1107.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1104.1" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (19 samples, 0.11%)</title><rect x="1102.3" y="1123.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.3" y="1134.0"></text>
</g>
<g>
<title>RegMask::Size() const (6 samples, 0.03%)</title><rect x="1102.9" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1105.9" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (13 samples, 0.07%)</title><rect x="1103.6" y="1123.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (106 samples, 0.60%)</title><rect x="1104.4" y="1123.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.4" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (52 samples, 0.29%)</title><rect x="1107.3" y="1107.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1110.3" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (4 samples, 0.02%)</title><rect x="1110.4" y="1091.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1113.4" y="1102.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (10 samples, 0.06%)</title><rect x="1110.8" y="1107.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1113.8" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (4 samples, 0.02%)</title><rect x="1111.5" y="1123.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1114.5" y="1134.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (36 samples, 0.20%)</title><rect x="1111.7" y="1123.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.7" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (5 samples, 0.03%)</title><rect x="1111.9" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.9" y="1118.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (27 samples, 0.15%)</title><rect x="1112.2" y="1107.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1115.2" y="1118.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (7 samples, 0.04%)</title><rect x="1112.3" y="1091.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.3" y="1102.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (11 samples, 0.06%)</title><rect x="1112.9" y="1091.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (30 samples, 0.17%)</title><rect x="1114.1" y="1123.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.1" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (18 samples, 0.10%)</title><rect x="1114.9" y="1107.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.9" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (28 samples, 0.16%)</title><rect x="1116.1" y="1123.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1119.1" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (13 samples, 0.07%)</title><rect x="1117.1" y="1107.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1120.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (13 samples, 0.07%)</title><rect x="1118.0" y="1123.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.0" y="1134.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (10 samples, 0.06%)</title><rect x="1118.2" y="1107.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1121.2" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (120 samples, 0.68%)</title><rect x="1118.9" y="1123.0" width="7.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1121.9" y="1134.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (5 samples, 0.03%)</title><rect x="1123.1" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1126.1" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (51 samples, 0.29%)</title><rect x="1123.4" y="1107.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.4" y="1118.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.03%)</title><rect x="1125.7" y="1091.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1128.7" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.05%)</title><rect x="1126.2" y="1091.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.2" y="1102.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (5 samples, 0.03%)</title><rect x="1127.2" y="1123.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1130.2" y="1134.0"></text>
</g>
<g>
<title>Compile::Optimize() (578 samples, 3.26%)</title><rect x="1128.0" y="1155.0" width="38.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.0" y="1166.0">Com..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (9 samples, 0.05%)</title><rect x="1128.2" y="1139.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.2" y="1150.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (8 samples, 0.05%)</title><rect x="1128.2" y="1123.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.2" y="1134.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (11 samples, 0.06%)</title><rect x="1128.8" y="1139.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.8" y="1150.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (8 samples, 0.05%)</title><rect x="1128.8" y="1123.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.8" y="1134.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (4 samples, 0.02%)</title><rect x="1128.8" y="1107.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.8" y="1118.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.02%)</title><rect x="1129.0" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.0" y="1118.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (133 samples, 0.75%)</title><rect x="1129.5" y="1139.0" width="8.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.5" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (133 samples, 0.75%)</title><rect x="1129.5" y="1123.0" width="8.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (11 samples, 0.06%)</title><rect x="1130.0" y="1107.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1133.0" y="1118.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (5 samples, 0.03%)</title><rect x="1130.4" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1133.4" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (17 samples, 0.10%)</title><rect x="1130.8" y="1107.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.8" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (5 samples, 0.03%)</title><rect x="1131.5" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.5" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (51 samples, 0.29%)</title><rect x="1131.9" y="1107.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.9" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (33 samples, 0.19%)</title><rect x="1133.1" y="1091.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (24 samples, 0.14%)</title><rect x="1133.6" y="1075.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.6" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (8 samples, 0.05%)</title><rect x="1133.9" y="1059.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (7 samples, 0.04%)</title><rect x="1134.0" y="1043.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (12 samples, 0.07%)</title><rect x="1134.4" y="1059.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (4 samples, 0.02%)</title><rect x="1135.3" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (29 samples, 0.16%)</title><rect x="1135.6" y="1107.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.6" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (4 samples, 0.02%)</title><rect x="1136.1" y="1091.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (16 samples, 0.09%)</title><rect x="1136.4" y="1091.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.4" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (5 samples, 0.03%)</title><rect x="1136.7" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.7" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (4 samples, 0.02%)</title><rect x="1137.0" y="1075.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1140.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 0.05%)</title><rect x="1137.5" y="1107.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.5" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.05%)</title><rect x="1137.5" y="1091.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.5" y="1102.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.258] (18 samples, 0.10%)</title><rect x="1138.3" y="1139.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.3" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (11 samples, 0.06%)</title><rect x="1138.5" y="1123.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (11 samples, 0.06%)</title><rect x="1138.5" y="1107.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.5" y="1118.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (8 samples, 0.05%)</title><rect x="1138.7" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.7" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (8 samples, 0.05%)</title><rect x="1138.7" y="1075.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.7" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.05%)</title><rect x="1138.7" y="1059.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.7" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.05%)</title><rect x="1138.7" y="1043.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.7" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.05%)</title><rect x="1138.7" y="1027.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.7" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.05%)</title><rect x="1138.7" y="1011.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.7" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.05%)</title><rect x="1138.7" y="995.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.7" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.05%)</title><rect x="1138.7" y="979.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.7" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1138.7" y="963.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1141.7" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1138.7" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.7" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.03%)</title><rect x="1138.7" y="931.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.7" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1138.7" y="915.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.7" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1138.7" y="899.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.7" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (27 samples, 0.15%)</title><rect x="1139.5" y="1139.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1142.5" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (26 samples, 0.15%)</title><rect x="1139.6" y="1123.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1142.6" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (8 samples, 0.05%)</title><rect x="1140.2" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1143.2" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.271] (5 samples, 0.03%)</title><rect x="1140.2" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.2" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (9 samples, 0.05%)</title><rect x="1140.7" y="1107.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.7" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (5 samples, 0.03%)</title><rect x="1140.9" y="1091.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.9" y="1102.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (20 samples, 0.11%)</title><rect x="1141.5" y="1139.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.5" y="1150.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (9 samples, 0.05%)</title><rect x="1142.8" y="1139.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.8" y="1150.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (9 samples, 0.05%)</title><rect x="1142.8" y="1123.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1145.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (173 samples, 0.97%)</title><rect x="1143.4" y="1139.0" width="11.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.4" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.02%)</title><rect x="1143.5" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.5" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (8 samples, 0.05%)</title><rect x="1143.8" y="1123.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1146.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (5 samples, 0.03%)</title><rect x="1144.0" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (23 samples, 0.13%)</title><rect x="1144.8" y="1123.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.8" y="1134.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (8 samples, 0.05%)</title><rect x="1145.7" y="1107.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.7" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (17 samples, 0.10%)</title><rect x="1146.3" y="1123.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.3" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (4 samples, 0.02%)</title><rect x="1147.1" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (73 samples, 0.41%)</title><rect x="1147.5" y="1123.0" width="4.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (44 samples, 0.25%)</title><rect x="1149.3" y="1107.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (25 samples, 0.14%)</title><rect x="1150.4" y="1091.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.4" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (7 samples, 0.04%)</title><rect x="1150.7" y="1075.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.7" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (6 samples, 0.03%)</title><rect x="1150.8" y="1059.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.8" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (11 samples, 0.06%)</title><rect x="1151.3" y="1075.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (9 samples, 0.05%)</title><rect x="1152.3" y="1123.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.3" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (15 samples, 0.08%)</title><rect x="1153.0" y="1123.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.0" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (4 samples, 0.02%)</title><rect x="1153.4" y="1107.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.4" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (6 samples, 0.03%)</title><rect x="1153.6" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.6" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (12 samples, 0.07%)</title><rect x="1154.1" y="1123.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.1" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (10 samples, 0.06%)</title><rect x="1154.2" y="1107.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (4 samples, 0.02%)</title><rect x="1154.9" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.9" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (141 samples, 0.79%)</title><rect x="1155.2" y="1139.0" width="9.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.2" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (137 samples, 0.77%)</title><rect x="1155.4" y="1123.0" width="9.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.4" y="1134.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (8 samples, 0.05%)</title><rect x="1156.5" y="1107.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.5" y="1118.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (24 samples, 0.14%)</title><rect x="1157.0" y="1107.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.0" y="1118.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (5 samples, 0.03%)</title><rect x="1157.2" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.2" y="1102.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (17 samples, 0.10%)</title><rect x="1157.5" y="1091.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.5" y="1102.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (15 samples, 0.08%)</title><rect x="1157.5" y="1075.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.5" y="1086.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (15 samples, 0.08%)</title><rect x="1157.5" y="1059.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (10 samples, 0.06%)</title><rect x="1159.0" y="1107.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (4 samples, 0.02%)</title><rect x="1159.4" y="1091.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.4" y="1102.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (6 samples, 0.03%)</title><rect x="1159.6" y="1107.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.6" y="1118.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (4 samples, 0.02%)</title><rect x="1159.8" y="1091.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.8" y="1102.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (8 samples, 0.05%)</title><rect x="1160.1" y="1107.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.1" y="1118.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (53 samples, 0.30%)</title><rect x="1160.7" y="1107.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.7" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (53 samples, 0.30%)</title><rect x="1160.7" y="1091.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.7" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (53 samples, 0.30%)</title><rect x="1160.7" y="1075.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.7" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (51 samples, 0.29%)</title><rect x="1160.7" y="1059.0" width="3.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.7" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (44 samples, 0.25%)</title><rect x="1160.7" y="1043.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.7" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (42 samples, 0.24%)</title><rect x="1160.7" y="1027.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.7" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (40 samples, 0.23%)</title><rect x="1160.7" y="1011.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.7" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (38 samples, 0.21%)</title><rect x="1160.7" y="995.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.7" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (36 samples, 0.20%)</title><rect x="1160.7" y="979.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.7" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (32 samples, 0.18%)</title><rect x="1160.7" y="963.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.7" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (30 samples, 0.17%)</title><rect x="1160.7" y="947.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.7" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (29 samples, 0.16%)</title><rect x="1160.7" y="931.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.7" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (28 samples, 0.16%)</title><rect x="1160.7" y="915.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.7" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (28 samples, 0.16%)</title><rect x="1160.7" y="899.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.7" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (28 samples, 0.16%)</title><rect x="1160.7" y="883.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.7" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (26 samples, 0.15%)</title><rect x="1160.7" y="867.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.7" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (24 samples, 0.14%)</title><rect x="1160.7" y="851.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.7" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (20 samples, 0.11%)</title><rect x="1160.7" y="835.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.7" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (20 samples, 0.11%)</title><rect x="1160.7" y="819.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.7" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (17 samples, 0.10%)</title><rect x="1160.7" y="803.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.7" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (13 samples, 0.07%)</title><rect x="1160.7" y="787.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.7" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1160.7" y="771.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.7" y="782.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (5 samples, 0.03%)</title><rect x="1160.9" y="755.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.9" y="766.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (5 samples, 0.03%)</title><rect x="1160.9" y="739.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.9" y="750.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (6 samples, 0.03%)</title><rect x="1161.2" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.2" y="782.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (6 samples, 0.03%)</title><rect x="1161.2" y="755.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.2" y="766.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (4 samples, 0.02%)</title><rect x="1161.6" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.6" y="798.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (4 samples, 0.02%)</title><rect x="1161.6" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.6" y="782.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (4 samples, 0.02%)</title><rect x="1162.1" y="835.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.1" y="846.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (4 samples, 0.02%)</title><rect x="1162.1" y="819.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.1" y="830.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (4 samples, 0.02%)</title><rect x="1162.9" y="963.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.9" y="974.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (4 samples, 0.02%)</title><rect x="1162.9" y="947.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.9" y="958.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (6 samples, 0.03%)</title><rect x="1163.7" y="1043.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.7" y="1054.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (6 samples, 0.03%)</title><rect x="1163.7" y="1027.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.7" y="1038.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (18 samples, 0.10%)</title><rect x="1164.7" y="1139.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (14 samples, 0.08%)</title><rect x="1164.7" y="1123.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.7" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (13 samples, 0.07%)</title><rect x="1164.7" y="1107.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.7" y="1118.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (6 samples, 0.03%)</title><rect x="1165.9" y="1139.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.9" y="1150.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (5 samples, 0.03%)</title><rect x="1166.0" y="1123.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.0" y="1134.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (4 samples, 0.02%)</title><rect x="1166.5" y="1155.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.5" y="1166.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (4 samples, 0.02%)</title><rect x="1166.5" y="1139.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.5" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1166.5" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.5" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1166.5" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1166.5" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1166.5" y="1075.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1166.5" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1166.5" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.5" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1166.5" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.5" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1166.5" y="1011.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1166.5" y="995.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1166.5" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1166.5" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1166.5" y="947.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.5" y="958.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (9 samples, 0.05%)</title><rect x="1166.8" y="1155.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.8" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (200 samples, 1.13%)</title><rect x="1167.5" y="1155.0" width="13.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.5" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (200 samples, 1.13%)</title><rect x="1167.5" y="1139.0" width="13.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (199 samples, 1.12%)</title><rect x="1167.6" y="1123.0" width="13.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (199 samples, 1.12%)</title><rect x="1167.6" y="1107.0" width="13.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (196 samples, 1.10%)</title><rect x="1167.8" y="1091.0" width="13.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (187 samples, 1.05%)</title><rect x="1167.9" y="1075.0" width="12.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.9" y="1086.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.04%)</title><rect x="1167.9" y="1059.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.9" y="1070.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (7 samples, 0.04%)</title><rect x="1167.9" y="1043.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.9" y="1054.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (6 samples, 0.03%)</title><rect x="1168.0" y="1027.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.0" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (6 samples, 0.03%)</title><rect x="1168.0" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.0" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (6 samples, 0.03%)</title><rect x="1168.0" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.0" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.03%)</title><rect x="1168.0" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.0" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (6 samples, 0.03%)</title><rect x="1168.0" y="963.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.0" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (5 samples, 0.03%)</title><rect x="1168.1" y="947.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.1" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (4 samples, 0.02%)</title><rect x="1168.1" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.1" y="942.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.02%)</title><rect x="1168.1" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.1" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (150 samples, 0.85%)</title><rect x="1168.4" y="1059.0" width="10.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (150 samples, 0.85%)</title><rect x="1168.4" y="1043.0" width="10.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (142 samples, 0.80%)</title><rect x="1168.7" y="1027.0" width="9.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (142 samples, 0.80%)</title><rect x="1168.7" y="1011.0" width="9.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (142 samples, 0.80%)</title><rect x="1168.7" y="995.0" width="9.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (133 samples, 0.75%)</title><rect x="1168.8" y="979.0" width="8.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.8" y="990.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.04%)</title><rect x="1168.8" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.8" y="974.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (6 samples, 0.03%)</title><rect x="1168.9" y="947.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.9" y="958.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.02%)</title><rect x="1169.0" y="931.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.0" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (4 samples, 0.02%)</title><rect x="1169.0" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.0" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (4 samples, 0.02%)</title><rect x="1169.0" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.0" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.02%)</title><rect x="1169.0" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.0" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.02%)</title><rect x="1169.0" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.0" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (110 samples, 0.62%)</title><rect x="1169.3" y="963.0" width="7.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.3" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (110 samples, 0.62%)</title><rect x="1169.3" y="947.0" width="7.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (107 samples, 0.60%)</title><rect x="1169.5" y="931.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (105 samples, 0.59%)</title><rect x="1169.5" y="915.0" width="7.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (103 samples, 0.58%)</title><rect x="1169.6" y="899.0" width="6.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (100 samples, 0.56%)</title><rect x="1169.6" y="883.0" width="6.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.6" y="894.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (6 samples, 0.03%)</title><rect x="1169.6" y="867.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.6" y="878.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (5 samples, 0.03%)</title><rect x="1169.7" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.7" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (88 samples, 0.50%)</title><rect x="1170.1" y="867.0" width="5.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.1" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (88 samples, 0.50%)</title><rect x="1170.1" y="851.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (81 samples, 0.46%)</title><rect x="1170.3" y="835.0" width="5.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (81 samples, 0.46%)</title><rect x="1170.3" y="819.0" width="5.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (81 samples, 0.46%)</title><rect x="1170.3" y="803.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (77 samples, 0.43%)</title><rect x="1170.3" y="787.0" width="5.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="798.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (4 samples, 0.02%)</title><rect x="1170.3" y="771.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.3" y="782.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (4 samples, 0.02%)</title><rect x="1170.3" y="755.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.3" y="766.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.02%)</title><rect x="1170.3" y="739.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.3" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (4 samples, 0.02%)</title><rect x="1170.3" y="723.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.3" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (4 samples, 0.02%)</title><rect x="1170.3" y="707.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.02%)</title><rect x="1170.3" y="691.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (69 samples, 0.39%)</title><rect x="1170.6" y="771.0" width="4.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.6" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (69 samples, 0.39%)</title><rect x="1170.6" y="755.0" width="4.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (68 samples, 0.38%)</title><rect x="1170.6" y="739.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (68 samples, 0.38%)</title><rect x="1170.6" y="723.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (68 samples, 0.38%)</title><rect x="1170.6" y="707.0" width="4.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (63 samples, 0.35%)</title><rect x="1170.6" y="691.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.6" y="702.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (4 samples, 0.02%)</title><rect x="1170.6" y="675.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.6" y="686.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (4 samples, 0.02%)</title><rect x="1170.6" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.6" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (55 samples, 0.31%)</title><rect x="1171.1" y="675.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.1" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (55 samples, 0.31%)</title><rect x="1171.1" y="659.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (53 samples, 0.30%)</title><rect x="1171.1" y="643.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (53 samples, 0.30%)</title><rect x="1171.1" y="627.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (53 samples, 0.30%)</title><rect x="1171.1" y="611.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (45 samples, 0.25%)</title><rect x="1171.1" y="595.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (40 samples, 0.23%)</title><rect x="1171.4" y="579.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.4" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (40 samples, 0.23%)</title><rect x="1171.4" y="563.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (39 samples, 0.22%)</title><rect x="1171.5" y="547.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (38 samples, 0.21%)</title><rect x="1171.5" y="531.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (38 samples, 0.21%)</title><rect x="1171.5" y="515.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (32 samples, 0.18%)</title><rect x="1171.5" y="499.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.5" y="510.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1171.5" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.5" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (26 samples, 0.15%)</title><rect x="1171.8" y="483.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.8" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (26 samples, 0.15%)</title><rect x="1171.8" y="467.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 0.14%)</title><rect x="1171.8" y="451.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (25 samples, 0.14%)</title><rect x="1171.8" y="435.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (24 samples, 0.14%)</title><rect x="1171.9" y="419.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.08%)</title><rect x="1172.0" y="403.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.0" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.08%)</title><rect x="1172.0" y="387.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.0" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.08%)</title><rect x="1172.0" y="371.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.07%)</title><rect x="1172.0" y="355.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.07%)</title><rect x="1172.0" y="339.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.07%)</title><rect x="1172.1" y="323.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.04%)</title><rect x="1172.1" y="307.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.1" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1172.2" y="291.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.2" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.03%)</title><rect x="1172.2" y="275.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.2" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="1172.2" y="259.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1172.2" y="243.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1172.2" y="227.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.03%)</title><rect x="1172.6" y="307.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.6" y="318.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (4 samples, 0.02%)</title><rect x="1172.6" y="291.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.6" y="302.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (4 samples, 0.02%)</title><rect x="1172.6" y="275.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.6" y="286.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (4 samples, 0.02%)</title><rect x="1172.6" y="259.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="270.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (4 samples, 0.02%)</title><rect x="1172.6" y="243.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.6" y="254.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (4 samples, 0.02%)</title><rect x="1172.6" y="227.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.6" y="238.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (4 samples, 0.02%)</title><rect x="1172.6" y="211.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.6" y="222.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (4 samples, 0.02%)</title><rect x="1172.6" y="195.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.6" y="206.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (4 samples, 0.02%)</title><rect x="1172.6" y="179.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.6" y="190.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (4 samples, 0.02%)</title><rect x="1172.6" y="163.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.6" y="174.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="147.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.6" y="158.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="131.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="142.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="115.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="126.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="99.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="110.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="83.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.6" y="94.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="67.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.6" y="78.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="51.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.6" y="62.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1172.6" y="35.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.6" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.03%)</title><rect x="1173.0" y="403.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (5 samples, 0.03%)</title><rect x="1173.0" y="387.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.0" y="398.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (5 samples, 0.03%)</title><rect x="1173.0" y="371.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.0" y="382.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (5 samples, 0.03%)</title><rect x="1173.0" y="355.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.0" y="366.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (4 samples, 0.02%)</title><rect x="1173.1" y="339.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (6 samples, 0.03%)</title><rect x="1174.1" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.1" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1175.9" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.9" y="878.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (13 samples, 0.07%)</title><rect x="1176.6" y="963.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.6" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.05%)</title><rect x="1176.6" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.6" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.05%)</title><rect x="1176.6" y="931.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.05%)</title><rect x="1176.6" y="915.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.05%)</title><rect x="1176.6" y="899.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.05%)</title><rect x="1176.6" y="883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.04%)</title><rect x="1176.6" y="867.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.6" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1176.7" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1176.7" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1176.7" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="1176.7" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.03%)</title><rect x="1176.7" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1176.7" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.7" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1176.7" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.7" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1176.7" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1176.7" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="1176.7" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.03%)</title><rect x="1176.7" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1176.7" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.7" y="686.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1177.2" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.2" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1177.2" y="931.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.2" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1177.2" y="915.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1177.2" y="899.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1177.2" y="883.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1177.2" y="867.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1177.2" y="851.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.03%)</title><rect x="1177.6" y="979.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.6" y="990.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (4 samples, 0.02%)</title><rect x="1178.1" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.1" y="1038.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (28 samples, 0.16%)</title><rect x="1178.4" y="1059.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.4" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (22 samples, 0.12%)</title><rect x="1178.4" y="1043.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.4" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (22 samples, 0.12%)</title><rect x="1178.4" y="1027.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 0.12%)</title><rect x="1178.4" y="1011.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 0.12%)</title><rect x="1178.4" y="995.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.12%)</title><rect x="1178.4" y="979.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (19 samples, 0.11%)</title><rect x="1178.4" y="963.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.4" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.08%)</title><rect x="1178.6" y="947.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.6" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.08%)</title><rect x="1178.6" y="931.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.08%)</title><rect x="1178.6" y="915.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.08%)</title><rect x="1178.6" y="899.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.08%)</title><rect x="1178.6" y="883.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.07%)</title><rect x="1178.6" y="867.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.6" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.05%)</title><rect x="1178.6" y="851.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.6" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.05%)</title><rect x="1178.6" y="835.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.05%)</title><rect x="1178.6" y="819.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.05%)</title><rect x="1178.6" y="803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.05%)</title><rect x="1178.6" y="787.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.05%)</title><rect x="1178.6" y="771.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.6" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1178.7" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.7" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="1178.7" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="1178.7" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1178.7" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1178.7" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1178.7" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1178.7" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.7" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1178.7" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1178.7" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1178.7" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1178.7" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1178.7" y="579.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.7" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1178.7" y="563.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.7" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1178.7" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1178.7" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1178.7" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1178.7" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1178.7" y="483.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.7" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1178.7" y="467.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.7" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1178.7" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="462.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1179.2" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.2" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1179.2" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1179.2" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1179.2" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1179.2" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1179.2" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1179.2" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1179.2" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.2" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1179.2" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1179.2" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1179.2" y="691.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1179.2" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1179.2" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.2" y="670.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1179.9" y="1043.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.9" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1179.9" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.9" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1179.9" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1179.9" y="995.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="1179.9" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.03%)</title><rect x="1179.9" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.9" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1179.9" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.9" y="958.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (9 samples, 0.05%)</title><rect x="1180.8" y="1155.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.8" y="1166.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (8 samples, 0.05%)</title><rect x="1180.8" y="1139.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.8" y="1150.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (74 samples, 0.42%)</title><rect x="1181.6" y="1187.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.6" y="1198.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (74 samples, 0.42%)</title><rect x="1181.6" y="1171.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.6" y="1182.0"></text>
</g>
<g>
<title>Compilation::compile_method() (74 samples, 0.42%)</title><rect x="1181.6" y="1155.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.6" y="1166.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (71 samples, 0.40%)</title><rect x="1181.6" y="1139.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.6" y="1150.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (33 samples, 0.19%)</title><rect x="1181.6" y="1123.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.6" y="1134.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (6 samples, 0.03%)</title><rect x="1181.6" y="1107.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.6" y="1118.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (23 samples, 0.13%)</title><rect x="1182.0" y="1107.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.0" y="1118.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (23 samples, 0.13%)</title><rect x="1182.0" y="1091.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.0" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (22 samples, 0.12%)</title><rect x="1182.0" y="1075.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.0" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (20 samples, 0.11%)</title><rect x="1182.2" y="1059.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.2" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (20 samples, 0.11%)</title><rect x="1182.2" y="1043.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.2" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (17 samples, 0.10%)</title><rect x="1182.3" y="1027.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.3" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (14 samples, 0.08%)</title><rect x="1182.3" y="1011.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.3" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (13 samples, 0.07%)</title><rect x="1182.4" y="995.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.4" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (10 samples, 0.06%)</title><rect x="1182.4" y="979.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (10 samples, 0.06%)</title><rect x="1182.4" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.4" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (8 samples, 0.05%)</title><rect x="1182.6" y="947.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.6" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.03%)</title><rect x="1182.6" y="931.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.6" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.03%)</title><rect x="1182.6" y="915.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.6" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.03%)</title><rect x="1182.6" y="899.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.6" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.03%)</title><rect x="1182.6" y="883.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.6" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.02%)</title><rect x="1182.7" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (7 samples, 0.04%)</title><rect x="1183.8" y="1123.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.8" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (5 samples, 0.03%)</title><rect x="1184.0" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.0" y="1118.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (29 samples, 0.16%)</title><rect x="1184.3" y="1123.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.3" y="1134.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (5 samples, 0.03%)</title><rect x="1184.3" y="1107.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.3" y="1118.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (5 samples, 0.03%)</title><rect x="1184.3" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.3" y="1102.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (23 samples, 0.13%)</title><rect x="1184.7" y="1107.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.7" y="1118.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (9 samples, 0.05%)</title><rect x="1184.7" y="1091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.7" y="1102.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (9 samples, 0.05%)</title><rect x="1184.7" y="1075.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.7" y="1086.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (7 samples, 0.04%)</title><rect x="1184.8" y="1059.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.8" y="1070.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (4 samples, 0.02%)</title><rect x="1184.9" y="1043.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.9" y="1054.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (4 samples, 0.02%)</title><rect x="1185.5" y="1091.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="1102.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (4 samples, 0.02%)</title><rect x="1186.7" y="1187.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (4 samples, 0.02%)</title><rect x="1186.7" y="1171.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.7" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (4 samples, 0.02%)</title><rect x="1186.7" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (4 samples, 0.02%)</title><rect x="1186.7" y="1139.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.7" y="1150.0"></text>
</g>
<g>
<title>CompileQueue::get() (8 samples, 0.05%)</title><rect x="1187.3" y="1203.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.3" y="1214.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::select_task(CompileQueue*) (6 samples, 0.03%)</title><rect x="1187.4" y="1187.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.4" y="1198.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (17 samples, 0.10%)</title><rect x="1187.9" y="1219.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.9" y="1230.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (17 samples, 0.10%)</title><rect x="1187.9" y="1203.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="1214.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (17 samples, 0.10%)</title><rect x="1187.9" y="1187.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="1198.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (4 samples, 0.02%)</title><rect x="1187.9" y="1171.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.9" y="1182.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (13 samples, 0.07%)</title><rect x="1188.2" y="1171.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.2" y="1182.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (5 samples, 0.03%)</title><rect x="1188.3" y="1155.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.3" y="1166.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (4 samples, 0.02%)</title><rect x="1188.7" y="1155.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="1166.0"></text>
</g>
<g>
<title>VMThread::run() (14 samples, 0.08%)</title><rect x="1189.1" y="1235.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.1" y="1246.0"></text>
</g>
<g>
<title>VMThread::loop() (14 samples, 0.08%)</title><rect x="1189.1" y="1219.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="1230.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (5 samples, 0.03%)</title><rect x="1189.1" y="1203.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.1" y="1214.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (5 samples, 0.03%)</title><rect x="1189.5" y="1203.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="1214.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.03%)</title><rect x="1189.5" y="1187.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="1198.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.02%)</title><rect x="1189.5" y="1171.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.02%)</title><rect x="1189.5" y="1155.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.5" y="1166.0"></text>
</g>
</g>
</svg>
