<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (1,372,722 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (690,617 samples, 50.31%)</title><rect x="10.0" y="691.0" width="593.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (690,617 samples, 50.31%)</title><rect x="10.0" y="675.0" width="593.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (690,617 samples, 50.31%)</title><rect x="10.0" y="659.0" width="593.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (296,338 samples, 21.59%)</title><rect x="10.0" y="643.0" width="254.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (296,338 samples, 21.59%)</title><rect x="10.0" y="627.0" width="254.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (296,338 samples, 21.59%)</title><rect x="10.0" y="611.0" width="254.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2,736 samples, 0.20%)</title><rect x="10.0" y="595.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$170/1528611040.apply (293,599 samples, 21.39%)</title><rect x="12.4" y="595.0" width="252.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.4" y="606.0">jdk/internal/net/http/MultiExchang..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (293,599 samples, 21.39%)</title><rect x="12.4" y="579.0" width="252.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.4" y="590.0">jdk/internal/net/http/MultiExchang..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (293,599 samples, 21.39%)</title><rect x="12.4" y="563.0" width="252.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.4" y="574.0">jdk/internal/net/http/MultiExchang..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,745 samples, 0.13%)</title><rect x="12.4" y="547.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,745 samples, 0.13%)</title><rect x="12.4" y="531.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/47785189.get$Lambda (1,046 samples, 0.08%)</title><rect x="12.4" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$351 (1,046 samples, 0.08%)</title><rect x="12.4" y="499.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="15.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$353/1127198177.get$Lambda (699 samples, 0.05%)</title><rect x="13.3" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$353 (699 samples, 0.05%)</title><rect x="13.3" y="499.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="16.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,571 samples, 0.26%)</title><rect x="13.9" y="547.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,571 samples, 0.26%)</title><rect x="13.9" y="531.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1,946 samples, 0.14%)</title><rect x="13.9" y="515.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="16.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,625 samples, 0.12%)</title><rect x="15.5" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,625 samples, 0.12%)</title><rect x="15.5" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,625 samples, 0.12%)</title><rect x="15.5" y="483.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7,074 samples, 0.52%)</title><rect x="16.9" y="547.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7,074 samples, 0.52%)</title><rect x="16.9" y="531.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (3,990 samples, 0.29%)</title><rect x="16.9" y="515.0" width="3.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="19.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3,084 samples, 0.22%)</title><rect x="20.4" y="515.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3,084 samples, 0.22%)</title><rect x="20.4" y="499.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3,084 samples, 0.22%)</title><rect x="20.4" y="483.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="23.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (281,209 samples, 20.49%)</title><rect x="23.0" y="547.0" width="241.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.0" y="558.0">jdk/internal/net/http/Exchange.r..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (281,209 samples, 20.49%)</title><rect x="23.0" y="531.0" width="241.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.0" y="542.0">jdk/internal/net/http/Exchange.r..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (281,209 samples, 20.49%)</title><rect x="23.0" y="515.0" width="241.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.0" y="526.0">jdk/internal/net/http/Exchange.r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,626 samples, 0.34%)</title><rect x="23.0" y="499.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,626 samples, 0.34%)</title><rect x="23.0" y="483.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/1756033759.get$Lambda (2,173 samples, 0.16%)</title><rect x="23.0" y="467.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$197 (2,173 samples, 0.16%)</title><rect x="23.0" y="451.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1330536006.get$Lambda (1,187 samples, 0.09%)</title><rect x="24.9" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$205 (1,187 samples, 0.09%)</title><rect x="24.9" y="451.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="27.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/855035991.get$Lambda (1,266 samples, 0.09%)</title><rect x="25.9" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$299 (1,266 samples, 0.09%)</title><rect x="25.9" y="451.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="28.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (209,378 samples, 15.25%)</title><rect x="27.0" y="499.0" width="180.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.0" y="510.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (209,378 samples, 15.25%)</title><rect x="27.0" y="483.0" width="180.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.0" y="494.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (207,821 samples, 15.14%)</title><rect x="27.0" y="467.0" width="178.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.0" y="478.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/855035991.apply (207,821 samples, 15.14%)</title><rect x="27.0" y="451.0" width="178.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.0" y="462.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (207,821 samples, 15.14%)</title><rect x="27.0" y="435.0" width="178.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.0" y="446.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (207,821 samples, 15.14%)</title><rect x="27.0" y="419.0" width="178.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.0" y="430.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1330536006.apply (207,821 samples, 15.14%)</title><rect x="27.0" y="403.0" width="178.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.0" y="414.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (207,821 samples, 15.14%)</title><rect x="27.0" y="387.0" width="178.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.0" y="398.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,313 samples, 0.10%)</title><rect x="27.0" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,313 samples, 0.10%)</title><rect x="27.0" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$349/1378120992.get$Lambda (1,313 samples, 0.10%)</title><rect x="27.0" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$349 (1,313 samples, 0.10%)</title><rect x="27.0" y="323.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="30.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,810 samples, 0.28%)</title><rect x="28.1" y="371.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,810 samples, 0.28%)</title><rect x="28.1" y="355.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2,038 samples, 0.15%)</title><rect x="28.1" y="339.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="31.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,734 samples, 0.13%)</title><rect x="29.9" y="339.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,734 samples, 0.13%)</title><rect x="29.9" y="323.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,734 samples, 0.13%)</title><rect x="29.9" y="307.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="32.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,467 samples, 0.25%)</title><rect x="31.4" y="371.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,467 samples, 0.25%)</title><rect x="31.4" y="355.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,876 samples, 0.14%)</title><rect x="31.4" y="339.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="34.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,587 samples, 0.12%)</title><rect x="33.0" y="339.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,587 samples, 0.12%)</title><rect x="33.0" y="323.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,587 samples, 0.12%)</title><rect x="33.0" y="307.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="36.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (199,231 samples, 14.51%)</title><rect x="34.4" y="371.0" width="171.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.4" y="382.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,748 samples, 0.27%)</title><rect x="34.4" y="355.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,748 samples, 0.27%)</title><rect x="34.4" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$344/2067301772.get$Lambda (720 samples, 0.05%)</title><rect x="34.4" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$344 (720 samples, 0.05%)</title><rect x="34.4" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="37.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$347/1686414961.get$Lambda (3,028 samples, 0.22%)</title><rect x="35.0" y="323.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$347 (3,028 samples, 0.22%)</title><rect x="35.0" y="307.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="38.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (166,893 samples, 12.16%)</title><rect x="37.6" y="355.0" width="143.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.6" y="366.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (166,893 samples, 12.16%)</title><rect x="37.6" y="339.0" width="143.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.6" y="350.0">java/util/concurre..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,510 samples, 0.11%)</title><rect x="37.6" y="323.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="40.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$344/2067301772.apply (159,648 samples, 11.63%)</title><rect x="38.9" y="323.0" width="137.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.9" y="334.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (159,648 samples, 11.63%)</title><rect x="38.9" y="307.0" width="137.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.9" y="318.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (678 samples, 0.05%)</title><rect x="38.9" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (678 samples, 0.05%)</title><rect x="38.9" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$364/1301828629.get$Lambda (678 samples, 0.05%)</title><rect x="38.9" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$364 (678 samples, 0.05%)</title><rect x="38.9" y="243.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="41.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3,520 samples, 0.26%)</title><rect x="39.5" y="291.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3,520 samples, 0.26%)</title><rect x="39.5" y="275.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,992 samples, 0.15%)</title><rect x="39.5" y="259.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="42.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,528 samples, 0.11%)</title><rect x="41.2" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,528 samples, 0.11%)</title><rect x="41.2" y="243.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,528 samples, 0.11%)</title><rect x="41.2" y="227.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="44.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,507 samples, 0.11%)</title><rect x="42.5" y="291.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="45.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (7,852 samples, 0.57%)</title><rect x="43.8" y="291.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (2,779 samples, 0.20%)</title><rect x="43.8" y="275.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="46.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5,073 samples, 0.37%)</title><rect x="46.2" y="275.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (5,000 samples, 0.36%)</title><rect x="46.2" y="259.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5,000 samples, 0.36%)</title><rect x="46.2" y="243.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5,000 samples, 0.36%)</title><rect x="46.2" y="227.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (5,000 samples, 0.36%)</title><rect x="46.2" y="211.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (5,000 samples, 0.36%)</title><rect x="46.2" y="195.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="49.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (4,854 samples, 0.35%)</title><rect x="50.5" y="291.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4,854 samples, 0.35%)</title><rect x="50.5" y="275.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,275 samples, 0.09%)</title><rect x="50.5" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,275 samples, 0.09%)</title><rect x="50.5" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,275 samples, 0.09%)</title><rect x="50.5" y="227.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1,275 samples, 0.09%)</title><rect x="50.5" y="211.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="53.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3,579 samples, 0.26%)</title><rect x="51.6" y="259.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3,579 samples, 0.26%)</title><rect x="51.6" y="243.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2,767 samples, 0.20%)</title><rect x="51.6" y="227.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="54.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (812 samples, 0.06%)</title><rect x="54.0" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (812 samples, 0.06%)</title><rect x="54.0" y="211.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="57.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (141,237 samples, 10.29%)</title><rect x="54.7" y="291.0" width="121.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.7" y="302.0">jdk/internal/ne..</text>
</g>
<g>
<title>java.lang.StringBuilder (1,411 samples, 0.10%)</title><rect x="54.7" y="275.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="57.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (24,374 samples, 1.78%)</title><rect x="55.9" y="275.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24,374 samples, 1.78%)</title><rect x="55.9" y="259.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (24,374 samples, 1.78%)</title><rect x="55.9" y="243.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.9" y="254.0"></text>
</g>
<g>
<title>byte[] (13,859 samples, 1.01%)</title><rect x="55.9" y="227.0" width="11.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="58.9" y="238.0"></text>
</g>
<g>
<title>byte[] (10,515 samples, 0.77%)</title><rect x="67.8" y="227.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4,182 samples, 0.30%)</title><rect x="76.9" y="275.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.9" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4,182 samples, 0.30%)</title><rect x="76.9" y="259.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.9" y="270.0"></text>
</g>
<g>
<title>byte[] (3,439 samples, 0.25%)</title><rect x="76.9" y="243.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="79.9" y="254.0"></text>
</g>
<g>
<title>byte[] (743 samples, 0.05%)</title><rect x="79.8" y="243.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13,760 samples, 1.00%)</title><rect x="80.5" y="275.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13,760 samples, 1.00%)</title><rect x="80.5" y="259.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13,760 samples, 1.00%)</title><rect x="80.5" y="243.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.5" y="254.0"></text>
</g>
<g>
<title>byte[] (6,299 samples, 0.46%)</title><rect x="80.5" y="227.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="83.5" y="238.0"></text>
</g>
<g>
<title>byte[] (7,461 samples, 0.54%)</title><rect x="85.9" y="227.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,319 samples, 0.17%)</title><rect x="92.3" y="275.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,319 samples, 0.17%)</title><rect x="92.3" y="259.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,319 samples, 0.17%)</title><rect x="92.3" y="243.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="95.3" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (1,584 samples, 0.12%)</title><rect x="94.3" y="275.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.3" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,584 samples, 0.12%)</title><rect x="94.3" y="259.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="97.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (76,940 samples, 5.60%)</title><rect x="95.7" y="275.0" width="66.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.7" y="286.0">jdk/int..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1,100 samples, 0.08%)</title><rect x="95.7" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,100 samples, 0.08%)</title><rect x="95.7" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,100 samples, 0.08%)</title><rect x="95.7" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.7" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$374/2064307929.get$Lambda (1,100 samples, 0.08%)</title><rect x="95.7" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.7" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$374 (1,100 samples, 0.08%)</title><rect x="95.7" y="195.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="98.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (43,662 samples, 3.18%)</title><rect x="96.6" y="259.0" width="37.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.6" y="270.0">jdk..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (24,527 samples, 1.79%)</title><rect x="96.6" y="243.0" width="21.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.6" y="254.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (24,527 samples, 1.79%)</title><rect x="96.6" y="227.0" width="21.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.6" y="238.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (24,527 samples, 1.79%)</title><rect x="96.6" y="211.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.6" y="222.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (24,527 samples, 1.79%)</title><rect x="96.6" y="195.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.6" y="206.0">j..</text>
</g>
<g>
<title>byte[] (7,519 samples, 0.55%)</title><rect x="96.6" y="179.0" width="6.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="99.6" y="190.0"></text>
</g>
<g>
<title>byte[] (17,008 samples, 1.24%)</title><rect x="103.1" y="179.0" width="14.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="106.1" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (5,618 samples, 0.41%)</title><rect x="117.7" y="243.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.7" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (5,618 samples, 0.41%)</title><rect x="117.7" y="227.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (5,618 samples, 0.41%)</title><rect x="117.7" y="211.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (5,618 samples, 0.41%)</title><rect x="117.7" y="195.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="120.7" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (3,772 samples, 0.27%)</title><rect x="122.5" y="243.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.5" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (1,820 samples, 0.13%)</title><rect x="122.5" y="227.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="125.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1,952 samples, 0.14%)</title><rect x="124.1" y="227.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1,952 samples, 0.14%)</title><rect x="124.1" y="211.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="127.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$374/2064307929.test (9,745 samples, 0.71%)</title><rect x="125.8" y="243.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.8" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (9,745 samples, 0.71%)</title><rect x="125.8" y="227.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (9,745 samples, 0.71%)</title><rect x="125.8" y="211.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (9,745 samples, 0.71%)</title><rect x="125.8" y="195.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.8" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (9,745 samples, 0.71%)</title><rect x="125.8" y="179.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.8" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (9,745 samples, 0.71%)</title><rect x="125.8" y="163.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (9,745 samples, 0.71%)</title><rect x="125.8" y="147.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (9,745 samples, 0.71%)</title><rect x="125.8" y="131.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (9,745 samples, 0.71%)</title><rect x="125.8" y="115.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9,745 samples, 0.71%)</title><rect x="125.8" y="99.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4,909 samples, 0.36%)</title><rect x="125.8" y="83.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="128.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,836 samples, 0.35%)</title><rect x="130.0" y="83.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.0" y="94.0"></text>
</g>
<g>
<title>byte[] (4,836 samples, 0.35%)</title><rect x="130.0" y="67.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="133.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (32,178 samples, 2.34%)</title><rect x="134.1" y="259.0" width="27.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.1" y="270.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (32,178 samples, 2.34%)</title><rect x="134.1" y="243.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.1" y="254.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (32,178 samples, 2.34%)</title><rect x="134.1" y="227.0" width="27.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.1" y="238.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (793 samples, 0.06%)</title><rect x="134.1" y="211.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="137.1" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,103 samples, 0.08%)</title><rect x="134.8" y="211.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="137.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,442 samples, 0.18%)</title><rect x="135.8" y="211.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="138.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (811 samples, 0.06%)</title><rect x="137.9" y="211.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="140.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,555 samples, 0.11%)</title><rect x="138.6" y="211.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,555 samples, 0.11%)</title><rect x="138.6" y="195.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.6" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.get$Lambda (1,555 samples, 0.11%)</title><rect x="138.6" y="179.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.6" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (1,555 samples, 0.11%)</title><rect x="138.6" y="163.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="141.6" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,573 samples, 0.11%)</title><rect x="139.9" y="211.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.9" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,573 samples, 0.11%)</title><rect x="139.9" y="195.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="142.9" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (21,495 samples, 1.57%)</title><rect x="141.2" y="211.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (21,495 samples, 1.57%)</title><rect x="141.2" y="195.0" width="18.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (21,495 samples, 1.57%)</title><rect x="141.2" y="179.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,682 samples, 0.27%)</title><rect x="141.2" y="163.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,682 samples, 0.27%)</title><rect x="141.2" y="147.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.get$Lambda (3,682 samples, 0.27%)</title><rect x="141.2" y="131.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.2" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (3,682 samples, 0.27%)</title><rect x="141.2" y="115.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="144.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,866 samples, 0.21%)</title><rect x="144.4" y="163.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.accept (2,866 samples, 0.21%)</title><rect x="144.4" y="147.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2,866 samples, 0.21%)</title><rect x="144.4" y="131.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,866 samples, 0.21%)</title><rect x="144.4" y="115.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,866 samples, 0.21%)</title><rect x="144.4" y="99.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,866 samples, 0.21%)</title><rect x="144.4" y="83.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,866 samples, 0.21%)</title><rect x="144.4" y="67.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,866 samples, 0.21%)</title><rect x="144.4" y="51.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,827 samples, 0.21%)</title><rect x="144.4" y="35.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="147.4" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (8,385 samples, 0.61%)</title><rect x="146.9" y="163.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (8,385 samples, 0.61%)</title><rect x="146.9" y="147.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4,711 samples, 0.34%)</title><rect x="146.9" y="131.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,711 samples, 0.34%)</title><rect x="146.9" y="115.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (4,711 samples, 0.34%)</title><rect x="146.9" y="99.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="149.9" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (3,674 samples, 0.27%)</title><rect x="150.9" y="131.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.9" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3,674 samples, 0.27%)</title><rect x="150.9" y="115.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="153.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6,562 samples, 0.48%)</title><rect x="154.1" y="163.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.1" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6,562 samples, 0.48%)</title><rect x="154.1" y="147.0" width="5.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="157.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2,406 samples, 0.18%)</title><rect x="159.7" y="211.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,406 samples, 0.18%)</title><rect x="159.7" y="195.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="162.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4,644 samples, 0.34%)</title><rect x="161.8" y="275.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (990 samples, 0.07%)</title><rect x="161.8" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.8" y="270.0"></text>
</g>
<g>
<title>byte[] (990 samples, 0.07%)</title><rect x="161.8" y="243.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="164.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,654 samples, 0.27%)</title><rect x="162.6" y="259.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3,654 samples, 0.27%)</title><rect x="162.6" y="243.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (3,654 samples, 0.27%)</title><rect x="162.6" y="227.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,654 samples, 0.27%)</title><rect x="162.6" y="211.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,867 samples, 0.14%)</title><rect x="162.6" y="195.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1,867 samples, 0.14%)</title><rect x="162.6" y="179.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="165.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,787 samples, 0.13%)</title><rect x="164.2" y="195.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,787 samples, 0.13%)</title><rect x="164.2" y="179.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.2" y="190.0"></text>
</g>
<g>
<title>byte[] (1,787 samples, 0.13%)</title><rect x="164.2" y="163.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="167.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (3,016 samples, 0.22%)</title><rect x="165.8" y="275.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3,016 samples, 0.22%)</title><rect x="165.8" y="259.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,016 samples, 0.22%)</title><rect x="165.8" y="243.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3,016 samples, 0.22%)</title><rect x="165.8" y="227.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (3,016 samples, 0.22%)</title><rect x="165.8" y="211.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,016 samples, 0.22%)</title><rect x="165.8" y="195.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,178 samples, 0.09%)</title><rect x="165.8" y="179.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1,178 samples, 0.09%)</title><rect x="165.8" y="163.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="168.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,838 samples, 0.13%)</title><rect x="166.8" y="179.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,838 samples, 0.13%)</title><rect x="166.8" y="163.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.8" y="174.0"></text>
</g>
<g>
<title>byte[] (1,838 samples, 0.13%)</title><rect x="166.8" y="147.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="169.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9,007 samples, 0.66%)</title><rect x="168.4" y="275.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.4" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (2,498 samples, 0.18%)</title><rect x="168.4" y="259.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="171.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2,425 samples, 0.18%)</title><rect x="170.5" y="259.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,425 samples, 0.18%)</title><rect x="170.5" y="243.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="173.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4,084 samples, 0.30%)</title><rect x="172.6" y="259.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4,084 samples, 0.30%)</title><rect x="172.6" y="243.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="175.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5,735 samples, 0.42%)</title><rect x="176.1" y="323.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5,735 samples, 0.42%)</title><rect x="176.1" y="307.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5,735 samples, 0.42%)</title><rect x="176.1" y="291.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="179.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (3,355 samples, 0.24%)</title><rect x="181.0" y="355.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="184.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,031 samples, 0.08%)</title><rect x="183.9" y="355.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="186.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,594 samples, 0.12%)</title><rect x="184.8" y="355.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="187.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (22,610 samples, 1.65%)</title><rect x="186.2" y="355.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,649 samples, 0.12%)</title><rect x="186.2" y="339.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,649 samples, 0.12%)</title><rect x="186.2" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$309/2099845810.get$Lambda (866 samples, 0.06%)</title><rect x="186.2" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$309 (866 samples, 0.06%)</title><rect x="186.2" y="291.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="189.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$314/2124394325.get$Lambda (783 samples, 0.06%)</title><rect x="186.9" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$314 (783 samples, 0.06%)</title><rect x="186.9" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="189.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (2,001 samples, 0.15%)</title><rect x="187.6" y="339.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="190.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (2,907 samples, 0.21%)</title><rect x="189.3" y="339.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="192.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (2,974 samples, 0.22%)</title><rect x="191.8" y="339.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="194.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5,854 samples, 0.43%)</title><rect x="194.4" y="339.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,854 samples, 0.43%)</title><rect x="194.4" y="323.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,854 samples, 0.43%)</title><rect x="194.4" y="307.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,854 samples, 0.43%)</title><rect x="194.4" y="291.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,854 samples, 0.43%)</title><rect x="194.4" y="275.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,854 samples, 0.43%)</title><rect x="194.4" y="259.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/1400081447.run (5,854 samples, 0.43%)</title><rect x="194.4" y="243.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,854 samples, 0.43%)</title><rect x="194.4" y="227.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5,854 samples, 0.43%)</title><rect x="194.4" y="211.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,189 samples, 0.16%)</title><rect x="194.4" y="195.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,189 samples, 0.16%)</title><rect x="194.4" y="179.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/477249543.get$Lambda (813 samples, 0.06%)</title><rect x="194.4" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.4" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$319 (813 samples, 0.06%)</title><rect x="194.4" y="147.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="197.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$324/933485322.get$Lambda (1,376 samples, 0.10%)</title><rect x="195.1" y="163.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$324 (1,376 samples, 0.10%)</title><rect x="195.1" y="147.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="198.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1,740 samples, 0.13%)</title><rect x="196.3" y="195.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1,925 samples, 0.14%)</title><rect x="197.8" y="195.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1,925 samples, 0.14%)</title><rect x="197.8" y="179.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (760 samples, 0.06%)</title><rect x="197.8" y="163.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="200.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1,165 samples, 0.08%)</title><rect x="198.4" y="163.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1,165 samples, 0.08%)</title><rect x="198.4" y="147.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="201.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (5,618 samples, 0.41%)</title><rect x="199.4" y="339.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.4" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1,404 samples, 0.10%)</title><rect x="199.4" y="323.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="202.4" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (2,638 samples, 0.19%)</title><rect x="200.6" y="323.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="203.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,576 samples, 0.11%)</title><rect x="202.9" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,576 samples, 0.11%)</title><rect x="202.9" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.9" y="318.0"></text>
</g>
<g>
<title>byte[] (1,576 samples, 0.11%)</title><rect x="202.9" y="291.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="205.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (1,607 samples, 0.12%)</title><rect x="204.2" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,607 samples, 0.12%)</title><rect x="204.2" y="323.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="207.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,557 samples, 0.11%)</title><rect x="205.6" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,557 samples, 0.11%)</title><rect x="205.6" y="451.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,557 samples, 0.11%)</title><rect x="205.6" y="435.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="208.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,383 samples, 0.25%)</title><rect x="207.0" y="499.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,383 samples, 0.25%)</title><rect x="207.0" y="483.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,729 samples, 0.13%)</title><rect x="207.0" y="467.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="210.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,654 samples, 0.12%)</title><rect x="208.4" y="467.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,654 samples, 0.12%)</title><rect x="208.4" y="451.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,654 samples, 0.12%)</title><rect x="208.4" y="435.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="211.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (63,822 samples, 4.65%)</title><rect x="209.9" y="499.0" width="54.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.9" y="510.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,862 samples, 0.14%)</title><rect x="209.9" y="483.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,862 samples, 0.14%)</title><rect x="209.9" y="467.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$292/1096478908.get$Lambda (1,128 samples, 0.08%)</title><rect x="209.9" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$292 (1,128 samples, 0.08%)</title><rect x="209.9" y="435.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="212.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$295/1225494913.get$Lambda (734 samples, 0.05%)</title><rect x="210.8" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$295 (734 samples, 0.05%)</title><rect x="210.8" y="435.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="213.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,975 samples, 0.22%)</title><rect x="211.5" y="483.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,975 samples, 0.22%)</title><rect x="211.5" y="467.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$295/1225494913.apply (1,460 samples, 0.11%)</title><rect x="211.5" y="451.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1,460 samples, 0.11%)</title><rect x="211.5" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,460 samples, 0.11%)</title><rect x="211.5" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,460 samples, 0.11%)</title><rect x="211.5" y="403.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="214.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,515 samples, 0.11%)</title><rect x="212.7" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,515 samples, 0.11%)</title><rect x="212.7" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,515 samples, 0.11%)</title><rect x="212.7" y="419.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="215.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,630 samples, 0.12%)</title><rect x="214.0" y="483.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,630 samples, 0.12%)</title><rect x="214.0" y="467.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,630 samples, 0.12%)</title><rect x="214.0" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,630 samples, 0.12%)</title><rect x="214.0" y="435.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,630 samples, 0.12%)</title><rect x="214.0" y="419.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="217.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (57,355 samples, 4.18%)</title><rect x="215.4" y="483.0" width="49.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.4" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (57,355 samples, 4.18%)</title><rect x="215.4" y="467.0" width="49.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.4" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (3,646 samples, 0.27%)</title><rect x="215.4" y="451.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="218.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (907 samples, 0.07%)</title><rect x="218.6" y="451.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="221.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (51,263 samples, 3.73%)</title><rect x="219.3" y="451.0" width="44.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.3" y="462.0">jdk/..</text>
</g>
<g>
<title>java.lang.Object (868 samples, 0.06%)</title><rect x="219.3" y="435.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="222.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (1,618 samples, 0.12%)</title><rect x="220.1" y="435.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="223.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1,335 samples, 0.10%)</title><rect x="221.5" y="435.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="224.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2,291 samples, 0.17%)</title><rect x="222.6" y="435.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2,291 samples, 0.17%)</title><rect x="222.6" y="419.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2,291 samples, 0.17%)</title><rect x="222.6" y="403.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="225.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1,397 samples, 0.10%)</title><rect x="224.6" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1,397 samples, 0.10%)</title><rect x="224.6" y="419.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="227.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (3,495 samples, 0.25%)</title><rect x="225.8" y="435.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="228.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (335 samples, 0.02%)</title><rect x="228.8" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="231.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (3,014 samples, 0.22%)</title><rect x="229.1" y="435.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="232.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (3,751 samples, 0.27%)</title><rect x="231.7" y="435.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="234.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3,286 samples, 0.24%)</title><rect x="234.9" y="435.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="237.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (14,563 samples, 1.06%)</title><rect x="237.8" y="435.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1,071 samples, 0.08%)</title><rect x="237.8" y="419.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="240.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (808 samples, 0.06%)</title><rect x="238.7" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="241.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1,180 samples, 0.09%)</title><rect x="239.4" y="419.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="242.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (812 samples, 0.06%)</title><rect x="240.4" y="419.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="243.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (905 samples, 0.07%)</title><rect x="241.1" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (905 samples, 0.07%)</title><rect x="241.1" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/1400081447.get$Lambda (905 samples, 0.07%)</title><rect x="241.1" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$287 (905 samples, 0.07%)</title><rect x="241.1" y="371.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="244.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1,216 samples, 0.09%)</title><rect x="241.9" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1,216 samples, 0.09%)</title><rect x="241.9" y="403.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="244.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (1,185 samples, 0.09%)</title><rect x="242.9" y="419.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="245.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,489 samples, 0.11%)</title><rect x="243.9" y="419.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="246.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (5,897 samples, 0.43%)</title><rect x="245.2" y="419.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1,182 samples, 0.09%)</title><rect x="245.2" y="403.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="248.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1,694 samples, 0.12%)</title><rect x="246.2" y="403.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="249.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (758 samples, 0.06%)</title><rect x="247.7" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (758 samples, 0.06%)</title><rect x="247.7" y="387.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="250.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2,263 samples, 0.16%)</title><rect x="248.3" y="403.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (800 samples, 0.06%)</title><rect x="248.3" y="387.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="251.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (733 samples, 0.05%)</title><rect x="249.0" y="387.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="252.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (730 samples, 0.05%)</title><rect x="249.7" y="387.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="252.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (9,522 samples, 0.69%)</title><rect x="250.3" y="435.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (701 samples, 0.05%)</title><rect x="250.3" y="419.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="253.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (824 samples, 0.06%)</title><rect x="250.9" y="419.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="253.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (790 samples, 0.06%)</title><rect x="251.6" y="419.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="254.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1,258 samples, 0.09%)</title><rect x="252.3" y="419.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1,258 samples, 0.09%)</title><rect x="252.3" y="403.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="255.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (5,949 samples, 0.43%)</title><rect x="253.4" y="419.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (1,177 samples, 0.09%)</title><rect x="253.4" y="403.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="256.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1,573 samples, 0.11%)</title><rect x="254.4" y="403.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="257.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (785 samples, 0.06%)</title><rect x="255.7" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (785 samples, 0.06%)</title><rect x="255.7" y="387.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="258.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2,414 samples, 0.18%)</title><rect x="256.4" y="403.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (831 samples, 0.06%)</title><rect x="256.4" y="387.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="259.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (721 samples, 0.05%)</title><rect x="257.1" y="387.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="260.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (862 samples, 0.06%)</title><rect x="257.7" y="387.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="260.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,362 samples, 0.10%)</title><rect x="258.5" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,362 samples, 0.10%)</title><rect x="258.5" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1,362 samples, 0.10%)</title><rect x="258.5" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1,362 samples, 0.10%)</title><rect x="258.5" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1,362 samples, 0.10%)</title><rect x="258.5" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1,362 samples, 0.10%)</title><rect x="258.5" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,362 samples, 0.10%)</title><rect x="258.5" y="339.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="261.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (4,387 samples, 0.32%)</title><rect x="259.6" y="435.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (1,164 samples, 0.08%)</title><rect x="259.6" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,164 samples, 0.08%)</title><rect x="259.6" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$224/522784531.get$Lambda (1,164 samples, 0.08%)</title><rect x="259.6" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$224 (1,164 samples, 0.08%)</title><rect x="259.6" y="371.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="262.6" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3,223 samples, 0.23%)</title><rect x="260.6" y="419.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$224/522784531.run (3,223 samples, 0.23%)</title><rect x="260.6" y="403.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3,223 samples, 0.23%)</title><rect x="260.6" y="387.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.6" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (893 samples, 0.07%)</title><rect x="260.6" y="371.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="263.6" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2,330 samples, 0.17%)</title><rect x="261.4" y="371.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.4" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (1,100 samples, 0.08%)</title><rect x="261.4" y="355.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="264.4" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1,230 samples, 0.09%)</title><rect x="262.4" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.4" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1,230 samples, 0.09%)</title><rect x="262.4" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.4" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1,230 samples, 0.09%)</title><rect x="262.4" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.4" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1,230 samples, 0.09%)</title><rect x="262.4" y="307.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.4" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (1,229 samples, 0.09%)</title><rect x="262.4" y="291.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="265.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,539 samples, 0.11%)</title><rect x="263.4" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,539 samples, 0.11%)</title><rect x="263.4" y="435.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="266.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12,879 samples, 0.94%)</title><rect x="264.7" y="643.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12,848 samples, 0.94%)</title><rect x="264.7" y="627.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12,746 samples, 0.93%)</title><rect x="264.7" y="611.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (12,746 samples, 0.93%)</title><rect x="264.7" y="595.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12,746 samples, 0.93%)</title><rect x="264.7" y="579.0" width="11.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="267.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$378/269063177.run (27,440 samples, 2.00%)</title><rect x="275.8" y="643.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.8" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (27,440 samples, 2.00%)</title><rect x="275.8" y="627.0" width="23.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.8" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (27,440 samples, 2.00%)</title><rect x="275.8" y="611.0" width="23.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (27,440 samples, 2.00%)</title><rect x="275.8" y="595.0" width="23.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27,440 samples, 2.00%)</title><rect x="275.8" y="579.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.8" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27,440 samples, 2.00%)</title><rect x="275.8" y="563.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27,440 samples, 2.00%)</title><rect x="275.8" y="547.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (27,440 samples, 2.00%)</title><rect x="275.8" y="531.0" width="23.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.8" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (27,440 samples, 2.00%)</title><rect x="275.8" y="515.0" width="23.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.8" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (27,440 samples, 2.00%)</title><rect x="275.8" y="499.0" width="23.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.8" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (27,440 samples, 2.00%)</title><rect x="275.8" y="483.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.8" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (24,618 samples, 1.79%)</title><rect x="275.8" y="467.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.8" y="478.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,474 samples, 0.18%)</title><rect x="275.8" y="451.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,474 samples, 0.18%)</title><rect x="275.8" y="435.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$388/1825596592.get$Lambda (1,292 samples, 0.09%)</title><rect x="275.8" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$388 (1,292 samples, 0.09%)</title><rect x="275.8" y="403.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="278.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$418/793572118.get$Lambda (1,182 samples, 0.09%)</title><rect x="276.9" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$418 (1,182 samples, 0.09%)</title><rect x="276.9" y="403.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="279.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (22,144 samples, 1.61%)</title><rect x="277.9" y="451.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (2,498 samples, 0.18%)</title><rect x="277.9" y="435.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="280.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19,646 samples, 1.43%)</title><rect x="280.1" y="435.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19,646 samples, 1.43%)</title><rect x="280.1" y="419.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,646 samples, 1.43%)</title><rect x="280.1" y="403.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9,216 samples, 0.67%)</title><rect x="280.1" y="387.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3,197 samples, 0.23%)</title><rect x="280.1" y="371.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="283.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$407/2026337483.apply (5,743 samples, 0.42%)</title><rect x="282.8" y="371.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5,743 samples, 0.42%)</title><rect x="282.8" y="355.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5,743 samples, 0.42%)</title><rect x="282.8" y="339.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,208 samples, 0.09%)</title><rect x="282.8" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.8" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,208 samples, 0.09%)</title><rect x="282.8" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.8" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,208 samples, 0.09%)</title><rect x="282.8" y="291.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="285.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4,535 samples, 0.33%)</title><rect x="283.9" y="323.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (783 samples, 0.06%)</title><rect x="283.9" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (783 samples, 0.06%)</title><rect x="283.9" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$423/1342523852.get$Lambda (783 samples, 0.06%)</title><rect x="283.9" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$423 (783 samples, 0.06%)</title><rect x="283.9" y="259.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="286.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3,752 samples, 0.27%)</title><rect x="284.5" y="307.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3,752 samples, 0.27%)</title><rect x="284.5" y="291.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2,107 samples, 0.15%)</title><rect x="284.5" y="275.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="287.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,642 samples, 0.12%)</title><rect x="286.4" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,642 samples, 0.12%)</title><rect x="286.4" y="259.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,642 samples, 0.12%)</title><rect x="286.4" y="243.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="289.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10,430 samples, 0.76%)</title><rect x="288.0" y="387.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,430 samples, 0.76%)</title><rect x="288.0" y="371.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$349/1378120992.apply (10,427 samples, 0.76%)</title><rect x="288.0" y="355.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (10,427 samples, 0.76%)</title><rect x="288.0" y="339.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10,427 samples, 0.76%)</title><rect x="288.0" y="323.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/1756033759.apply (10,427 samples, 0.76%)</title><rect x="288.0" y="307.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10,427 samples, 0.76%)</title><rect x="288.0" y="291.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (793 samples, 0.06%)</title><rect x="288.0" y="275.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (793 samples, 0.06%)</title><rect x="288.0" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$407/2026337483.get$Lambda (793 samples, 0.06%)</title><rect x="288.0" y="243.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$407 (793 samples, 0.06%)</title><rect x="288.0" y="227.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="291.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,756 samples, 0.27%)</title><rect x="288.7" y="275.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,756 samples, 0.27%)</title><rect x="288.7" y="259.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,131 samples, 0.16%)</title><rect x="288.7" y="243.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="291.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,625 samples, 0.12%)</title><rect x="290.5" y="243.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,625 samples, 0.12%)</title><rect x="290.5" y="227.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,625 samples, 0.12%)</title><rect x="290.5" y="211.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="293.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (5,878 samples, 0.43%)</title><rect x="291.9" y="275.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (3,380 samples, 0.25%)</title><rect x="291.9" y="259.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (1,682 samples, 0.12%)</title><rect x="291.9" y="243.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="294.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (1,698 samples, 0.12%)</title><rect x="293.4" y="243.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1,698 samples, 0.12%)</title><rect x="293.4" y="227.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,698 samples, 0.12%)</title><rect x="293.4" y="211.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="296.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2,498 samples, 0.18%)</title><rect x="294.8" y="259.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1,262 samples, 0.09%)</title><rect x="294.8" y="243.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="297.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,236 samples, 0.09%)</title><rect x="295.9" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1,236 samples, 0.09%)</title><rect x="295.9" y="227.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1,236 samples, 0.09%)</title><rect x="295.9" y="211.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1,236 samples, 0.09%)</title><rect x="295.9" y="195.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1,236 samples, 0.09%)</title><rect x="295.9" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1,236 samples, 0.09%)</title><rect x="295.9" y="163.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="298.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2,822 samples, 0.21%)</title><rect x="297.0" y="467.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2,822 samples, 0.21%)</title><rect x="297.0" y="451.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2,822 samples, 0.21%)</title><rect x="297.0" y="435.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2,822 samples, 0.21%)</title><rect x="297.0" y="419.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2,822 samples, 0.21%)</title><rect x="297.0" y="403.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2,822 samples, 0.21%)</title><rect x="297.0" y="387.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1,224 samples, 0.09%)</title><rect x="297.0" y="371.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.0" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (1,224 samples, 0.09%)</title><rect x="297.0" y="355.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="300.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1,598 samples, 0.12%)</title><rect x="298.0" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.0" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1,598 samples, 0.12%)</title><rect x="298.0" y="355.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="301.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (258,610 samples, 18.84%)</title><rect x="299.4" y="643.0" width="222.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.4" y="654.0">jdk/internal/net/http/common/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (258,610 samples, 18.84%)</title><rect x="299.4" y="627.0" width="222.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.4" y="638.0">jdk/internal/net/http/common/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (215,161 samples, 15.67%)</title><rect x="299.4" y="611.0" width="184.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.4" y="622.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/1400081447.run (215,161 samples, 15.67%)</title><rect x="299.4" y="595.0" width="184.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.4" y="606.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (215,161 samples, 15.67%)</title><rect x="299.4" y="579.0" width="184.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.4" y="590.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3,810 samples, 0.28%)</title><rect x="299.4" y="563.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3,810 samples, 0.28%)</title><rect x="299.4" y="547.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3,810 samples, 0.28%)</title><rect x="299.4" y="531.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3,810 samples, 0.28%)</title><rect x="299.4" y="515.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (2,162 samples, 0.16%)</title><rect x="299.4" y="499.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (2,162 samples, 0.16%)</title><rect x="299.4" y="483.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,162 samples, 0.16%)</title><rect x="299.4" y="467.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,162 samples, 0.16%)</title><rect x="299.4" y="451.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,162 samples, 0.16%)</title><rect x="299.4" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="302.4" y="446.0"></text>
</g>
<g>
<title>byte[] (2,162 samples, 0.16%)</title><rect x="299.4" y="419.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="302.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1,648 samples, 0.12%)</title><rect x="301.3" y="499.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,648 samples, 0.12%)</title><rect x="301.3" y="483.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,648 samples, 0.12%)</title><rect x="301.3" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379/2007538046.get$Lambda (1,648 samples, 0.12%)</title><rect x="301.3" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379 (1,648 samples, 0.12%)</title><rect x="301.3" y="435.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="304.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (211,351 samples, 15.40%)</title><rect x="302.7" y="563.0" width="181.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.7" y="574.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (211,351 samples, 15.40%)</title><rect x="302.7" y="547.0" width="181.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.7" y="558.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (211,351 samples, 15.40%)</title><rect x="302.7" y="531.0" width="181.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.7" y="542.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (211,351 samples, 15.40%)</title><rect x="302.7" y="515.0" width="181.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.7" y="526.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (85,973 samples, 6.26%)</title><rect x="302.7" y="499.0" width="73.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.7" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (85,973 samples, 6.26%)</title><rect x="302.7" y="483.0" width="73.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.7" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (85,973 samples, 6.26%)</title><rect x="302.7" y="467.0" width="73.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.7" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (85,973 samples, 6.26%)</title><rect x="302.7" y="451.0" width="73.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.7" y="462.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (85,973 samples, 6.26%)</title><rect x="302.7" y="435.0" width="73.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.7" y="446.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (85,973 samples, 6.26%)</title><rect x="302.7" y="419.0" width="73.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.7" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (85,973 samples, 6.26%)</title><rect x="302.7" y="403.0" width="73.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.7" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (83,543 samples, 6.09%)</title><rect x="302.7" y="387.0" width="71.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.7" y="398.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (83,543 samples, 6.09%)</title><rect x="302.7" y="371.0" width="71.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.7" y="382.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (81,578 samples, 5.94%)</title><rect x="302.7" y="355.0" width="70.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="305.7" y="366.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,668 samples, 0.12%)</title><rect x="302.7" y="339.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="305.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1024378022.apply (76,777 samples, 5.59%)</title><rect x="304.1" y="339.0" width="66.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.1" y="350.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (76,777 samples, 5.59%)</title><rect x="304.1" y="323.0" width="66.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.1" y="334.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,108 samples, 0.08%)</title><rect x="304.1" y="307.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,108 samples, 0.08%)</title><rect x="304.1" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$479/1130867921.get$Lambda (1,108 samples, 0.08%)</title><rect x="304.1" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$479 (1,108 samples, 0.08%)</title><rect x="304.1" y="259.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="307.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3,813 samples, 0.28%)</title><rect x="305.1" y="307.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3,813 samples, 0.28%)</title><rect x="305.1" y="291.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2,038 samples, 0.15%)</title><rect x="305.1" y="275.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="308.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,775 samples, 0.13%)</title><rect x="306.8" y="275.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="309.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,775 samples, 0.13%)</title><rect x="306.8" y="259.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="309.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,775 samples, 0.13%)</title><rect x="306.8" y="243.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="309.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (71,856 samples, 5.23%)</title><rect x="308.3" y="307.0" width="61.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.3" y="318.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (870 samples, 0.06%)</title><rect x="308.3" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (870 samples, 0.06%)</title><rect x="308.3" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$476/189493074.get$Lambda (870 samples, 0.06%)</title><rect x="308.3" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$476 (870 samples, 0.06%)</title><rect x="308.3" y="243.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="311.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4,119 samples, 0.30%)</title><rect x="309.1" y="291.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4,119 samples, 0.30%)</title><rect x="309.1" y="275.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,337 samples, 0.17%)</title><rect x="309.1" y="259.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="312.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,782 samples, 0.13%)</title><rect x="311.1" y="259.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,782 samples, 0.13%)</title><rect x="311.1" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,782 samples, 0.13%)</title><rect x="311.1" y="227.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="314.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (66,867 samples, 4.87%)</title><rect x="312.6" y="291.0" width="57.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.6" y="302.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$151/975218400.apply (4,365 samples, 0.32%)</title><rect x="312.6" y="275.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (4,365 samples, 0.32%)</title><rect x="312.6" y="259.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (4,365 samples, 0.32%)</title><rect x="312.6" y="243.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (1,489 samples, 0.11%)</title><rect x="312.6" y="227.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="315.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2,876 samples, 0.21%)</title><rect x="313.9" y="227.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,426 samples, 0.10%)</title><rect x="313.9" y="211.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="316.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,450 samples, 0.11%)</title><rect x="315.1" y="211.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="318.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (62,502 samples, 4.55%)</title><rect x="316.4" y="275.0" width="53.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.4" y="286.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,930 samples, 0.14%)</title><rect x="316.4" y="259.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,930 samples, 0.14%)</title><rect x="316.4" y="243.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$468/253612861.get$Lambda (894 samples, 0.07%)</title><rect x="316.4" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$468 (894 samples, 0.07%)</title><rect x="316.4" y="211.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="319.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$474/757600837.get$Lambda (1,036 samples, 0.08%)</title><rect x="317.1" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$474 (1,036 samples, 0.08%)</title><rect x="317.1" y="211.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="320.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1067762650.linkToTargetMethod (2,257 samples, 0.16%)</title><rect x="318.0" y="259.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1293513432.invokeStatic (2,257 samples, 0.16%)</title><rect x="318.0" y="243.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/990169612.get$Lambda (2,257 samples, 0.16%)</title><rect x="318.0" y="227.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$444 (2,257 samples, 0.16%)</title><rect x="318.0" y="211.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="321.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (12,403 samples, 0.90%)</title><rect x="320.0" y="259.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4,401 samples, 0.32%)</title><rect x="320.0" y="243.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.0" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,589 samples, 0.12%)</title><rect x="320.0" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.0" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,589 samples, 0.12%)</title><rect x="320.0" y="211.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="323.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,812 samples, 0.20%)</title><rect x="321.3" y="227.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.3" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,778 samples, 0.20%)</title><rect x="321.3" y="211.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="324.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (4,351 samples, 0.32%)</title><rect x="323.8" y="243.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4,351 samples, 0.32%)</title><rect x="323.8" y="227.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4,351 samples, 0.32%)</title><rect x="323.8" y="211.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,350 samples, 0.10%)</title><rect x="323.8" y="195.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,350 samples, 0.10%)</title><rect x="323.8" y="179.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1,350 samples, 0.10%)</title><rect x="323.8" y="163.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.8" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (1,350 samples, 0.10%)</title><rect x="323.8" y="147.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="326.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$441/1575505971.get (1,655 samples, 0.12%)</title><rect x="324.9" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (1,655 samples, 0.12%)</title><rect x="324.9" y="179.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="327.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1,346 samples, 0.10%)</title><rect x="326.3" y="195.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1,346 samples, 0.10%)</title><rect x="326.3" y="179.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.3" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1,346 samples, 0.10%)</title><rect x="326.3" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.3" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (1,346 samples, 0.10%)</title><rect x="326.3" y="147.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="329.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3,651 samples, 0.27%)</title><rect x="327.5" y="243.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (3,491 samples, 0.25%)</title><rect x="327.5" y="227.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="330.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7,909 samples, 0.58%)</title><rect x="330.6" y="259.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4,110 samples, 0.30%)</title><rect x="330.6" y="243.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,470 samples, 0.18%)</title><rect x="330.6" y="227.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="333.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,640 samples, 0.12%)</title><rect x="332.8" y="227.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,640 samples, 0.12%)</title><rect x="332.8" y="211.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,640 samples, 0.12%)</title><rect x="332.8" y="195.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="335.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3,799 samples, 0.28%)</title><rect x="334.2" y="243.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3,799 samples, 0.28%)</title><rect x="334.2" y="227.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,975 samples, 0.14%)</title><rect x="334.2" y="211.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="337.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,824 samples, 0.13%)</title><rect x="335.9" y="211.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,824 samples, 0.13%)</title><rect x="335.9" y="195.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,824 samples, 0.13%)</title><rect x="335.9" y="179.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="338.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (1,275 samples, 0.09%)</title><rect x="337.4" y="259.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="340.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (1,581 samples, 0.12%)</title><rect x="338.5" y="259.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="341.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,593 samples, 0.12%)</title><rect x="339.9" y="259.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="342.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (814 samples, 0.06%)</title><rect x="341.3" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (814 samples, 0.06%)</title><rect x="341.3" y="243.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="344.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32,740 samples, 2.39%)</title><rect x="342.0" y="259.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.0" y="270.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/990169612.run (32,740 samples, 2.39%)</title><rect x="342.0" y="243.0" width="28.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.0" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (32,740 samples, 2.39%)</title><rect x="342.0" y="227.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="345.0" y="238.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,522 samples, 0.33%)</title><rect x="342.0" y="211.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,522 samples, 0.33%)</title><rect x="342.0" y="195.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/618927023.get$Lambda (867 samples, 0.06%)</title><rect x="342.0" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="345.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$445 (867 samples, 0.06%)</title><rect x="342.0" y="163.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="345.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$447/44248419.get$Lambda (1,159 samples, 0.08%)</title><rect x="342.7" y="179.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$447 (1,159 samples, 0.08%)</title><rect x="342.7" y="163.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="345.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$455/36315038.get$Lambda (2,496 samples, 0.18%)</title><rect x="343.7" y="179.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$455 (2,496 samples, 0.18%)</title><rect x="343.7" y="163.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="346.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4,274 samples, 0.31%)</title><rect x="345.8" y="211.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4,274 samples, 0.31%)</title><rect x="345.8" y="195.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,435 samples, 0.18%)</title><rect x="345.8" y="179.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="348.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,839 samples, 0.13%)</title><rect x="347.9" y="179.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,839 samples, 0.13%)</title><rect x="347.9" y="163.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,839 samples, 0.13%)</title><rect x="347.9" y="147.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="350.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (2,042 samples, 0.15%)</title><rect x="349.5" y="211.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="352.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (1,682 samples, 0.12%)</title><rect x="351.3" y="211.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,682 samples, 0.12%)</title><rect x="351.3" y="195.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="354.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5,448 samples, 0.40%)</title><rect x="352.7" y="211.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (5,448 samples, 0.40%)</title><rect x="352.7" y="195.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,325 samples, 0.10%)</title><rect x="352.7" y="179.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,325 samples, 0.10%)</title><rect x="352.7" y="163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$464/1894790917.get$Lambda (1,325 samples, 0.10%)</title><rect x="352.7" y="147.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$464 (1,325 samples, 0.10%)</title><rect x="352.7" y="131.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="355.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4,123 samples, 0.30%)</title><rect x="353.9" y="179.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4,123 samples, 0.30%)</title><rect x="353.9" y="163.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4,123 samples, 0.30%)</title><rect x="353.9" y="147.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,295 samples, 0.17%)</title><rect x="353.9" y="131.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="356.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,828 samples, 0.13%)</title><rect x="355.8" y="131.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,828 samples, 0.13%)</title><rect x="355.8" y="115.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.8" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,828 samples, 0.13%)</title><rect x="355.8" y="99.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="358.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (5,227 samples, 0.38%)</title><rect x="357.4" y="211.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5,227 samples, 0.38%)</title><rect x="357.4" y="195.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (5,227 samples, 0.38%)</title><rect x="357.4" y="179.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,227 samples, 0.38%)</title><rect x="357.4" y="163.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="360.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,508 samples, 0.11%)</title><rect x="357.4" y="147.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (1,508 samples, 0.11%)</title><rect x="357.4" y="131.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="360.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3,719 samples, 0.27%)</title><rect x="358.7" y="147.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3,719 samples, 0.27%)</title><rect x="358.7" y="131.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.7" y="142.0"></text>
</g>
<g>
<title>byte[] (3,331 samples, 0.24%)</title><rect x="358.7" y="115.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="361.7" y="126.0"></text>
</g>
<g>
<title>byte[] (388 samples, 0.03%)</title><rect x="361.6" y="115.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (9,545 samples, 0.70%)</title><rect x="361.9" y="211.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (3,258 samples, 0.24%)</title><rect x="361.9" y="195.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="364.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (6,256 samples, 0.46%)</title><rect x="364.7" y="195.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6,256 samples, 0.46%)</title><rect x="364.7" y="179.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (6,256 samples, 0.46%)</title><rect x="364.7" y="163.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6,256 samples, 0.46%)</title><rect x="364.7" y="147.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1,372 samples, 0.10%)</title><rect x="364.7" y="131.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (1,372 samples, 0.10%)</title><rect x="364.7" y="115.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="367.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4,884 samples, 0.36%)</title><rect x="365.9" y="131.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4,884 samples, 0.36%)</title><rect x="365.9" y="115.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.9" y="126.0"></text>
</g>
<g>
<title>byte[] (3,730 samples, 0.27%)</title><rect x="365.9" y="99.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="368.9" y="110.0"></text>
</g>
<g>
<title>byte[] (1,154 samples, 0.08%)</title><rect x="369.1" y="99.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="372.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/47785189.apply (3,133 samples, 0.23%)</title><rect x="370.1" y="339.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3,133 samples, 0.23%)</title><rect x="370.1" y="323.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1,595 samples, 0.12%)</title><rect x="370.1" y="307.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.1" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1,595 samples, 0.12%)</title><rect x="370.1" y="291.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1,595 samples, 0.12%)</title><rect x="370.1" y="275.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.1" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1,595 samples, 0.12%)</title><rect x="370.1" y="259.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="373.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,538 samples, 0.11%)</title><rect x="371.5" y="307.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,538 samples, 0.11%)</title><rect x="371.5" y="291.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="374.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,965 samples, 0.14%)</title><rect x="372.8" y="355.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,965 samples, 0.14%)</title><rect x="372.8" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$353/1127198177.apply (1,965 samples, 0.14%)</title><rect x="372.8" y="323.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,965 samples, 0.14%)</title><rect x="372.8" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,965 samples, 0.14%)</title><rect x="372.8" y="291.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,965 samples, 0.14%)</title><rect x="372.8" y="275.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="375.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$423/1342523852.apply (2,430 samples, 0.18%)</title><rect x="374.5" y="387.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2,430 samples, 0.18%)</title><rect x="374.5" y="371.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (2,430 samples, 0.18%)</title><rect x="374.5" y="355.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="377.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (125,378 samples, 9.13%)</title><rect x="376.6" y="499.0" width="107.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.6" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (9,406 samples, 0.69%)</title><rect x="376.6" y="483.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9,406 samples, 0.69%)</title><rect x="376.6" y="467.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9,406 samples, 0.69%)</title><rect x="376.6" y="451.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9,406 samples, 0.69%)</title><rect x="376.6" y="435.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9,406 samples, 0.69%)</title><rect x="376.6" y="419.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.6" y="430.0"></text>
</g>
<g>
<title>byte[] (9,019 samples, 0.66%)</title><rect x="376.6" y="403.0" width="7.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="379.6" y="414.0"></text>
</g>
<g>
<title>byte[] (387 samples, 0.03%)</title><rect x="384.3" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (8,752 samples, 0.64%)</title><rect x="384.7" y="483.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.7" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1,257 samples, 0.09%)</title><rect x="384.7" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="387.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,391 samples, 0.10%)</title><rect x="385.7" y="467.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,391 samples, 0.10%)</title><rect x="385.7" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,391 samples, 0.10%)</title><rect x="385.7" y="435.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.7" y="446.0"></text>
</g>
<g>
<title>byte[] (1,391 samples, 0.10%)</title><rect x="385.7" y="419.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="388.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,575 samples, 0.11%)</title><rect x="386.9" y="467.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,575 samples, 0.11%)</title><rect x="386.9" y="451.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.9" y="462.0"></text>
</g>
<g>
<title>byte[] (1,575 samples, 0.11%)</title><rect x="386.9" y="435.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="389.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,529 samples, 0.33%)</title><rect x="388.3" y="467.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,529 samples, 0.33%)</title><rect x="388.3" y="451.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2,871 samples, 0.21%)</title><rect x="388.3" y="435.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="391.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,658 samples, 0.12%)</title><rect x="390.8" y="435.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.8" y="446.0"></text>
</g>
<g>
<title>byte[] (1,658 samples, 0.12%)</title><rect x="390.8" y="419.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="393.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (31,927 samples, 2.33%)</title><rect x="392.2" y="483.0" width="27.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.2" y="494.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (31,927 samples, 2.33%)</title><rect x="392.2" y="467.0" width="27.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.2" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (31,927 samples, 2.33%)</title><rect x="392.2" y="451.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.2" y="462.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (910 samples, 0.07%)</title><rect x="392.2" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="395.2" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,118 samples, 0.08%)</title><rect x="393.0" y="435.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="396.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,531 samples, 0.18%)</title><rect x="393.9" y="435.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="396.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (809 samples, 0.06%)</title><rect x="396.1" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="399.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,911 samples, 0.14%)</title><rect x="396.8" y="435.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,911 samples, 0.14%)</title><rect x="396.8" y="419.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.get$Lambda (1,911 samples, 0.14%)</title><rect x="396.8" y="403.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.8" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (1,911 samples, 0.14%)</title><rect x="396.8" y="387.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="399.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,725 samples, 0.13%)</title><rect x="398.4" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.4" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,725 samples, 0.13%)</title><rect x="398.4" y="419.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="401.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (20,579 samples, 1.50%)</title><rect x="399.9" y="435.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (20,579 samples, 1.50%)</title><rect x="399.9" y="419.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (20,579 samples, 1.50%)</title><rect x="399.9" y="403.0" width="17.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,579 samples, 0.26%)</title><rect x="399.9" y="387.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,579 samples, 0.26%)</title><rect x="399.9" y="371.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.get$Lambda (3,579 samples, 0.26%)</title><rect x="399.9" y="355.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (3,579 samples, 0.26%)</title><rect x="399.9" y="339.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="402.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,878 samples, 0.21%)</title><rect x="403.0" y="387.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.accept (2,878 samples, 0.21%)</title><rect x="403.0" y="371.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2,878 samples, 0.21%)</title><rect x="403.0" y="355.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,878 samples, 0.21%)</title><rect x="403.0" y="339.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,878 samples, 0.21%)</title><rect x="403.0" y="323.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,878 samples, 0.21%)</title><rect x="403.0" y="307.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,878 samples, 0.21%)</title><rect x="403.0" y="291.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,878 samples, 0.21%)</title><rect x="403.0" y="275.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,828 samples, 0.21%)</title><rect x="403.0" y="259.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="406.0" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (7,588 samples, 0.55%)</title><rect x="405.5" y="387.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.5" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (7,588 samples, 0.55%)</title><rect x="405.5" y="371.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (3,591 samples, 0.26%)</title><rect x="405.5" y="355.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,591 samples, 0.26%)</title><rect x="405.5" y="339.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,591 samples, 0.26%)</title><rect x="405.5" y="323.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="408.5" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (3,997 samples, 0.29%)</title><rect x="408.6" y="355.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.6" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3,997 samples, 0.29%)</title><rect x="408.6" y="339.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="411.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6,534 samples, 0.48%)</title><rect x="412.0" y="387.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6,534 samples, 0.48%)</title><rect x="412.0" y="371.0" width="5.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="415.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2,344 samples, 0.17%)</title><rect x="417.6" y="435.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (2,344 samples, 0.17%)</title><rect x="417.6" y="419.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="420.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (75,293 samples, 5.48%)</title><rect x="419.6" y="483.0" width="64.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.6" y="494.0">jdk/int..</text>
</g>
<g>
<title>java.lang.StringBuilder (3,768 samples, 0.27%)</title><rect x="419.6" y="467.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="422.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4,989 samples, 0.36%)</title><rect x="422.9" y="467.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4,989 samples, 0.36%)</title><rect x="422.9" y="451.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.9" y="462.0"></text>
</g>
<g>
<title>byte[] (4,989 samples, 0.36%)</title><rect x="422.9" y="435.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="425.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10,424 samples, 0.76%)</title><rect x="427.2" y="467.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10,424 samples, 0.76%)</title><rect x="427.2" y="451.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3,617 samples, 0.26%)</title><rect x="427.2" y="435.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="430.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,807 samples, 0.50%)</title><rect x="430.3" y="435.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.3" y="446.0"></text>
</g>
<g>
<title>byte[] (6,807 samples, 0.50%)</title><rect x="430.3" y="419.0" width="5.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="433.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (56,112 samples, 4.09%)</title><rect x="436.1" y="467.0" width="48.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.1" y="478.0">jdk/..</text>
</g>
<g>
<title>java/lang/String.substring (17,178 samples, 1.25%)</title><rect x="436.1" y="451.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17,178 samples, 1.25%)</title><rect x="436.1" y="435.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (7,616 samples, 0.55%)</title><rect x="436.1" y="419.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="439.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9,562 samples, 0.70%)</title><rect x="442.7" y="419.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.7" y="430.0"></text>
</g>
<g>
<title>byte[] (9,562 samples, 0.70%)</title><rect x="442.7" y="403.0" width="8.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="445.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8,539 samples, 0.62%)</title><rect x="450.9" y="451.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (8,539 samples, 0.62%)</title><rect x="450.9" y="435.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.9" y="446.0"></text>
</g>
<g>
<title>byte[] (4,656 samples, 0.34%)</title><rect x="450.9" y="419.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="453.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3,883 samples, 0.28%)</title><rect x="454.9" y="419.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="457.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (8,497 samples, 0.62%)</title><rect x="458.2" y="451.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8,497 samples, 0.62%)</title><rect x="458.2" y="435.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,497 samples, 0.62%)</title><rect x="458.2" y="419.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4,063 samples, 0.30%)</title><rect x="458.2" y="403.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="461.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,434 samples, 0.32%)</title><rect x="461.7" y="403.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.7" y="414.0"></text>
</g>
<g>
<title>byte[] (4,434 samples, 0.32%)</title><rect x="461.7" y="387.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="464.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9,221 samples, 0.67%)</title><rect x="465.5" y="451.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9,221 samples, 0.67%)</title><rect x="465.5" y="435.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9,221 samples, 0.67%)</title><rect x="465.5" y="419.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9,221 samples, 0.67%)</title><rect x="465.5" y="403.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9,221 samples, 0.67%)</title><rect x="465.5" y="387.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (9,087 samples, 0.66%)</title><rect x="465.5" y="371.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="468.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (12,677 samples, 0.92%)</title><rect x="473.4" y="451.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.4" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4,861 samples, 0.35%)</title><rect x="473.4" y="435.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4,861 samples, 0.35%)</title><rect x="473.4" y="419.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="476.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3,953 samples, 0.29%)</title><rect x="477.6" y="435.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.6" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3,339 samples, 0.24%)</title><rect x="477.6" y="419.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="480.6" y="430.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (614 samples, 0.04%)</title><rect x="480.5" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$434/1627549336.apply (3,863 samples, 0.28%)</title><rect x="481.0" y="435.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3,863 samples, 0.28%)</title><rect x="481.0" y="419.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (3,863 samples, 0.28%)</title><rect x="481.0" y="403.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="484.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (43,449 samples, 3.17%)</title><rect x="484.3" y="611.0" width="37.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.3" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (43,449 samples, 3.17%)</title><rect x="484.3" y="595.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.3" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (43,449 samples, 3.17%)</title><rect x="484.3" y="579.0" width="37.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.3" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/1400081447.run (43,449 samples, 3.17%)</title><rect x="484.3" y="563.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.3" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (43,449 samples, 3.17%)</title><rect x="484.3" y="547.0" width="37.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.3" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6,261 samples, 0.46%)</title><rect x="484.3" y="531.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,371 samples, 0.17%)</title><rect x="484.3" y="515.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,371 samples, 0.17%)</title><rect x="484.3" y="499.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/477249543.get$Lambda (835 samples, 0.06%)</title><rect x="484.3" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$319 (835 samples, 0.06%)</title><rect x="484.3" y="467.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="487.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$324/933485322.get$Lambda (1,536 samples, 0.11%)</title><rect x="485.1" y="483.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$324 (1,536 samples, 0.11%)</title><rect x="485.1" y="467.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="488.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1,759 samples, 0.13%)</title><rect x="486.4" y="515.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="489.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2,131 samples, 0.16%)</title><rect x="487.9" y="515.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2,131 samples, 0.16%)</title><rect x="487.9" y="499.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (791 samples, 0.06%)</title><rect x="487.9" y="483.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="490.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1,340 samples, 0.10%)</title><rect x="488.6" y="483.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1,340 samples, 0.10%)</title><rect x="488.6" y="467.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="491.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (37,147 samples, 2.71%)</title><rect x="489.7" y="531.0" width="32.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.7" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (37,147 samples, 2.71%)</title><rect x="489.7" y="515.0" width="32.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.7" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (37,147 samples, 2.71%)</title><rect x="489.7" y="499.0" width="32.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.7" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (37,147 samples, 2.71%)</title><rect x="489.7" y="483.0" width="32.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.7" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (37,147 samples, 2.71%)</title><rect x="489.7" y="467.0" width="32.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.7" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (37,147 samples, 2.71%)</title><rect x="489.7" y="451.0" width="32.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.7" y="462.0">jd..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2,509 samples, 0.18%)</title><rect x="489.7" y="435.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2,509 samples, 0.18%)</title><rect x="489.7" y="419.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,509 samples, 0.18%)</title><rect x="489.7" y="403.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="492.7" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (1,253 samples, 0.09%)</title><rect x="491.9" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.9" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,253 samples, 0.09%)</title><rect x="491.9" y="419.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="494.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/618927023.run (22,568 samples, 1.64%)</title><rect x="493.0" y="435.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (22,568 samples, 1.64%)</title><rect x="493.0" y="419.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (22,568 samples, 1.64%)</title><rect x="493.0" y="403.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6,903 samples, 0.50%)</title><rect x="493.0" y="387.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4,524 samples, 0.33%)</title><rect x="493.0" y="371.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,784 samples, 0.13%)</title><rect x="493.0" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.0" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,784 samples, 0.13%)</title><rect x="493.0" y="339.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="496.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,740 samples, 0.20%)</title><rect x="494.5" y="355.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,713 samples, 0.20%)</title><rect x="494.5" y="339.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="497.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2,379 samples, 0.17%)</title><rect x="496.9" y="371.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,379 samples, 0.17%)</title><rect x="496.9" y="355.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2,379 samples, 0.17%)</title><rect x="496.9" y="339.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (1,677 samples, 0.12%)</title><rect x="496.9" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (1,677 samples, 0.12%)</title><rect x="496.9" y="307.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="499.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (702 samples, 0.05%)</title><rect x="498.3" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (702 samples, 0.05%)</title><rect x="498.3" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.3" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (702 samples, 0.05%)</title><rect x="498.3" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.3" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (702 samples, 0.05%)</title><rect x="498.3" y="275.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="501.3" y="286.0"></text>
</g>
<g>
<title>java/util/Optional.map (873 samples, 0.06%)</title><rect x="498.9" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.9" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (873 samples, 0.06%)</title><rect x="498.9" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.9" y="382.0"></text>
</g>
<g>
<title>java/util/Optional.of (873 samples, 0.06%)</title><rect x="498.9" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.9" y="366.0"></text>
</g>
<g>
<title>java.util.Optional (873 samples, 0.06%)</title><rect x="498.9" y="339.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="501.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (14,792 samples, 1.08%)</title><rect x="499.6" y="387.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (1,403 samples, 0.10%)</title><rect x="499.6" y="371.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.6" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1,403 samples, 0.10%)</title><rect x="499.6" y="355.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1,403 samples, 0.10%)</title><rect x="499.6" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (1,403 samples, 0.10%)</title><rect x="499.6" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.6" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (1,403 samples, 0.10%)</title><rect x="499.6" y="307.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="502.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (13,389 samples, 0.98%)</title><rect x="500.9" y="371.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (5,382 samples, 0.39%)</title><rect x="500.9" y="355.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1,208 samples, 0.09%)</title><rect x="500.9" y="339.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1,208 samples, 0.09%)</title><rect x="500.9" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.9" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1,208 samples, 0.09%)</title><rect x="500.9" y="307.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.9" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1,208 samples, 0.09%)</title><rect x="500.9" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.9" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (1,208 samples, 0.09%)</title><rect x="500.9" y="275.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.9" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (1,208 samples, 0.09%)</title><rect x="500.9" y="259.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="503.9" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1,662 samples, 0.12%)</title><rect x="501.9" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1,662 samples, 0.12%)</title><rect x="501.9" y="323.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.9" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1,662 samples, 0.12%)</title><rect x="501.9" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.9" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1,662 samples, 0.12%)</title><rect x="501.9" y="291.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.9" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (1,662 samples, 0.12%)</title><rect x="501.9" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.9" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (1,662 samples, 0.12%)</title><rect x="501.9" y="259.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="504.9" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,160 samples, 0.08%)</title><rect x="503.4" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,160 samples, 0.08%)</title><rect x="503.4" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.4" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,160 samples, 0.08%)</title><rect x="503.4" y="307.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="506.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (1,236 samples, 0.09%)</title><rect x="504.4" y="339.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="507.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2,343 samples, 0.17%)</title><rect x="505.5" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1,242 samples, 0.09%)</title><rect x="505.5" y="339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1,242 samples, 0.09%)</title><rect x="505.5" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1,242 samples, 0.09%)</title><rect x="505.5" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,242 samples, 0.09%)</title><rect x="505.5" y="291.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="508.5" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,101 samples, 0.08%)</title><rect x="506.5" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,101 samples, 0.08%)</title><rect x="506.5" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.5" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,101 samples, 0.08%)</title><rect x="506.5" y="307.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="509.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (5,664 samples, 0.41%)</title><rect x="507.5" y="355.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (1,455 samples, 0.11%)</title><rect x="507.5" y="339.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="510.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4,209 samples, 0.31%)</title><rect x="508.7" y="339.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,310 samples, 0.10%)</title><rect x="508.7" y="323.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,310 samples, 0.10%)</title><rect x="508.7" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,310 samples, 0.10%)</title><rect x="508.7" y="291.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (1,310 samples, 0.10%)</title><rect x="508.7" y="275.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="511.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,899 samples, 0.21%)</title><rect x="509.9" y="323.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,899 samples, 0.21%)</title><rect x="509.9" y="307.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2,070 samples, 0.15%)</title><rect x="509.9" y="291.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="512.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (829 samples, 0.06%)</title><rect x="511.6" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (829 samples, 0.06%)</title><rect x="511.6" y="275.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="514.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (4,752 samples, 0.35%)</title><rect x="512.4" y="435.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (4,752 samples, 0.35%)</title><rect x="512.4" y="419.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (4,752 samples, 0.35%)</title><rect x="512.4" y="403.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,140 samples, 0.23%)</title><rect x="512.4" y="387.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,140 samples, 0.23%)</title><rect x="512.4" y="371.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,140 samples, 0.23%)</title><rect x="512.4" y="355.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,140 samples, 0.23%)</title><rect x="512.4" y="339.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$468/253612861.accept (3,140 samples, 0.23%)</title><rect x="512.4" y="323.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (3,140 samples, 0.23%)</title><rect x="512.4" y="307.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,140 samples, 0.23%)</title><rect x="512.4" y="291.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,140 samples, 0.23%)</title><rect x="512.4" y="275.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,140 samples, 0.23%)</title><rect x="512.4" y="259.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$479/1130867921.apply (3,140 samples, 0.23%)</title><rect x="512.4" y="243.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3,140 samples, 0.23%)</title><rect x="512.4" y="227.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (2,973 samples, 0.22%)</title><rect x="512.4" y="211.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="515.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1,612 samples, 0.12%)</title><rect x="515.1" y="387.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.1" y="398.0"></text>
</g>
<g>
<title>byte[] (1,612 samples, 0.12%)</title><rect x="515.1" y="371.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="518.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (6,065 samples, 0.44%)</title><rect x="516.4" y="435.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (6,065 samples, 0.44%)</title><rect x="516.4" y="419.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (6,065 samples, 0.44%)</title><rect x="516.4" y="403.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (6,065 samples, 0.44%)</title><rect x="516.4" y="387.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (6,065 samples, 0.44%)</title><rect x="516.4" y="371.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,129 samples, 0.23%)</title><rect x="516.4" y="355.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,498 samples, 0.11%)</title><rect x="516.4" y="339.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="519.4" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1,631 samples, 0.12%)</title><rect x="517.7" y="339.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.7" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1,631 samples, 0.12%)</title><rect x="517.7" y="323.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="520.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,936 samples, 0.21%)</title><rect x="519.1" y="355.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,936 samples, 0.21%)</title><rect x="519.1" y="339.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,891 samples, 0.21%)</title><rect x="519.1" y="323.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="522.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$109/388268451.run (95,350 samples, 6.95%)</title><rect x="521.7" y="643.0" width="82.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.7" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (95,350 samples, 6.95%)</title><rect x="521.7" y="627.0" width="82.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.7" y="638.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (95,350 samples, 6.95%)</title><rect x="521.7" y="611.0" width="82.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.7" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14,184 samples, 1.03%)</title><rect x="521.7" y="595.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (14,184 samples, 1.03%)</title><rect x="521.7" y="579.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14,184 samples, 1.03%)</title><rect x="521.7" y="563.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (13,451 samples, 0.98%)</title><rect x="521.7" y="547.0" width="11.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="524.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (733 samples, 0.05%)</title><rect x="533.3" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.3" y="558.0"></text>
</g>
<g>
<title>byte[] (733 samples, 0.05%)</title><rect x="533.3" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="536.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.MetaInfoRequest (10,069 samples, 0.73%)</title><rect x="533.9" y="595.0" width="8.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="536.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (19,968 samples, 1.45%)</title><rect x="542.5" y="595.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,749 samples, 0.35%)</title><rect x="542.5" y="579.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,749 samples, 0.35%)</title><rect x="542.5" y="563.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (3,128 samples, 0.23%)</title><rect x="542.5" y="547.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="545.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,621 samples, 0.12%)</title><rect x="545.2" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.2" y="558.0"></text>
</g>
<g>
<title>byte[] (1,621 samples, 0.12%)</title><rect x="545.2" y="531.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="548.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,281 samples, 0.17%)</title><rect x="546.6" y="579.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,130 samples, 0.08%)</title><rect x="546.6" y="563.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="549.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,151 samples, 0.08%)</title><rect x="547.6" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.6" y="574.0"></text>
</g>
<g>
<title>byte[] (1,151 samples, 0.08%)</title><rect x="547.6" y="547.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="550.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,645 samples, 0.34%)</title><rect x="548.6" y="579.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4,645 samples, 0.34%)</title><rect x="548.6" y="563.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.6" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,645 samples, 0.34%)</title><rect x="548.6" y="547.0" width="4.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="551.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8,293 samples, 0.60%)</title><rect x="552.6" y="579.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,293 samples, 0.60%)</title><rect x="552.6" y="563.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,293 samples, 0.60%)</title><rect x="552.6" y="547.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (3,480 samples, 0.25%)</title><rect x="552.6" y="531.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="555.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,813 samples, 0.35%)</title><rect x="555.6" y="531.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.6" y="542.0"></text>
</g>
<g>
<title>byte[] (4,813 samples, 0.35%)</title><rect x="555.6" y="515.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="558.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getting (51,129 samples, 3.72%)</title><rect x="559.7" y="595.0" width="44.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.7" y="606.0">ru/m..</text>
</g>
<g>
<title>java.util.ArrayList (2,036 samples, 0.15%)</title><rect x="559.7" y="579.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="562.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (524 samples, 0.04%)</title><rect x="561.5" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (524 samples, 0.04%)</title><rect x="561.5" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (524 samples, 0.04%)</title><rect x="561.5" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (524 samples, 0.04%)</title><rect x="561.5" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.5" y="542.0"></text>
</g>
<g>
<title>byte[] (524 samples, 0.04%)</title><rect x="561.5" y="515.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="564.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,469 samples, 0.25%)</title><rect x="561.9" y="579.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,469 samples, 0.25%)</title><rect x="561.9" y="563.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$500/1769167198.get$Lambda (2,460 samples, 0.18%)</title><rect x="561.9" y="547.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.9" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$500 (2,460 samples, 0.18%)</title><rect x="561.9" y="531.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="564.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$506/634718879.get$Lambda (1,009 samples, 0.07%)</title><rect x="564.0" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.0" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$506 (1,009 samples, 0.07%)</title><rect x="564.0" y="531.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="567.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1920414521.linkToTargetMethod (4,239 samples, 0.31%)</title><rect x="564.9" y="579.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,239 samples, 0.31%)</title><rect x="564.9" y="563.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$509/29176825.get$Lambda (4,239 samples, 0.31%)</title><rect x="564.9" y="547.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.9" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$509 (4,239 samples, 0.31%)</title><rect x="564.9" y="531.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="567.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,408 samples, 0.18%)</title><rect x="568.5" y="579.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,408 samples, 0.18%)</title><rect x="568.5" y="563.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.5" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,408 samples, 0.18%)</title><rect x="568.5" y="547.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="571.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,421 samples, 0.10%)</title><rect x="570.6" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,421 samples, 0.10%)</title><rect x="570.6" y="563.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (831 samples, 0.06%)</title><rect x="570.6" y="547.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="573.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (590 samples, 0.04%)</title><rect x="571.3" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (590 samples, 0.04%)</title><rect x="571.3" y="531.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="574.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (4,269 samples, 0.31%)</title><rect x="571.8" y="579.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,269 samples, 0.31%)</title><rect x="571.8" y="563.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,996 samples, 0.22%)</title><rect x="571.8" y="547.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="574.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,273 samples, 0.09%)</title><rect x="574.4" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,273 samples, 0.09%)</title><rect x="574.4" y="531.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2,376 samples, 0.17%)</title><rect x="575.5" y="579.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,376 samples, 0.17%)</title><rect x="575.5" y="563.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,154 samples, 0.16%)</title><rect x="575.5" y="547.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="578.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (20,568 samples, 1.50%)</title><rect x="577.5" y="579.0" width="17.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.5" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (872 samples, 0.06%)</title><rect x="577.5" y="563.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="580.5" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3,688 samples, 0.27%)</title><rect x="578.3" y="563.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.3" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (817 samples, 0.06%)</title><rect x="578.3" y="547.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="581.3" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2,871 samples, 0.21%)</title><rect x="579.0" y="547.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1,686 samples, 0.12%)</title><rect x="579.0" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (1,686 samples, 0.12%)</title><rect x="579.0" y="515.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="582.0" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,185 samples, 0.09%)</title><rect x="580.4" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.4" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,185 samples, 0.09%)</title><rect x="580.4" y="515.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="583.4" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (610 samples, 0.04%)</title><rect x="581.5" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.5" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (610 samples, 0.04%)</title><rect x="581.5" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="584.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,398 samples, 0.25%)</title><rect x="582.0" y="563.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,398 samples, 0.25%)</title><rect x="582.0" y="547.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,398 samples, 0.25%)</title><rect x="582.0" y="531.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,398 samples, 0.25%)</title><rect x="582.0" y="515.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,398 samples, 0.25%)</title><rect x="582.0" y="499.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,164 samples, 0.23%)</title><rect x="582.0" y="483.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="585.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2,984 samples, 0.22%)</title><rect x="585.0" y="563.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2,984 samples, 0.22%)</title><rect x="585.0" y="547.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (2,984 samples, 0.22%)</title><rect x="585.0" y="531.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="588.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (8,850 samples, 0.64%)</title><rect x="587.6" y="563.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (7,340 samples, 0.53%)</title><rect x="587.6" y="547.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (6,015 samples, 0.44%)</title><rect x="587.6" y="531.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (6,015 samples, 0.44%)</title><rect x="587.6" y="515.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.6" y="526.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (1,319 samples, 0.10%)</title><rect x="587.6" y="499.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="590.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (4,696 samples, 0.34%)</title><rect x="588.7" y="499.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4,696 samples, 0.34%)</title><rect x="588.7" y="483.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4,696 samples, 0.34%)</title><rect x="588.7" y="467.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,696 samples, 0.34%)</title><rect x="588.7" y="451.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.7" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,151 samples, 0.16%)</title><rect x="588.7" y="435.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="591.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,545 samples, 0.19%)</title><rect x="590.6" y="435.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.6" y="446.0"></text>
</g>
<g>
<title>byte[] (2,545 samples, 0.19%)</title><rect x="590.6" y="419.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="593.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1,325 samples, 0.10%)</title><rect x="592.8" y="531.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1,325 samples, 0.10%)</title><rect x="592.8" y="515.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.8" y="526.0"></text>
</g>
<g>
<title>byte[] (1,325 samples, 0.10%)</title><rect x="592.8" y="499.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="595.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (978 samples, 0.07%)</title><rect x="593.9" y="547.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Long (978 samples, 0.07%)</title><rect x="593.9" y="531.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="596.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (506 samples, 0.04%)</title><rect x="594.8" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (506 samples, 0.04%)</title><rect x="594.8" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.8" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (506 samples, 0.04%)</title><rect x="594.8" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="597.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doGet (7,289 samples, 0.53%)</title><rect x="595.2" y="579.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,397 samples, 0.10%)</title><rect x="595.2" y="563.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,397 samples, 0.10%)</title><rect x="595.2" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$533/1873845241.get$Lambda (1,397 samples, 0.10%)</title><rect x="595.2" y="531.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.2" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$533 (1,397 samples, 0.10%)</title><rect x="595.2" y="515.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="598.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,793 samples, 0.20%)</title><rect x="596.4" y="563.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,793 samples, 0.20%)</title><rect x="596.4" y="547.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,703 samples, 0.12%)</title><rect x="596.4" y="531.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="599.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,090 samples, 0.08%)</title><rect x="597.9" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,090 samples, 0.08%)</title><rect x="597.9" y="515.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="600.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (3,099 samples, 0.23%)</title><rect x="598.8" y="563.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (3,099 samples, 0.23%)</title><rect x="598.8" y="547.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncRun (1,829 samples, 0.13%)</title><rect x="598.8" y="531.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="601.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,270 samples, 0.09%)</title><rect x="600.4" y="531.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="603.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (2,530 samples, 0.18%)</title><rect x="601.5" y="579.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,429 samples, 0.10%)</title><rect x="601.5" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,429 samples, 0.10%)</title><rect x="601.5" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$121/75551341.get$Lambda (1,429 samples, 0.10%)</title><rect x="601.5" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.5" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$121 (1,429 samples, 0.10%)</title><rect x="601.5" y="515.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,101 samples, 0.08%)</title><rect x="602.7" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,101 samples, 0.08%)</title><rect x="602.7" y="547.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1,013 samples, 0.07%)</title><rect x="602.7" y="531.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="605.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (405,631 samples, 29.55%)</title><rect x="603.7" y="691.0" width="348.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.7" y="702.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (405,631 samples, 29.55%)</title><rect x="603.7" y="675.0" width="348.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.7" y="686.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (405,631 samples, 29.55%)</title><rect x="603.7" y="659.0" width="348.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.7" y="670.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (405,631 samples, 29.55%)</title><rect x="603.7" y="643.0" width="348.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.7" y="654.0">java/util/concurrent/ForkJoinPool$WorkQueue.top..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (405,631 samples, 29.55%)</title><rect x="603.7" y="627.0" width="348.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.7" y="638.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (235,981 samples, 17.19%)</title><rect x="603.7" y="611.0" width="202.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.7" y="622.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (235,981 samples, 17.19%)</title><rect x="603.7" y="595.0" width="202.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.7" y="606.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$533/1873845241.run (235,981 samples, 17.19%)</title><rect x="603.7" y="579.0" width="202.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.7" y="590.0">ru/mail/polis/service/bori..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5 (235,981 samples, 17.19%)</title><rect x="603.7" y="563.0" width="202.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.7" y="574.0">ru/mail/polis/service/bori..</text>
</g>
<g>
<title>java/lang/String.getBytes (570 samples, 0.04%)</title><rect x="603.7" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (570 samples, 0.04%)</title><rect x="603.7" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (570 samples, 0.04%)</title><rect x="603.7" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (570 samples, 0.04%)</title><rect x="603.7" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.7" y="510.0"></text>
</g>
<g>
<title>byte[] (570 samples, 0.04%)</title><rect x="603.7" y="483.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="606.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (620 samples, 0.05%)</title><rect x="604.1" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (620 samples, 0.05%)</title><rect x="604.1" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.1" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (620 samples, 0.05%)</title><rect x="604.1" y="515.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="607.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.getTableCell (228,700 samples, 16.66%)</title><rect x="604.7" y="547.0" width="196.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.7" y="558.0">ru/mail/polis/dao/boriskin..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9,580 samples, 0.70%)</title><rect x="604.7" y="531.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9,580 samples, 0.70%)</title><rect x="604.7" y="515.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9,580 samples, 0.70%)</title><rect x="604.7" y="499.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9,580 samples, 0.70%)</title><rect x="604.7" y="483.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8,367 samples, 0.61%)</title><rect x="604.7" y="467.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.7" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,171 samples, 0.09%)</title><rect x="604.7" y="451.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,171 samples, 0.09%)</title><rect x="604.7" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,171 samples, 0.09%)</title><rect x="604.7" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,171 samples, 0.09%)</title><rect x="604.7" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,171 samples, 0.09%)</title><rect x="604.7" y="387.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,171 samples, 0.09%)</title><rect x="604.7" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,171 samples, 0.09%)</title><rect x="604.7" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,171 samples, 0.09%)</title><rect x="604.7" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,171 samples, 0.09%)</title><rect x="604.7" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (1,171 samples, 0.09%)</title><rect x="604.7" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,171 samples, 0.09%)</title><rect x="604.7" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,171 samples, 0.09%)</title><rect x="604.7" y="275.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="607.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,196 samples, 0.52%)</title><rect x="605.7" y="451.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,196 samples, 0.52%)</title><rect x="605.7" y="435.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,196 samples, 0.52%)</title><rect x="605.7" y="419.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,196 samples, 0.52%)</title><rect x="605.7" y="403.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,196 samples, 0.52%)</title><rect x="605.7" y="387.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,196 samples, 0.52%)</title><rect x="605.7" y="371.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,979 samples, 0.44%)</title><rect x="605.7" y="355.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (5,979 samples, 0.44%)</title><rect x="605.7" y="339.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (5,979 samples, 0.44%)</title><rect x="605.7" y="323.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (5,979 samples, 0.44%)</title><rect x="605.7" y="307.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,595 samples, 0.26%)</title><rect x="605.7" y="291.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,313 samples, 0.17%)</title><rect x="605.7" y="275.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="608.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,282 samples, 0.09%)</title><rect x="607.7" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.7" y="286.0"></text>
</g>
<g>
<title>byte[] (1,282 samples, 0.09%)</title><rect x="607.7" y="259.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="610.7" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (293 samples, 0.02%)</title><rect x="608.8" y="291.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="611.8" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (317 samples, 0.02%)</title><rect x="609.0" y="291.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="612.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (1,774 samples, 0.13%)</title><rect x="609.3" y="291.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,774 samples, 0.13%)</title><rect x="609.3" y="275.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.3" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,155 samples, 0.08%)</title><rect x="609.3" y="259.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="612.3" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (619 samples, 0.05%)</title><rect x="610.3" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.3" y="270.0"></text>
</g>
<g>
<title>byte[] (619 samples, 0.05%)</title><rect x="610.3" y="243.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="613.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,217 samples, 0.09%)</title><rect x="610.8" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,217 samples, 0.09%)</title><rect x="610.8" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,217 samples, 0.09%)</title><rect x="610.8" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,217 samples, 0.09%)</title><rect x="610.8" y="307.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (1,217 samples, 0.09%)</title><rect x="610.8" y="291.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,217 samples, 0.09%)</title><rect x="610.8" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,217 samples, 0.09%)</title><rect x="610.8" y="259.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="613.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$520/1124547716.apply (1,213 samples, 0.09%)</title><rect x="611.9" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (1,213 samples, 0.09%)</title><rect x="611.9" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,213 samples, 0.09%)</title><rect x="611.9" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.9" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,213 samples, 0.09%)</title><rect x="611.9" y="419.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="614.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (218,585 samples, 15.92%)</title><rect x="612.9" y="531.0" width="187.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.9" y="542.0">ru/mail/polis/dao/borisk..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (393 samples, 0.03%)</title><rect x="612.9" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.9" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (393 samples, 0.03%)</title><rect x="612.9" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="615.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (591 samples, 0.04%)</title><rect x="613.5" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (591 samples, 0.04%)</title><rect x="613.5" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="616.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (471 samples, 0.03%)</title><rect x="614.0" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.0" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (471 samples, 0.03%)</title><rect x="614.0" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (471 samples, 0.03%)</title><rect x="614.0" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (471 samples, 0.03%)</title><rect x="614.0" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.0" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (471 samples, 0.03%)</title><rect x="614.0" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="617.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (1,393 samples, 0.10%)</title><rect x="614.4" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (307 samples, 0.02%)</title><rect x="614.4" y="499.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.4" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (307 samples, 0.02%)</title><rect x="614.4" y="483.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="617.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (354 samples, 0.03%)</title><rect x="614.6" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (354 samples, 0.03%)</title><rect x="614.6" y="483.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="617.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (552 samples, 0.04%)</title><rect x="615.1" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (552 samples, 0.04%)</title><rect x="615.1" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (552 samples, 0.04%)</title><rect x="615.1" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (552 samples, 0.04%)</title><rect x="615.1" y="451.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="618.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (215,498 samples, 15.70%)</title><rect x="615.6" y="515.0" width="185.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.6" y="526.0">ru/mail/polis/dao/borisk..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27,947 samples, 2.04%)</title><rect x="615.6" y="499.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.6" y="510.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27,746 samples, 2.02%)</title><rect x="615.7" y="483.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.7" y="494.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,122 samples, 0.08%)</title><rect x="616.0" y="467.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.0" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (1,122 samples, 0.08%)</title><rect x="616.0" y="451.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="619.0" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (370 samples, 0.03%)</title><rect x="616.9" y="467.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="619.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (25,712 samples, 1.87%)</title><rect x="617.5" y="467.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.5" y="478.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (25,712 samples, 1.87%)</title><rect x="617.5" y="451.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.5" y="462.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (497 samples, 0.04%)</title><rect x="617.5" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (497 samples, 0.04%)</title><rect x="617.5" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (497 samples, 0.04%)</title><rect x="617.5" y="403.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="620.5" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (25,215 samples, 1.84%)</title><rect x="617.9" y="435.0" width="21.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (25,215 samples, 1.84%)</title><rect x="617.9" y="419.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.9" y="430.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25,215 samples, 1.84%)</title><rect x="617.9" y="403.0" width="21.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.9" y="414.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25,215 samples, 1.84%)</title><rect x="617.9" y="387.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.9" y="398.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22,859 samples, 1.67%)</title><rect x="617.9" y="371.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (22,859 samples, 1.67%)</title><rect x="617.9" y="355.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (22,859 samples, 1.67%)</title><rect x="617.9" y="339.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (22,859 samples, 1.67%)</title><rect x="617.9" y="323.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13,868 samples, 1.01%)</title><rect x="617.9" y="307.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9,038 samples, 0.66%)</title><rect x="617.9" y="291.0" width="7.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="620.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,830 samples, 0.35%)</title><rect x="625.7" y="291.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.7" y="302.0"></text>
</g>
<g>
<title>byte[] (4,830 samples, 0.35%)</title><rect x="625.7" y="275.0" width="4.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="628.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (1,162 samples, 0.08%)</title><rect x="629.8" y="307.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="632.8" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (1,086 samples, 0.08%)</title><rect x="630.8" y="307.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="633.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (6,743 samples, 0.49%)</title><rect x="631.8" y="307.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6,743 samples, 0.49%)</title><rect x="631.8" y="291.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,497 samples, 0.33%)</title><rect x="631.8" y="275.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="634.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,246 samples, 0.16%)</title><rect x="635.6" y="275.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.6" y="286.0"></text>
</g>
<g>
<title>byte[] (2,246 samples, 0.16%)</title><rect x="635.6" y="259.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="638.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2,356 samples, 0.17%)</title><rect x="637.6" y="371.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2,356 samples, 0.17%)</title><rect x="637.6" y="355.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (2,356 samples, 0.17%)</title><rect x="637.6" y="339.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (2,356 samples, 0.17%)</title><rect x="637.6" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (2,356 samples, 0.17%)</title><rect x="637.6" y="307.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,356 samples, 0.17%)</title><rect x="637.6" y="291.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,356 samples, 0.17%)</title><rect x="637.6" y="275.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="640.6" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (737 samples, 0.05%)</title><rect x="639.6" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (737 samples, 0.05%)</title><rect x="639.6" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.6" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (737 samples, 0.05%)</title><rect x="639.6" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.6" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (450 samples, 0.03%)</title><rect x="639.8" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (450 samples, 0.03%)</title><rect x="639.8" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (450 samples, 0.03%)</title><rect x="639.8" y="419.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="642.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8,312 samples, 0.61%)</title><rect x="640.4" y="499.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8,028 samples, 0.58%)</title><rect x="640.6" y="483.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8,028 samples, 0.58%)</title><rect x="640.6" y="467.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.6" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,132 samples, 0.08%)</title><rect x="640.6" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.6" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,132 samples, 0.08%)</title><rect x="640.6" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,132 samples, 0.08%)</title><rect x="640.6" y="419.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,132 samples, 0.08%)</title><rect x="640.6" y="403.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,132 samples, 0.08%)</title><rect x="640.6" y="387.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,132 samples, 0.08%)</title><rect x="640.6" y="371.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,132 samples, 0.08%)</title><rect x="640.6" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,132 samples, 0.08%)</title><rect x="640.6" y="339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,132 samples, 0.08%)</title><rect x="640.6" y="323.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (1,132 samples, 0.08%)</title><rect x="640.6" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,132 samples, 0.08%)</title><rect x="640.6" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,132 samples, 0.08%)</title><rect x="640.6" y="275.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="643.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,896 samples, 0.50%)</title><rect x="641.6" y="451.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.6" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,896 samples, 0.50%)</title><rect x="641.6" y="435.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,896 samples, 0.50%)</title><rect x="641.6" y="419.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.6" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,896 samples, 0.50%)</title><rect x="641.6" y="403.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,896 samples, 0.50%)</title><rect x="641.6" y="387.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,896 samples, 0.50%)</title><rect x="641.6" y="371.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,747 samples, 0.42%)</title><rect x="641.6" y="355.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (5,747 samples, 0.42%)</title><rect x="641.6" y="339.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (5,747 samples, 0.42%)</title><rect x="641.6" y="323.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (5,747 samples, 0.42%)</title><rect x="641.6" y="307.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,417 samples, 0.25%)</title><rect x="641.6" y="291.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,299 samples, 0.17%)</title><rect x="641.6" y="275.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="644.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,118 samples, 0.08%)</title><rect x="643.6" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.6" y="286.0"></text>
</g>
<g>
<title>byte[] (1,118 samples, 0.08%)</title><rect x="643.6" y="259.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="646.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (325 samples, 0.02%)</title><rect x="644.8" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="647.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (1,731 samples, 0.13%)</title><rect x="645.1" y="291.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,731 samples, 0.13%)</title><rect x="645.1" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.1" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,187 samples, 0.09%)</title><rect x="645.1" y="259.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="648.1" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (544 samples, 0.04%)</title><rect x="646.1" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.1" y="270.0"></text>
</g>
<g>
<title>byte[] (544 samples, 0.04%)</title><rect x="646.1" y="243.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="649.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,149 samples, 0.08%)</title><rect x="646.6" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,149 samples, 0.08%)</title><rect x="646.6" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,149 samples, 0.08%)</title><rect x="646.6" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,149 samples, 0.08%)</title><rect x="646.6" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (1,149 samples, 0.08%)</title><rect x="646.6" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,149 samples, 0.08%)</title><rect x="646.6" y="275.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.6" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,149 samples, 0.08%)</title><rect x="646.6" y="259.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="649.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (178,304 samples, 12.99%)</title><rect x="647.5" y="499.0" width="153.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.5" y="510.0">ru/mail/polis/dao/b..</text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.SortedStringTable$1 (1,820 samples, 0.13%)</title><rect x="647.5" y="483.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="650.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (176,484 samples, 12.86%)</title><rect x="649.1" y="483.0" width="151.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.1" y="494.0">ru/mail/polis/dao/b..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (176,484 samples, 12.86%)</title><rect x="649.1" y="467.0" width="151.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.1" y="478.0">ru/mail/polis/dao/b..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (176,484 samples, 12.86%)</title><rect x="649.1" y="451.0" width="151.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.1" y="462.0">ru/mail/polis/dao/b..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (117,677 samples, 8.57%)</title><rect x="649.1" y="435.0" width="101.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.1" y="446.0">java/nio/Byt..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (79,734 samples, 5.81%)</title><rect x="649.1" y="419.0" width="68.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="652.1" y="430.0">java.ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37,943 samples, 2.76%)</title><rect x="717.6" y="419.0" width="32.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.6" y="430.0">ja..</text>
</g>
<g>
<title>byte[] (37,943 samples, 2.76%)</title><rect x="717.6" y="403.0" width="32.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="720.6" y="414.0">by..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (58,807 samples, 4.28%)</title><rect x="750.3" y="435.0" width="50.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.3" y="446.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (58,807 samples, 4.28%)</title><rect x="750.3" y="419.0" width="50.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.3" y="430.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39,964 samples, 2.91%)</title><rect x="750.3" y="403.0" width="34.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="753.3" y="414.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18,843 samples, 1.37%)</title><rect x="784.6" y="403.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.6" y="414.0"></text>
</g>
<g>
<title>byte[] (18,843 samples, 1.37%)</title><rect x="784.6" y="387.0" width="16.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="787.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (535 samples, 0.04%)</title><rect x="800.8" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (535 samples, 0.04%)</title><rect x="800.8" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (535 samples, 0.04%)</title><rect x="800.8" y="499.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="803.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (2,014 samples, 0.15%)</title><rect x="801.3" y="547.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,014 samples, 0.15%)</title><rect x="801.3" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,014 samples, 0.15%)</title><rect x="801.3" y="515.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,470 samples, 0.11%)</title><rect x="801.3" y="499.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,470 samples, 0.11%)</title><rect x="801.3" y="483.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.3" y="494.0"></text>
</g>
<g>
<title>byte[] (1,470 samples, 0.11%)</title><rect x="801.3" y="467.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="804.3" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (544 samples, 0.04%)</title><rect x="802.5" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.5" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (544 samples, 0.04%)</title><rect x="802.5" y="483.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="805.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (1,077 samples, 0.08%)</title><rect x="803.0" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.0" y="558.0"></text>
</g>
<g>
<title>byte[] (336 samples, 0.02%)</title><rect x="803.0" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="806.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.isPresent (741 samples, 0.05%)</title><rect x="803.3" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.Value (387 samples, 0.03%)</title><rect x="803.3" y="515.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="806.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.&lt;init&gt; (354 samples, 0.03%)</title><rect x="803.6" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (354 samples, 0.03%)</title><rect x="803.6" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.6" y="510.0"></text>
</g>
<g>
<title>byte[] (354 samples, 0.03%)</title><rect x="803.6" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (3,000 samples, 0.22%)</title><rect x="803.9" y="547.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (807 samples, 0.06%)</title><rect x="803.9" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1479111435.invoke (807 samples, 0.06%)</title><rect x="803.9" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (807 samples, 0.06%)</title><rect x="803.9" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (296 samples, 0.02%)</title><rect x="803.9" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (296 samples, 0.02%)</title><rect x="803.9" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="806.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (511 samples, 0.04%)</title><rect x="804.2" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (511 samples, 0.04%)</title><rect x="804.2" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.2" y="478.0"></text>
</g>
<g>
<title>byte[] (511 samples, 0.04%)</title><rect x="804.2" y="451.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="807.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,105 samples, 0.08%)</title><rect x="804.9" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.9" y="542.0"></text>
</g>
<g>
<title>byte[] (449 samples, 0.03%)</title><rect x="804.9" y="515.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="807.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (376 samples, 0.03%)</title><rect x="805.3" y="515.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="808.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getData (803 samples, 0.06%)</title><rect x="805.8" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (803 samples, 0.06%)</title><rect x="805.8" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.8" y="526.0"></text>
</g>
<g>
<title>byte[] (803 samples, 0.06%)</title><rect x="805.8" y="499.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="808.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (122,807 samples, 8.95%)</title><rect x="806.5" y="611.0" width="105.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.5" y="622.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (122,807 samples, 8.95%)</title><rect x="806.5" y="595.0" width="105.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.5" y="606.0">java/util/con..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$121/75551341.get (122,807 samples, 8.95%)</title><rect x="806.5" y="579.0" width="105.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.5" y="590.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$21 (122,807 samples, 8.95%)</title><rect x="806.5" y="563.0" width="105.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.5" y="574.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$500/1769167198.run (122,807 samples, 8.95%)</title><rect x="806.5" y="547.0" width="105.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.5" y="558.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$0 (122,807 samples, 8.95%)</title><rect x="806.5" y="531.0" width="105.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.5" y="542.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (309 samples, 0.02%)</title><rect x="806.5" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (309 samples, 0.02%)</title><rect x="806.5" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (309 samples, 0.02%)</title><rect x="806.5" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (309 samples, 0.02%)</title><rect x="806.5" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.5" y="478.0"></text>
</g>
<g>
<title>byte[] (309 samples, 0.02%)</title><rect x="806.5" y="451.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="809.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (300 samples, 0.02%)</title><rect x="806.8" y="515.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (300 samples, 0.02%)</title><rect x="806.8" y="499.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.8" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (300 samples, 0.02%)</title><rect x="806.8" y="483.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="809.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (320 samples, 0.02%)</title><rect x="807.0" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (320 samples, 0.02%)</title><rect x="807.0" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (320 samples, 0.02%)</title><rect x="807.0" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (320 samples, 0.02%)</title><rect x="807.0" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (320 samples, 0.02%)</title><rect x="807.0" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (320 samples, 0.02%)</title><rect x="807.0" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="810.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.getTableCell (121,356 samples, 8.84%)</title><rect x="807.3" y="515.0" width="104.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.3" y="526.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4,695 samples, 0.34%)</title><rect x="807.3" y="499.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (4,695 samples, 0.34%)</title><rect x="807.3" y="483.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (4,695 samples, 0.34%)</title><rect x="807.3" y="467.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,695 samples, 0.34%)</title><rect x="807.3" y="451.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,120 samples, 0.30%)</title><rect x="807.3" y="435.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.3" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (598 samples, 0.04%)</title><rect x="807.3" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (598 samples, 0.04%)</title><rect x="807.3" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.3" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (598 samples, 0.04%)</title><rect x="807.3" y="387.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (598 samples, 0.04%)</title><rect x="807.3" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (598 samples, 0.04%)</title><rect x="807.3" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (598 samples, 0.04%)</title><rect x="807.3" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (598 samples, 0.04%)</title><rect x="807.3" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (598 samples, 0.04%)</title><rect x="807.3" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (598 samples, 0.04%)</title><rect x="807.3" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (598 samples, 0.04%)</title><rect x="807.3" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (598 samples, 0.04%)</title><rect x="807.3" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (598 samples, 0.04%)</title><rect x="807.3" y="243.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="810.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,522 samples, 0.26%)</title><rect x="807.8" y="419.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.8" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,522 samples, 0.26%)</title><rect x="807.8" y="403.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.8" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,522 samples, 0.26%)</title><rect x="807.8" y="387.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.8" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,522 samples, 0.26%)</title><rect x="807.8" y="371.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,522 samples, 0.26%)</title><rect x="807.8" y="355.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,522 samples, 0.26%)</title><rect x="807.8" y="339.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,987 samples, 0.22%)</title><rect x="807.8" y="323.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (2,987 samples, 0.22%)</title><rect x="807.8" y="307.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (2,987 samples, 0.22%)</title><rect x="807.8" y="291.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (2,987 samples, 0.22%)</title><rect x="807.8" y="275.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,776 samples, 0.13%)</title><rect x="807.8" y="259.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,182 samples, 0.09%)</title><rect x="807.8" y="243.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="810.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (594 samples, 0.04%)</title><rect x="808.8" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.8" y="254.0"></text>
</g>
<g>
<title>byte[] (594 samples, 0.04%)</title><rect x="808.8" y="227.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="811.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (928 samples, 0.07%)</title><rect x="809.6" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (928 samples, 0.07%)</title><rect x="809.6" y="243.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.6" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (629 samples, 0.05%)</title><rect x="809.6" y="227.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="812.6" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (299 samples, 0.02%)</title><rect x="810.1" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.1" y="238.0"></text>
</g>
<g>
<title>byte[] (299 samples, 0.02%)</title><rect x="810.1" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="813.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (535 samples, 0.04%)</title><rect x="810.4" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (535 samples, 0.04%)</title><rect x="810.4" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (535 samples, 0.04%)</title><rect x="810.4" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (535 samples, 0.04%)</title><rect x="810.4" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (535 samples, 0.04%)</title><rect x="810.4" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (535 samples, 0.04%)</title><rect x="810.4" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (535 samples, 0.04%)</title><rect x="810.4" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="813.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO$$Lambda$520/1124547716.apply (575 samples, 0.04%)</title><rect x="810.8" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (575 samples, 0.04%)</title><rect x="810.8" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (575 samples, 0.04%)</title><rect x="810.8" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.8" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (575 samples, 0.04%)</title><rect x="810.8" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="813.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (116,384 samples, 8.48%)</title><rect x="811.3" y="499.0" width="100.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.3" y="510.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (337 samples, 0.02%)</title><rect x="811.6" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (337 samples, 0.02%)</title><rect x="811.6" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="814.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (694 samples, 0.05%)</title><rect x="812.1" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (114,822 samples, 8.36%)</title><rect x="812.7" y="483.0" width="98.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.7" y="494.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (16,556 samples, 1.21%)</title><rect x="812.7" y="467.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16,478 samples, 1.20%)</title><rect x="812.8" y="451.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (669 samples, 0.05%)</title><rect x="812.9" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.9" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (669 samples, 0.05%)</title><rect x="812.9" y="419.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="815.9" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15,323 samples, 1.12%)</title><rect x="813.7" y="435.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15,323 samples, 1.12%)</title><rect x="813.7" y="419.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.7" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (15,091 samples, 1.10%)</title><rect x="813.9" y="403.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.9" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (15,091 samples, 1.10%)</title><rect x="813.9" y="387.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15,091 samples, 1.10%)</title><rect x="813.9" y="371.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15,091 samples, 1.10%)</title><rect x="813.9" y="355.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13,609 samples, 0.99%)</title><rect x="813.9" y="339.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (13,609 samples, 0.99%)</title><rect x="813.9" y="323.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (13,609 samples, 0.99%)</title><rect x="813.9" y="307.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (13,609 samples, 0.99%)</title><rect x="813.9" y="291.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,243 samples, 0.60%)</title><rect x="813.9" y="275.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.9" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,421 samples, 0.39%)</title><rect x="813.9" y="259.0" width="4.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="816.9" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,822 samples, 0.21%)</title><rect x="818.6" y="259.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.6" y="270.0"></text>
</g>
<g>
<title>byte[] (2,822 samples, 0.21%)</title><rect x="818.6" y="243.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="821.6" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (637 samples, 0.05%)</title><rect x="821.0" y="275.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="824.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (666 samples, 0.05%)</title><rect x="821.6" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="824.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (4,063 samples, 0.30%)</title><rect x="822.2" y="275.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,063 samples, 0.30%)</title><rect x="822.2" y="259.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,735 samples, 0.20%)</title><rect x="822.2" y="243.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="825.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,328 samples, 0.10%)</title><rect x="824.5" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.5" y="254.0"></text>
</g>
<g>
<title>byte[] (1,328 samples, 0.10%)</title><rect x="824.5" y="227.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="827.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,482 samples, 0.11%)</title><rect x="825.6" y="339.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,482 samples, 0.11%)</title><rect x="825.6" y="323.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,482 samples, 0.11%)</title><rect x="825.6" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,482 samples, 0.11%)</title><rect x="825.6" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (1,482 samples, 0.11%)</title><rect x="825.6" y="275.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,482 samples, 0.11%)</title><rect x="825.6" y="259.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,482 samples, 0.11%)</title><rect x="825.6" y="243.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="828.6" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (385 samples, 0.03%)</title><rect x="826.9" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.9" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (385 samples, 0.03%)</title><rect x="826.9" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.9" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (385 samples, 0.03%)</title><rect x="826.9" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4,185 samples, 0.30%)</title><rect x="827.3" y="467.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4,025 samples, 0.29%)</title><rect x="827.5" y="451.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,025 samples, 0.29%)</title><rect x="827.5" y="435.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.5" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (570 samples, 0.04%)</title><rect x="827.5" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.5" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (570 samples, 0.04%)</title><rect x="827.5" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.5" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (570 samples, 0.04%)</title><rect x="827.5" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (570 samples, 0.04%)</title><rect x="827.5" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (570 samples, 0.04%)</title><rect x="827.5" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (570 samples, 0.04%)</title><rect x="827.5" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (570 samples, 0.04%)</title><rect x="827.5" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (570 samples, 0.04%)</title><rect x="827.5" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (570 samples, 0.04%)</title><rect x="827.5" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (570 samples, 0.04%)</title><rect x="827.5" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (570 samples, 0.04%)</title><rect x="827.5" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (570 samples, 0.04%)</title><rect x="827.5" y="243.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="830.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,455 samples, 0.25%)</title><rect x="827.9" y="419.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.9" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,455 samples, 0.25%)</title><rect x="827.9" y="403.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.9" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,455 samples, 0.25%)</title><rect x="827.9" y="387.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.9" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,455 samples, 0.25%)</title><rect x="827.9" y="371.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,455 samples, 0.25%)</title><rect x="827.9" y="355.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,455 samples, 0.25%)</title><rect x="827.9" y="339.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,897 samples, 0.21%)</title><rect x="827.9" y="323.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (2,897 samples, 0.21%)</title><rect x="827.9" y="307.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (2,897 samples, 0.21%)</title><rect x="827.9" y="291.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (2,897 samples, 0.21%)</title><rect x="827.9" y="275.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,740 samples, 0.13%)</title><rect x="827.9" y="259.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,125 samples, 0.08%)</title><rect x="827.9" y="243.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="830.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (615 samples, 0.04%)</title><rect x="828.9" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.9" y="254.0"></text>
</g>
<g>
<title>byte[] (615 samples, 0.04%)</title><rect x="828.9" y="227.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="831.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (883 samples, 0.06%)</title><rect x="829.7" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (883 samples, 0.06%)</title><rect x="829.7" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.7" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (593 samples, 0.04%)</title><rect x="829.7" y="227.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="832.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (558 samples, 0.04%)</title><rect x="830.4" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (558 samples, 0.04%)</title><rect x="830.4" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (558 samples, 0.04%)</title><rect x="830.4" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (558 samples, 0.04%)</title><rect x="830.4" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (558 samples, 0.04%)</title><rect x="830.4" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.4" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (558 samples, 0.04%)</title><rect x="830.4" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.4" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (558 samples, 0.04%)</title><rect x="830.4" y="227.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="833.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (93,612 samples, 6.82%)</title><rect x="830.9" y="467.0" width="80.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.9" y="478.0">ru/mail/p..</text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.SortedStringTable$1 (1,099 samples, 0.08%)</title><rect x="830.9" y="451.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="833.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (92,513 samples, 6.74%)</title><rect x="831.9" y="451.0" width="79.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.9" y="462.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (92,513 samples, 6.74%)</title><rect x="831.9" y="435.0" width="79.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.9" y="446.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (92,513 samples, 6.74%)</title><rect x="831.9" y="419.0" width="79.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.9" y="430.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (61,540 samples, 4.48%)</title><rect x="831.9" y="403.0" width="52.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.9" y="414.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41,384 samples, 3.01%)</title><rect x="831.9" y="387.0" width="35.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="834.9" y="398.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20,156 samples, 1.47%)</title><rect x="867.4" y="387.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.4" y="398.0"></text>
</g>
<g>
<title>byte[] (20,156 samples, 1.47%)</title><rect x="867.4" y="371.0" width="17.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="870.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (30,973 samples, 2.26%)</title><rect x="884.8" y="403.0" width="26.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.8" y="414.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30,973 samples, 2.26%)</title><rect x="884.8" y="387.0" width="26.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.8" y="398.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20,784 samples, 1.51%)</title><rect x="884.8" y="371.0" width="17.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="887.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10,189 samples, 0.74%)</title><rect x="902.6" y="371.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.6" y="382.0"></text>
</g>
<g>
<title>byte[] (10,189 samples, 0.74%)</title><rect x="902.6" y="355.0" width="8.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="905.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (522 samples, 0.04%)</title><rect x="911.6" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.isPresent (346 samples, 0.03%)</title><rect x="911.8" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (46,843 samples, 3.41%)</title><rect x="912.1" y="611.0" width="40.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.1" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (41,578 samples, 3.03%)</title><rect x="912.1" y="595.0" width="35.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.1" y="606.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$506/634718879.apply (41,378 samples, 3.01%)</title><rect x="912.2" y="579.0" width="35.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.2" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$1 (41,378 samples, 3.01%)</title><rect x="912.2" y="563.0" width="35.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.2" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (41,378 samples, 3.01%)</title><rect x="912.2" y="547.0" width="35.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.2" y="558.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,054 samples, 0.08%)</title><rect x="912.4" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (1,054 samples, 0.08%)</title><rect x="912.4" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,054 samples, 0.08%)</title><rect x="912.4" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (779 samples, 0.06%)</title><rect x="912.6" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (779 samples, 0.06%)</title><rect x="912.6" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.6" y="478.0"></text>
</g>
<g>
<title>byte[] (779 samples, 0.06%)</title><rect x="912.6" y="451.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="915.6" y="462.0"></text>
</g>
<g>
<title>java/net/URI.create (4,582 samples, 0.33%)</title><rect x="913.3" y="531.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.3" y="542.0"></text>
</g>
<g>
<title>java.net.URI (956 samples, 0.07%)</title><rect x="913.3" y="515.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="916.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (3,626 samples, 0.26%)</title><rect x="914.1" y="515.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.1" y="526.0"></text>
</g>
<g>
<title>java.net.URI$Parser (408 samples, 0.03%)</title><rect x="914.1" y="499.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="917.1" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (3,218 samples, 0.23%)</title><rect x="914.4" y="499.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (587 samples, 0.04%)</title><rect x="914.4" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (587 samples, 0.04%)</title><rect x="914.4" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (295 samples, 0.02%)</title><rect x="914.4" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="917.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (292 samples, 0.02%)</title><rect x="914.7" y="451.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.7" y="462.0"></text>
</g>
<g>
<title>byte[] (292 samples, 0.02%)</title><rect x="914.7" y="435.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="917.7" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2,631 samples, 0.19%)</title><rect x="914.9" y="483.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,338 samples, 0.10%)</title><rect x="914.9" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,338 samples, 0.10%)</title><rect x="914.9" y="451.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (586 samples, 0.04%)</title><rect x="914.9" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="917.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (752 samples, 0.05%)</title><rect x="915.4" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.4" y="446.0"></text>
</g>
<g>
<title>byte[] (752 samples, 0.05%)</title><rect x="915.4" y="419.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="918.4" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1,293 samples, 0.09%)</title><rect x="916.1" y="467.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (600 samples, 0.04%)</title><rect x="916.1" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (600 samples, 0.04%)</title><rect x="916.1" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (349 samples, 0.03%)</title><rect x="916.3" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.3" y="430.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.03%)</title><rect x="916.3" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="919.3" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (693 samples, 0.05%)</title><rect x="916.6" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.6" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (693 samples, 0.05%)</title><rect x="916.6" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (693 samples, 0.05%)</title><rect x="916.6" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (693 samples, 0.05%)</title><rect x="916.6" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (299 samples, 0.02%)</title><rect x="916.6" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="919.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (394 samples, 0.03%)</title><rect x="916.9" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.9" y="398.0"></text>
</g>
<g>
<title>byte[] (394 samples, 0.03%)</title><rect x="916.9" y="371.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="919.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (1,217 samples, 0.09%)</title><rect x="917.2" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (463 samples, 0.03%)</title><rect x="917.2" y="515.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="920.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (754 samples, 0.05%)</title><rect x="917.6" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (574 samples, 0.04%)</title><rect x="917.8" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (574 samples, 0.04%)</title><rect x="917.8" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="920.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (325 samples, 0.02%)</title><rect x="918.2" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (325 samples, 0.02%)</title><rect x="918.2" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (325 samples, 0.02%)</title><rect x="918.2" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (325 samples, 0.02%)</title><rect x="918.2" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="921.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (325 samples, 0.02%)</title><rect x="918.2" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (325 samples, 0.02%)</title><rect x="918.2" y="451.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="921.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (23,235 samples, 1.69%)</title><rect x="918.5" y="531.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (23,235 samples, 1.69%)</title><rect x="918.5" y="515.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (23,235 samples, 1.69%)</title><rect x="918.5" y="499.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (23,235 samples, 1.69%)</title><rect x="918.5" y="483.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (870 samples, 0.06%)</title><rect x="918.7" y="467.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (870 samples, 0.06%)</title><rect x="918.7" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (493 samples, 0.04%)</title><rect x="918.7" y="435.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="921.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (377 samples, 0.03%)</title><rect x="919.1" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="922.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (377 samples, 0.03%)</title><rect x="919.1" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (377 samples, 0.03%)</title><rect x="919.1" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="922.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (824 samples, 0.06%)</title><rect x="919.5" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (824 samples, 0.06%)</title><rect x="919.5" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (464 samples, 0.03%)</title><rect x="919.5" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="922.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (360 samples, 0.03%)</title><rect x="919.9" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (360 samples, 0.03%)</title><rect x="919.9" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (360 samples, 0.03%)</title><rect x="919.9" y="403.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="922.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (678 samples, 0.05%)</title><rect x="920.2" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="923.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (1,172 samples, 0.09%)</title><rect x="920.8" y="467.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="923.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (11,194 samples, 0.82%)</title><rect x="921.8" y="467.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,307 samples, 0.10%)</title><rect x="921.8" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.8" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,015 samples, 0.07%)</title><rect x="921.8" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (380 samples, 0.03%)</title><rect x="921.8" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.8" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (380 samples, 0.03%)</title><rect x="921.8" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="924.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (635 samples, 0.05%)</title><rect x="922.1" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="925.1" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (635 samples, 0.05%)</title><rect x="922.1" y="403.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="925.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (292 samples, 0.02%)</title><rect x="922.6" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (292 samples, 0.02%)</title><rect x="922.6" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (292 samples, 0.02%)</title><rect x="922.6" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (292 samples, 0.02%)</title><rect x="922.6" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.6" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (292 samples, 0.02%)</title><rect x="922.6" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="925.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,633 samples, 0.34%)</title><rect x="922.9" y="451.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="925.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,633 samples, 0.34%)</title><rect x="922.9" y="435.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.9" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (302 samples, 0.02%)</title><rect x="923.0" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="926.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (586 samples, 0.04%)</title><rect x="923.3" y="419.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="926.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (390 samples, 0.03%)</title><rect x="923.9" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="926.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (390 samples, 0.03%)</title><rect x="923.9" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="926.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.get$Lambda (390 samples, 0.03%)</title><rect x="923.9" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="926.9" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (390 samples, 0.03%)</title><rect x="923.9" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="926.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2,043 samples, 0.15%)</title><rect x="924.3" y="419.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,043 samples, 0.15%)</title><rect x="924.3" y="403.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (2,043 samples, 0.15%)</title><rect x="924.3" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,043 samples, 0.15%)</title><rect x="924.3" y="371.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.3" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (700 samples, 0.05%)</title><rect x="924.3" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.accept (700 samples, 0.05%)</title><rect x="924.3" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (700 samples, 0.05%)</title><rect x="924.3" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (700 samples, 0.05%)</title><rect x="924.3" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (700 samples, 0.05%)</title><rect x="924.3" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="927.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (700 samples, 0.05%)</title><rect x="924.3" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (700 samples, 0.05%)</title><rect x="924.3" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (700 samples, 0.05%)</title><rect x="924.3" y="243.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (700 samples, 0.05%)</title><rect x="924.3" y="227.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="927.3" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (576 samples, 0.04%)</title><rect x="925.1" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.1" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (576 samples, 0.04%)</title><rect x="925.1" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.1" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (304 samples, 0.02%)</title><rect x="925.4" y="323.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.4" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (304 samples, 0.02%)</title><rect x="925.4" y="307.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="928.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (480 samples, 0.03%)</title><rect x="925.6" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.6" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (480 samples, 0.03%)</title><rect x="925.6" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="928.6" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (400 samples, 0.03%)</title><rect x="926.0" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.0" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (400 samples, 0.03%)</title><rect x="926.0" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="929.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (565 samples, 0.04%)</title><rect x="926.4" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (565 samples, 0.04%)</title><rect x="926.4" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="929.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (3,526 samples, 0.26%)</title><rect x="927.0" y="451.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.0" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (3,526 samples, 0.26%)</title><rect x="927.0" y="435.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.0" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3,149 samples, 0.23%)</title><rect x="927.0" y="419.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.0" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3,149 samples, 0.23%)</title><rect x="927.0" y="403.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.0" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3,149 samples, 0.23%)</title><rect x="927.0" y="387.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.0" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (838 samples, 0.06%)</title><rect x="927.0" y="371.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="930.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,198 samples, 0.09%)</title><rect x="927.7" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.7" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,198 samples, 0.09%)</title><rect x="927.7" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.7" y="366.0"></text>
</g>
<g>
<title>byte[] (1,198 samples, 0.09%)</title><rect x="927.7" y="339.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="930.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,113 samples, 0.08%)</title><rect x="928.8" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,113 samples, 0.08%)</title><rect x="928.8" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,113 samples, 0.08%)</title><rect x="928.8" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.8" y="350.0"></text>
</g>
<g>
<title>byte[] (1,113 samples, 0.08%)</title><rect x="928.8" y="323.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="931.8" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (377 samples, 0.03%)</title><rect x="929.7" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="932.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (547 samples, 0.04%)</title><rect x="930.1" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (547 samples, 0.04%)</title><rect x="930.1" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="933.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (992 samples, 0.07%)</title><rect x="930.5" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (293 samples, 0.02%)</title><rect x="930.8" y="435.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (293 samples, 0.02%)</title><rect x="930.8" y="419.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="933.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (429 samples, 0.03%)</title><rect x="931.0" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (429 samples, 0.03%)</title><rect x="931.0" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="934.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (5,289 samples, 0.39%)</title><rect x="931.4" y="467.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (866 samples, 0.06%)</title><rect x="931.5" y="451.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="934.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (4,091 samples, 0.30%)</title><rect x="932.4" y="451.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (4,091 samples, 0.30%)</title><rect x="932.4" y="435.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (379 samples, 0.03%)</title><rect x="932.4" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="935.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (332 samples, 0.02%)</title><rect x="932.7" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="935.7" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (387 samples, 0.03%)</title><rect x="933.0" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="936.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1,816 samples, 0.13%)</title><rect x="933.4" y="419.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="936.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1,816 samples, 0.13%)</title><rect x="933.4" y="403.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.4" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1,816 samples, 0.13%)</title><rect x="933.4" y="387.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="936.4" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1,816 samples, 0.13%)</title><rect x="933.4" y="371.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.4" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,816 samples, 0.13%)</title><rect x="933.4" y="355.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="936.4" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (641 samples, 0.05%)</title><rect x="934.9" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (641 samples, 0.05%)</title><rect x="934.9" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (465 samples, 0.03%)</title><rect x="935.1" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (465 samples, 0.03%)</title><rect x="935.1" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="938.1" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (536 samples, 0.04%)</title><rect x="935.5" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="938.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (536 samples, 0.04%)</title><rect x="935.5" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (536 samples, 0.04%)</title><rect x="935.5" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="938.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2,989 samples, 0.22%)</title><rect x="935.9" y="467.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (568 samples, 0.04%)</title><rect x="935.9" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (302 samples, 0.02%)</title><rect x="936.2" y="435.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (302 samples, 0.02%)</title><rect x="936.2" y="419.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (297 samples, 0.02%)</title><rect x="936.2" y="403.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="939.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (360 samples, 0.03%)</title><rect x="936.4" y="451.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="939.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2,061 samples, 0.15%)</title><rect x="936.7" y="451.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="939.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (354 samples, 0.03%)</title><rect x="936.7" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (354 samples, 0.03%)</title><rect x="936.7" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,707 samples, 0.12%)</title><rect x="937.0" y="435.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,707 samples, 0.12%)</title><rect x="937.0" y="419.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (963 samples, 0.07%)</title><rect x="937.0" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="940.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (744 samples, 0.05%)</title><rect x="937.9" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (744 samples, 0.05%)</title><rect x="937.9" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (744 samples, 0.05%)</title><rect x="937.9" y="371.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="940.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (5,004 samples, 0.36%)</title><rect x="938.5" y="531.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (485 samples, 0.04%)</title><rect x="938.5" y="515.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="941.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (4,519 samples, 0.33%)</title><rect x="938.9" y="515.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="941.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,519 samples, 0.33%)</title><rect x="938.9" y="499.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,519 samples, 0.33%)</title><rect x="938.9" y="483.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.9" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (562 samples, 0.04%)</title><rect x="939.3" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="942.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (387 samples, 0.03%)</title><rect x="940.0" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (387 samples, 0.03%)</title><rect x="940.0" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.get$Lambda (387 samples, 0.03%)</title><rect x="940.0" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.0" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (387 samples, 0.03%)</title><rect x="940.0" y="419.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="943.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (399 samples, 0.03%)</title><rect x="940.3" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.3" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (399 samples, 0.03%)</title><rect x="940.3" y="451.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="943.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,916 samples, 0.14%)</title><rect x="940.6" y="467.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (1,916 samples, 0.14%)</title><rect x="940.6" y="451.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,916 samples, 0.14%)</title><rect x="940.6" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="943.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (641 samples, 0.05%)</title><rect x="940.9" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.accept (641 samples, 0.05%)</title><rect x="940.9" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (641 samples, 0.05%)</title><rect x="940.9" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (641 samples, 0.05%)</title><rect x="940.9" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (641 samples, 0.05%)</title><rect x="940.9" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (641 samples, 0.05%)</title><rect x="940.9" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (641 samples, 0.05%)</title><rect x="940.9" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (641 samples, 0.05%)</title><rect x="940.9" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (641 samples, 0.05%)</title><rect x="940.9" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="943.9" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (512 samples, 0.04%)</title><rect x="941.4" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.4" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (512 samples, 0.04%)</title><rect x="941.4" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (486 samples, 0.04%)</title><rect x="941.9" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (486 samples, 0.04%)</title><rect x="941.9" y="403.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="944.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (608 samples, 0.04%)</title><rect x="942.3" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (608 samples, 0.04%)</title><rect x="942.3" y="451.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="945.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1,016 samples, 0.07%)</title><rect x="942.8" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1,016 samples, 0.07%)</title><rect x="942.8" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,016 samples, 0.07%)</title><rect x="942.8" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.8" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (296 samples, 0.02%)</title><rect x="942.8" y="483.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="945.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (447 samples, 0.03%)</title><rect x="943.3" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (447 samples, 0.03%)</title><rect x="943.3" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="946.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (4,818 samples, 0.35%)</title><rect x="943.7" y="531.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4,015 samples, 0.29%)</title><rect x="944.2" y="515.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$235/1399149317.accept (4,015 samples, 0.29%)</title><rect x="944.2" y="499.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (4,015 samples, 0.29%)</title><rect x="944.2" y="483.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (886 samples, 0.06%)</title><rect x="944.2" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (886 samples, 0.06%)</title><rect x="944.2" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (474 samples, 0.03%)</title><rect x="944.2" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="947.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (412 samples, 0.03%)</title><rect x="944.6" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (412 samples, 0.03%)</title><rect x="944.6" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (412 samples, 0.03%)</title><rect x="944.6" y="403.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="947.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (2,258 samples, 0.16%)</title><rect x="945.0" y="467.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (1,052 samples, 0.08%)</title><rect x="945.3" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (1,052 samples, 0.08%)</title><rect x="945.3" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (770 samples, 0.06%)</title><rect x="945.3" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="948.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (845 samples, 0.06%)</title><rect x="946.2" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (845 samples, 0.06%)</title><rect x="946.2" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (459 samples, 0.03%)</title><rect x="946.2" y="419.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="949.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (386 samples, 0.03%)</title><rect x="946.6" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (386 samples, 0.03%)</title><rect x="946.6" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (386 samples, 0.03%)</title><rect x="946.6" y="387.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="949.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (871 samples, 0.06%)</title><rect x="946.9" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (871 samples, 0.06%)</title><rect x="946.9" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (468 samples, 0.03%)</title><rect x="946.9" y="435.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="949.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (403 samples, 0.03%)</title><rect x="947.3" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (403 samples, 0.03%)</title><rect x="947.3" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (403 samples, 0.03%)</title><rect x="947.3" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="950.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5,265 samples, 0.38%)</title><rect x="947.8" y="595.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5,258 samples, 0.38%)</title><rect x="947.8" y="579.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$226/1731537133.accept (510 samples, 0.04%)</title><rect x="947.8" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (510 samples, 0.04%)</title><rect x="947.8" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (510 samples, 0.04%)</title><rect x="947.8" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (510 samples, 0.04%)</title><rect x="947.8" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (510 samples, 0.04%)</title><rect x="947.8" y="499.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="950.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$509/29176825.accept (4,748 samples, 0.35%)</title><rect x="948.3" y="563.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$3 (4,748 samples, 0.35%)</title><rect x="948.3" y="547.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getNumberOfSuccessfulResponses (1,437 samples, 0.10%)</title><rect x="948.3" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$536/1241806593.test (1,437 samples, 0.10%)</title><rect x="948.3" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$2 (1,437 samples, 0.10%)</title><rect x="948.3" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (1,437 samples, 0.10%)</title><rect x="948.3" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (328 samples, 0.02%)</title><rect x="948.3" y="467.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (328 samples, 0.02%)</title><rect x="948.3" y="451.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (724 samples, 0.05%)</title><rect x="948.5" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.5" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (495 samples, 0.04%)</title><rect x="948.5" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (316 samples, 0.02%)</title><rect x="948.7" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.7" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (316 samples, 0.02%)</title><rect x="948.7" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="951.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.isPresent (385 samples, 0.03%)</title><rect x="949.2" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="952.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (789 samples, 0.06%)</title><rect x="949.5" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (789 samples, 0.06%)</title><rect x="949.5" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (789 samples, 0.06%)</title><rect x="949.5" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (789 samples, 0.06%)</title><rect x="949.5" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (563 samples, 0.04%)</title><rect x="949.5" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (563 samples, 0.04%)</title><rect x="949.5" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.5" y="462.0"></text>
</g>
<g>
<title>byte[] (563 samples, 0.04%)</title><rect x="949.5" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="952.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.merge (1,453 samples, 0.11%)</title><rect x="950.2" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.2" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (490 samples, 0.04%)</title><rect x="950.2" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (306 samples, 0.02%)</title><rect x="950.3" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (306 samples, 0.02%)</title><rect x="950.3" y="483.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="953.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (385 samples, 0.03%)</title><rect x="950.6" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (385 samples, 0.03%)</title><rect x="950.6" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="953.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (578 samples, 0.04%)</title><rect x="950.9" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (494 samples, 0.04%)</title><rect x="951.0" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (352 samples, 0.03%)</title><rect x="951.0" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (352 samples, 0.03%)</title><rect x="951.0" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (1,069 samples, 0.08%)</title><rect x="951.4" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (567 samples, 0.04%)</title><rect x="951.5" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getData (368 samples, 0.03%)</title><rect x="952.0" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (368 samples, 0.03%)</title><rect x="952.0" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.0" y="510.0"></text>
</g>
<g>
<title>byte[] (368 samples, 0.03%)</title><rect x="952.0" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="955.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (59,612 samples, 4.34%)</title><rect x="952.3" y="691.0" width="51.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.3" y="702.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,410 samples, 0.10%)</title><rect x="952.3" y="675.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,410 samples, 0.10%)</title><rect x="952.3" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/1832258136.get$Lambda (868 samples, 0.06%)</title><rect x="952.3" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$356 (868 samples, 0.06%)</title><rect x="952.3" y="627.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="955.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$361/1597749908.get$Lambda (542 samples, 0.04%)</title><rect x="953.1" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="956.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$361 (542 samples, 0.04%)</title><rect x="953.1" y="627.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="956.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (1,350 samples, 0.10%)</title><rect x="953.6" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,350 samples, 0.10%)</title><rect x="953.6" y="659.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/1080786945.get$Lambda (1,350 samples, 0.10%)</title><rect x="953.6" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$357 (1,350 samples, 0.10%)</title><rect x="953.6" y="627.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="956.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (11,591 samples, 0.84%)</title><rect x="954.7" y="675.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$359/1867646888.accept (9,344 samples, 0.68%)</title><rect x="954.7" y="659.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (9,344 samples, 0.68%)</title><rect x="954.7" y="643.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (9,344 samples, 0.68%)</title><rect x="954.7" y="627.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (9,344 samples, 0.68%)</title><rect x="954.7" y="611.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (9,344 samples, 0.68%)</title><rect x="954.7" y="595.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (9,344 samples, 0.68%)</title><rect x="954.7" y="579.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,344 samples, 0.68%)</title><rect x="954.7" y="563.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,344 samples, 0.68%)</title><rect x="954.7" y="547.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9,344 samples, 0.68%)</title><rect x="954.7" y="531.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (9,344 samples, 0.68%)</title><rect x="954.7" y="515.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/1939355275.run (9,344 samples, 0.68%)</title><rect x="954.7" y="499.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="957.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (9,344 samples, 0.68%)</title><rect x="954.7" y="483.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2,712 samples, 0.20%)</title><rect x="954.7" y="467.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2,712 samples, 0.20%)</title><rect x="954.7" y="451.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (2,712 samples, 0.20%)</title><rect x="954.7" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1,325 samples, 0.10%)</title><rect x="954.7" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1,325 samples, 0.10%)</title><rect x="954.7" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1,325 samples, 0.10%)</title><rect x="954.7" y="387.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1,325 samples, 0.10%)</title><rect x="954.7" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1,325 samples, 0.10%)</title><rect x="954.7" y="355.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="957.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,387 samples, 0.10%)</title><rect x="955.9" y="419.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,387 samples, 0.10%)</title><rect x="955.9" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,387 samples, 0.10%)</title><rect x="955.9" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,387 samples, 0.10%)</title><rect x="955.9" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,387 samples, 0.10%)</title><rect x="955.9" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,383 samples, 0.10%)</title><rect x="955.9" y="339.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="958.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1,011 samples, 0.07%)</title><rect x="957.1" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,011 samples, 0.07%)</title><rect x="957.1" y="451.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,011 samples, 0.07%)</title><rect x="957.1" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379/2007538046.get$Lambda (1,011 samples, 0.07%)</title><rect x="957.1" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="960.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379 (1,011 samples, 0.07%)</title><rect x="957.1" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="960.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (5,507 samples, 0.40%)</title><rect x="958.0" y="467.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (4,229 samples, 0.31%)</title><rect x="958.0" y="451.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,903 samples, 0.21%)</title><rect x="958.0" y="435.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="961.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,903 samples, 0.21%)</title><rect x="958.0" y="419.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="961.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1,326 samples, 0.10%)</title><rect x="960.5" y="435.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (1,326 samples, 0.10%)</title><rect x="960.5" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.5" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,326 samples, 0.10%)</title><rect x="960.5" y="403.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="963.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1,278 samples, 0.09%)</title><rect x="961.6" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$250/1918975754.get (1,278 samples, 0.09%)</title><rect x="961.6" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="964.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1,278 samples, 0.09%)</title><rect x="961.6" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,278 samples, 0.09%)</title><rect x="961.6" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="964.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,267 samples, 0.09%)</title><rect x="961.7" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.7" y="398.0"></text>
</g>
<g>
<title>byte[] (1,245 samples, 0.09%)</title><rect x="961.7" y="371.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="964.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$362/539728284.accept (2,247 samples, 0.16%)</title><rect x="962.7" y="659.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2,247 samples, 0.16%)</title><rect x="962.7" y="643.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/1080786945.run (2,247 samples, 0.16%)</title><rect x="962.7" y="627.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2,247 samples, 0.16%)</title><rect x="962.7" y="611.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2,247 samples, 0.16%)</title><rect x="962.7" y="595.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,247 samples, 0.16%)</title><rect x="962.7" y="579.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2,247 samples, 0.16%)</title><rect x="962.7" y="563.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2,247 samples, 0.16%)</title><rect x="962.7" y="547.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="965.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (5,640 samples, 0.41%)</title><rect x="964.7" y="675.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.7" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (5,640 samples, 0.41%)</title><rect x="964.7" y="659.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="967.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (2,889 samples, 0.21%)</title><rect x="969.5" y="675.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="972.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,494 samples, 0.11%)</title><rect x="969.5" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1,494 samples, 0.11%)</title><rect x="969.5" y="643.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1,494 samples, 0.11%)</title><rect x="969.5" y="627.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,494 samples, 0.11%)</title><rect x="969.5" y="611.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,494 samples, 0.11%)</title><rect x="969.5" y="595.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1,494 samples, 0.11%)</title><rect x="969.5" y="579.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.5" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1,494 samples, 0.11%)</title><rect x="969.5" y="563.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="972.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (1,395 samples, 0.10%)</title><rect x="970.8" y="659.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.8" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (1,395 samples, 0.10%)</title><rect x="970.8" y="643.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="973.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (9,095 samples, 0.66%)</title><rect x="972.0" y="675.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$268/2056775355.run (4,482 samples, 0.33%)</title><rect x="972.0" y="659.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (4,482 samples, 0.33%)</title><rect x="972.0" y="643.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="975.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,482 samples, 0.33%)</title><rect x="972.0" y="627.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,482 samples, 0.33%)</title><rect x="972.0" y="611.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,482 samples, 0.33%)</title><rect x="972.0" y="595.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4,482 samples, 0.33%)</title><rect x="972.0" y="579.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/1939355275.run (4,482 samples, 0.33%)</title><rect x="972.0" y="563.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (4,482 samples, 0.33%)</title><rect x="972.0" y="547.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (4,444 samples, 0.32%)</title><rect x="972.0" y="531.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4,444 samples, 0.32%)</title><rect x="972.0" y="515.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3,019 samples, 0.22%)</title><rect x="972.0" y="499.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="975.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3,019 samples, 0.22%)</title><rect x="972.0" y="483.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3,019 samples, 0.22%)</title><rect x="972.0" y="467.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (2,161 samples, 0.16%)</title><rect x="972.0" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (2,161 samples, 0.16%)</title><rect x="972.0" y="435.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,161 samples, 0.16%)</title><rect x="972.0" y="419.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,161 samples, 0.16%)</title><rect x="972.0" y="403.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,161 samples, 0.16%)</title><rect x="972.0" y="387.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.0" y="398.0"></text>
</g>
<g>
<title>byte[] (2,161 samples, 0.16%)</title><rect x="972.0" y="371.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="975.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (858 samples, 0.06%)</title><rect x="973.9" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (858 samples, 0.06%)</title><rect x="973.9" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (858 samples, 0.06%)</title><rect x="973.9" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379/2007538046.get$Lambda (858 samples, 0.06%)</title><rect x="973.9" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="976.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379 (858 samples, 0.06%)</title><rect x="973.9" y="387.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="976.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1,425 samples, 0.10%)</title><rect x="974.6" y="499.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,425 samples, 0.10%)</title><rect x="974.6" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,425 samples, 0.10%)</title><rect x="974.6" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,425 samples, 0.10%)</title><rect x="974.6" y="451.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,425 samples, 0.10%)</title><rect x="974.6" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,425 samples, 0.10%)</title><rect x="974.6" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,419 samples, 0.10%)</title><rect x="974.6" y="403.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="977.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/596181081.run (4,613 samples, 0.34%)</title><rect x="975.9" y="659.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (4,613 samples, 0.34%)</title><rect x="975.9" y="643.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,802 samples, 0.13%)</title><rect x="975.9" y="627.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,802 samples, 0.13%)</title><rect x="975.9" y="611.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$378/269063177.get$Lambda (1,802 samples, 0.13%)</title><rect x="975.9" y="595.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$378 (1,802 samples, 0.13%)</title><rect x="975.9" y="579.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="978.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,811 samples, 0.20%)</title><rect x="977.4" y="627.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="980.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,811 samples, 0.20%)</title><rect x="977.4" y="611.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="980.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,811 samples, 0.20%)</title><rect x="977.4" y="595.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,807 samples, 0.20%)</title><rect x="977.4" y="579.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="980.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (12,033 samples, 0.88%)</title><rect x="979.8" y="675.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.8" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (2,005 samples, 0.15%)</title><rect x="979.8" y="659.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.8" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2,005 samples, 0.15%)</title><rect x="979.8" y="643.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.8" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2,005 samples, 0.15%)</title><rect x="979.8" y="627.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="982.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (2,005 samples, 0.15%)</title><rect x="979.8" y="611.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.8" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (2,005 samples, 0.15%)</title><rect x="979.8" y="595.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="982.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (10,028 samples, 0.73%)</title><rect x="981.6" y="659.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,397 samples, 0.10%)</title><rect x="981.6" y="643.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,397 samples, 0.10%)</title><rect x="981.6" y="627.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$496/1395379602.get$Lambda (1,397 samples, 0.10%)</title><rect x="981.6" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$496 (1,397 samples, 0.10%)</title><rect x="981.6" y="595.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="984.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2,676 samples, 0.19%)</title><rect x="982.8" y="643.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.8" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (2,676 samples, 0.19%)</title><rect x="982.8" y="627.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="985.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (1,246 samples, 0.09%)</title><rect x="985.1" y="643.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.1" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (1,246 samples, 0.09%)</title><rect x="985.1" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.1" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (1,246 samples, 0.09%)</title><rect x="985.1" y="611.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="988.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (4,709 samples, 0.34%)</title><rect x="986.1" y="643.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.1" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (2,001 samples, 0.15%)</title><rect x="986.1" y="627.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="989.1" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2,708 samples, 0.20%)</title><rect x="987.8" y="627.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.8" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2,708 samples, 0.20%)</title><rect x="987.8" y="611.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.8" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2,708 samples, 0.20%)</title><rect x="987.8" y="595.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="990.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (10,208 samples, 0.74%)</title><rect x="990.2" y="675.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (913 samples, 0.07%)</title><rect x="990.2" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (913 samples, 0.07%)</title><rect x="990.2" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$355/1344266541.get$Lambda (913 samples, 0.07%)</title><rect x="990.2" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$355 (913 samples, 0.07%)</title><rect x="990.2" y="611.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="993.2" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5,550 samples, 0.40%)</title><rect x="991.0" y="659.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (2,356 samples, 0.17%)</title><rect x="991.0" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (2,356 samples, 0.17%)</title><rect x="991.0" y="627.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="994.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3,194 samples, 0.23%)</title><rect x="993.0" y="643.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="996.0" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3,185 samples, 0.23%)</title><rect x="993.0" y="627.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="996.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3,745 samples, 0.27%)</title><rect x="995.7" y="659.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (3,626 samples, 0.26%)</title><rect x="995.7" y="643.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="998.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (3,063 samples, 0.22%)</title><rect x="998.9" y="675.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3,063 samples, 0.22%)</title><rect x="998.9" y="659.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (3,063 samples, 0.22%)</title><rect x="998.9" y="643.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3,063 samples, 0.22%)</title><rect x="998.9" y="627.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,286 samples, 0.09%)</title><rect x="998.9" y="611.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (1,286 samples, 0.09%)</title><rect x="998.9" y="595.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1001.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1,777 samples, 0.13%)</title><rect x="1000.1" y="611.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1003.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,777 samples, 0.13%)</title><rect x="1000.1" y="595.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,777 samples, 0.13%)</title><rect x="1000.1" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,777 samples, 0.13%)</title><rect x="1000.1" y="563.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1003.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,777 samples, 0.13%)</title><rect x="1000.1" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,777 samples, 0.13%)</title><rect x="1000.1" y="531.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1003.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1,067 samples, 0.08%)</title><rect x="1001.6" y="675.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,067 samples, 0.08%)</title><rect x="1001.6" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,067 samples, 0.08%)</title><rect x="1001.6" y="643.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1004.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,067 samples, 0.08%)</title><rect x="1001.6" y="627.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1004.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (973 samples, 0.07%)</title><rect x="1001.6" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (973 samples, 0.07%)</title><rect x="1001.6" y="595.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1004.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1,266 samples, 0.09%)</title><rect x="1002.5" y="675.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,266 samples, 0.09%)</title><rect x="1002.5" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,266 samples, 0.09%)</title><rect x="1002.5" y="643.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,266 samples, 0.09%)</title><rect x="1002.5" y="627.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1005.5" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (216,862 samples, 15.80%)</title><rect x="1003.6" y="691.0" width="186.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.6" y="702.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9,558 samples, 0.70%)</title><rect x="1003.6" y="675.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.6" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9,558 samples, 0.70%)</title><rect x="1003.6" y="659.0" width="8.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1006.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (207,304 samples, 15.10%)</title><rect x="1011.8" y="675.0" width="178.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.8" y="686.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (207,304 samples, 15.10%)</title><rect x="1011.8" y="659.0" width="178.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.8" y="670.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (207,304 samples, 15.10%)</title><rect x="1011.8" y="643.0" width="178.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.8" y="654.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84,785 samples, 6.18%)</title><rect x="1011.8" y="627.0" width="72.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.8" y="638.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (84,785 samples, 6.18%)</title><rect x="1011.8" y="611.0" width="72.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.8" y="622.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (76,211 samples, 5.55%)</title><rect x="1011.8" y="595.0" width="65.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.8" y="606.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,492 samples, 0.25%)</title><rect x="1011.8" y="579.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,492 samples, 0.25%)</title><rect x="1011.8" y="563.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,492 samples, 0.25%)</title><rect x="1011.8" y="547.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,240 samples, 0.24%)</title><rect x="1012.0" y="531.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.0" y="542.0"></text>
</g>
<g>
<title>byte[] (3,240 samples, 0.24%)</title><rect x="1012.0" y="515.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1015.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (72,719 samples, 5.30%)</title><rect x="1014.8" y="579.0" width="62.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.8" y="590.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (10,439 samples, 0.76%)</title><rect x="1014.8" y="563.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9,650 samples, 0.70%)</title><rect x="1014.8" y="547.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9,650 samples, 0.70%)</title><rect x="1014.8" y="531.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$109/388268451.get$Lambda (9,650 samples, 0.70%)</title><rect x="1014.8" y="515.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$109 (9,650 samples, 0.70%)</title><rect x="1014.8" y="499.0" width="8.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1017.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (789 samples, 0.06%)</title><rect x="1023.1" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (789 samples, 0.06%)</title><rect x="1023.1" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (762 samples, 0.06%)</title><rect x="1023.1" y="515.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1026.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (62,280 samples, 4.54%)</title><rect x="1023.8" y="563.0" width="53.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1026.8" y="574.0">ru/ma..</text>
</g>
<g>
<title>java/util/Set.copyOf (62,280 samples, 4.54%)</title><rect x="1023.8" y="547.0" width="53.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1026.8" y="558.0">java/..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (13,538 samples, 0.99%)</title><rect x="1023.9" y="531.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (752 samples, 0.05%)</title><rect x="1023.9" y="515.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1026.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12,786 samples, 0.93%)</title><rect x="1024.6" y="515.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12,079 samples, 0.88%)</title><rect x="1024.6" y="499.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.6" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12,079 samples, 0.88%)</title><rect x="1024.6" y="483.0" width="10.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1027.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (707 samples, 0.05%)</title><rect x="1035.0" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.0" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (707 samples, 0.05%)</title><rect x="1035.0" y="483.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1038.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (23,311 samples, 1.70%)</title><rect x="1035.6" y="531.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1038.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (3,660 samples, 0.27%)</title><rect x="1035.6" y="515.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1038.6" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (19,651 samples, 1.43%)</title><rect x="1038.7" y="515.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (18,840 samples, 1.37%)</title><rect x="1038.7" y="499.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (18,840 samples, 1.37%)</title><rect x="1038.7" y="483.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (18,840 samples, 1.37%)</title><rect x="1038.7" y="467.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.7" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4,376 samples, 0.32%)</title><rect x="1038.7" y="451.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.7" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4,376 samples, 0.32%)</title><rect x="1038.7" y="435.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1041.7" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (14,464 samples, 1.05%)</title><rect x="1042.5" y="451.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.5" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (12,168 samples, 0.89%)</title><rect x="1042.5" y="435.0" width="10.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1045.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,296 samples, 0.17%)</title><rect x="1052.9" y="435.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.9" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (811 samples, 0.06%)</title><rect x="1054.9" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (811 samples, 0.06%)</title><rect x="1054.9" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (811 samples, 0.06%)</title><rect x="1054.9" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (811 samples, 0.06%)</title><rect x="1054.9" y="451.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1057.9" y="462.0"></text>
</g>
<g>
<title>java/util/Set.of (25,245 samples, 1.84%)</title><rect x="1055.6" y="531.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.6" y="542.0">j..</text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (24,327 samples, 1.77%)</title><rect x="1055.6" y="515.0" width="20.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1058.6" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (918 samples, 0.07%)</title><rect x="1076.5" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (918 samples, 0.07%)</title><rect x="1076.5" y="499.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1079.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8,574 samples, 0.62%)</title><rect x="1077.3" y="595.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,574 samples, 0.62%)</title><rect x="1077.3" y="579.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,574 samples, 0.62%)</title><rect x="1077.3" y="563.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.3" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8,493 samples, 0.62%)</title><rect x="1077.4" y="547.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1080.4" y="558.0"></text>
</g>
<g>
<title>byte[] (8,493 samples, 0.62%)</title><rect x="1077.4" y="531.0" width="7.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1080.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37,980 samples, 2.77%)</title><rect x="1084.7" y="627.0" width="32.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1087.7" y="638.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (3,024 samples, 0.22%)</title><rect x="1084.7" y="611.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1087.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10,703 samples, 0.78%)</title><rect x="1087.3" y="611.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (8,690 samples, 0.63%)</title><rect x="1087.3" y="595.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1090.3" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (2,013 samples, 0.15%)</title><rect x="1094.8" y="595.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1097.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24,253 samples, 1.77%)</title><rect x="1096.5" y="611.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24,253 samples, 1.77%)</title><rect x="1096.5" y="595.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.5" y="606.0"></text>
</g>
<g>
<title>char[] (19,496 samples, 1.42%)</title><rect x="1096.5" y="579.0" width="16.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1099.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (3,791 samples, 0.28%)</title><rect x="1113.3" y="579.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1116.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (885 samples, 0.06%)</title><rect x="1116.6" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (885 samples, 0.06%)</title><rect x="1116.6" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (885 samples, 0.06%)</title><rect x="1116.6" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.6" y="558.0"></text>
</g>
<g>
<title>byte[] (885 samples, 0.06%)</title><rect x="1116.6" y="531.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1119.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,008 samples, 0.07%)</title><rect x="1117.5" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,008 samples, 0.07%)</title><rect x="1117.5" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,008 samples, 0.07%)</title><rect x="1117.5" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1,002 samples, 0.07%)</title><rect x="1117.5" y="579.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1120.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (83,382 samples, 6.07%)</title><rect x="1118.3" y="627.0" width="71.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.3" y="638.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (83,382 samples, 6.07%)</title><rect x="1118.3" y="611.0" width="71.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.3" y="622.0">one/nio/..</text>
</g>
<g>
<title>char[] (8,814 samples, 0.64%)</title><rect x="1118.3" y="595.0" width="7.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1121.3" y="606.0"></text>
</g>
<g>
<title>char[] (17,638 samples, 1.28%)</title><rect x="1125.9" y="595.0" width="15.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (17,590 samples, 1.28%)</title><rect x="1141.1" y="595.0" width="15.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1144.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39,340 samples, 2.87%)</title><rect x="1156.2" y="595.0" width="33.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.2" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39,340 samples, 2.87%)</title><rect x="1156.2" y="579.0" width="33.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.2" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39,340 samples, 2.87%)</title><rect x="1156.2" y="563.0" width="33.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.2" y="574.0">ja..</text>
</g>
<g>
<title>byte[] (39,338 samples, 2.87%)</title><rect x="1156.2" y="547.0" width="33.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1159.2" y="558.0">by..</text>
</g>
</g>
</svg>
