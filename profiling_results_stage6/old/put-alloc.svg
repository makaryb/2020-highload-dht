<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (583,940 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (272,914 samples, 46.74%)</title><rect x="10.0" y="803.0" width="551.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (272,914 samples, 46.74%)</title><rect x="10.0" y="787.0" width="551.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (272,914 samples, 46.74%)</title><rect x="10.0" y="771.0" width="551.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (37,061 samples, 6.35%)</title><rect x="10.0" y="755.0" width="74.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37,061 samples, 6.35%)</title><rect x="10.0" y="739.0" width="74.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (37,061 samples, 6.35%)</title><rect x="10.0" y="723.0" width="74.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (233 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1931669415.apply (36,827 samples, 6.31%)</title><rect x="10.5" y="707.0" width="74.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.5" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (36,827 samples, 6.31%)</title><rect x="10.5" y="691.0" width="74.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.5" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (36,827 samples, 6.31%)</title><rect x="10.5" y="675.0" width="74.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.5" y="686.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (279 samples, 0.05%)</title><rect x="10.5" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (279 samples, 0.05%)</title><rect x="10.5" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$356/1965787041.get$Lambda (171 samples, 0.03%)</title><rect x="10.5" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$356 (171 samples, 0.03%)</title><rect x="10.5" y="611.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (548 samples, 0.09%)</title><rect x="11.0" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (548 samples, 0.09%)</title><rect x="11.0" y="643.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (301 samples, 0.05%)</title><rect x="11.0" y="627.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="14.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.04%)</title><rect x="11.6" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.04%)</title><rect x="11.6" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.04%)</title><rect x="11.6" y="595.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="14.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,098 samples, 0.19%)</title><rect x="12.1" y="659.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,098 samples, 0.19%)</title><rect x="12.1" y="643.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (607 samples, 0.10%)</title><rect x="12.1" y="627.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="15.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (491 samples, 0.08%)</title><rect x="13.4" y="627.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (491 samples, 0.08%)</title><rect x="13.4" y="611.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (491 samples, 0.08%)</title><rect x="13.4" y="595.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="16.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (34,902 samples, 5.98%)</title><rect x="14.4" y="659.0" width="70.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.4" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (34,902 samples, 5.98%)</title><rect x="14.4" y="643.0" width="70.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.4" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (34,902 samples, 5.98%)</title><rect x="14.4" y="627.0" width="70.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.4" y="638.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,070 samples, 0.18%)</title><rect x="14.4" y="611.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,070 samples, 0.18%)</title><rect x="14.4" y="595.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1806345872.get$Lambda (723 samples, 0.12%)</title><rect x="14.4" y="579.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$202 (723 samples, 0.12%)</title><rect x="14.4" y="563.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1307445114.get$Lambda (168 samples, 0.03%)</title><rect x="15.8" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$204 (168 samples, 0.03%)</title><rect x="15.8" y="563.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/200602872.get$Lambda (179 samples, 0.03%)</title><rect x="16.2" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$312 (179 samples, 0.03%)</title><rect x="16.2" y="563.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="19.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (24,111 samples, 4.13%)</title><rect x="16.5" y="611.0" width="48.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.5" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (24,111 samples, 4.13%)</title><rect x="16.5" y="595.0" width="48.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.5" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (23,850 samples, 4.08%)</title><rect x="16.5" y="579.0" width="48.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.5" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/200602872.apply (23,850 samples, 4.08%)</title><rect x="16.5" y="563.0" width="48.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.5" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (23,850 samples, 4.08%)</title><rect x="16.5" y="547.0" width="48.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.5" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (23,850 samples, 4.08%)</title><rect x="16.5" y="531.0" width="48.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.5" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1307445114.apply (23,850 samples, 4.08%)</title><rect x="16.5" y="515.0" width="48.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.5" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (23,850 samples, 4.08%)</title><rect x="16.5" y="499.0" width="48.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.5" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (175 samples, 0.03%)</title><rect x="16.5" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (175 samples, 0.03%)</title><rect x="16.5" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$355/1359626944.get$Lambda (175 samples, 0.03%)</title><rect x="16.5" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$355 (175 samples, 0.03%)</title><rect x="16.5" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (581 samples, 0.10%)</title><rect x="16.9" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (581 samples, 0.10%)</title><rect x="16.9" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (284 samples, 0.05%)</title><rect x="16.9" y="451.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="19.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (226 samples, 0.04%)</title><rect x="17.6" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (226 samples, 0.04%)</title><rect x="17.6" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (226 samples, 0.04%)</title><rect x="17.6" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (520 samples, 0.09%)</title><rect x="18.1" y="483.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (520 samples, 0.09%)</title><rect x="18.1" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (282 samples, 0.05%)</title><rect x="18.1" y="451.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (237 samples, 0.04%)</title><rect x="18.6" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (237 samples, 0.04%)</title><rect x="18.6" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (237 samples, 0.04%)</title><rect x="18.6" y="419.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="21.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (22,574 samples, 3.87%)</title><rect x="19.1" y="483.0" width="45.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.1" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (245 samples, 0.04%)</title><rect x="19.1" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (245 samples, 0.04%)</title><rect x="19.1" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$352/1381405359.get$Lambda (131 samples, 0.02%)</title><rect x="19.1" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$352 (131 samples, 0.02%)</title><rect x="19.1" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="22.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (18,456 samples, 3.16%)</title><rect x="19.6" y="467.0" width="37.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.6" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (18,456 samples, 3.16%)</title><rect x="19.6" y="451.0" width="37.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.6" y="462.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (217 samples, 0.04%)</title><rect x="19.6" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="22.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$352/1381405359.apply (17,752 samples, 3.04%)</title><rect x="20.0" y="435.0" width="35.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.0" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (17,752 samples, 3.04%)</title><rect x="20.0" y="419.0" width="35.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.0" y="430.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (515 samples, 0.09%)</title><rect x="20.2" y="403.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (515 samples, 0.09%)</title><rect x="20.2" y="387.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (283 samples, 0.05%)</title><rect x="20.2" y="371.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (232 samples, 0.04%)</title><rect x="20.8" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (232 samples, 0.04%)</title><rect x="20.8" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (232 samples, 0.04%)</title><rect x="20.8" y="339.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="23.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (195 samples, 0.03%)</title><rect x="21.3" y="403.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="24.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (338 samples, 0.06%)</title><rect x="21.7" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (156 samples, 0.03%)</title><rect x="21.7" y="387.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="24.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (182 samples, 0.03%)</title><rect x="22.0" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (178 samples, 0.03%)</title><rect x="22.0" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (178 samples, 0.03%)</title><rect x="22.0" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (178 samples, 0.03%)</title><rect x="22.0" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (178 samples, 0.03%)</title><rect x="22.0" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (178 samples, 0.03%)</title><rect x="22.0" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="25.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (669 samples, 0.11%)</title><rect x="22.4" y="403.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (669 samples, 0.11%)</title><rect x="22.4" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (225 samples, 0.04%)</title><rect x="22.4" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (225 samples, 0.04%)</title><rect x="22.4" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (225 samples, 0.04%)</title><rect x="22.4" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (225 samples, 0.04%)</title><rect x="22.4" y="323.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (444 samples, 0.08%)</title><rect x="22.8" y="371.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (444 samples, 0.08%)</title><rect x="22.8" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (312 samples, 0.05%)</title><rect x="22.8" y="339.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (132 samples, 0.02%)</title><rect x="23.5" y="339.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (132 samples, 0.02%)</title><rect x="23.5" y="323.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="26.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (15,930 samples, 2.73%)</title><rect x="23.7" y="403.0" width="32.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.7" y="414.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (177 samples, 0.03%)</title><rect x="23.7" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="26.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (357 samples, 0.06%)</title><rect x="24.1" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.1" y="398.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.03%)</title><rect x="24.1" y="371.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="27.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (178 samples, 0.03%)</title><rect x="24.4" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,122 samples, 0.19%)</title><rect x="24.8" y="387.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,122 samples, 0.19%)</title><rect x="24.8" y="371.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1,122 samples, 0.19%)</title><rect x="24.8" y="355.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.8" y="366.0"></text>
</g>
<g>
<title>byte[] (1,111 samples, 0.19%)</title><rect x="24.8" y="339.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="27.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (610 samples, 0.10%)</title><rect x="27.1" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.1" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (610 samples, 0.10%)</title><rect x="27.1" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.1" y="382.0"></text>
</g>
<g>
<title>byte[] (610 samples, 0.10%)</title><rect x="27.1" y="355.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="30.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,129 samples, 0.19%)</title><rect x="28.3" y="387.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,129 samples, 0.19%)</title><rect x="28.3" y="371.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,129 samples, 0.19%)</title><rect x="28.3" y="355.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.3" y="366.0"></text>
</g>
<g>
<title>byte[] (1,124 samples, 0.19%)</title><rect x="28.3" y="339.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="31.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (344 samples, 0.06%)</title><rect x="30.6" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (344 samples, 0.06%)</title><rect x="30.6" y="371.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (344 samples, 0.06%)</title><rect x="30.6" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="33.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (155 samples, 0.03%)</title><rect x="31.3" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.3" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (155 samples, 0.03%)</title><rect x="31.3" y="371.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="34.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (9,836 samples, 1.68%)</title><rect x="31.6" y="387.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.6" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (180 samples, 0.03%)</title><rect x="31.6" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (180 samples, 0.03%)</title><rect x="31.6" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (180 samples, 0.03%)</title><rect x="31.6" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.6" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$377/1053259218.get$Lambda (180 samples, 0.03%)</title><rect x="31.6" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.6" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$377 (180 samples, 0.03%)</title><rect x="31.6" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="34.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (5,174 samples, 0.89%)</title><rect x="31.9" y="371.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,080 samples, 0.53%)</title><rect x="31.9" y="355.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.9" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,080 samples, 0.53%)</title><rect x="31.9" y="339.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,080 samples, 0.53%)</title><rect x="31.9" y="323.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,080 samples, 0.53%)</title><rect x="31.9" y="307.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.9" y="318.0"></text>
</g>
<g>
<title>byte[] (3,058 samples, 0.52%)</title><rect x="31.9" y="291.0" width="6.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="34.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (485 samples, 0.08%)</title><rect x="38.2" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.2" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (485 samples, 0.08%)</title><rect x="38.2" y="339.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (485 samples, 0.08%)</title><rect x="38.2" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (485 samples, 0.08%)</title><rect x="38.2" y="307.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="41.2" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (499 samples, 0.09%)</title><rect x="39.2" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.2" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (252 samples, 0.04%)</title><rect x="39.2" y="339.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="42.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (247 samples, 0.04%)</title><rect x="39.7" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (247 samples, 0.04%)</title><rect x="39.7" y="323.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="42.7" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$377/1053259218.test (1,110 samples, 0.19%)</title><rect x="40.2" y="355.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.2" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,110 samples, 0.19%)</title><rect x="40.2" y="339.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (1,110 samples, 0.19%)</title><rect x="40.2" y="323.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,110 samples, 0.19%)</title><rect x="40.2" y="307.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.2" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (1,110 samples, 0.19%)</title><rect x="40.2" y="291.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,110 samples, 0.19%)</title><rect x="40.2" y="275.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (1,110 samples, 0.19%)</title><rect x="40.2" y="259.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,110 samples, 0.19%)</title><rect x="40.2" y="243.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,110 samples, 0.19%)</title><rect x="40.2" y="227.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,110 samples, 0.19%)</title><rect x="40.2" y="211.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (602 samples, 0.10%)</title><rect x="40.2" y="195.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="43.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (508 samples, 0.09%)</title><rect x="41.4" y="195.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.4" y="206.0"></text>
</g>
<g>
<title>byte[] (508 samples, 0.09%)</title><rect x="41.4" y="179.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="44.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (4,482 samples, 0.77%)</title><rect x="42.4" y="371.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,482 samples, 0.77%)</title><rect x="42.4" y="355.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,482 samples, 0.77%)</title><rect x="42.4" y="339.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.4" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (133 samples, 0.02%)</title><rect x="42.4" y="323.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="45.4" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (163 samples, 0.03%)</title><rect x="42.7" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="45.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (339 samples, 0.06%)</title><rect x="43.0" y="323.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="46.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (241 samples, 0.04%)</title><rect x="43.9" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (241 samples, 0.04%)</title><rect x="43.9" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.get$Lambda (241 samples, 0.04%)</title><rect x="43.9" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.9" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (241 samples, 0.04%)</title><rect x="43.9" y="275.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="46.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (265 samples, 0.05%)</title><rect x="44.4" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.4" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (265 samples, 0.05%)</title><rect x="44.4" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="47.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,835 samples, 0.49%)</title><rect x="44.9" y="323.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (2,835 samples, 0.49%)</title><rect x="44.9" y="307.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,835 samples, 0.49%)</title><rect x="44.9" y="291.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (528 samples, 0.09%)</title><rect x="44.9" y="275.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (528 samples, 0.09%)</title><rect x="44.9" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.get$Lambda (528 samples, 0.09%)</title><rect x="44.9" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.9" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$152 (528 samples, 0.09%)</title><rect x="44.9" y="227.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="47.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (383 samples, 0.07%)</title><rect x="46.0" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (383 samples, 0.07%)</title><rect x="46.0" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (383 samples, 0.07%)</title><rect x="46.0" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (383 samples, 0.07%)</title><rect x="46.0" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (383 samples, 0.07%)</title><rect x="46.0" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (383 samples, 0.07%)</title><rect x="46.0" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (383 samples, 0.07%)</title><rect x="46.0" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (383 samples, 0.07%)</title><rect x="46.0" y="163.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (383 samples, 0.07%)</title><rect x="46.0" y="147.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="49.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,011 samples, 0.17%)</title><rect x="46.8" y="275.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.8" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,011 samples, 0.17%)</title><rect x="46.8" y="259.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (500 samples, 0.09%)</title><rect x="46.8" y="243.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (500 samples, 0.09%)</title><rect x="46.8" y="227.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (500 samples, 0.09%)</title><rect x="46.8" y="211.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="49.8" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (511 samples, 0.09%)</title><rect x="47.8" y="243.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.8" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (511 samples, 0.09%)</title><rect x="47.8" y="227.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="50.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (913 samples, 0.16%)</title><rect x="48.8" y="275.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (913 samples, 0.16%)</title><rect x="48.8" y="259.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="51.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (394 samples, 0.07%)</title><rect x="50.7" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (394 samples, 0.07%)</title><rect x="50.7" y="307.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="53.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (613 samples, 0.10%)</title><rect x="51.5" y="387.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (194 samples, 0.03%)</title><rect x="51.5" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.5" y="382.0"></text>
</g>
<g>
<title>byte[] (194 samples, 0.03%)</title><rect x="51.5" y="355.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="54.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (419 samples, 0.07%)</title><rect x="51.9" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (419 samples, 0.07%)</title><rect x="51.9" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (419 samples, 0.07%)</title><rect x="51.9" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (419 samples, 0.07%)</title><rect x="51.9" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (191 samples, 0.03%)</title><rect x="51.9" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (191 samples, 0.03%)</title><rect x="51.9" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="54.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (228 samples, 0.04%)</title><rect x="52.2" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (228 samples, 0.04%)</title><rect x="52.2" y="291.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.2" y="302.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.04%)</title><rect x="52.2" y="275.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="55.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (273 samples, 0.05%)</title><rect x="52.7" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (273 samples, 0.05%)</title><rect x="52.7" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (273 samples, 0.05%)</title><rect x="52.7" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (273 samples, 0.05%)</title><rect x="52.7" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (273 samples, 0.05%)</title><rect x="52.7" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (273 samples, 0.05%)</title><rect x="52.7" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (273 samples, 0.05%)</title><rect x="52.7" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (273 samples, 0.05%)</title><rect x="52.7" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.7" y="286.0"></text>
</g>
<g>
<title>byte[] (273 samples, 0.05%)</title><rect x="52.7" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="55.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,314 samples, 0.23%)</title><rect x="53.3" y="387.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.3" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (350 samples, 0.06%)</title><rect x="53.3" y="371.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="56.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (345 samples, 0.06%)</title><rect x="54.0" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (345 samples, 0.06%)</title><rect x="54.0" y="355.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="57.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (619 samples, 0.11%)</title><rect x="54.7" y="371.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.7" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (619 samples, 0.11%)</title><rect x="54.7" y="355.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="57.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.08%)</title><rect x="55.9" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.08%)</title><rect x="55.9" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (487 samples, 0.08%)</title><rect x="55.9" y="403.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (646 samples, 0.11%)</title><rect x="56.9" y="467.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="59.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (256 samples, 0.04%)</title><rect x="58.2" y="467.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="61.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2,969 samples, 0.51%)</title><rect x="58.7" y="467.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (257 samples, 0.04%)</title><rect x="58.7" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (257 samples, 0.04%)</title><rect x="58.7" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$326/1800006958.get$Lambda (139 samples, 0.02%)</title><rect x="58.7" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$326 (139 samples, 0.02%)</title><rect x="58.7" y="403.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="61.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (302 samples, 0.05%)</title><rect x="59.2" y="451.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="62.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (225 samples, 0.04%)</title><rect x="59.8" y="451.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="62.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (370 samples, 0.06%)</title><rect x="60.3" y="451.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="63.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (827 samples, 0.14%)</title><rect x="61.1" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (827 samples, 0.14%)</title><rect x="61.1" y="435.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (827 samples, 0.14%)</title><rect x="61.1" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (827 samples, 0.14%)</title><rect x="61.1" y="403.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (827 samples, 0.14%)</title><rect x="61.1" y="387.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (827 samples, 0.14%)</title><rect x="61.1" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (827 samples, 0.14%)</title><rect x="61.1" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (827 samples, 0.14%)</title><rect x="61.1" y="339.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (827 samples, 0.14%)</title><rect x="61.1" y="323.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (291 samples, 0.05%)</title><rect x="61.1" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (291 samples, 0.05%)</title><rect x="61.1" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/157599009.get$Lambda (176 samples, 0.03%)</title><rect x="61.3" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$333 (176 samples, 0.03%)</title><rect x="61.3" y="259.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="64.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (245 samples, 0.04%)</title><rect x="61.6" y="307.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (291 samples, 0.05%)</title><rect x="62.1" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (291 samples, 0.05%)</title><rect x="62.1" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (128 samples, 0.02%)</title><rect x="62.1" y="275.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="65.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (163 samples, 0.03%)</title><rect x="62.4" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (163 samples, 0.03%)</title><rect x="62.4" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (743 samples, 0.13%)</title><rect x="62.7" y="451.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.7" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (156 samples, 0.03%)</title><rect x="62.7" y="435.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="65.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (352 samples, 0.06%)</title><rect x="63.0" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="66.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (235 samples, 0.04%)</title><rect x="63.7" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.7" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (235 samples, 0.04%)</title><rect x="63.7" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.7" y="430.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.04%)</title><rect x="63.7" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="66.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (245 samples, 0.04%)</title><rect x="64.2" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (245 samples, 0.04%)</title><rect x="64.2" y="435.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="67.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.04%)</title><rect x="64.7" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.04%)</title><rect x="64.7" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (261 samples, 0.04%)</title><rect x="64.7" y="547.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="67.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (472 samples, 0.08%)</title><rect x="65.2" y="611.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (472 samples, 0.08%)</title><rect x="65.2" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (224 samples, 0.04%)</title><rect x="65.2" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="68.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (248 samples, 0.04%)</title><rect x="65.7" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (248 samples, 0.04%)</title><rect x="65.7" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (248 samples, 0.04%)</title><rect x="65.7" y="547.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="68.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (9,249 samples, 1.58%)</title><rect x="66.2" y="611.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (284 samples, 0.05%)</title><rect x="66.2" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (284 samples, 0.05%)</title><rect x="66.2" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$305/1843807218.get$Lambda (173 samples, 0.03%)</title><rect x="66.2" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$305 (173 samples, 0.03%)</title><rect x="66.2" y="547.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="69.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (468 samples, 0.08%)</title><rect x="66.8" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (468 samples, 0.08%)</title><rect x="66.8" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/72149394.apply (233 samples, 0.04%)</title><rect x="66.8" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (233 samples, 0.04%)</title><rect x="66.8" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (233 samples, 0.04%)</title><rect x="66.8" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (233 samples, 0.04%)</title><rect x="66.8" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="69.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (235 samples, 0.04%)</title><rect x="67.2" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (235 samples, 0.04%)</title><rect x="67.2" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (235 samples, 0.04%)</title><rect x="67.2" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="70.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (225 samples, 0.04%)</title><rect x="67.7" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (225 samples, 0.04%)</title><rect x="67.7" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.04%)</title><rect x="67.7" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.04%)</title><rect x="67.7" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (225 samples, 0.04%)</title><rect x="67.7" y="531.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="70.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (8,272 samples, 1.42%)</title><rect x="68.2" y="595.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (8,272 samples, 1.42%)</title><rect x="68.2" y="579.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (685 samples, 0.12%)</title><rect x="68.2" y="563.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="71.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (7,351 samples, 1.26%)</title><rect x="69.6" y="563.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.6" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (223 samples, 0.04%)</title><rect x="69.8" y="547.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="72.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (177 samples, 0.03%)</title><rect x="70.2" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="73.2" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (359 samples, 0.06%)</title><rect x="70.6" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.6" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (359 samples, 0.06%)</title><rect x="70.6" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.6" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (359 samples, 0.06%)</title><rect x="70.6" y="515.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="73.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (199 samples, 0.03%)</title><rect x="71.3" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (199 samples, 0.03%)</title><rect x="71.3" y="531.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="74.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (526 samples, 0.09%)</title><rect x="71.7" y="547.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="74.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (341 samples, 0.06%)</title><rect x="72.8" y="547.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="75.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (398 samples, 0.07%)</title><rect x="73.5" y="547.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="76.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (466 samples, 0.08%)</title><rect x="74.3" y="547.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="77.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2,141 samples, 0.37%)</title><rect x="75.2" y="547.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (168 samples, 0.03%)</title><rect x="75.2" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="78.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (182 samples, 0.03%)</title><rect x="75.8" y="531.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="78.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (149 samples, 0.03%)</title><rect x="76.6" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (149 samples, 0.03%)</title><rect x="76.6" y="515.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="79.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (193 samples, 0.03%)</title><rect x="76.9" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="79.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (244 samples, 0.04%)</title><rect x="77.3" y="531.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="80.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (858 samples, 0.15%)</title><rect x="77.8" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (177 samples, 0.03%)</title><rect x="77.8" y="515.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="80.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (228 samples, 0.04%)</title><rect x="78.2" y="515.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="81.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (356 samples, 0.06%)</title><rect x="78.8" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (133 samples, 0.02%)</title><rect x="78.8" y="499.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="81.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,396 samples, 0.24%)</title><rect x="79.5" y="547.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (128 samples, 0.02%)</title><rect x="79.5" y="531.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="82.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (134 samples, 0.02%)</title><rect x="79.8" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="82.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (164 samples, 0.03%)</title><rect x="80.3" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (164 samples, 0.03%)</title><rect x="80.3" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="83.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (871 samples, 0.15%)</title><rect x="80.6" y="531.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (157 samples, 0.03%)</title><rect x="80.6" y="515.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="83.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (202 samples, 0.03%)</title><rect x="80.9" y="515.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="83.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (389 samples, 0.07%)</title><rect x="81.6" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (153 samples, 0.03%)</title><rect x="81.8" y="499.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="84.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (356 samples, 0.06%)</title><rect x="82.4" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (356 samples, 0.06%)</title><rect x="82.4" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (198 samples, 0.03%)</title><rect x="82.4" y="515.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="85.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (158 samples, 0.03%)</title><rect x="82.8" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (158 samples, 0.03%)</title><rect x="82.8" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.8" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (158 samples, 0.03%)</title><rect x="82.8" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (158 samples, 0.03%)</title><rect x="82.8" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (158 samples, 0.03%)</title><rect x="82.8" y="451.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="85.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (658 samples, 0.11%)</title><rect x="83.1" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (174 samples, 0.03%)</title><rect x="83.1" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (174 samples, 0.03%)</title><rect x="83.1" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$215/274122757.get$Lambda (174 samples, 0.03%)</title><rect x="83.1" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$215 (174 samples, 0.03%)</title><rect x="83.1" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.1" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (484 samples, 0.08%)</title><rect x="83.4" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$215/274122757.run (484 samples, 0.08%)</title><rect x="83.4" y="515.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (484 samples, 0.08%)</title><rect x="83.4" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.4" y="510.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (145 samples, 0.02%)</title><rect x="83.4" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="86.4" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (339 samples, 0.06%)</title><rect x="83.7" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.7" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (170 samples, 0.03%)</title><rect x="83.7" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="86.7" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (169 samples, 0.03%)</title><rect x="84.1" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.1" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (169 samples, 0.03%)</title><rect x="84.1" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.1" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (169 samples, 0.03%)</title><rect x="84.1" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.1" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (169 samples, 0.03%)</title><rect x="84.1" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.1" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (169 samples, 0.03%)</title><rect x="84.1" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="87.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (236 samples, 0.04%)</title><rect x="84.4" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (236 samples, 0.04%)</title><rect x="84.4" y="547.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="87.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13,536 samples, 2.32%)</title><rect x="84.9" y="755.0" width="27.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.9" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13,232 samples, 2.27%)</title><rect x="84.9" y="739.0" width="26.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.9" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13,102 samples, 2.24%)</title><rect x="84.9" y="723.0" width="26.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (13,102 samples, 2.24%)</title><rect x="84.9" y="707.0" width="26.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.9" y="718.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (13,102 samples, 2.24%)</title><rect x="84.9" y="691.0" width="26.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="87.9" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (130 samples, 0.02%)</title><rect x="111.4" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (130 samples, 0.02%)</title><rect x="111.4" y="707.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (130 samples, 0.02%)</title><rect x="111.4" y="691.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (130 samples, 0.02%)</title><rect x="111.4" y="675.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (130 samples, 0.02%)</title><rect x="111.4" y="659.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="114.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (304 samples, 0.05%)</title><rect x="111.6" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (304 samples, 0.05%)</title><rect x="111.6" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (304 samples, 0.05%)</title><rect x="111.6" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (304 samples, 0.05%)</title><rect x="111.6" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.6" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (304 samples, 0.05%)</title><rect x="111.6" y="675.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="114.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1482582287.run (8,586 samples, 1.47%)</title><rect x="112.2" y="755.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (8,586 samples, 1.47%)</title><rect x="112.2" y="739.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (8,586 samples, 1.47%)</title><rect x="112.2" y="723.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (8,586 samples, 1.47%)</title><rect x="112.2" y="707.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8,586 samples, 1.47%)</title><rect x="112.2" y="691.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8,586 samples, 1.47%)</title><rect x="112.2" y="675.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,586 samples, 1.47%)</title><rect x="112.2" y="659.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8,586 samples, 1.47%)</title><rect x="112.2" y="643.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8,586 samples, 1.47%)</title><rect x="112.2" y="627.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8,586 samples, 1.47%)</title><rect x="112.2" y="611.0" width="17.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8,586 samples, 1.47%)</title><rect x="112.2" y="595.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (7,817 samples, 1.34%)</title><rect x="112.2" y="579.0" width="15.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (492 samples, 0.08%)</title><rect x="112.2" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (492 samples, 0.08%)</title><rect x="112.2" y="547.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$389/429249883.get$Lambda (165 samples, 0.03%)</title><rect x="112.2" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$389 (165 samples, 0.03%)</title><rect x="112.2" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="115.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/776488445.get$Lambda (179 samples, 0.03%)</title><rect x="112.6" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$417 (179 samples, 0.03%)</title><rect x="112.6" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="115.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$421/288091758.get$Lambda (148 samples, 0.03%)</title><rect x="112.9" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$421 (148 samples, 0.03%)</title><rect x="112.9" y="515.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="115.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (7,325 samples, 1.25%)</title><rect x="113.2" y="563.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (372 samples, 0.06%)</title><rect x="113.2" y="547.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="116.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6,953 samples, 1.19%)</title><rect x="114.0" y="547.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6,953 samples, 1.19%)</title><rect x="114.0" y="531.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,953 samples, 1.19%)</title><rect x="114.0" y="515.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,310 samples, 0.22%)</title><rect x="114.0" y="499.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (433 samples, 0.07%)</title><rect x="114.0" y="483.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="117.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$407/634219692.apply (812 samples, 0.14%)</title><rect x="114.9" y="483.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (812 samples, 0.14%)</title><rect x="114.9" y="467.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (812 samples, 0.14%)</title><rect x="114.9" y="451.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (177 samples, 0.03%)</title><rect x="114.9" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.9" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (177 samples, 0.03%)</title><rect x="114.9" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.9" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (177 samples, 0.03%)</title><rect x="114.9" y="403.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="117.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (635 samples, 0.11%)</title><rect x="115.2" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (520 samples, 0.09%)</title><rect x="115.5" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (520 samples, 0.09%)</title><rect x="115.5" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (287 samples, 0.05%)</title><rect x="115.5" y="387.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="118.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.04%)</title><rect x="116.0" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (229 samples, 0.04%)</title><rect x="116.0" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (229 samples, 0.04%)</title><rect x="116.0" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="119.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5,643 samples, 0.97%)</title><rect x="116.6" y="499.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,643 samples, 0.97%)</title><rect x="116.6" y="483.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$355/1359626944.apply (5,642 samples, 0.97%)</title><rect x="116.6" y="467.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (5,642 samples, 0.97%)</title><rect x="116.6" y="451.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,642 samples, 0.97%)</title><rect x="116.6" y="435.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1806345872.apply (5,642 samples, 0.97%)</title><rect x="116.6" y="419.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (5,642 samples, 0.97%)</title><rect x="116.6" y="403.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (514 samples, 0.09%)</title><rect x="116.9" y="387.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (514 samples, 0.09%)</title><rect x="116.9" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (297 samples, 0.05%)</title><rect x="116.9" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="119.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (217 samples, 0.04%)</title><rect x="117.5" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (217 samples, 0.04%)</title><rect x="117.5" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (217 samples, 0.04%)</title><rect x="117.5" y="323.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="120.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (5,006 samples, 0.86%)</title><rect x="117.9" y="387.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1,588 samples, 0.27%)</title><rect x="117.9" y="371.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1,588 samples, 0.27%)</title><rect x="117.9" y="355.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1,588 samples, 0.27%)</title><rect x="117.9" y="339.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$392/946012687.accept (730 samples, 0.13%)</title><rect x="117.9" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (730 samples, 0.13%)</title><rect x="117.9" y="307.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (730 samples, 0.13%)</title><rect x="117.9" y="291.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (182 samples, 0.03%)</title><rect x="117.9" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (182 samples, 0.03%)</title><rect x="117.9" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$400/211316573.get$Lambda (182 samples, 0.03%)</title><rect x="117.9" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$400 (182 samples, 0.03%)</title><rect x="117.9" y="227.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="120.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (548 samples, 0.09%)</title><rect x="118.3" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (548 samples, 0.09%)</title><rect x="118.3" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (305 samples, 0.05%)</title><rect x="118.3" y="243.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="121.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.04%)</title><rect x="118.9" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (243 samples, 0.04%)</title><rect x="118.9" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (243 samples, 0.04%)</title><rect x="118.9" y="211.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="121.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$404/904631296.accept (858 samples, 0.15%)</title><rect x="119.4" y="323.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (858 samples, 0.15%)</title><rect x="119.4" y="307.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (858 samples, 0.15%)</title><rect x="119.4" y="291.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (858 samples, 0.15%)</title><rect x="119.4" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (858 samples, 0.15%)</title><rect x="119.4" y="259.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (858 samples, 0.15%)</title><rect x="119.4" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (858 samples, 0.15%)</title><rect x="119.4" y="227.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (858 samples, 0.15%)</title><rect x="119.4" y="211.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (858 samples, 0.15%)</title><rect x="119.4" y="195.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (858 samples, 0.15%)</title><rect x="119.4" y="179.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (355 samples, 0.06%)</title><rect x="119.4" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (355 samples, 0.06%)</title><rect x="119.4" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (184 samples, 0.03%)</title><rect x="119.4" y="131.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="122.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (171 samples, 0.03%)</title><rect x="119.8" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (171 samples, 0.03%)</title><rect x="119.8" y="115.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (171 samples, 0.03%)</title><rect x="119.8" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (171 samples, 0.03%)</title><rect x="119.8" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (171 samples, 0.03%)</title><rect x="119.8" y="67.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (171 samples, 0.03%)</title><rect x="119.8" y="51.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="122.8" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (503 samples, 0.09%)</title><rect x="120.1" y="163.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (503 samples, 0.09%)</title><rect x="120.1" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (180 samples, 0.03%)</title><rect x="120.1" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (180 samples, 0.03%)</title><rect x="120.1" y="115.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="123.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (323 samples, 0.06%)</title><rect x="120.5" y="131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.5" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (172 samples, 0.03%)</title><rect x="120.5" y="115.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="123.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (151 samples, 0.03%)</title><rect x="120.8" y="115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (151 samples, 0.03%)</title><rect x="120.8" y="99.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (151 samples, 0.03%)</title><rect x="120.8" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (151 samples, 0.03%)</title><rect x="120.8" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (151 samples, 0.03%)</title><rect x="120.8" y="51.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (151 samples, 0.03%)</title><rect x="120.8" y="35.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="123.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (3,418 samples, 0.59%)</title><rect x="121.1" y="371.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (302 samples, 0.05%)</title><rect x="121.1" y="355.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="124.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (247 samples, 0.04%)</title><rect x="121.7" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (247 samples, 0.04%)</title><rect x="121.7" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.04%)</title><rect x="121.7" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="124.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (2,869 samples, 0.49%)</title><rect x="122.2" y="355.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (183 samples, 0.03%)</title><rect x="122.2" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="125.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1,511 samples, 0.26%)</title><rect x="122.6" y="339.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (219 samples, 0.04%)</title><rect x="122.6" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.6" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (219 samples, 0.04%)</title><rect x="122.6" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="125.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (291 samples, 0.05%)</title><rect x="123.1" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="126.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1,001 samples, 0.17%)</title><rect x="123.6" y="323.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (256 samples, 0.04%)</title><rect x="124.1" y="307.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="127.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (161 samples, 0.03%)</title><rect x="124.6" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (161 samples, 0.03%)</title><rect x="124.6" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="127.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (355 samples, 0.06%)</title><rect x="124.9" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (130 samples, 0.02%)</title><rect x="125.4" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="128.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1,175 samples, 0.20%)</title><rect x="125.7" y="339.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (164 samples, 0.03%)</title><rect x="125.7" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="128.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (566 samples, 0.10%)</title><rect x="126.0" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (348 samples, 0.06%)</title><rect x="126.0" y="307.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="129.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (218 samples, 0.04%)</title><rect x="126.7" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.7" y="318.0"></text>
</g>
<g>
<title>byte[] (218 samples, 0.04%)</title><rect x="126.7" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="129.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (445 samples, 0.08%)</title><rect x="127.1" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (445 samples, 0.08%)</title><rect x="127.1" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (445 samples, 0.08%)</title><rect x="127.1" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (445 samples, 0.08%)</title><rect x="127.1" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (445 samples, 0.08%)</title><rect x="127.1" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (445 samples, 0.08%)</title><rect x="127.1" y="243.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="130.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (769 samples, 0.13%)</title><rect x="128.0" y="579.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (769 samples, 0.13%)</title><rect x="128.0" y="563.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (769 samples, 0.13%)</title><rect x="128.0" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (769 samples, 0.13%)</title><rect x="128.0" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (769 samples, 0.13%)</title><rect x="128.0" y="515.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.0" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (769 samples, 0.13%)</title><rect x="128.0" y="499.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.0" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (321 samples, 0.05%)</title><rect x="128.0" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.0" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (321 samples, 0.05%)</title><rect x="128.0" y="467.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="131.0" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (448 samples, 0.08%)</title><rect x="128.7" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.7" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (448 samples, 0.08%)</title><rect x="128.7" y="467.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="131.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (30,229 samples, 5.18%)</title><rect x="129.6" y="755.0" width="61.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (30,229 samples, 5.18%)</title><rect x="129.6" y="739.0" width="61.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.6" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (25,533 samples, 4.37%)</title><rect x="129.6" y="723.0" width="51.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.6" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (25,533 samples, 4.37%)</title><rect x="129.6" y="707.0" width="51.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (25,533 samples, 4.37%)</title><rect x="129.6" y="691.0" width="51.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.6" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (570 samples, 0.10%)</title><rect x="129.6" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (570 samples, 0.10%)</title><rect x="129.6" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (570 samples, 0.10%)</title><rect x="129.6" y="643.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (570 samples, 0.10%)</title><rect x="129.6" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (317 samples, 0.05%)</title><rect x="129.6" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (317 samples, 0.05%)</title><rect x="129.6" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (317 samples, 0.05%)</title><rect x="129.6" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (317 samples, 0.05%)</title><rect x="129.6" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (317 samples, 0.05%)</title><rect x="129.6" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.6" y="558.0"></text>
</g>
<g>
<title>byte[] (317 samples, 0.05%)</title><rect x="129.6" y="531.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="132.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (253 samples, 0.04%)</title><rect x="130.2" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (253 samples, 0.04%)</title><rect x="130.2" y="595.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (253 samples, 0.04%)</title><rect x="130.2" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$384/1726373881.get$Lambda (253 samples, 0.04%)</title><rect x="130.2" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$384 (253 samples, 0.04%)</title><rect x="130.2" y="547.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="133.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (24,963 samples, 4.27%)</title><rect x="130.7" y="675.0" width="50.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.7" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (24,963 samples, 4.27%)</title><rect x="130.7" y="659.0" width="50.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.7" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (24,963 samples, 4.27%)</title><rect x="130.7" y="643.0" width="50.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.7" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (24,963 samples, 4.27%)</title><rect x="130.7" y="627.0" width="50.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.7" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (11,498 samples, 1.97%)</title><rect x="130.7" y="611.0" width="23.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.7" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,498 samples, 1.97%)</title><rect x="130.7" y="595.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.7" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11,498 samples, 1.97%)</title><rect x="130.7" y="579.0" width="23.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.7" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11,498 samples, 1.97%)</title><rect x="130.7" y="563.0" width="23.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.7" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11,498 samples, 1.97%)</title><rect x="130.7" y="547.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.7" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (11,498 samples, 1.97%)</title><rect x="130.7" y="531.0" width="23.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11,498 samples, 1.97%)</title><rect x="130.7" y="515.0" width="23.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (11,153 samples, 1.91%)</title><rect x="130.7" y="499.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.7" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,153 samples, 1.91%)</title><rect x="130.7" y="483.0" width="22.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.7" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10,911 samples, 1.87%)</title><rect x="130.7" y="467.0" width="22.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.7" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (240 samples, 0.04%)</title><rect x="130.7" y="451.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="133.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/2099274115.apply (10,167 samples, 1.74%)</title><rect x="131.2" y="451.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (10,167 samples, 1.74%)</title><rect x="131.2" y="435.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (160 samples, 0.03%)</title><rect x="131.2" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.03%)</title><rect x="131.2" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$487/1843175951.get$Lambda (160 samples, 0.03%)</title><rect x="131.2" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$487 (160 samples, 0.03%)</title><rect x="131.2" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="134.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (523 samples, 0.09%)</title><rect x="131.6" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (523 samples, 0.09%)</title><rect x="131.6" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (287 samples, 0.05%)</title><rect x="131.6" y="387.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="134.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (236 samples, 0.04%)</title><rect x="132.1" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (236 samples, 0.04%)</title><rect x="132.1" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (236 samples, 0.04%)</title><rect x="132.1" y="355.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="135.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (9,484 samples, 1.62%)</title><rect x="132.6" y="419.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (546 samples, 0.09%)</title><rect x="132.9" y="403.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (546 samples, 0.09%)</title><rect x="132.9" y="387.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (312 samples, 0.05%)</title><rect x="132.9" y="371.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="135.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (234 samples, 0.04%)</title><rect x="133.5" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (234 samples, 0.04%)</title><rect x="133.5" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (234 samples, 0.04%)</title><rect x="133.5" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="136.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (8,815 samples, 1.51%)</title><rect x="134.0" y="403.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$157/29509426.apply (618 samples, 0.11%)</title><rect x="134.0" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (618 samples, 0.11%)</title><rect x="134.0" y="371.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (618 samples, 0.11%)</title><rect x="134.0" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (217 samples, 0.04%)</title><rect x="134.0" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="137.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (401 samples, 0.07%)</title><rect x="134.4" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.4" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (156 samples, 0.03%)</title><rect x="134.4" y="323.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="137.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (245 samples, 0.04%)</title><rect x="134.7" y="323.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="137.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (8,197 samples, 1.40%)</title><rect x="135.2" y="387.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (240 samples, 0.04%)</title><rect x="135.2" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (240 samples, 0.04%)</title><rect x="135.2" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$479/1030045453.get$Lambda (134 samples, 0.02%)</title><rect x="135.4" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$479 (134 samples, 0.02%)</title><rect x="135.4" y="323.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="138.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/98964973.linkToTargetMethod (260 samples, 0.04%)</title><rect x="135.7" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1054906825.invokeStatic (260 samples, 0.04%)</title><rect x="135.7" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$452/1083543256.get$Lambda (260 samples, 0.04%)</title><rect x="135.7" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$452 (260 samples, 0.04%)</title><rect x="135.7" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="138.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,674 samples, 0.29%)</title><rect x="136.2" y="371.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (690 samples, 0.12%)</title><rect x="136.2" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (235 samples, 0.04%)</title><rect x="136.2" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.2" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (235 samples, 0.04%)</title><rect x="136.2" y="323.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="139.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (455 samples, 0.08%)</title><rect x="136.7" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.7" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (455 samples, 0.08%)</title><rect x="136.7" y="323.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="139.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (543 samples, 0.09%)</title><rect x="137.6" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (543 samples, 0.09%)</title><rect x="137.6" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (543 samples, 0.09%)</title><rect x="137.6" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (177 samples, 0.03%)</title><rect x="137.6" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (177 samples, 0.03%)</title><rect x="137.6" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (177 samples, 0.03%)</title><rect x="137.6" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.6" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (177 samples, 0.03%)</title><rect x="137.6" y="259.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="140.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$449/1907883344.get (173 samples, 0.03%)</title><rect x="138.0" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.0" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (173 samples, 0.03%)</title><rect x="138.0" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="141.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (193 samples, 0.03%)</title><rect x="138.3" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (193 samples, 0.03%)</title><rect x="138.3" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.3" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (193 samples, 0.03%)</title><rect x="138.3" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.3" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (193 samples, 0.03%)</title><rect x="138.3" y="259.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="141.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (441 samples, 0.08%)</title><rect x="138.7" y="355.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (441 samples, 0.08%)</title><rect x="138.7" y="339.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="141.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,053 samples, 0.18%)</title><rect x="139.6" y="371.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (534 samples, 0.09%)</title><rect x="139.6" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (314 samples, 0.05%)</title><rect x="139.6" y="339.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="142.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (220 samples, 0.04%)</title><rect x="140.2" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (220 samples, 0.04%)</title><rect x="140.2" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (220 samples, 0.04%)</title><rect x="140.2" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="143.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (519 samples, 0.09%)</title><rect x="140.7" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (519 samples, 0.09%)</title><rect x="140.7" y="339.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (258 samples, 0.04%)</title><rect x="140.7" y="323.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="143.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.04%)</title><rect x="141.2" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.04%)</title><rect x="141.2" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (261 samples, 0.04%)</title><rect x="141.2" y="291.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="144.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (169 samples, 0.03%)</title><rect x="141.7" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="144.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (220 samples, 0.04%)</title><rect x="142.1" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="145.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (242 samples, 0.04%)</title><rect x="142.5" y="371.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="145.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (125 samples, 0.02%)</title><rect x="143.0" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (125 samples, 0.02%)</title><rect x="143.0" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="146.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,214 samples, 0.72%)</title><rect x="143.3" y="371.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$452/1083543256.run (4,214 samples, 0.72%)</title><rect x="143.3" y="355.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4,214 samples, 0.72%)</title><rect x="143.3" y="339.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (575 samples, 0.10%)</title><rect x="143.3" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (575 samples, 0.10%)</title><rect x="143.3" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$454/1502158743.get$Lambda (187 samples, 0.03%)</title><rect x="143.5" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$454 (187 samples, 0.03%)</title><rect x="143.5" y="275.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="146.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$456/1035384948.get$Lambda (266 samples, 0.05%)</title><rect x="143.9" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$456 (266 samples, 0.05%)</title><rect x="143.9" y="275.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="146.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (574 samples, 0.10%)</title><rect x="144.4" y="323.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (574 samples, 0.10%)</title><rect x="144.4" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (323 samples, 0.06%)</title><rect x="144.4" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="147.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (251 samples, 0.04%)</title><rect x="145.1" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (251 samples, 0.04%)</title><rect x="145.1" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (251 samples, 0.04%)</title><rect x="145.1" y="259.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="148.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (286 samples, 0.05%)</title><rect x="145.6" y="323.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="148.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (222 samples, 0.04%)</title><rect x="146.2" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (222 samples, 0.04%)</title><rect x="146.2" y="307.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="149.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (653 samples, 0.11%)</title><rect x="146.6" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (653 samples, 0.11%)</title><rect x="146.6" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (169 samples, 0.03%)</title><rect x="146.6" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (169 samples, 0.03%)</title><rect x="146.6" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$463/752846039.get$Lambda (169 samples, 0.03%)</title><rect x="146.6" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$463 (169 samples, 0.03%)</title><rect x="146.6" y="243.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="149.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (484 samples, 0.08%)</title><rect x="147.0" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (484 samples, 0.08%)</title><rect x="147.0" y="275.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (484 samples, 0.08%)</title><rect x="147.0" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (294 samples, 0.05%)</title><rect x="147.0" y="243.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="150.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.03%)</title><rect x="147.5" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (190 samples, 0.03%)</title><rect x="147.5" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (190 samples, 0.03%)</title><rect x="147.5" y="211.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="150.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (635 samples, 0.11%)</title><rect x="147.9" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (635 samples, 0.11%)</title><rect x="147.9" y="307.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (635 samples, 0.11%)</title><rect x="147.9" y="291.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (635 samples, 0.11%)</title><rect x="147.9" y="275.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (173 samples, 0.03%)</title><rect x="147.9" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (173 samples, 0.03%)</title><rect x="147.9" y="243.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="150.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (462 samples, 0.08%)</title><rect x="148.3" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (462 samples, 0.08%)</title><rect x="148.3" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.3" y="254.0"></text>
</g>
<g>
<title>byte[] (462 samples, 0.08%)</title><rect x="148.3" y="227.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="151.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,269 samples, 0.22%)</title><rect x="149.2" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (412 samples, 0.07%)</title><rect x="149.2" y="307.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="152.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (857 samples, 0.15%)</title><rect x="150.0" y="307.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (857 samples, 0.15%)</title><rect x="150.0" y="291.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (857 samples, 0.15%)</title><rect x="150.0" y="275.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (857 samples, 0.15%)</title><rect x="150.0" y="259.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (166 samples, 0.03%)</title><rect x="150.0" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String (166 samples, 0.03%)</title><rect x="150.0" y="227.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="153.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (691 samples, 0.12%)</title><rect x="150.4" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (691 samples, 0.12%)</title><rect x="150.4" y="227.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.4" y="238.0"></text>
</g>
<g>
<title>byte[] (691 samples, 0.12%)</title><rect x="150.4" y="211.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="153.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$356/1965787041.apply (504 samples, 0.09%)</title><rect x="151.8" y="451.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (504 samples, 0.09%)</title><rect x="151.8" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (250 samples, 0.04%)</title><rect x="151.8" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (250 samples, 0.04%)</title><rect x="151.8" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.8" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (250 samples, 0.04%)</title><rect x="151.8" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.8" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (250 samples, 0.04%)</title><rect x="151.8" y="371.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="154.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (254 samples, 0.04%)</title><rect x="152.3" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (254 samples, 0.04%)</title><rect x="152.3" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="155.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (242 samples, 0.04%)</title><rect x="152.8" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (242 samples, 0.04%)</title><rect x="152.8" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$357/1666950950.apply (242 samples, 0.04%)</title><rect x="152.8" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (242 samples, 0.04%)</title><rect x="152.8" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (242 samples, 0.04%)</title><rect x="152.8" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (242 samples, 0.04%)</title><rect x="152.8" y="387.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="155.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$425/255487445.apply (345 samples, 0.06%)</title><rect x="153.3" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (345 samples, 0.06%)</title><rect x="153.3" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (345 samples, 0.06%)</title><rect x="153.3" y="467.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="156.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (13,465 samples, 2.31%)</title><rect x="154.0" y="611.0" width="27.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.0" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (863 samples, 0.15%)</title><rect x="154.0" y="595.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (863 samples, 0.15%)</title><rect x="154.0" y="579.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (863 samples, 0.15%)</title><rect x="154.0" y="563.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (863 samples, 0.15%)</title><rect x="154.0" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (863 samples, 0.15%)</title><rect x="154.0" y="531.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.0" y="542.0"></text>
</g>
<g>
<title>byte[] (863 samples, 0.15%)</title><rect x="154.0" y="515.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="157.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (557 samples, 0.10%)</title><rect x="155.7" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (557 samples, 0.10%)</title><rect x="155.7" y="579.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (557 samples, 0.10%)</title><rect x="155.7" y="563.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (557 samples, 0.10%)</title><rect x="155.7" y="547.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (557 samples, 0.10%)</title><rect x="155.7" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.7" y="542.0"></text>
</g>
<g>
<title>byte[] (557 samples, 0.10%)</title><rect x="155.7" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="158.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,248 samples, 0.21%)</title><rect x="156.9" y="595.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.9" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (176 samples, 0.03%)</title><rect x="156.9" y="579.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="159.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (346 samples, 0.06%)</title><rect x="157.2" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (346 samples, 0.06%)</title><rect x="157.2" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (165 samples, 0.03%)</title><rect x="157.2" y="547.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="160.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (181 samples, 0.03%)</title><rect x="157.5" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.5" y="558.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.03%)</title><rect x="157.5" y="531.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="160.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (244 samples, 0.04%)</title><rect x="157.9" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (244 samples, 0.04%)</title><rect x="157.9" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.9" y="574.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.04%)</title><rect x="157.9" y="547.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="160.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (482 samples, 0.08%)</title><rect x="158.4" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (482 samples, 0.08%)</title><rect x="158.4" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (198 samples, 0.03%)</title><rect x="158.4" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="161.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (284 samples, 0.05%)</title><rect x="158.8" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.8" y="558.0"></text>
</g>
<g>
<title>byte[] (284 samples, 0.05%)</title><rect x="158.8" y="531.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="161.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3,587 samples, 0.61%)</title><rect x="159.4" y="595.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,587 samples, 0.61%)</title><rect x="159.4" y="579.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,587 samples, 0.61%)</title><rect x="159.4" y="563.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.4" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (184 samples, 0.03%)</title><rect x="159.6" y="547.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="162.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (315 samples, 0.05%)</title><rect x="160.0" y="547.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="163.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (232 samples, 0.04%)</title><rect x="160.8" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (232 samples, 0.04%)</title><rect x="160.8" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.get$Lambda (232 samples, 0.04%)</title><rect x="160.8" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.8" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (232 samples, 0.04%)</title><rect x="160.8" y="499.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="163.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (236 samples, 0.04%)</title><rect x="161.3" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.3" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (236 samples, 0.04%)</title><rect x="161.3" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="164.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2,068 samples, 0.35%)</title><rect x="161.8" y="547.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (2,068 samples, 0.35%)</title><rect x="161.8" y="531.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,068 samples, 0.35%)</title><rect x="161.8" y="515.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (349 samples, 0.06%)</title><rect x="161.8" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (349 samples, 0.06%)</title><rect x="161.8" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.get$Lambda (349 samples, 0.06%)</title><rect x="161.8" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.8" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$152 (349 samples, 0.06%)</title><rect x="161.8" y="451.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="164.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (408 samples, 0.07%)</title><rect x="162.5" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (408 samples, 0.07%)</title><rect x="162.5" y="483.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (408 samples, 0.07%)</title><rect x="162.5" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (408 samples, 0.07%)</title><rect x="162.5" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (408 samples, 0.07%)</title><rect x="162.5" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (408 samples, 0.07%)</title><rect x="162.5" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (408 samples, 0.07%)</title><rect x="162.5" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (408 samples, 0.07%)</title><rect x="162.5" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (408 samples, 0.07%)</title><rect x="162.5" y="371.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="165.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (709 samples, 0.12%)</title><rect x="163.3" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (709 samples, 0.12%)</title><rect x="163.3" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (337 samples, 0.06%)</title><rect x="163.3" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (337 samples, 0.06%)</title><rect x="163.3" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (337 samples, 0.06%)</title><rect x="163.3" y="435.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="166.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (372 samples, 0.06%)</title><rect x="164.0" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.0" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (372 samples, 0.06%)</title><rect x="164.0" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="167.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (602 samples, 0.10%)</title><rect x="164.7" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (602 samples, 0.10%)</title><rect x="164.7" y="483.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="167.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (334 samples, 0.06%)</title><rect x="165.9" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (334 samples, 0.06%)</title><rect x="165.9" y="531.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="168.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (7,210 samples, 1.23%)</title><rect x="166.6" y="595.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.6" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (373 samples, 0.06%)</title><rect x="166.6" y="579.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="169.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (476 samples, 0.08%)</title><rect x="167.4" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (476 samples, 0.08%)</title><rect x="167.4" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.4" y="574.0"></text>
</g>
<g>
<title>byte[] (476 samples, 0.08%)</title><rect x="167.4" y="547.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="170.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (911 samples, 0.16%)</title><rect x="168.3" y="579.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (911 samples, 0.16%)</title><rect x="168.3" y="563.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (331 samples, 0.06%)</title><rect x="168.3" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="171.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (580 samples, 0.10%)</title><rect x="169.0" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.0" y="558.0"></text>
</g>
<g>
<title>byte[] (580 samples, 0.10%)</title><rect x="169.0" y="531.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="172.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (5,450 samples, 0.93%)</title><rect x="170.2" y="579.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,544 samples, 0.26%)</title><rect x="170.2" y="563.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,544 samples, 0.26%)</title><rect x="170.2" y="547.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (682 samples, 0.12%)</title><rect x="170.2" y="531.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="173.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (862 samples, 0.15%)</title><rect x="171.6" y="531.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.6" y="542.0"></text>
</g>
<g>
<title>byte[] (862 samples, 0.15%)</title><rect x="171.6" y="515.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="174.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (852 samples, 0.15%)</title><rect x="173.3" y="563.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (852 samples, 0.15%)</title><rect x="173.3" y="547.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.3" y="558.0"></text>
</g>
<g>
<title>byte[] (503 samples, 0.09%)</title><rect x="173.3" y="531.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="176.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (349 samples, 0.06%)</title><rect x="174.3" y="531.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="177.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (779 samples, 0.13%)</title><rect x="175.0" y="563.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (779 samples, 0.13%)</title><rect x="175.0" y="547.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (779 samples, 0.13%)</title><rect x="175.0" y="531.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (377 samples, 0.06%)</title><rect x="175.0" y="515.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="178.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (402 samples, 0.07%)</title><rect x="175.8" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.8" y="526.0"></text>
</g>
<g>
<title>byte[] (402 samples, 0.07%)</title><rect x="175.8" y="499.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="178.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (822 samples, 0.14%)</title><rect x="176.6" y="563.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (822 samples, 0.14%)</title><rect x="176.6" y="547.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (822 samples, 0.14%)</title><rect x="176.6" y="531.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (822 samples, 0.14%)</title><rect x="176.6" y="515.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (822 samples, 0.14%)</title><rect x="176.6" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (822 samples, 0.14%)</title><rect x="176.6" y="483.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="179.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,453 samples, 0.25%)</title><rect x="178.3" y="563.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (491 samples, 0.08%)</title><rect x="178.3" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (491 samples, 0.08%)</title><rect x="178.3" y="531.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="181.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (602 samples, 0.10%)</title><rect x="179.2" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.2" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (602 samples, 0.10%)</title><rect x="179.2" y="531.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="182.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$432/1830098241.apply (360 samples, 0.06%)</title><rect x="180.5" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (360 samples, 0.06%)</title><rect x="180.5" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (360 samples, 0.06%)</title><rect x="180.5" y="515.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="183.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4,696 samples, 0.80%)</title><rect x="181.2" y="723.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4,696 samples, 0.80%)</title><rect x="181.2" y="707.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,696 samples, 0.80%)</title><rect x="181.2" y="691.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$297/169475617.run (4,696 samples, 0.80%)</title><rect x="181.2" y="675.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,696 samples, 0.80%)</title><rect x="181.2" y="659.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4,556 samples, 0.78%)</title><rect x="181.2" y="643.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (296 samples, 0.05%)</title><rect x="181.2" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (296 samples, 0.05%)</title><rect x="181.2" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/157599009.get$Lambda (174 samples, 0.03%)</title><rect x="181.4" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$333 (174 samples, 0.03%)</title><rect x="181.4" y="579.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="184.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (224 samples, 0.04%)</title><rect x="181.8" y="627.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="184.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (327 samples, 0.06%)</title><rect x="182.2" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (327 samples, 0.06%)</title><rect x="182.2" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (136 samples, 0.02%)</title><rect x="182.2" y="595.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="185.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (191 samples, 0.03%)</title><rect x="182.5" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (191 samples, 0.03%)</title><rect x="182.5" y="579.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="185.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3,709 samples, 0.64%)</title><rect x="182.9" y="627.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3,709 samples, 0.64%)</title><rect x="182.9" y="611.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/1409112802.run (3,123 samples, 0.53%)</title><rect x="182.9" y="595.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3,123 samples, 0.53%)</title><rect x="182.9" y="579.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3,123 samples, 0.53%)</title><rect x="182.9" y="563.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (919 samples, 0.16%)</title><rect x="182.9" y="547.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (645 samples, 0.11%)</title><rect x="182.9" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.9" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (247 samples, 0.04%)</title><rect x="182.9" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (247 samples, 0.04%)</title><rect x="182.9" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="185.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (398 samples, 0.07%)</title><rect x="183.4" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.4" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (398 samples, 0.07%)</title><rect x="183.4" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="186.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (274 samples, 0.05%)</title><rect x="184.2" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (274 samples, 0.05%)</title><rect x="184.2" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (274 samples, 0.05%)</title><rect x="184.2" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (165 samples, 0.03%)</title><rect x="184.2" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (165 samples, 0.03%)</title><rect x="184.2" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="187.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,087 samples, 0.36%)</title><rect x="185.0" y="547.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (189 samples, 0.03%)</title><rect x="185.0" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.0" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (189 samples, 0.03%)</title><rect x="185.0" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (189 samples, 0.03%)</title><rect x="185.0" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.0" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (189 samples, 0.03%)</title><rect x="185.0" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.0" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (189 samples, 0.03%)</title><rect x="185.0" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,898 samples, 0.33%)</title><rect x="185.4" y="531.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (760 samples, 0.13%)</title><rect x="185.4" y="515.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (169 samples, 0.03%)</title><rect x="185.4" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (169 samples, 0.03%)</title><rect x="185.4" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="188.4" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (169 samples, 0.03%)</title><rect x="185.4" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.4" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (169 samples, 0.03%)</title><rect x="185.4" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.4" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (169 samples, 0.03%)</title><rect x="185.4" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.4" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (169 samples, 0.03%)</title><rect x="185.4" y="419.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="188.4" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (197 samples, 0.03%)</title><rect x="185.7" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (197 samples, 0.03%)</title><rect x="185.7" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (197 samples, 0.03%)</title><rect x="185.7" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (197 samples, 0.03%)</title><rect x="185.7" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (197 samples, 0.03%)</title><rect x="185.7" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.7" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (197 samples, 0.03%)</title><rect x="185.7" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="188.7" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (188 samples, 0.03%)</title><rect x="186.1" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (188 samples, 0.03%)</title><rect x="186.1" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (188 samples, 0.03%)</title><rect x="186.1" y="467.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="189.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (203 samples, 0.03%)</title><rect x="186.5" y="499.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="189.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (350 samples, 0.06%)</title><rect x="186.9" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (190 samples, 0.03%)</title><rect x="186.9" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (190 samples, 0.03%)</title><rect x="186.9" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (190 samples, 0.03%)</title><rect x="186.9" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (190 samples, 0.03%)</title><rect x="186.9" y="451.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="189.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (160 samples, 0.03%)</title><rect x="187.3" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (160 samples, 0.03%)</title><rect x="187.3" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (160 samples, 0.03%)</title><rect x="187.3" y="467.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="190.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (788 samples, 0.13%)</title><rect x="187.6" y="515.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (183 samples, 0.03%)</title><rect x="187.6" y="499.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="190.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (605 samples, 0.10%)</title><rect x="188.0" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (185 samples, 0.03%)</title><rect x="188.0" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (185 samples, 0.03%)</title><rect x="188.0" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (185 samples, 0.03%)</title><rect x="188.0" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (185 samples, 0.03%)</title><rect x="188.0" y="435.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="191.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (420 samples, 0.07%)</title><rect x="188.4" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (420 samples, 0.07%)</title><rect x="188.4" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (306 samples, 0.05%)</title><rect x="188.4" y="451.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="191.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (586 samples, 0.10%)</title><rect x="189.2" y="595.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (586 samples, 0.10%)</title><rect x="189.2" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (586 samples, 0.10%)</title><rect x="189.2" y="563.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (476 samples, 0.08%)</title><rect x="189.2" y="547.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (476 samples, 0.08%)</title><rect x="189.2" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (476 samples, 0.08%)</title><rect x="189.2" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (476 samples, 0.08%)</title><rect x="189.2" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$470/621309814.accept (476 samples, 0.08%)</title><rect x="189.2" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (476 samples, 0.08%)</title><rect x="189.2" y="467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (476 samples, 0.08%)</title><rect x="189.2" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (476 samples, 0.08%)</title><rect x="189.2" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (476 samples, 0.08%)</title><rect x="189.2" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$487/1843175951.apply (476 samples, 0.08%)</title><rect x="189.2" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (476 samples, 0.08%)</title><rect x="189.2" y="387.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (476 samples, 0.08%)</title><rect x="189.2" y="371.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="192.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (140 samples, 0.02%)</title><rect x="190.4" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (140 samples, 0.02%)</title><rect x="190.4" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (140 samples, 0.02%)</title><rect x="190.4" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (140 samples, 0.02%)</title><rect x="190.4" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/363603817.run (183,502 samples, 31.42%)</title><rect x="190.7" y="755.0" width="370.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.7" y="766.0">ru/mail/polis/service/boriskin/NewService$$Lambda$..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (183,502 samples, 31.42%)</title><rect x="190.7" y="739.0" width="370.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.7" y="750.0">ru/mail/polis/service/boriskin/NewService.lambda$r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (183,502 samples, 31.42%)</title><rect x="190.7" y="723.0" width="370.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.7" y="734.0">ru/mail/polis/service/boriskin/NewService.operation</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12,239 samples, 2.10%)</title><rect x="190.7" y="707.0" width="24.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.7" y="718.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (12,239 samples, 2.10%)</title><rect x="190.7" y="691.0" width="24.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.7" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12,239 samples, 2.10%)</title><rect x="190.7" y="675.0" width="24.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.7" y="686.0">j..</text>
</g>
<g>
<title>java.lang.String (6,742 samples, 1.15%)</title><rect x="190.7" y="659.0" width="13.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="193.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,497 samples, 0.94%)</title><rect x="204.3" y="659.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.3" y="670.0"></text>
</g>
<g>
<title>byte[] (5,497 samples, 0.94%)</title><rect x="204.3" y="643.0" width="11.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="207.3" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.MetaInfoRequest (14,493 samples, 2.48%)</title><rect x="215.4" y="707.0" width="29.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="218.4" y="718.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (54,543 samples, 9.34%)</title><rect x="244.7" y="707.0" width="110.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.7" y="718.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.substring (17,987 samples, 3.08%)</title><rect x="244.7" y="691.0" width="36.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.7" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17,987 samples, 3.08%)</title><rect x="244.7" y="675.0" width="36.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.7" y="686.0">jav..</text>
</g>
<g>
<title>java.lang.String (8,172 samples, 1.40%)</title><rect x="244.7" y="659.0" width="16.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="247.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9,815 samples, 1.68%)</title><rect x="261.2" y="659.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.2" y="670.0"></text>
</g>
<g>
<title>byte[] (9,815 samples, 1.68%)</title><rect x="261.2" y="643.0" width="19.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="264.2" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17,078 samples, 2.92%)</title><rect x="281.0" y="691.0" width="34.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.0" y="702.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17,078 samples, 2.92%)</title><rect x="281.0" y="675.0" width="34.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.0" y="686.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17,078 samples, 2.92%)</title><rect x="281.0" y="659.0" width="34.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="284.0" y="670.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19,478 samples, 3.34%)</title><rect x="315.6" y="691.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.6" y="702.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (19,478 samples, 3.34%)</title><rect x="315.6" y="675.0" width="39.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.6" y="686.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19,478 samples, 3.34%)</title><rect x="315.6" y="659.0" width="39.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.6" y="670.0">jav..</text>
</g>
<g>
<title>java.lang.String (10,856 samples, 1.86%)</title><rect x="315.6" y="643.0" width="21.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="318.6" y="654.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8,622 samples, 1.48%)</title><rect x="337.5" y="643.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.5" y="654.0"></text>
</g>
<g>
<title>byte[] (8,622 samples, 1.48%)</title><rect x="337.5" y="627.0" width="17.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="340.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.upserting (102,227 samples, 17.51%)</title><rect x="354.9" y="707.0" width="206.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.9" y="718.0">ru/mail/polis/service/boris..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,680 samples, 0.29%)</title><rect x="354.9" y="691.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="357.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,680 samples, 0.29%)</title><rect x="354.9" y="675.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,680 samples, 0.29%)</title><rect x="354.9" y="659.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,680 samples, 0.29%)</title><rect x="354.9" y="643.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.9" y="654.0"></text>
</g>
<g>
<title>byte[] (1,680 samples, 0.29%)</title><rect x="354.9" y="627.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="357.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5,808 samples, 0.99%)</title><rect x="358.3" y="691.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,808 samples, 0.99%)</title><rect x="358.3" y="675.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$117/662670926.get$Lambda (1,849 samples, 0.32%)</title><rect x="358.3" y="659.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$117 (1,849 samples, 0.32%)</title><rect x="358.3" y="643.0" width="3.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="361.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$133/1429318088.get$Lambda (1,662 samples, 0.28%)</title><rect x="362.0" y="659.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.0" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$133 (1,662 samples, 0.28%)</title><rect x="362.0" y="643.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="365.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$140/636183480.get$Lambda (2,297 samples, 0.39%)</title><rect x="365.4" y="659.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="368.4" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$140 (2,297 samples, 0.39%)</title><rect x="365.4" y="643.0" width="4.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="368.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,558 samples, 0.61%)</title><rect x="370.0" y="691.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,558 samples, 0.61%)</title><rect x="370.0" y="675.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.0" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,558 samples, 0.61%)</title><rect x="370.0" y="659.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="373.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (4,518 samples, 0.77%)</title><rect x="377.2" y="691.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4,518 samples, 0.77%)</title><rect x="377.2" y="675.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (2,854 samples, 0.49%)</title><rect x="377.2" y="659.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="380.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,664 samples, 0.28%)</title><rect x="383.0" y="659.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,664 samples, 0.28%)</title><rect x="383.0" y="643.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="386.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (4,517 samples, 0.77%)</title><rect x="386.4" y="691.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,517 samples, 0.77%)</title><rect x="386.4" y="675.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,752 samples, 0.47%)</title><rect x="386.4" y="659.0" width="5.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="389.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,765 samples, 0.30%)</title><rect x="391.9" y="659.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.9" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,765 samples, 0.30%)</title><rect x="391.9" y="643.0" width="3.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="394.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4,551 samples, 0.78%)</title><rect x="395.5" y="691.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4,551 samples, 0.78%)</title><rect x="395.5" y="675.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2,896 samples, 0.50%)</title><rect x="395.5" y="659.0" width="5.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="398.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,655 samples, 0.28%)</title><rect x="401.3" y="659.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,655 samples, 0.28%)</title><rect x="401.3" y="643.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="404.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (33,825 samples, 5.79%)</title><rect x="404.7" y="691.0" width="68.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.7" y="702.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (1,653 samples, 0.28%)</title><rect x="404.7" y="675.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="407.7" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6,910 samples, 1.18%)</title><rect x="408.0" y="675.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.0" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (1,774 samples, 0.30%)</title><rect x="408.0" y="659.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="411.0" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5,136 samples, 0.88%)</title><rect x="411.6" y="659.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2,835 samples, 0.49%)</title><rect x="411.6" y="643.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.6" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (2,835 samples, 0.49%)</title><rect x="411.6" y="627.0" width="5.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="414.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (2,301 samples, 0.39%)</title><rect x="417.3" y="643.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.3" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (2,301 samples, 0.39%)</title><rect x="417.3" y="627.0" width="4.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="420.3" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (1,076 samples, 0.18%)</title><rect x="422.0" y="675.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.0" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (1,076 samples, 0.18%)</title><rect x="422.0" y="659.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="425.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,944 samples, 0.68%)</title><rect x="424.2" y="675.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,944 samples, 0.68%)</title><rect x="424.2" y="659.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,944 samples, 0.68%)</title><rect x="424.2" y="643.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,944 samples, 0.68%)</title><rect x="424.2" y="627.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,944 samples, 0.68%)</title><rect x="424.2" y="611.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,941 samples, 0.67%)</title><rect x="424.2" y="595.0" width="7.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="427.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (132 samples, 0.02%)</title><rect x="432.1" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.1" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (132 samples, 0.02%)</title><rect x="432.1" y="659.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="435.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,480 samples, 0.60%)</title><rect x="432.4" y="675.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,480 samples, 0.60%)</title><rect x="432.4" y="659.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.4" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,480 samples, 0.60%)</title><rect x="432.4" y="643.0" width="7.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="435.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (16,630 samples, 2.85%)</title><rect x="439.4" y="675.0" width="33.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.4" y="686.0">ru..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (13,276 samples, 2.27%)</title><rect x="439.4" y="659.0" width="26.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.4" y="670.0">c..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9,823 samples, 1.68%)</title><rect x="439.4" y="643.0" width="19.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (9,823 samples, 1.68%)</title><rect x="439.4" y="627.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.4" y="638.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,498 samples, 0.60%)</title><rect x="439.4" y="611.0" width="7.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="442.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (6,325 samples, 1.08%)</title><rect x="446.5" y="611.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,325 samples, 1.08%)</title><rect x="446.5" y="595.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,325 samples, 1.08%)</title><rect x="446.5" y="579.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6,325 samples, 1.08%)</title><rect x="446.5" y="563.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.5" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,494 samples, 0.60%)</title><rect x="446.5" y="547.0" width="7.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="449.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,831 samples, 0.48%)</title><rect x="453.6" y="547.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.6" y="558.0"></text>
</g>
<g>
<title>byte[] (2,831 samples, 0.48%)</title><rect x="453.6" y="531.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="456.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (3,453 samples, 0.59%)</title><rect x="459.3" y="643.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (3,453 samples, 0.59%)</title><rect x="459.3" y="627.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.3" y="638.0"></text>
</g>
<g>
<title>byte[] (2,306 samples, 0.39%)</title><rect x="459.3" y="611.0" width="4.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="462.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode.fromBytesNoCopy (1,147 samples, 0.20%)</title><rect x="463.9" y="611.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.9" y="622.0"></text>
</g>
<g>
<title>com.google.common.hash.HashCode$BytesHashCode (1,147 samples, 0.20%)</title><rect x="463.9" y="595.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="466.9" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,677 samples, 0.29%)</title><rect x="466.3" y="659.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.3" y="670.0"></text>
</g>
<g>
<title>java.lang.Long (1,677 samples, 0.29%)</title><rect x="466.3" y="643.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="469.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (1,632 samples, 0.28%)</title><rect x="469.7" y="659.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (1,632 samples, 0.28%)</title><rect x="469.7" y="643.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.7" y="654.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (1,632 samples, 0.28%)</title><rect x="469.7" y="627.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="472.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doUpsert (38,732 samples, 6.63%)</title><rect x="473.0" y="691.0" width="78.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.0" y="702.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7,373 samples, 1.26%)</title><rect x="473.0" y="675.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7,373 samples, 1.26%)</title><rect x="473.0" y="659.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$427/1238028632.get$Lambda (7,373 samples, 1.26%)</title><rect x="473.0" y="643.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.0" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$427 (7,373 samples, 1.26%)</title><rect x="473.0" y="627.0" width="14.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="476.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (19,069 samples, 3.27%)</title><rect x="487.9" y="675.0" width="38.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.9" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (19,069 samples, 3.27%)</title><rect x="487.9" y="659.0" width="38.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.9" y="670.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (10,257 samples, 1.76%)</title><rect x="487.9" y="643.0" width="20.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="490.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (8,812 samples, 1.51%)</title><rect x="508.7" y="643.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (8,812 samples, 1.51%)</title><rect x="508.7" y="627.0" width="17.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="511.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (12,290 samples, 2.10%)</title><rect x="526.5" y="675.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.5" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (12,290 samples, 2.10%)</title><rect x="526.5" y="659.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.5" y="670.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncRun (5,974 samples, 1.02%)</title><rect x="526.5" y="643.0" width="12.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="529.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (6,316 samples, 1.08%)</title><rect x="538.5" y="643.0" width="12.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="541.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (5,038 samples, 0.86%)</title><rect x="551.3" y="691.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,743 samples, 0.30%)</title><rect x="551.3" y="675.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,743 samples, 0.30%)</title><rect x="551.3" y="659.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$127/1271192315.get$Lambda (1,743 samples, 0.30%)</title><rect x="551.3" y="643.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.3" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$127 (1,743 samples, 0.30%)</title><rect x="551.3" y="627.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="554.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3,295 samples, 0.56%)</title><rect x="554.8" y="675.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3,295 samples, 0.56%)</title><rect x="554.8" y="659.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1,648 samples, 0.28%)</title><rect x="554.8" y="643.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="557.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,647 samples, 0.28%)</title><rect x="558.2" y="643.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="561.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (65,134 samples, 11.15%)</title><rect x="561.5" y="803.0" width="131.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.5" y="814.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (65,134 samples, 11.15%)</title><rect x="561.5" y="787.0" width="131.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.5" y="798.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (65,134 samples, 11.15%)</title><rect x="561.5" y="771.0" width="131.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.5" y="782.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (65,134 samples, 11.15%)</title><rect x="561.5" y="755.0" width="131.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.5" y="766.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (65,134 samples, 11.15%)</title><rect x="561.5" y="739.0" width="131.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.5" y="750.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (6,778 samples, 1.16%)</title><rect x="561.5" y="723.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (6,778 samples, 1.16%)</title><rect x="561.5" y="707.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$427/1238028632.run (6,778 samples, 1.16%)</title><rect x="561.5" y="691.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$12 (6,778 samples, 1.16%)</title><rect x="561.5" y="675.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (616 samples, 0.11%)</title><rect x="561.5" y="659.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (616 samples, 0.11%)</title><rect x="561.5" y="643.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (616 samples, 0.11%)</title><rect x="561.5" y="627.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (616 samples, 0.11%)</title><rect x="561.5" y="611.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.5" y="622.0"></text>
</g>
<g>
<title>byte[] (616 samples, 0.11%)</title><rect x="561.5" y="595.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="564.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (716 samples, 0.12%)</title><rect x="562.7" y="659.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (716 samples, 0.12%)</title><rect x="562.7" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.7" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (716 samples, 0.12%)</title><rect x="562.7" y="627.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="565.7" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (404 samples, 0.07%)</title><rect x="564.2" y="659.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="567.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,359 samples, 0.23%)</title><rect x="565.0" y="659.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.0" y="670.0"></text>
</g>
<g>
<title>byte[] (620 samples, 0.11%)</title><rect x="565.0" y="643.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="568.0" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (428 samples, 0.07%)</title><rect x="566.3" y="643.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="569.3" y="654.0"></text>
</g>
<g>
<title>java.lang.String (311 samples, 0.05%)</title><rect x="567.1" y="643.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="570.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (1,857 samples, 0.32%)</title><rect x="567.7" y="659.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (1,767 samples, 0.30%)</title><rect x="567.8" y="643.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,399 samples, 0.24%)</title><rect x="567.8" y="627.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.8" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,399 samples, 0.24%)</title><rect x="567.8" y="611.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="570.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (359 samples, 0.06%)</title><rect x="570.7" y="627.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="573.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (1,826 samples, 0.31%)</title><rect x="571.5" y="659.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,826 samples, 0.31%)</title><rect x="571.5" y="643.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,826 samples, 0.31%)</title><rect x="571.5" y="627.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,240 samples, 0.21%)</title><rect x="571.5" y="611.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,240 samples, 0.21%)</title><rect x="571.5" y="595.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.5" y="606.0"></text>
</g>
<g>
<title>byte[] (1,232 samples, 0.21%)</title><rect x="571.5" y="579.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="574.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (586 samples, 0.10%)</title><rect x="574.0" y="611.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.0" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (586 samples, 0.10%)</title><rect x="574.0" y="595.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (2,213 samples, 0.38%)</title><rect x="575.2" y="723.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,213 samples, 0.38%)</title><rect x="575.2" y="707.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$127/1271192315.get (2,213 samples, 0.38%)</title><rect x="575.2" y="691.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$21 (2,213 samples, 0.38%)</title><rect x="575.2" y="675.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$117/662670926.run (2,213 samples, 0.38%)</title><rect x="575.2" y="659.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$7 (2,213 samples, 0.38%)</title><rect x="575.2" y="643.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (917 samples, 0.16%)</title><rect x="575.2" y="627.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (917 samples, 0.16%)</title><rect x="575.2" y="611.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (917 samples, 0.16%)</title><rect x="575.2" y="595.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.2" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (917 samples, 0.16%)</title><rect x="575.2" y="579.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.2" y="590.0"></text>
</g>
<g>
<title>byte[] (917 samples, 0.16%)</title><rect x="575.2" y="563.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="578.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (366 samples, 0.06%)</title><rect x="577.0" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (366 samples, 0.06%)</title><rect x="577.0" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.0" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (366 samples, 0.06%)</title><rect x="577.0" y="595.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="580.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (930 samples, 0.16%)</title><rect x="577.8" y="627.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (879 samples, 0.15%)</title><rect x="577.8" y="611.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (715 samples, 0.12%)</title><rect x="577.8" y="595.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (715 samples, 0.12%)</title><rect x="577.8" y="579.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="580.8" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (161 samples, 0.03%)</title><rect x="579.3" y="595.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="582.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (56,143 samples, 9.61%)</title><rect x="579.7" y="723.0" width="113.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.7" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (54,035 samples, 9.25%)</title><rect x="579.7" y="707.0" width="109.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.7" y="718.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (237 samples, 0.04%)</title><rect x="579.7" y="691.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="582.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$133/1429318088.apply (53,798 samples, 9.21%)</title><rect x="580.1" y="691.0" width="108.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.1" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (53,798 samples, 9.21%)</title><rect x="580.1" y="675.0" width="108.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.1" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (53,798 samples, 9.21%)</title><rect x="580.1" y="659.0" width="108.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.1" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>java.util.ArrayList (229 samples, 0.04%)</title><rect x="580.1" y="643.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="583.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,284 samples, 0.22%)</title><rect x="580.6" y="643.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (1,284 samples, 0.22%)</title><rect x="580.6" y="627.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,284 samples, 0.22%)</title><rect x="580.6" y="611.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (331 samples, 0.06%)</title><rect x="580.6" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (331 samples, 0.06%)</title><rect x="580.6" y="579.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="583.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (953 samples, 0.16%)</title><rect x="581.3" y="595.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (953 samples, 0.16%)</title><rect x="581.3" y="579.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.3" y="590.0"></text>
</g>
<g>
<title>byte[] (953 samples, 0.16%)</title><rect x="581.3" y="563.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="584.3" y="574.0"></text>
</g>
<g>
<title>java/net/URI.create (5,825 samples, 1.00%)</title><rect x="583.2" y="643.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.2" y="654.0"></text>
</g>
<g>
<title>java.net.URI (1,268 samples, 0.22%)</title><rect x="583.2" y="627.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="586.2" y="638.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (4,555 samples, 0.78%)</title><rect x="585.8" y="627.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.8" y="638.0"></text>
</g>
<g>
<title>java.net.URI$Parser (518 samples, 0.09%)</title><rect x="585.8" y="611.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="588.8" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (4,037 samples, 0.69%)</title><rect x="586.8" y="611.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (745 samples, 0.13%)</title><rect x="586.8" y="595.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (745 samples, 0.13%)</title><rect x="586.8" y="579.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (379 samples, 0.06%)</title><rect x="586.8" y="563.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="589.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (366 samples, 0.06%)</title><rect x="587.6" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.6" y="574.0"></text>
</g>
<g>
<title>byte[] (366 samples, 0.06%)</title><rect x="587.6" y="547.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="590.6" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (3,292 samples, 0.56%)</title><rect x="588.3" y="595.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,656 samples, 0.28%)</title><rect x="588.3" y="579.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,656 samples, 0.28%)</title><rect x="588.3" y="563.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (691 samples, 0.12%)</title><rect x="588.3" y="547.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="591.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (965 samples, 0.17%)</title><rect x="589.7" y="547.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.7" y="558.0"></text>
</g>
<g>
<title>byte[] (965 samples, 0.17%)</title><rect x="589.7" y="531.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="592.7" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1,636 samples, 0.28%)</title><rect x="591.7" y="579.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (789 samples, 0.14%)</title><rect x="591.7" y="563.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (789 samples, 0.14%)</title><rect x="591.7" y="547.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (331 samples, 0.06%)</title><rect x="591.7" y="531.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="594.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (458 samples, 0.08%)</title><rect x="592.3" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.3" y="542.0"></text>
</g>
<g>
<title>byte[] (458 samples, 0.08%)</title><rect x="592.3" y="515.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="595.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (847 samples, 0.15%)</title><rect x="593.3" y="563.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.3" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (847 samples, 0.15%)</title><rect x="593.3" y="547.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (847 samples, 0.15%)</title><rect x="593.3" y="531.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (847 samples, 0.15%)</title><rect x="593.3" y="515.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (366 samples, 0.06%)</title><rect x="593.3" y="499.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="596.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (481 samples, 0.08%)</title><rect x="594.0" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.0" y="510.0"></text>
</g>
<g>
<title>byte[] (481 samples, 0.08%)</title><rect x="594.0" y="483.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="597.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (451 samples, 0.08%)</title><rect x="595.0" y="643.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (451 samples, 0.08%)</title><rect x="595.0" y="627.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="598.0" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (1,535 samples, 0.26%)</title><rect x="595.9" y="643.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (571 samples, 0.10%)</title><rect x="595.9" y="627.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="598.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (964 samples, 0.17%)</title><rect x="597.0" y="627.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (233 samples, 0.04%)</title><rect x="597.0" y="611.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="600.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (731 samples, 0.13%)</title><rect x="597.5" y="611.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (731 samples, 0.13%)</title><rect x="597.5" y="595.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="600.5" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (437 samples, 0.07%)</title><rect x="599.0" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (437 samples, 0.07%)</title><rect x="599.0" y="627.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (437 samples, 0.07%)</title><rect x="599.0" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (437 samples, 0.07%)</title><rect x="599.0" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (437 samples, 0.07%)</title><rect x="599.0" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (437 samples, 0.07%)</title><rect x="599.0" y="563.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="602.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (247 samples, 0.04%)</title><rect x="599.9" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.9" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (247 samples, 0.04%)</title><rect x="599.9" y="627.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="602.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (29,415 samples, 5.04%)</title><rect x="600.4" y="643.0" width="59.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.4" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (29,415 samples, 5.04%)</title><rect x="600.4" y="627.0" width="59.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.4" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (29,415 samples, 5.04%)</title><rect x="600.4" y="611.0" width="59.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.4" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (29,415 samples, 5.04%)</title><rect x="600.4" y="595.0" width="59.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.4" y="606.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (254 samples, 0.04%)</title><rect x="600.4" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (254 samples, 0.04%)</title><rect x="600.4" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$198/901262753.get$Lambda (254 samples, 0.04%)</title><rect x="600.4" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$198 (254 samples, 0.04%)</title><rect x="600.4" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="603.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,077 samples, 0.18%)</title><rect x="600.9" y="579.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,077 samples, 0.18%)</title><rect x="600.9" y="563.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (605 samples, 0.10%)</title><rect x="600.9" y="547.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="603.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (472 samples, 0.08%)</title><rect x="602.1" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (472 samples, 0.08%)</title><rect x="602.1" y="531.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (472 samples, 0.08%)</title><rect x="602.1" y="515.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="605.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,074 samples, 0.18%)</title><rect x="603.1" y="579.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,074 samples, 0.18%)</title><rect x="603.1" y="563.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (572 samples, 0.10%)</title><rect x="603.1" y="547.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="606.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (502 samples, 0.09%)</title><rect x="604.2" y="547.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (502 samples, 0.09%)</title><rect x="604.2" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (502 samples, 0.09%)</title><rect x="604.2" y="515.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="607.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (865 samples, 0.15%)</title><rect x="605.2" y="579.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="608.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (1,449 samples, 0.25%)</title><rect x="607.0" y="579.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="610.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (13,931 samples, 2.39%)</title><rect x="609.9" y="579.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.9" y="590.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,655 samples, 0.28%)</title><rect x="609.9" y="563.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.9" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,324 samples, 0.23%)</title><rect x="609.9" y="547.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (478 samples, 0.08%)</title><rect x="609.9" y="531.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.9" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (478 samples, 0.08%)</title><rect x="609.9" y="515.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (846 samples, 0.14%)</title><rect x="610.9" y="531.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.9" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (846 samples, 0.14%)</title><rect x="610.9" y="515.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="613.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (331 samples, 0.06%)</title><rect x="612.6" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (331 samples, 0.06%)</title><rect x="612.6" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (331 samples, 0.06%)</title><rect x="612.6" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (331 samples, 0.06%)</title><rect x="612.6" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.6" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (331 samples, 0.06%)</title><rect x="612.6" y="483.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="615.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5,604 samples, 0.96%)</title><rect x="613.3" y="563.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5,604 samples, 0.96%)</title><rect x="613.3" y="547.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.3" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (222 samples, 0.04%)</title><rect x="613.3" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="616.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (354 samples, 0.06%)</title><rect x="613.7" y="531.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="616.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (683 samples, 0.12%)</title><rect x="614.4" y="531.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="617.4" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (246 samples, 0.04%)</title><rect x="615.8" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="618.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (463 samples, 0.08%)</title><rect x="616.3" y="531.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (463 samples, 0.08%)</title><rect x="616.3" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.get$Lambda (463 samples, 0.08%)</title><rect x="616.3" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.3" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (463 samples, 0.08%)</title><rect x="616.3" y="483.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="619.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2,468 samples, 0.42%)</title><rect x="617.3" y="531.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,468 samples, 0.42%)</title><rect x="617.3" y="515.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (2,468 samples, 0.42%)</title><rect x="617.3" y="499.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,468 samples, 0.42%)</title><rect x="617.3" y="483.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (788 samples, 0.13%)</title><rect x="617.3" y="467.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (788 samples, 0.13%)</title><rect x="617.3" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (788 samples, 0.13%)</title><rect x="617.3" y="435.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (788 samples, 0.13%)</title><rect x="617.3" y="419.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (788 samples, 0.13%)</title><rect x="617.3" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (788 samples, 0.13%)</title><rect x="617.3" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (788 samples, 0.13%)</title><rect x="617.3" y="371.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (788 samples, 0.13%)</title><rect x="617.3" y="355.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (788 samples, 0.13%)</title><rect x="617.3" y="339.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="620.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (361 samples, 0.06%)</title><rect x="618.9" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (361 samples, 0.06%)</title><rect x="618.9" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.get$Lambda (361 samples, 0.06%)</title><rect x="618.9" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.9" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$152 (361 samples, 0.06%)</title><rect x="618.9" y="419.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="621.9" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (703 samples, 0.12%)</title><rect x="619.6" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.6" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (703 samples, 0.12%)</title><rect x="619.6" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (357 samples, 0.06%)</title><rect x="619.6" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (357 samples, 0.06%)</title><rect x="619.6" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (357 samples, 0.06%)</title><rect x="619.6" y="403.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="622.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (346 samples, 0.06%)</title><rect x="620.3" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (346 samples, 0.06%)</title><rect x="620.3" y="419.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="623.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (616 samples, 0.11%)</title><rect x="621.0" y="467.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.0" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (616 samples, 0.11%)</title><rect x="621.0" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="624.0" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (488 samples, 0.08%)</title><rect x="622.2" y="531.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.2" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (488 samples, 0.08%)</title><rect x="622.2" y="515.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="625.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (680 samples, 0.12%)</title><rect x="623.2" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (680 samples, 0.12%)</title><rect x="623.2" y="515.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="626.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (240 samples, 0.04%)</title><rect x="624.6" y="563.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="627.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4,448 samples, 0.76%)</title><rect x="625.1" y="563.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.1" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4,448 samples, 0.76%)</title><rect x="625.1" y="547.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.1" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3,949 samples, 0.68%)</title><rect x="625.1" y="531.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.1" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3,949 samples, 0.68%)</title><rect x="625.1" y="515.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.1" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3,949 samples, 0.68%)</title><rect x="625.1" y="499.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.1" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1,097 samples, 0.19%)</title><rect x="625.1" y="483.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="628.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,473 samples, 0.25%)</title><rect x="627.3" y="483.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.3" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,473 samples, 0.25%)</title><rect x="627.3" y="467.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.3" y="478.0"></text>
</g>
<g>
<title>byte[] (1,473 samples, 0.25%)</title><rect x="627.3" y="451.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="630.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,379 samples, 0.24%)</title><rect x="630.3" y="483.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,379 samples, 0.24%)</title><rect x="630.3" y="467.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,379 samples, 0.24%)</title><rect x="630.3" y="451.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.3" y="462.0"></text>
</g>
<g>
<title>byte[] (1,379 samples, 0.24%)</title><rect x="630.3" y="435.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="633.3" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (499 samples, 0.09%)</title><rect x="633.1" y="531.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="636.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (692 samples, 0.12%)</title><rect x="634.1" y="563.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.1" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (692 samples, 0.12%)</title><rect x="634.1" y="547.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="637.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,292 samples, 0.22%)</title><rect x="635.5" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.5" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (362 samples, 0.06%)</title><rect x="635.5" y="547.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="638.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (352 samples, 0.06%)</title><rect x="636.2" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.2" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (352 samples, 0.06%)</title><rect x="636.2" y="531.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="639.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (578 samples, 0.10%)</title><rect x="636.9" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (578 samples, 0.10%)</title><rect x="636.9" y="531.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="639.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (6,920 samples, 1.19%)</title><rect x="638.1" y="579.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (253 samples, 0.04%)</title><rect x="638.1" y="563.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="641.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (1,086 samples, 0.19%)</title><rect x="638.6" y="563.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="641.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (239 samples, 0.04%)</title><rect x="640.8" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (239 samples, 0.04%)</title><rect x="640.8" y="547.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="643.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5,339 samples, 0.91%)</title><rect x="641.3" y="563.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5,339 samples, 0.91%)</title><rect x="641.3" y="547.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (428 samples, 0.07%)</title><rect x="641.3" y="531.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="644.3" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (464 samples, 0.08%)</title><rect x="642.1" y="531.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="645.1" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (465 samples, 0.08%)</title><rect x="643.1" y="531.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="646.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2,378 samples, 0.41%)</title><rect x="644.0" y="531.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2,378 samples, 0.41%)</title><rect x="644.0" y="515.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (2,378 samples, 0.41%)</title><rect x="644.0" y="499.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.0" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (2,378 samples, 0.41%)</title><rect x="644.0" y="483.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.0" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (2,371 samples, 0.41%)</title><rect x="644.0" y="467.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="647.0" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (897 samples, 0.15%)</title><rect x="648.8" y="531.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (897 samples, 0.15%)</title><rect x="648.8" y="515.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor13.newInstance (265 samples, 0.05%)</title><rect x="648.8" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (265 samples, 0.05%)</title><rect x="648.8" y="483.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="651.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (632 samples, 0.11%)</title><rect x="649.4" y="499.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (632 samples, 0.11%)</title><rect x="649.4" y="483.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="652.4" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (707 samples, 0.12%)</title><rect x="650.6" y="531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.6" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (707 samples, 0.12%)</title><rect x="650.6" y="515.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.6" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (707 samples, 0.12%)</title><rect x="650.6" y="499.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="653.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (3,826 samples, 0.66%)</title><rect x="652.1" y="579.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (672 samples, 0.12%)</title><rect x="652.1" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (352 samples, 0.06%)</title><rect x="652.1" y="547.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="655.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (320 samples, 0.05%)</title><rect x="652.8" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (320 samples, 0.05%)</title><rect x="652.8" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (308 samples, 0.05%)</title><rect x="652.8" y="515.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="655.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (513 samples, 0.09%)</title><rect x="653.4" y="563.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="656.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2,641 samples, 0.45%)</title><rect x="654.5" y="563.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (493 samples, 0.08%)</title><rect x="654.5" y="547.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (493 samples, 0.08%)</title><rect x="654.5" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1931669415.get$Lambda (253 samples, 0.04%)</title><rect x="654.5" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$178 (253 samples, 0.04%)</title><rect x="654.5" y="499.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="657.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$186/2099274115.get$Lambda (240 samples, 0.04%)</title><rect x="655.0" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$186 (240 samples, 0.04%)</title><rect x="655.0" y="499.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="658.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,148 samples, 0.37%)</title><rect x="655.5" y="547.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,148 samples, 0.37%)</title><rect x="655.5" y="531.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,209 samples, 0.21%)</title><rect x="655.5" y="515.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="658.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (939 samples, 0.16%)</title><rect x="657.9" y="515.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (939 samples, 0.16%)</title><rect x="657.9" y="499.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (939 samples, 0.16%)</title><rect x="657.9" y="483.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="660.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (6,670 samples, 1.14%)</title><rect x="659.8" y="643.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (592 samples, 0.10%)</title><rect x="659.8" y="627.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="662.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6,078 samples, 1.04%)</title><rect x="661.0" y="627.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.0" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5,830 samples, 1.00%)</title><rect x="661.0" y="611.0" width="11.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5,830 samples, 1.00%)</title><rect x="661.0" y="595.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.0" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (229 samples, 0.04%)</title><rect x="661.0" y="579.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="664.0" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (386 samples, 0.07%)</title><rect x="661.5" y="579.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="664.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (701 samples, 0.12%)</title><rect x="662.2" y="579.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="665.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (250 samples, 0.04%)</title><rect x="663.7" y="579.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="666.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (529 samples, 0.09%)</title><rect x="664.2" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (529 samples, 0.09%)</title><rect x="664.2" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.get$Lambda (529 samples, 0.09%)</title><rect x="664.2" y="547.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.2" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$149 (529 samples, 0.09%)</title><rect x="664.2" y="531.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="667.2" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (470 samples, 0.08%)</title><rect x="665.2" y="579.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.2" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (470 samples, 0.08%)</title><rect x="665.2" y="563.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="668.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,527 samples, 0.43%)</title><rect x="666.2" y="579.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1484523816.accept (2,527 samples, 0.43%)</title><rect x="666.2" y="563.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,527 samples, 0.43%)</title><rect x="666.2" y="547.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (377 samples, 0.06%)</title><rect x="666.2" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (377 samples, 0.06%)</title><rect x="666.2" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.get$Lambda (377 samples, 0.06%)</title><rect x="666.2" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.2" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$152 (377 samples, 0.06%)</title><rect x="666.2" y="483.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="669.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (843 samples, 0.14%)</title><rect x="666.9" y="531.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1547929343.accept (843 samples, 0.14%)</title><rect x="666.9" y="515.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (843 samples, 0.14%)</title><rect x="666.9" y="499.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (843 samples, 0.14%)</title><rect x="666.9" y="483.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (843 samples, 0.14%)</title><rect x="666.9" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (843 samples, 0.14%)</title><rect x="666.9" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (843 samples, 0.14%)</title><rect x="666.9" y="435.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (843 samples, 0.14%)</title><rect x="666.9" y="419.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (843 samples, 0.14%)</title><rect x="666.9" y="403.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="669.9" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (717 samples, 0.12%)</title><rect x="668.6" y="531.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.6" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (717 samples, 0.12%)</title><rect x="668.6" y="515.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (360 samples, 0.06%)</title><rect x="668.6" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (360 samples, 0.06%)</title><rect x="668.6" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (360 samples, 0.06%)</title><rect x="668.6" y="467.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="671.6" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (357 samples, 0.06%)</title><rect x="669.4" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.4" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (357 samples, 0.06%)</title><rect x="669.4" y="483.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="672.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (590 samples, 0.10%)</title><rect x="670.1" y="531.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (590 samples, 0.10%)</title><rect x="670.1" y="515.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="673.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (738 samples, 0.13%)</title><rect x="671.3" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.3" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (738 samples, 0.13%)</title><rect x="671.3" y="563.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="674.3" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (248 samples, 0.04%)</title><rect x="672.8" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.8" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (248 samples, 0.04%)</title><rect x="672.8" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.8" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (248 samples, 0.04%)</title><rect x="672.8" y="579.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="675.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1,348 samples, 0.23%)</title><rect x="673.3" y="643.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1,348 samples, 0.23%)</title><rect x="673.3" y="627.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,348 samples, 0.23%)</title><rect x="673.3" y="611.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.3" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (356 samples, 0.06%)</title><rect x="673.3" y="595.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="676.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (392 samples, 0.07%)</title><rect x="674.0" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.0" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (392 samples, 0.07%)</title><rect x="674.0" y="579.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="677.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (600 samples, 0.10%)</title><rect x="674.8" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.8" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (600 samples, 0.10%)</title><rect x="674.8" y="579.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="677.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (6,357 samples, 1.09%)</title><rect x="676.0" y="643.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (179 samples, 0.03%)</title><rect x="676.0" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="679.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (183 samples, 0.03%)</title><rect x="676.4" y="627.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="679.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (139 samples, 0.02%)</title><rect x="677.0" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.02%)</title><rect x="677.0" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$207/689816463.get$Lambda (139 samples, 0.02%)</title><rect x="677.0" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.FuturesWorker$$Lambda$207 (139 samples, 0.02%)</title><rect x="677.0" y="579.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="680.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/320088168.linkToTargetMethod (248 samples, 0.04%)</title><rect x="677.3" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1803985302.invokeStatic (248 samples, 0.04%)</title><rect x="677.3" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$205/933343823.get$Lambda (248 samples, 0.04%)</title><rect x="677.3" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.FuturesWorker$$Lambda$205 (248 samples, 0.04%)</title><rect x="677.3" y="579.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="680.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5,262 samples, 0.90%)</title><rect x="677.8" y="627.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$207/689816463.accept (5,262 samples, 0.90%)</title><rect x="677.8" y="611.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (5,262 samples, 0.90%)</title><rect x="677.8" y="595.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,117 samples, 0.19%)</title><rect x="677.8" y="579.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,117 samples, 0.19%)</title><rect x="677.8" y="563.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (600 samples, 0.10%)</title><rect x="677.8" y="547.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="680.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (517 samples, 0.09%)</title><rect x="679.0" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (517 samples, 0.09%)</title><rect x="679.0" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (517 samples, 0.09%)</title><rect x="679.0" y="515.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="682.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (3,095 samples, 0.53%)</title><rect x="680.0" y="579.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Canceller (256 samples, 0.04%)</title><rect x="680.0" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="683.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Timeout (256 samples, 0.04%)</title><rect x="680.5" y="563.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="683.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (1,474 samples, 0.25%)</title><rect x="681.1" y="563.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (1,474 samples, 0.25%)</title><rect x="681.1" y="547.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (1,110 samples, 0.19%)</title><rect x="681.1" y="531.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="684.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (351 samples, 0.06%)</title><rect x="683.3" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (351 samples, 0.06%)</title><rect x="683.3" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (351 samples, 0.06%)</title><rect x="683.3" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (351 samples, 0.06%)</title><rect x="683.3" y="483.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="686.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,109 samples, 0.19%)</title><rect x="684.0" y="563.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,109 samples, 0.19%)</title><rect x="684.0" y="547.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (596 samples, 0.10%)</title><rect x="684.0" y="531.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="687.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (513 samples, 0.09%)</title><rect x="685.2" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (513 samples, 0.09%)</title><rect x="685.2" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (513 samples, 0.09%)</title><rect x="685.2" y="499.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="688.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,050 samples, 0.18%)</title><rect x="686.3" y="579.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,050 samples, 0.18%)</title><rect x="686.3" y="563.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (589 samples, 0.10%)</title><rect x="686.3" y="547.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="689.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (461 samples, 0.08%)</title><rect x="687.5" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (461 samples, 0.08%)</title><rect x="687.5" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (461 samples, 0.08%)</title><rect x="687.5" y="515.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="690.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (224 samples, 0.04%)</title><rect x="688.4" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,108 samples, 0.36%)</title><rect x="688.9" y="707.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,098 samples, 0.36%)</title><rect x="688.9" y="691.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$205/933343823.accept (242 samples, 0.04%)</title><rect x="688.9" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (242 samples, 0.04%)</title><rect x="688.9" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (242 samples, 0.04%)</title><rect x="688.9" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (242 samples, 0.04%)</title><rect x="688.9" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (242 samples, 0.04%)</title><rect x="688.9" y="611.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="691.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$140/636183480.accept (1,856 samples, 0.32%)</title><rect x="689.4" y="675.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$10 (1,856 samples, 0.32%)</title><rect x="689.4" y="659.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.4" y="670.0"></text>
</g>
<g>
<title>one.nio.http.Response (199 samples, 0.03%)</title><rect x="689.4" y="643.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="692.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (706 samples, 0.12%)</title><rect x="689.8" y="643.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.8" y="654.0"></text>
</g>
<g>
<title>byte[] (291 samples, 0.05%)</title><rect x="689.8" y="627.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="692.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (241 samples, 0.04%)</title><rect x="690.4" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="693.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (174 samples, 0.03%)</title><rect x="690.8" y="627.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="693.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (951 samples, 0.16%)</title><rect x="691.2" y="643.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (951 samples, 0.16%)</title><rect x="691.2" y="627.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (951 samples, 0.16%)</title><rect x="691.2" y="611.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (951 samples, 0.16%)</title><rect x="691.2" y="595.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (665 samples, 0.11%)</title><rect x="691.2" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (665 samples, 0.11%)</title><rect x="691.2" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.2" y="574.0"></text>
</g>
<g>
<title>byte[] (662 samples, 0.11%)</title><rect x="691.2" y="547.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="694.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (286 samples, 0.05%)</title><rect x="692.5" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.5" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (286 samples, 0.05%)</title><rect x="692.5" y="563.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="695.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (9,814 samples, 1.68%)</title><rect x="693.1" y="803.0" width="19.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (330 samples, 0.06%)</title><rect x="693.1" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (330 samples, 0.06%)</title><rect x="693.1" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$361/1415195538.get$Lambda (170 samples, 0.03%)</title><rect x="693.1" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$361 (170 samples, 0.03%)</title><rect x="693.1" y="739.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="696.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (256 samples, 0.04%)</title><rect x="693.8" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (256 samples, 0.04%)</title><rect x="693.8" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$362/1344263302.get$Lambda (256 samples, 0.04%)</title><rect x="693.8" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$362 (256 samples, 0.04%)</title><rect x="693.8" y="739.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="696.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,113 samples, 0.36%)</title><rect x="694.3" y="787.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/442313598.accept (1,770 samples, 0.30%)</title><rect x="694.3" y="771.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,770 samples, 0.30%)</title><rect x="694.3" y="755.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,770 samples, 0.30%)</title><rect x="694.3" y="739.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,770 samples, 0.30%)</title><rect x="694.3" y="723.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,770 samples, 0.30%)</title><rect x="694.3" y="707.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,770 samples, 0.30%)</title><rect x="694.3" y="691.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,770 samples, 0.30%)</title><rect x="694.3" y="675.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,770 samples, 0.30%)</title><rect x="694.3" y="659.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,770 samples, 0.30%)</title><rect x="694.3" y="643.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,770 samples, 0.30%)</title><rect x="694.3" y="627.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1887377102.run (1,770 samples, 0.30%)</title><rect x="694.3" y="611.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,770 samples, 0.30%)</title><rect x="694.3" y="595.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (424 samples, 0.07%)</title><rect x="694.3" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (424 samples, 0.07%)</title><rect x="694.3" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (424 samples, 0.07%)</title><rect x="694.3" y="547.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (216 samples, 0.04%)</title><rect x="694.3" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (216 samples, 0.04%)</title><rect x="694.3" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (216 samples, 0.04%)</title><rect x="694.3" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (216 samples, 0.04%)</title><rect x="694.3" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (216 samples, 0.04%)</title><rect x="694.3" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="697.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (208 samples, 0.04%)</title><rect x="694.7" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (208 samples, 0.04%)</title><rect x="694.7" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (208 samples, 0.04%)</title><rect x="694.7" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (208 samples, 0.04%)</title><rect x="694.7" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (208 samples, 0.04%)</title><rect x="694.7" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (204 samples, 0.03%)</title><rect x="694.7" y="451.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="697.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (142 samples, 0.02%)</title><rect x="695.2" y="579.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (142 samples, 0.02%)</title><rect x="695.2" y="563.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (142 samples, 0.02%)</title><rect x="695.2" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$384/1726373881.get$Lambda (142 samples, 0.02%)</title><rect x="695.2" y="531.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$384 (142 samples, 0.02%)</title><rect x="695.2" y="515.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="698.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,204 samples, 0.21%)</title><rect x="695.4" y="579.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (678 samples, 0.12%)</title><rect x="695.4" y="563.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (470 samples, 0.08%)</title><rect x="695.4" y="547.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (470 samples, 0.08%)</title><rect x="695.4" y="531.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="698.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (208 samples, 0.04%)</title><rect x="696.4" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.4" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (208 samples, 0.04%)</title><rect x="696.4" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.4" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (208 samples, 0.04%)</title><rect x="696.4" y="515.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="699.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (526 samples, 0.09%)</title><rect x="696.8" y="563.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$239/1312469269.get (526 samples, 0.09%)</title><rect x="696.8" y="547.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (526 samples, 0.09%)</title><rect x="696.8" y="531.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (526 samples, 0.09%)</title><rect x="696.8" y="515.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (524 samples, 0.09%)</title><rect x="696.8" y="499.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.8" y="510.0"></text>
</g>
<g>
<title>byte[] (474 samples, 0.08%)</title><rect x="696.9" y="483.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="699.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$366/1660416884.accept (343 samples, 0.06%)</title><rect x="697.9" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (343 samples, 0.06%)</title><rect x="697.9" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$362/1344263302.run (343 samples, 0.06%)</title><rect x="697.9" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (343 samples, 0.06%)</title><rect x="697.9" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (343 samples, 0.06%)</title><rect x="697.9" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (343 samples, 0.06%)</title><rect x="697.9" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (343 samples, 0.06%)</title><rect x="697.9" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.9" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (343 samples, 0.06%)</title><rect x="697.9" y="659.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="700.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,004 samples, 0.17%)</title><rect x="698.6" y="787.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.6" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,004 samples, 0.17%)</title><rect x="698.6" y="771.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="701.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (419 samples, 0.07%)</title><rect x="700.6" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (220 samples, 0.04%)</title><rect x="700.6" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (220 samples, 0.04%)</title><rect x="700.6" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="703.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (220 samples, 0.04%)</title><rect x="700.6" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (220 samples, 0.04%)</title><rect x="700.6" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (220 samples, 0.04%)</title><rect x="700.6" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (220 samples, 0.04%)</title><rect x="700.6" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.6" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (220 samples, 0.04%)</title><rect x="700.6" y="675.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="703.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (199 samples, 0.03%)</title><rect x="701.0" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (199 samples, 0.03%)</title><rect x="701.0" y="755.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="704.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,469 samples, 0.25%)</title><rect x="701.4" y="787.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/558941923.run (718 samples, 0.12%)</title><rect x="701.4" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (718 samples, 0.12%)</title><rect x="701.4" y="755.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (718 samples, 0.12%)</title><rect x="701.4" y="739.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (718 samples, 0.12%)</title><rect x="701.4" y="723.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (718 samples, 0.12%)</title><rect x="701.4" y="707.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (718 samples, 0.12%)</title><rect x="701.4" y="691.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1887377102.run (718 samples, 0.12%)</title><rect x="701.4" y="675.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (718 samples, 0.12%)</title><rect x="701.4" y="659.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (718 samples, 0.12%)</title><rect x="701.4" y="643.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (718 samples, 0.12%)</title><rect x="701.4" y="627.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (521 samples, 0.09%)</title><rect x="701.4" y="611.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (521 samples, 0.09%)</title><rect x="701.4" y="595.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (521 samples, 0.09%)</title><rect x="701.4" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (363 samples, 0.06%)</title><rect x="701.4" y="563.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (363 samples, 0.06%)</title><rect x="701.4" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (363 samples, 0.06%)</title><rect x="701.4" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (363 samples, 0.06%)</title><rect x="701.4" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (363 samples, 0.06%)</title><rect x="701.4" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.4" y="510.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.06%)</title><rect x="701.4" y="483.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="704.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (158 samples, 0.03%)</title><rect x="702.2" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (158 samples, 0.03%)</title><rect x="702.2" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.03%)</title><rect x="702.2" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$384/1726373881.get$Lambda (158 samples, 0.03%)</title><rect x="702.2" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$384 (158 samples, 0.03%)</title><rect x="702.2" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="705.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (197 samples, 0.03%)</title><rect x="702.5" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (197 samples, 0.03%)</title><rect x="702.5" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (197 samples, 0.03%)</title><rect x="702.5" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (197 samples, 0.03%)</title><rect x="702.5" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (197 samples, 0.03%)</title><rect x="702.5" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (197 samples, 0.03%)</title><rect x="702.5" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (195 samples, 0.03%)</title><rect x="702.5" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="705.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/255901250.run (751 samples, 0.13%)</title><rect x="702.9" y="771.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (751 samples, 0.13%)</title><rect x="702.9" y="755.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (302 samples, 0.05%)</title><rect x="702.9" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (302 samples, 0.05%)</title><rect x="702.9" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1482582287.get$Lambda (302 samples, 0.05%)</title><rect x="702.9" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.9" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$375 (302 samples, 0.05%)</title><rect x="702.9" y="691.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="705.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (449 samples, 0.08%)</title><rect x="703.5" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (449 samples, 0.08%)</title><rect x="703.5" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (449 samples, 0.08%)</title><rect x="703.5" y="707.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (447 samples, 0.08%)</title><rect x="703.5" y="691.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="706.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,900 samples, 0.33%)</title><rect x="704.4" y="787.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.4" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (341 samples, 0.06%)</title><rect x="704.4" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.4" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (341 samples, 0.06%)</title><rect x="704.4" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.4" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (341 samples, 0.06%)</title><rect x="704.4" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.4" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (341 samples, 0.06%)</title><rect x="704.4" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.4" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (341 samples, 0.06%)</title><rect x="704.4" y="707.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,559 samples, 0.27%)</title><rect x="705.1" y="771.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (216 samples, 0.04%)</title><rect x="705.1" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (216 samples, 0.04%)</title><rect x="705.1" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$502/1776772670.get$Lambda (216 samples, 0.04%)</title><rect x="705.1" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.1" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$502 (216 samples, 0.04%)</title><rect x="705.1" y="707.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="708.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (218 samples, 0.04%)</title><rect x="705.5" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.5" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (218 samples, 0.04%)</title><rect x="705.5" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.5" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (218 samples, 0.04%)</title><rect x="705.5" y="723.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="708.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,125 samples, 0.19%)</title><rect x="706.0" y="755.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (355 samples, 0.06%)</title><rect x="706.0" y="739.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="709.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (770 samples, 0.13%)</title><rect x="706.7" y="739.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.7" y="750.0"></text>
</g>
<g>
<title>java.util.LinkedList$DescendingIterator (338 samples, 0.06%)</title><rect x="706.7" y="723.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.7" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (432 samples, 0.07%)</title><rect x="707.4" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.4" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (432 samples, 0.07%)</title><rect x="707.4" y="707.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="710.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,495 samples, 0.26%)</title><rect x="708.2" y="787.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.02%)</title><rect x="708.2" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.02%)</title><rect x="708.2" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$360/1818549654.get$Lambda (134 samples, 0.02%)</title><rect x="708.2" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.2" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$360 (134 samples, 0.02%)</title><rect x="708.2" y="723.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="711.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (816 samples, 0.14%)</title><rect x="708.5" y="771.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (350 samples, 0.06%)</title><rect x="708.5" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.5" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (350 samples, 0.06%)</title><rect x="708.5" y="739.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="711.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (466 samples, 0.08%)</title><rect x="709.2" y="755.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.2" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (466 samples, 0.08%)</title><rect x="709.2" y="739.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="712.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (545 samples, 0.09%)</title><rect x="710.2" y="771.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (545 samples, 0.09%)</title><rect x="710.2" y="755.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="713.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (435 samples, 0.07%)</title><rect x="711.3" y="787.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (435 samples, 0.07%)</title><rect x="711.3" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (435 samples, 0.07%)</title><rect x="711.3" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (435 samples, 0.07%)</title><rect x="711.3" y="739.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (182 samples, 0.03%)</title><rect x="711.3" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.3" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (182 samples, 0.03%)</title><rect x="711.3" y="707.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="714.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (253 samples, 0.04%)</title><rect x="711.6" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (253 samples, 0.04%)</title><rect x="711.6" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (253 samples, 0.04%)</title><rect x="711.6" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (253 samples, 0.04%)</title><rect x="711.6" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (253 samples, 0.04%)</title><rect x="711.6" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.6" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (253 samples, 0.04%)</title><rect x="711.6" y="643.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="714.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (200 samples, 0.03%)</title><rect x="712.1" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (200 samples, 0.03%)</title><rect x="712.1" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (200 samples, 0.03%)</title><rect x="712.1" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (200 samples, 0.03%)</title><rect x="712.1" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (171 samples, 0.03%)</title><rect x="712.1" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.1" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (171 samples, 0.03%)</title><rect x="712.1" y="707.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="715.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (193 samples, 0.03%)</title><rect x="712.6" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (193 samples, 0.03%)</title><rect x="712.6" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (193 samples, 0.03%)</title><rect x="712.6" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (193 samples, 0.03%)</title><rect x="712.6" y="739.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="715.6" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (236,078 samples, 40.43%)</title><rect x="712.9" y="803.0" width="477.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.9" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13,094 samples, 2.24%)</title><rect x="712.9" y="787.0" width="26.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.9" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (13,094 samples, 2.24%)</title><rect x="712.9" y="771.0" width="26.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="715.9" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (222,984 samples, 38.19%)</title><rect x="739.4" y="787.0" width="450.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.4" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (222,984 samples, 38.19%)</title><rect x="739.4" y="771.0" width="450.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.4" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (222,984 samples, 38.19%)</title><rect x="739.4" y="755.0" width="450.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.4" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (98,728 samples, 16.91%)</title><rect x="739.4" y="739.0" width="199.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.4" y="750.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (98,728 samples, 16.91%)</title><rect x="739.4" y="723.0" width="199.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.4" y="734.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (89,371 samples, 15.30%)</title><rect x="739.4" y="707.0" width="180.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.4" y="718.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8,137 samples, 1.39%)</title><rect x="739.4" y="691.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,137 samples, 1.39%)</title><rect x="739.4" y="675.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,137 samples, 1.39%)</title><rect x="739.4" y="659.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String (4,031 samples, 0.69%)</title><rect x="739.4" y="643.0" width="8.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="742.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,106 samples, 0.70%)</title><rect x="747.5" y="643.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.5" y="654.0"></text>
</g>
<g>
<title>byte[] (4,106 samples, 0.70%)</title><rect x="747.5" y="627.0" width="8.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="750.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (81,234 samples, 13.91%)</title><rect x="755.8" y="691.0" width="164.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.8" y="702.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (9,720 samples, 1.66%)</title><rect x="755.8" y="675.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5,831 samples, 1.00%)</title><rect x="755.8" y="659.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,831 samples, 1.00%)</title><rect x="755.8" y="643.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/363603817.get$Lambda (5,831 samples, 1.00%)</title><rect x="755.8" y="627.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.8" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$110 (5,831 samples, 1.00%)</title><rect x="755.8" y="611.0" width="11.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="758.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3,889 samples, 0.67%)</title><rect x="767.6" y="659.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3,889 samples, 0.67%)</title><rect x="767.6" y="643.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3,851 samples, 0.66%)</title><rect x="767.6" y="627.0" width="7.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="770.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (71,514 samples, 12.25%)</title><rect x="775.5" y="675.0" width="144.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.5" y="686.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/util/Set.copyOf (71,514 samples, 12.25%)</title><rect x="775.5" y="659.0" width="144.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.5" y="670.0">java/util/Set.copyOf</text>
</g>
<g>
<title>java.util.HashSet (2,567 samples, 0.44%)</title><rect x="775.5" y="643.0" width="5.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="778.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (14,258 samples, 2.44%)</title><rect x="780.7" y="643.0" width="28.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.7" y="654.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (5,208 samples, 0.89%)</title><rect x="780.7" y="627.0" width="10.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="783.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9,050 samples, 1.55%)</title><rect x="791.2" y="627.0" width="18.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6,479 samples, 1.11%)</title><rect x="791.2" y="611.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.2" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6,479 samples, 1.11%)</title><rect x="791.2" y="595.0" width="13.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="794.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2,571 samples, 0.44%)</title><rect x="804.3" y="611.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.3" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (2,571 samples, 0.44%)</title><rect x="804.3" y="595.0" width="5.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="807.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (44,000 samples, 7.54%)</title><rect x="809.5" y="643.0" width="88.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.5" y="654.0">java/util/..</text>
</g>
<g>
<title>java.util.HashMap (7,761 samples, 1.33%)</title><rect x="809.5" y="627.0" width="15.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="812.5" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (36,239 samples, 6.21%)</title><rect x="825.2" y="627.0" width="73.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.2" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/HashSet.add (30,494 samples, 5.22%)</title><rect x="825.2" y="611.0" width="61.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.2" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.put (30,494 samples, 5.22%)</title><rect x="825.2" y="595.0" width="61.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.2" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.putVal (30,494 samples, 5.22%)</title><rect x="825.2" y="579.0" width="61.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.2" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.newNode (16,048 samples, 2.75%)</title><rect x="825.2" y="563.0" width="32.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.2" y="574.0">ja..</text>
</g>
<g>
<title>java.util.HashMap$Node (16,048 samples, 2.75%)</title><rect x="825.2" y="547.0" width="32.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="828.2" y="558.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.resize (14,446 samples, 2.47%)</title><rect x="857.6" y="563.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.6" y="574.0">ja..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (14,224 samples, 2.44%)</title><rect x="857.6" y="547.0" width="28.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="860.6" y="558.0">ja..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (222 samples, 0.04%)</title><rect x="886.3" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="889.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5,745 samples, 0.98%)</title><rect x="886.8" y="611.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.8" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5,745 samples, 0.98%)</title><rect x="886.8" y="595.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (5,745 samples, 0.98%)</title><rect x="886.8" y="579.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (5,745 samples, 0.98%)</title><rect x="886.8" y="563.0" width="11.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="889.8" y="574.0"></text>
</g>
<g>
<title>java/util/Set.of (10,689 samples, 1.83%)</title><rect x="898.4" y="643.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.4" y="654.0">j..</text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (4,094 samples, 0.70%)</title><rect x="898.4" y="627.0" width="8.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="901.4" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (6,595 samples, 1.13%)</title><rect x="906.7" y="627.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.7" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (6,595 samples, 1.13%)</title><rect x="906.7" y="611.0" width="13.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="909.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9,357 samples, 1.60%)</title><rect x="920.0" y="707.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (9,357 samples, 1.60%)</title><rect x="920.0" y="691.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9,357 samples, 1.60%)</title><rect x="920.0" y="675.0" width="18.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (4,368 samples, 0.75%)</title><rect x="920.0" y="659.0" width="8.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="923.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,989 samples, 0.85%)</title><rect x="928.8" y="659.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.8" y="670.0"></text>
</g>
<g>
<title>byte[] (4,989 samples, 0.85%)</title><rect x="928.8" y="643.0" width="10.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="931.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (41,838 samples, 7.16%)</title><rect x="938.9" y="739.0" width="84.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="941.9" y="750.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (6,521 samples, 1.12%)</title><rect x="938.9" y="723.0" width="13.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="941.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13,834 samples, 2.37%)</title><rect x="952.1" y="723.0" width="27.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.1" y="734.0">o..</text>
</g>
<g>
<title>java.lang.String[] (13,553 samples, 2.32%)</title><rect x="952.1" y="707.0" width="27.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="955.1" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String[] (281 samples, 0.05%)</title><rect x="979.5" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="982.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21,483 samples, 3.68%)</title><rect x="980.0" y="723.0" width="43.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.0" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (21,483 samples, 3.68%)</title><rect x="980.0" y="707.0" width="43.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.0" y="718.0">one/..</text>
</g>
<g>
<title>char[] (10,752 samples, 1.84%)</title><rect x="980.0" y="691.0" width="21.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="983.0" y="702.0">c..</text>
</g>
<g>
<title>java.lang.String (4,130 samples, 0.71%)</title><rect x="1001.8" y="691.0" width="8.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1004.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,599 samples, 1.13%)</title><rect x="1010.1" y="691.0" width="13.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,599 samples, 1.13%)</title><rect x="1010.1" y="675.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,599 samples, 1.13%)</title><rect x="1010.1" y="659.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.1" y="670.0"></text>
</g>
<g>
<title>byte[] (6,599 samples, 1.13%)</title><rect x="1010.1" y="643.0" width="13.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1013.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5,179 samples, 0.89%)</title><rect x="1023.5" y="739.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.5" y="750.0"></text>
</g>
<g>
<title>byte[] (5,179 samples, 0.89%)</title><rect x="1023.5" y="723.0" width="10.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1026.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8,368 samples, 1.43%)</title><rect x="1033.9" y="739.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,368 samples, 1.43%)</title><rect x="1033.9" y="723.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,368 samples, 1.43%)</title><rect x="1033.9" y="707.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (4,330 samples, 0.74%)</title><rect x="1033.9" y="691.0" width="8.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1036.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,038 samples, 0.69%)</title><rect x="1042.7" y="691.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.7" y="702.0"></text>
</g>
<g>
<title>byte[] (4,038 samples, 0.69%)</title><rect x="1042.7" y="675.0" width="8.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1045.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (68,871 samples, 11.79%)</title><rect x="1050.8" y="739.0" width="139.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.8" y="750.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (68,871 samples, 11.79%)</title><rect x="1050.8" y="723.0" width="139.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.8" y="734.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (32,992 samples, 5.65%)</title><rect x="1050.8" y="707.0" width="66.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1053.8" y="718.0">char[]</text>
</g>
<g>
<title>char[] (131 samples, 0.02%)</title><rect x="1117.5" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1120.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (13,198 samples, 2.26%)</title><rect x="1117.8" y="707.0" width="26.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1120.8" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22,550 samples, 3.86%)</title><rect x="1144.4" y="707.0" width="45.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1147.4" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22,550 samples, 3.86%)</title><rect x="1144.4" y="691.0" width="45.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.4" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22,550 samples, 3.86%)</title><rect x="1144.4" y="675.0" width="45.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.4" y="686.0">java..</text>
</g>
<g>
<title>byte[] (22,538 samples, 3.86%)</title><rect x="1144.4" y="659.0" width="45.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1147.4" y="670.0">byte[]</text>
</g>
</g>
</svg>
