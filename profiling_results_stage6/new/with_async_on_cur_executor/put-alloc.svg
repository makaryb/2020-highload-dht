<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (1,120,389 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (583,851 samples, 52.11%)</title><rect x="10.0" y="803.0" width="614.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (583,851 samples, 52.11%)</title><rect x="10.0" y="787.0" width="614.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (583,851 samples, 52.11%)</title><rect x="10.0" y="771.0" width="614.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (125,477 samples, 11.20%)</title><rect x="10.0" y="755.0" width="132.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$431/1260245568.run (125,477 samples, 11.20%)</title><rect x="10.0" y="739.0" width="132.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="750.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$11 (125,477 samples, 11.20%)</title><rect x="10.0" y="723.0" width="132.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="734.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/String.getBytes (8,943 samples, 0.80%)</title><rect x="10.0" y="707.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8,943 samples, 0.80%)</title><rect x="10.0" y="691.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8,943 samples, 0.80%)</title><rect x="10.0" y="675.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8,943 samples, 0.80%)</title><rect x="10.0" y="659.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>byte[] (8,943 samples, 0.80%)</title><rect x="10.0" y="643.0" width="9.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,925 samples, 1.33%)</title><rect x="19.4" y="707.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,925 samples, 1.33%)</title><rect x="19.4" y="691.0" width="15.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.4" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14,925 samples, 1.33%)</title><rect x="19.4" y="675.0" width="15.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="22.4" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (6,661 samples, 0.59%)</title><rect x="35.1" y="707.0" width="7.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="38.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25,117 samples, 2.24%)</title><rect x="42.2" y="707.0" width="26.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.2" y="718.0">o..</text>
</g>
<g>
<title>byte[] (9,903 samples, 0.88%)</title><rect x="42.2" y="691.0" width="10.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="45.2" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (8,384 samples, 0.75%)</title><rect x="52.6" y="691.0" width="8.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="55.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (6,830 samples, 0.61%)</title><rect x="61.4" y="691.0" width="7.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="64.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (33,481 samples, 2.99%)</title><rect x="68.6" y="707.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.6" y="718.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (272 samples, 0.02%)</title><rect x="68.6" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (272 samples, 0.02%)</title><rect x="68.6" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (272 samples, 0.02%)</title><rect x="68.6" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (244 samples, 0.02%)</title><rect x="68.6" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (244 samples, 0.02%)</title><rect x="68.6" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (32,476 samples, 2.90%)</title><rect x="68.9" y="691.0" width="34.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.9" y="702.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26,708 samples, 2.38%)</title><rect x="68.9" y="675.0" width="28.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.9" y="686.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26,708 samples, 2.38%)</title><rect x="68.9" y="659.0" width="28.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="71.9" y="670.0">ja..</text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (5,601 samples, 0.50%)</title><rect x="97.2" y="675.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="100.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (733 samples, 0.07%)</title><rect x="103.1" y="691.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (729 samples, 0.07%)</title><rect x="103.1" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (428 samples, 0.04%)</title><rect x="103.2" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.2" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (243 samples, 0.02%)</title><rect x="103.2" y="643.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="106.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (36,350 samples, 3.24%)</title><rect x="103.9" y="707.0" width="38.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.9" y="718.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36,350 samples, 3.24%)</title><rect x="103.9" y="691.0" width="38.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.9" y="702.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (36,350 samples, 3.24%)</title><rect x="103.9" y="675.0" width="38.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.9" y="686.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24,047 samples, 2.15%)</title><rect x="103.9" y="659.0" width="25.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.9" y="670.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24,047 samples, 2.15%)</title><rect x="103.9" y="643.0" width="25.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.9" y="654.0">o..</text>
</g>
<g>
<title>byte[] (11,978 samples, 1.07%)</title><rect x="103.9" y="627.0" width="12.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="106.9" y="638.0"></text>
</g>
<g>
<title>byte[] (12,069 samples, 1.08%)</title><rect x="116.5" y="627.0" width="12.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12,303 samples, 1.10%)</title><rect x="129.2" y="659.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.2" y="670.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12,303 samples, 1.10%)</title><rect x="129.2" y="643.0" width="13.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="132.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (82,658 samples, 7.38%)</title><rect x="142.2" y="755.0" width="87.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.2" y="766.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78,865 samples, 7.04%)</title><rect x="142.2" y="739.0" width="83.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.2" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (78,865 samples, 7.04%)</title><rect x="142.2" y="723.0" width="83.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.2" y="734.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (496 samples, 0.04%)</title><rect x="142.2" y="707.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="145.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (460 samples, 0.04%)</title><rect x="142.7" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (460 samples, 0.04%)</title><rect x="142.7" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (460 samples, 0.04%)</title><rect x="142.7" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.7" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (449 samples, 0.04%)</title><rect x="142.7" y="659.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="145.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/1586761708.apply (77,909 samples, 6.95%)</title><rect x="143.2" y="707.0" width="82.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.2" y="718.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (77,909 samples, 6.95%)</title><rect x="143.2" y="691.0" width="82.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.2" y="702.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (77,909 samples, 6.95%)</title><rect x="143.2" y="675.0" width="82.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.2" y="686.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (647 samples, 0.06%)</title><rect x="143.2" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (647 samples, 0.06%)</title><rect x="143.2" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$371/526674589.get$Lambda (423 samples, 0.04%)</title><rect x="143.2" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$371 (423 samples, 0.04%)</title><rect x="143.2" y="611.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="146.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,162 samples, 0.10%)</title><rect x="143.8" y="659.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,162 samples, 0.10%)</title><rect x="143.8" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (660 samples, 0.06%)</title><rect x="143.8" y="627.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="146.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (502 samples, 0.04%)</title><rect x="144.5" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (502 samples, 0.04%)</title><rect x="144.5" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (502 samples, 0.04%)</title><rect x="144.5" y="595.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="147.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,299 samples, 0.21%)</title><rect x="145.1" y="659.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,299 samples, 0.21%)</title><rect x="145.1" y="643.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,281 samples, 0.11%)</title><rect x="145.1" y="627.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="148.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,018 samples, 0.09%)</title><rect x="146.4" y="627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,018 samples, 0.09%)</title><rect x="146.4" y="611.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,018 samples, 0.09%)</title><rect x="146.4" y="595.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="149.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (73,801 samples, 6.59%)</title><rect x="147.5" y="659.0" width="77.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.5" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (73,801 samples, 6.59%)</title><rect x="147.5" y="643.0" width="77.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.5" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (73,801 samples, 6.59%)</title><rect x="147.5" y="627.0" width="77.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.5" y="638.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,598 samples, 0.14%)</title><rect x="147.5" y="611.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,598 samples, 0.14%)</title><rect x="147.5" y="595.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/1264514825.get$Lambda (830 samples, 0.07%)</title><rect x="147.5" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$209 (830 samples, 0.07%)</title><rect x="147.5" y="563.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="150.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1690211041.get$Lambda (392 samples, 0.03%)</title><rect x="148.4" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (392 samples, 0.03%)</title><rect x="148.4" y="563.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="151.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1624614356.get$Lambda (376 samples, 0.03%)</title><rect x="148.8" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$315 (376 samples, 0.03%)</title><rect x="148.8" y="563.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="151.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (51,195 samples, 4.57%)</title><rect x="149.2" y="611.0" width="53.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="622.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (51,195 samples, 4.57%)</title><rect x="149.2" y="595.0" width="53.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.2" y="606.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (50,698 samples, 4.53%)</title><rect x="149.2" y="579.0" width="53.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.2" y="590.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1624614356.apply (50,698 samples, 4.53%)</title><rect x="149.2" y="563.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.2" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (50,698 samples, 4.53%)</title><rect x="149.2" y="547.0" width="53.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (50,698 samples, 4.53%)</title><rect x="149.2" y="531.0" width="53.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.2" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1690211041.apply (50,698 samples, 4.53%)</title><rect x="149.2" y="515.0" width="53.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.2" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (50,698 samples, 4.53%)</title><rect x="149.2" y="499.0" width="53.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.2" y="510.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (383 samples, 0.03%)</title><rect x="149.2" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (383 samples, 0.03%)</title><rect x="149.2" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$370/1725152409.get$Lambda (383 samples, 0.03%)</title><rect x="149.2" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$370 (383 samples, 0.03%)</title><rect x="149.2" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="152.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,279 samples, 0.11%)</title><rect x="149.6" y="483.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,279 samples, 0.11%)</title><rect x="149.6" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (689 samples, 0.06%)</title><rect x="149.6" y="451.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="152.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (532 samples, 0.05%)</title><rect x="150.4" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (532 samples, 0.05%)</title><rect x="150.4" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (532 samples, 0.05%)</title><rect x="150.4" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="153.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,094 samples, 0.10%)</title><rect x="150.9" y="483.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,094 samples, 0.10%)</title><rect x="150.9" y="467.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (603 samples, 0.05%)</title><rect x="150.9" y="451.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="153.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (490 samples, 0.04%)</title><rect x="151.6" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (490 samples, 0.04%)</title><rect x="151.6" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (490 samples, 0.04%)</title><rect x="151.6" y="419.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="154.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (47,942 samples, 4.28%)</title><rect x="152.1" y="483.0" width="50.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.1" y="494.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (505 samples, 0.05%)</title><rect x="152.1" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (505 samples, 0.05%)</title><rect x="152.1" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$369/483237685.get$Lambda (272 samples, 0.02%)</title><rect x="152.3" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$369 (272 samples, 0.02%)</title><rect x="152.3" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="155.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (39,319 samples, 3.51%)</title><rect x="152.6" y="467.0" width="41.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.6" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (39,319 samples, 3.51%)</title><rect x="152.6" y="451.0" width="41.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.6" y="462.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (515 samples, 0.05%)</title><rect x="152.6" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="155.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/2119173243.apply (37,862 samples, 3.38%)</title><rect x="153.1" y="435.0" width="39.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.1" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (37,862 samples, 3.38%)</title><rect x="153.1" y="419.0" width="39.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.1" y="430.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (259 samples, 0.02%)</title><rect x="153.1" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (259 samples, 0.02%)</title><rect x="153.1" y="387.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$388/424915964.get$Lambda (259 samples, 0.02%)</title><rect x="153.1" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$388 (259 samples, 0.02%)</title><rect x="153.1" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="156.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,084 samples, 0.10%)</title><rect x="153.4" y="403.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,084 samples, 0.10%)</title><rect x="153.4" y="387.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (588 samples, 0.05%)</title><rect x="153.4" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="156.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (496 samples, 0.04%)</title><rect x="154.0" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (496 samples, 0.04%)</title><rect x="154.0" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (496 samples, 0.04%)</title><rect x="154.0" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="157.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (506 samples, 0.05%)</title><rect x="154.6" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="157.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (739 samples, 0.07%)</title><rect x="155.1" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (391 samples, 0.03%)</title><rect x="155.1" y="387.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="158.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (348 samples, 0.03%)</title><rect x="155.5" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (341 samples, 0.03%)</title><rect x="155.5" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (341 samples, 0.03%)</title><rect x="155.5" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (341 samples, 0.03%)</title><rect x="155.5" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (341 samples, 0.03%)</title><rect x="155.5" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (341 samples, 0.03%)</title><rect x="155.5" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="158.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,316 samples, 0.12%)</title><rect x="155.9" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,316 samples, 0.12%)</title><rect x="155.9" y="387.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (448 samples, 0.04%)</title><rect x="155.9" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (448 samples, 0.04%)</title><rect x="155.9" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (448 samples, 0.04%)</title><rect x="155.9" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (448 samples, 0.04%)</title><rect x="155.9" y="323.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="158.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (868 samples, 0.08%)</title><rect x="156.3" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (868 samples, 0.08%)</title><rect x="156.3" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (626 samples, 0.06%)</title><rect x="156.3" y="339.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="159.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (242 samples, 0.02%)</title><rect x="157.0" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (242 samples, 0.02%)</title><rect x="157.0" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="160.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (33,958 samples, 3.03%)</title><rect x="157.3" y="403.0" width="35.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.3" y="414.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (382 samples, 0.03%)</title><rect x="157.3" y="387.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="160.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (792 samples, 0.07%)</title><rect x="157.7" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.7" y="398.0"></text>
</g>
<g>
<title>byte[] (395 samples, 0.04%)</title><rect x="157.7" y="371.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="160.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (397 samples, 0.04%)</title><rect x="158.1" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="161.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2,460 samples, 0.22%)</title><rect x="158.5" y="387.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,460 samples, 0.22%)</title><rect x="158.5" y="371.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2,460 samples, 0.22%)</title><rect x="158.5" y="355.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.5" y="366.0"></text>
</g>
<g>
<title>byte[] (2,460 samples, 0.22%)</title><rect x="158.5" y="339.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="161.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,234 samples, 0.11%)</title><rect x="161.1" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.1" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,234 samples, 0.11%)</title><rect x="161.1" y="371.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.1" y="382.0"></text>
</g>
<g>
<title>byte[] (1,234 samples, 0.11%)</title><rect x="161.1" y="355.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="164.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,459 samples, 0.22%)</title><rect x="162.4" y="387.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,459 samples, 0.22%)</title><rect x="162.4" y="371.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,459 samples, 0.22%)</title><rect x="162.4" y="355.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.4" y="366.0"></text>
</g>
<g>
<title>byte[] (2,459 samples, 0.22%)</title><rect x="162.4" y="339.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="165.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (774 samples, 0.07%)</title><rect x="165.0" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (774 samples, 0.07%)</title><rect x="165.0" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (774 samples, 0.07%)</title><rect x="165.0" y="355.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="168.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (406 samples, 0.04%)</title><rect x="165.8" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.8" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (406 samples, 0.04%)</title><rect x="165.8" y="371.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="168.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (20,344 samples, 1.82%)</title><rect x="166.2" y="387.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.2" y="398.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (415 samples, 0.04%)</title><rect x="166.2" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (415 samples, 0.04%)</title><rect x="166.2" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (415 samples, 0.04%)</title><rect x="166.2" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.2" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/1920061559.get$Lambda (415 samples, 0.04%)</title><rect x="166.2" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.2" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$390 (415 samples, 0.04%)</title><rect x="166.2" y="307.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="169.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (11,336 samples, 1.01%)</title><rect x="166.7" y="371.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6,999 samples, 0.62%)</title><rect x="166.7" y="355.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.7" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6,999 samples, 0.62%)</title><rect x="166.7" y="339.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6,999 samples, 0.62%)</title><rect x="166.7" y="323.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6,999 samples, 0.62%)</title><rect x="166.7" y="307.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.7" y="318.0"></text>
</g>
<g>
<title>byte[] (6,986 samples, 0.62%)</title><rect x="166.7" y="291.0" width="7.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="169.7" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1,017 samples, 0.09%)</title><rect x="174.0" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.0" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1,017 samples, 0.09%)</title><rect x="174.0" y="339.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1,017 samples, 0.09%)</title><rect x="174.0" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1,017 samples, 0.09%)</title><rect x="174.0" y="307.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="177.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (995 samples, 0.09%)</title><rect x="175.1" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.1" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (487 samples, 0.04%)</title><rect x="175.1" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="178.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (508 samples, 0.05%)</title><rect x="175.6" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (508 samples, 0.05%)</title><rect x="175.6" y="323.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="178.6" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/1920061559.test (2,325 samples, 0.21%)</title><rect x="176.1" y="355.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.1" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2,325 samples, 0.21%)</title><rect x="176.1" y="339.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (2,325 samples, 0.21%)</title><rect x="176.1" y="323.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2,325 samples, 0.21%)</title><rect x="176.1" y="307.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.1" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (2,325 samples, 0.21%)</title><rect x="176.1" y="291.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.1" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2,325 samples, 0.21%)</title><rect x="176.1" y="275.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (2,325 samples, 0.21%)</title><rect x="176.1" y="259.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (2,325 samples, 0.21%)</title><rect x="176.1" y="243.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,325 samples, 0.21%)</title><rect x="176.1" y="227.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,325 samples, 0.21%)</title><rect x="176.1" y="211.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1,129 samples, 0.10%)</title><rect x="176.1" y="195.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="179.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,196 samples, 0.11%)</title><rect x="177.3" y="195.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.3" y="206.0"></text>
</g>
<g>
<title>byte[] (1,196 samples, 0.11%)</title><rect x="177.3" y="179.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="180.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (8,593 samples, 0.77%)</title><rect x="178.6" y="371.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8,593 samples, 0.77%)</title><rect x="178.6" y="355.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8,593 samples, 0.77%)</title><rect x="178.6" y="339.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (247 samples, 0.02%)</title><rect x="178.6" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="181.6" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (414 samples, 0.04%)</title><rect x="178.9" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="181.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (768 samples, 0.07%)</title><rect x="179.3" y="323.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="182.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (510 samples, 0.05%)</title><rect x="180.3" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (510 samples, 0.05%)</title><rect x="180.3" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.3" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.get$Lambda (510 samples, 0.05%)</title><rect x="180.3" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.3" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$142 (510 samples, 0.05%)</title><rect x="180.3" y="275.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="183.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (516 samples, 0.05%)</title><rect x="180.9" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.9" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (516 samples, 0.05%)</title><rect x="180.9" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="183.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5,168 samples, 0.46%)</title><rect x="181.4" y="323.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (5,168 samples, 0.46%)</title><rect x="181.4" y="307.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5,168 samples, 0.46%)</title><rect x="181.4" y="291.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (903 samples, 0.08%)</title><rect x="181.4" y="275.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.4" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (903 samples, 0.08%)</title><rect x="181.4" y="259.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (903 samples, 0.08%)</title><rect x="181.4" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (903 samples, 0.08%)</title><rect x="181.4" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (903 samples, 0.08%)</title><rect x="181.4" y="211.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (903 samples, 0.08%)</title><rect x="181.4" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (903 samples, 0.08%)</title><rect x="181.4" y="179.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (903 samples, 0.08%)</title><rect x="181.4" y="163.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.4" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (903 samples, 0.08%)</title><rect x="181.4" y="147.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="184.4" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,345 samples, 0.21%)</title><rect x="182.4" y="275.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.4" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,345 samples, 0.21%)</title><rect x="182.4" y="259.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,160 samples, 0.10%)</title><rect x="182.4" y="243.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,160 samples, 0.10%)</title><rect x="182.4" y="227.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,160 samples, 0.10%)</title><rect x="182.4" y="211.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="185.4" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1,185 samples, 0.11%)</title><rect x="183.6" y="243.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.6" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,185 samples, 0.11%)</title><rect x="183.6" y="227.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="186.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,920 samples, 0.17%)</title><rect x="184.8" y="275.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,920 samples, 0.17%)</title><rect x="184.8" y="259.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="187.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (735 samples, 0.07%)</title><rect x="186.9" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (735 samples, 0.07%)</title><rect x="186.9" y="307.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="189.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,224 samples, 0.11%)</title><rect x="187.6" y="387.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (352 samples, 0.03%)</title><rect x="187.6" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.6" y="382.0"></text>
</g>
<g>
<title>byte[] (352 samples, 0.03%)</title><rect x="187.6" y="355.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="190.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (872 samples, 0.08%)</title><rect x="188.0" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (872 samples, 0.08%)</title><rect x="188.0" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (872 samples, 0.08%)</title><rect x="188.0" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (872 samples, 0.08%)</title><rect x="188.0" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (362 samples, 0.03%)</title><rect x="188.0" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (362 samples, 0.03%)</title><rect x="188.0" y="291.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="191.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (510 samples, 0.05%)</title><rect x="188.4" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (510 samples, 0.05%)</title><rect x="188.4" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.4" y="302.0"></text>
</g>
<g>
<title>byte[] (510 samples, 0.05%)</title><rect x="188.4" y="275.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="191.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1,070 samples, 0.10%)</title><rect x="188.9" y="387.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1,070 samples, 0.10%)</title><rect x="188.9" y="371.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,070 samples, 0.10%)</title><rect x="188.9" y="355.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,070 samples, 0.10%)</title><rect x="188.9" y="339.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (1,070 samples, 0.10%)</title><rect x="188.9" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,070 samples, 0.10%)</title><rect x="188.9" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (393 samples, 0.04%)</title><rect x="188.9" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (393 samples, 0.04%)</title><rect x="188.9" y="275.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="191.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (677 samples, 0.06%)</title><rect x="189.3" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (677 samples, 0.06%)</title><rect x="189.3" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.3" y="286.0"></text>
</g>
<g>
<title>byte[] (677 samples, 0.06%)</title><rect x="189.3" y="259.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="192.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,813 samples, 0.25%)</title><rect x="190.1" y="387.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.1" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (740 samples, 0.07%)</title><rect x="190.1" y="371.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="193.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (736 samples, 0.07%)</title><rect x="190.8" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (736 samples, 0.07%)</title><rect x="190.8" y="355.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="193.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,337 samples, 0.12%)</title><rect x="191.6" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,337 samples, 0.12%)</title><rect x="191.6" y="355.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="194.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (942 samples, 0.08%)</title><rect x="193.0" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (942 samples, 0.08%)</title><rect x="193.0" y="419.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (942 samples, 0.08%)</title><rect x="193.0" y="403.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="196.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,381 samples, 0.12%)</title><rect x="194.0" y="467.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="197.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (532 samples, 0.05%)</title><rect x="195.5" y="467.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="198.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6,205 samples, 0.55%)</title><rect x="196.0" y="467.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (559 samples, 0.05%)</title><rect x="196.0" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (559 samples, 0.05%)</title><rect x="196.0" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/1804175133.get$Lambda (275 samples, 0.02%)</title><rect x="196.0" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="199.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$325 (275 samples, 0.02%)</title><rect x="196.0" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="199.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$333/1164372824.get$Lambda (284 samples, 0.03%)</title><rect x="196.3" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$333 (284 samples, 0.03%)</title><rect x="196.3" y="403.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="199.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (636 samples, 0.06%)</title><rect x="196.6" y="451.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="199.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (538 samples, 0.05%)</title><rect x="197.3" y="451.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="200.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (593 samples, 0.05%)</title><rect x="197.9" y="451.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="200.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,736 samples, 0.15%)</title><rect x="198.5" y="451.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,736 samples, 0.15%)</title><rect x="198.5" y="435.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,736 samples, 0.15%)</title><rect x="198.5" y="419.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,736 samples, 0.15%)</title><rect x="198.5" y="403.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,736 samples, 0.15%)</title><rect x="198.5" y="387.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,736 samples, 0.15%)</title><rect x="198.5" y="371.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (1,736 samples, 0.15%)</title><rect x="198.5" y="355.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,736 samples, 0.15%)</title><rect x="198.5" y="339.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,736 samples, 0.15%)</title><rect x="198.5" y="323.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (608 samples, 0.05%)</title><rect x="198.5" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (608 samples, 0.05%)</title><rect x="198.5" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$339/2104430634.get$Lambda (249 samples, 0.02%)</title><rect x="198.5" y="275.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$339 (249 samples, 0.02%)</title><rect x="198.5" y="259.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="201.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1039595485.get$Lambda (359 samples, 0.03%)</title><rect x="198.7" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$343 (359 samples, 0.03%)</title><rect x="198.7" y="259.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="201.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (520 samples, 0.05%)</title><rect x="199.1" y="307.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="202.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (608 samples, 0.05%)</title><rect x="199.7" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (608 samples, 0.05%)</title><rect x="199.7" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (243 samples, 0.02%)</title><rect x="199.7" y="275.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="202.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (365 samples, 0.03%)</title><rect x="199.9" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (365 samples, 0.03%)</title><rect x="199.9" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="202.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,648 samples, 0.15%)</title><rect x="200.3" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.3" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (378 samples, 0.03%)</title><rect x="200.3" y="435.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="203.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (766 samples, 0.07%)</title><rect x="200.7" y="435.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="203.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (504 samples, 0.04%)</title><rect x="201.5" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (504 samples, 0.04%)</title><rect x="201.5" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.5" y="430.0"></text>
</g>
<g>
<title>byte[] (504 samples, 0.04%)</title><rect x="201.5" y="403.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="204.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (495 samples, 0.04%)</title><rect x="202.0" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (495 samples, 0.04%)</title><rect x="202.0" y="435.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="205.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (497 samples, 0.04%)</title><rect x="202.6" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (497 samples, 0.04%)</title><rect x="202.6" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (497 samples, 0.04%)</title><rect x="202.6" y="547.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="205.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,009 samples, 0.09%)</title><rect x="203.1" y="611.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,009 samples, 0.09%)</title><rect x="203.1" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (483 samples, 0.04%)</title><rect x="203.1" y="579.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="206.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (526 samples, 0.05%)</title><rect x="203.6" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (526 samples, 0.05%)</title><rect x="203.6" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (526 samples, 0.05%)</title><rect x="203.6" y="547.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="206.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (19,999 samples, 1.79%)</title><rect x="204.2" y="611.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.2" y="622.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (661 samples, 0.06%)</title><rect x="204.2" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (661 samples, 0.06%)</title><rect x="204.2" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$302/1875352691.get$Lambda (361 samples, 0.03%)</title><rect x="204.2" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$302 (361 samples, 0.03%)</title><rect x="204.2" y="547.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="207.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/1862905725.get$Lambda (300 samples, 0.03%)</title><rect x="204.5" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$306 (300 samples, 0.03%)</title><rect x="204.5" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="207.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (981 samples, 0.09%)</title><rect x="204.8" y="595.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (981 samples, 0.09%)</title><rect x="204.8" y="579.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/1862905725.apply (468 samples, 0.04%)</title><rect x="204.8" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (468 samples, 0.04%)</title><rect x="204.8" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (468 samples, 0.04%)</title><rect x="204.8" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (468 samples, 0.04%)</title><rect x="204.8" y="515.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="207.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (513 samples, 0.05%)</title><rect x="205.3" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (513 samples, 0.05%)</title><rect x="205.3" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (513 samples, 0.05%)</title><rect x="205.3" y="531.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="208.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (514 samples, 0.05%)</title><rect x="205.9" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (514 samples, 0.05%)</title><rect x="205.9" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (514 samples, 0.05%)</title><rect x="205.9" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (514 samples, 0.05%)</title><rect x="205.9" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (514 samples, 0.05%)</title><rect x="205.9" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="208.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (17,843 samples, 1.59%)</title><rect x="206.4" y="595.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (17,843 samples, 1.59%)</title><rect x="206.4" y="579.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1,411 samples, 0.13%)</title><rect x="206.4" y="563.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="209.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (15,906 samples, 1.42%)</title><rect x="207.9" y="563.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.9" y="574.0"></text>
</g>
<g>
<title>java.lang.Object (258 samples, 0.02%)</title><rect x="207.9" y="547.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="210.9" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (511 samples, 0.05%)</title><rect x="208.2" y="547.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="211.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (362 samples, 0.03%)</title><rect x="208.7" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="211.7" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (750 samples, 0.07%)</title><rect x="209.1" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.1" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (750 samples, 0.07%)</title><rect x="209.1" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.1" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (750 samples, 0.07%)</title><rect x="209.1" y="515.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="212.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (379 samples, 0.03%)</title><rect x="209.9" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (379 samples, 0.03%)</title><rect x="209.9" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="212.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1,201 samples, 0.11%)</title><rect x="210.3" y="547.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="213.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (781 samples, 0.07%)</title><rect x="211.6" y="547.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="214.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (874 samples, 0.08%)</title><rect x="212.4" y="547.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="215.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,033 samples, 0.09%)</title><rect x="213.3" y="547.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="216.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4,697 samples, 0.42%)</title><rect x="214.4" y="547.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (380 samples, 0.03%)</title><rect x="214.4" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="217.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (259 samples, 0.02%)</title><rect x="214.8" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="217.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (368 samples, 0.03%)</title><rect x="215.1" y="531.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="218.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (244 samples, 0.02%)</title><rect x="215.4" y="531.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="218.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (268 samples, 0.02%)</title><rect x="215.7" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (268 samples, 0.02%)</title><rect x="215.7" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.get$Lambda (268 samples, 0.02%)</title><rect x="215.7" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$291 (268 samples, 0.02%)</title><rect x="215.7" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="218.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (368 samples, 0.03%)</title><rect x="216.0" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (368 samples, 0.03%)</title><rect x="216.0" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="219.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (394 samples, 0.04%)</title><rect x="216.4" y="531.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="219.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (508 samples, 0.05%)</title><rect x="216.8" y="531.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="219.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,908 samples, 0.17%)</title><rect x="217.3" y="531.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (379 samples, 0.03%)</title><rect x="217.3" y="515.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="220.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (489 samples, 0.04%)</title><rect x="217.7" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="220.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (273 samples, 0.02%)</title><rect x="218.2" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (273 samples, 0.02%)</title><rect x="218.2" y="499.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="221.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (767 samples, 0.07%)</title><rect x="218.5" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (252 samples, 0.02%)</title><rect x="218.5" y="499.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="221.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (271 samples, 0.02%)</title><rect x="218.8" y="499.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="221.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (244 samples, 0.02%)</title><rect x="219.1" y="499.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="222.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3,098 samples, 0.28%)</title><rect x="219.3" y="547.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (249 samples, 0.02%)</title><rect x="219.3" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="222.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (241 samples, 0.02%)</title><rect x="219.6" y="531.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="222.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (259 samples, 0.02%)</title><rect x="219.8" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="222.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (384 samples, 0.03%)</title><rect x="220.1" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (384 samples, 0.03%)</title><rect x="220.1" y="515.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="223.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,965 samples, 0.18%)</title><rect x="220.5" y="531.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (384 samples, 0.03%)</title><rect x="220.5" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="223.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (518 samples, 0.05%)</title><rect x="220.9" y="515.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="223.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (247 samples, 0.02%)</title><rect x="221.5" y="515.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (247 samples, 0.02%)</title><rect x="221.5" y="499.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="224.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (816 samples, 0.07%)</title><rect x="221.7" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (305 samples, 0.03%)</title><rect x="221.7" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="224.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (278 samples, 0.02%)</title><rect x="222.3" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="225.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (466 samples, 0.04%)</title><rect x="222.6" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (466 samples, 0.04%)</title><rect x="222.6" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (466 samples, 0.04%)</title><rect x="222.6" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (466 samples, 0.04%)</title><rect x="222.6" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (466 samples, 0.04%)</title><rect x="222.6" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (466 samples, 0.04%)</title><rect x="222.6" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (466 samples, 0.04%)</title><rect x="222.6" y="451.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="225.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,496 samples, 0.13%)</title><rect x="223.1" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (391 samples, 0.03%)</title><rect x="223.1" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (391 samples, 0.03%)</title><rect x="223.1" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1698958724.get$Lambda (391 samples, 0.03%)</title><rect x="223.1" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$239 (391 samples, 0.03%)</title><rect x="223.1" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="226.1" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,105 samples, 0.10%)</title><rect x="223.5" y="531.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1698958724.run (1,105 samples, 0.10%)</title><rect x="223.5" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1,105 samples, 0.10%)</title><rect x="223.5" y="499.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.5" y="510.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (315 samples, 0.03%)</title><rect x="223.5" y="483.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="226.5" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (790 samples, 0.07%)</title><rect x="223.8" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.8" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (400 samples, 0.04%)</title><rect x="223.8" y="467.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="226.8" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (390 samples, 0.03%)</title><rect x="224.2" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.2" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (390 samples, 0.03%)</title><rect x="224.2" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.2" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (390 samples, 0.03%)</title><rect x="224.2" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.2" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (390 samples, 0.03%)</title><rect x="224.2" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.2" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (390 samples, 0.03%)</title><rect x="224.2" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="227.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (526 samples, 0.05%)</title><rect x="224.7" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (526 samples, 0.05%)</title><rect x="224.7" y="547.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="227.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$122/964985208.get (3,793 samples, 0.34%)</title><rect x="225.2" y="739.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (3,793 samples, 0.34%)</title><rect x="225.2" y="723.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$119/927168992.run (3,793 samples, 0.34%)</title><rect x="225.2" y="707.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$7 (3,793 samples, 0.34%)</title><rect x="225.2" y="691.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (687 samples, 0.06%)</title><rect x="225.2" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (687 samples, 0.06%)</title><rect x="225.2" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (687 samples, 0.06%)</title><rect x="225.2" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.2" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (687 samples, 0.06%)</title><rect x="225.2" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.2" y="638.0"></text>
</g>
<g>
<title>byte[] (687 samples, 0.06%)</title><rect x="225.2" y="611.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="228.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (802 samples, 0.07%)</title><rect x="225.9" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (802 samples, 0.07%)</title><rect x="225.9" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.9" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (802 samples, 0.07%)</title><rect x="225.9" y="643.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="228.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (2,304 samples, 0.21%)</title><rect x="226.8" y="675.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (2,226 samples, 0.20%)</title><rect x="226.8" y="659.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,753 samples, 0.16%)</title><rect x="226.8" y="643.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.8" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,753 samples, 0.16%)</title><rect x="226.8" y="627.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="229.8" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (465 samples, 0.04%)</title><rect x="228.7" y="643.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="231.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (137,402 samples, 12.26%)</title><rect x="229.2" y="755.0" width="144.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.2" y="766.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (132,820 samples, 11.85%)</title><rect x="229.2" y="739.0" width="139.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.2" y="750.0">java/util/concurr..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (588 samples, 0.05%)</title><rect x="229.2" y="723.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="232.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/2025425731.apply (132,232 samples, 11.80%)</title><rect x="229.8" y="723.0" width="139.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.8" y="734.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (132,232 samples, 11.80%)</title><rect x="229.8" y="707.0" width="139.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.8" y="718.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (132,232 samples, 11.80%)</title><rect x="229.8" y="691.0" width="139.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.8" y="702.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java.util.ArrayList (826 samples, 0.07%)</title><rect x="229.8" y="675.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="232.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,275 samples, 0.29%)</title><rect x="230.7" y="675.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (3,275 samples, 0.29%)</title><rect x="230.7" y="659.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,275 samples, 0.29%)</title><rect x="230.7" y="643.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (925 samples, 0.08%)</title><rect x="230.7" y="627.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.7" y="638.0"></text>
</g>
<g>
<title>java.lang.String (925 samples, 0.08%)</title><rect x="230.7" y="611.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="233.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,350 samples, 0.21%)</title><rect x="231.7" y="627.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,350 samples, 0.21%)</title><rect x="231.7" y="611.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.7" y="622.0"></text>
</g>
<g>
<title>byte[] (2,350 samples, 0.21%)</title><rect x="231.7" y="595.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="234.7" y="606.0"></text>
</g>
<g>
<title>java/net/URI.create (14,283 samples, 1.27%)</title><rect x="234.1" y="675.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.1" y="686.0"></text>
</g>
<g>
<title>java.net.URI (2,957 samples, 0.26%)</title><rect x="234.1" y="659.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="237.1" y="670.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (11,325 samples, 1.01%)</title><rect x="237.3" y="659.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.3" y="670.0"></text>
</g>
<g>
<title>java.net.URI$Parser (1,235 samples, 0.11%)</title><rect x="237.3" y="643.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="240.3" y="654.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (10,090 samples, 0.90%)</title><rect x="238.6" y="643.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,799 samples, 0.16%)</title><rect x="238.6" y="627.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,799 samples, 0.16%)</title><rect x="238.6" y="611.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.6" y="622.0"></text>
</g>
<g>
<title>java.lang.String (885 samples, 0.08%)</title><rect x="238.6" y="595.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="241.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (914 samples, 0.08%)</title><rect x="239.5" y="595.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.5" y="606.0"></text>
</g>
<g>
<title>byte[] (914 samples, 0.08%)</title><rect x="239.5" y="579.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="242.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (8,291 samples, 0.74%)</title><rect x="240.5" y="627.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,128 samples, 0.37%)</title><rect x="240.5" y="611.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,128 samples, 0.37%)</title><rect x="240.5" y="595.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1,757 samples, 0.16%)</title><rect x="240.5" y="579.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="243.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,371 samples, 0.21%)</title><rect x="242.3" y="579.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.3" y="590.0"></text>
</g>
<g>
<title>byte[] (2,371 samples, 0.21%)</title><rect x="242.3" y="563.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="245.3" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (4,163 samples, 0.37%)</title><rect x="244.8" y="611.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,030 samples, 0.18%)</title><rect x="244.8" y="595.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,030 samples, 0.18%)</title><rect x="244.8" y="579.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (859 samples, 0.08%)</title><rect x="244.8" y="563.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="247.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,171 samples, 0.10%)</title><rect x="245.7" y="563.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.7" y="574.0"></text>
</g>
<g>
<title>byte[] (1,171 samples, 0.10%)</title><rect x="245.7" y="547.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="248.7" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2,133 samples, 0.19%)</title><rect x="246.9" y="595.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.9" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2,133 samples, 0.19%)</title><rect x="246.9" y="579.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,133 samples, 0.19%)</title><rect x="246.9" y="563.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,133 samples, 0.19%)</title><rect x="246.9" y="547.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (938 samples, 0.08%)</title><rect x="246.9" y="531.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="249.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,195 samples, 0.11%)</title><rect x="247.9" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.9" y="542.0"></text>
</g>
<g>
<title>byte[] (1,195 samples, 0.11%)</title><rect x="247.9" y="515.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="250.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (1,246 samples, 0.11%)</title><rect x="249.2" y="675.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (1,246 samples, 0.11%)</title><rect x="249.2" y="659.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="252.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3,848 samples, 0.34%)</title><rect x="250.5" y="675.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.5" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (1,456 samples, 0.13%)</title><rect x="250.5" y="659.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="253.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2,392 samples, 0.21%)</title><rect x="252.0" y="659.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.0" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (594 samples, 0.05%)</title><rect x="252.0" y="643.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="255.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,798 samples, 0.16%)</title><rect x="252.7" y="643.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.7" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,798 samples, 0.16%)</title><rect x="252.7" y="627.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="255.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (989 samples, 0.09%)</title><rect x="254.6" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (989 samples, 0.09%)</title><rect x="254.6" y="659.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (989 samples, 0.09%)</title><rect x="254.6" y="643.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (989 samples, 0.09%)</title><rect x="254.6" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (989 samples, 0.09%)</title><rect x="254.6" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (989 samples, 0.09%)</title><rect x="254.6" y="595.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="257.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (570 samples, 0.05%)</title><rect x="255.6" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (570 samples, 0.05%)</title><rect x="255.6" y="659.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="258.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (73,156 samples, 6.53%)</title><rect x="256.2" y="675.0" width="77.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.2" y="686.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (73,156 samples, 6.53%)</title><rect x="256.2" y="659.0" width="77.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.2" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (73,156 samples, 6.53%)</title><rect x="256.2" y="643.0" width="77.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.2" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (73,156 samples, 6.53%)</title><rect x="256.2" y="627.0" width="77.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.2" y="638.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (596 samples, 0.05%)</title><rect x="256.2" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (596 samples, 0.05%)</title><rect x="256.2" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$198/1866554373.get$Lambda (596 samples, 0.05%)</title><rect x="256.2" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$198 (596 samples, 0.05%)</title><rect x="256.2" y="563.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="259.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,711 samples, 0.24%)</title><rect x="256.8" y="611.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,711 samples, 0.24%)</title><rect x="256.8" y="595.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,526 samples, 0.14%)</title><rect x="256.8" y="579.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="259.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,185 samples, 0.11%)</title><rect x="258.4" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,185 samples, 0.11%)</title><rect x="258.4" y="563.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,185 samples, 0.11%)</title><rect x="258.4" y="547.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="261.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2,611 samples, 0.23%)</title><rect x="259.7" y="611.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,611 samples, 0.23%)</title><rect x="259.7" y="595.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,456 samples, 0.13%)</title><rect x="259.7" y="579.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="262.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,155 samples, 0.10%)</title><rect x="261.2" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,155 samples, 0.10%)</title><rect x="261.2" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,155 samples, 0.10%)</title><rect x="261.2" y="547.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="264.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (2,037 samples, 0.18%)</title><rect x="262.4" y="611.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="265.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (3,667 samples, 0.33%)</title><rect x="264.6" y="611.0" width="3.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="267.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (34,508 samples, 3.08%)</title><rect x="268.4" y="611.0" width="36.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.4" y="622.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4,138 samples, 0.37%)</title><rect x="268.4" y="595.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.4" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3,289 samples, 0.29%)</title><rect x="268.4" y="579.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.4" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,191 samples, 0.11%)</title><rect x="268.4" y="563.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.4" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,191 samples, 0.11%)</title><rect x="268.4" y="547.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="271.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,098 samples, 0.19%)</title><rect x="269.7" y="563.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.7" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,098 samples, 0.19%)</title><rect x="269.7" y="547.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="272.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (849 samples, 0.08%)</title><rect x="271.9" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (849 samples, 0.08%)</title><rect x="271.9" y="563.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (849 samples, 0.08%)</title><rect x="271.9" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (849 samples, 0.08%)</title><rect x="271.9" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.9" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (849 samples, 0.08%)</title><rect x="271.9" y="515.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="274.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13,536 samples, 1.21%)</title><rect x="272.8" y="595.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13,536 samples, 1.21%)</title><rect x="272.8" y="579.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.8" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (628 samples, 0.06%)</title><rect x="272.8" y="563.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="275.8" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (922 samples, 0.08%)</title><rect x="273.5" y="563.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="276.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,800 samples, 0.16%)</title><rect x="274.4" y="563.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="277.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (604 samples, 0.05%)</title><rect x="276.3" y="563.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="279.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,194 samples, 0.11%)</title><rect x="277.0" y="563.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,194 samples, 0.11%)</title><rect x="277.0" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.get$Lambda (1,194 samples, 0.11%)</title><rect x="277.0" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.0" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$142 (1,194 samples, 0.11%)</title><rect x="277.0" y="515.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="280.0" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5,469 samples, 0.49%)</title><rect x="278.2" y="563.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5,469 samples, 0.49%)</title><rect x="278.2" y="547.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (5,469 samples, 0.49%)</title><rect x="278.2" y="531.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5,469 samples, 0.49%)</title><rect x="278.2" y="515.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2,189 samples, 0.20%)</title><rect x="278.2" y="499.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (2,189 samples, 0.20%)</title><rect x="278.2" y="483.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2,189 samples, 0.20%)</title><rect x="278.2" y="467.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,189 samples, 0.20%)</title><rect x="278.2" y="451.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,189 samples, 0.20%)</title><rect x="278.2" y="435.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,189 samples, 0.20%)</title><rect x="278.2" y="419.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,189 samples, 0.20%)</title><rect x="278.2" y="403.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,189 samples, 0.20%)</title><rect x="278.2" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,189 samples, 0.20%)</title><rect x="278.2" y="371.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="281.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,806 samples, 0.16%)</title><rect x="280.5" y="499.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.5" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,806 samples, 0.16%)</title><rect x="280.5" y="483.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (892 samples, 0.08%)</title><rect x="280.5" y="467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (892 samples, 0.08%)</title><rect x="280.5" y="451.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (892 samples, 0.08%)</title><rect x="280.5" y="435.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="283.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (914 samples, 0.08%)</title><rect x="281.5" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.5" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (914 samples, 0.08%)</title><rect x="281.5" y="451.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="284.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,474 samples, 0.13%)</title><rect x="282.4" y="499.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,474 samples, 0.13%)</title><rect x="282.4" y="483.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="285.4" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,147 samples, 0.10%)</title><rect x="284.0" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.0" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,147 samples, 0.10%)</title><rect x="284.0" y="547.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="287.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,772 samples, 0.16%)</title><rect x="285.2" y="563.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,772 samples, 0.16%)</title><rect x="285.2" y="547.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="288.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (607 samples, 0.05%)</title><rect x="287.1" y="595.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="290.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (11,184 samples, 1.00%)</title><rect x="287.7" y="595.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.7" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (11,184 samples, 1.00%)</title><rect x="287.7" y="579.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.7" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9,986 samples, 0.89%)</title><rect x="287.7" y="563.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.7" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9,986 samples, 0.89%)</title><rect x="287.7" y="547.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.7" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9,986 samples, 0.89%)</title><rect x="287.7" y="531.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.7" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2,785 samples, 0.25%)</title><rect x="287.7" y="515.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="290.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3,607 samples, 0.32%)</title><rect x="290.6" y="515.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.6" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3,607 samples, 0.32%)</title><rect x="290.6" y="499.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.6" y="510.0"></text>
</g>
<g>
<title>byte[] (3,607 samples, 0.32%)</title><rect x="290.6" y="483.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="293.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,594 samples, 0.32%)</title><rect x="294.4" y="515.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,594 samples, 0.32%)</title><rect x="294.4" y="499.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,594 samples, 0.32%)</title><rect x="294.4" y="483.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.4" y="494.0"></text>
</g>
<g>
<title>byte[] (3,594 samples, 0.32%)</title><rect x="294.4" y="467.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="297.4" y="478.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (1,198 samples, 0.11%)</title><rect x="298.2" y="563.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="301.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,763 samples, 0.16%)</title><rect x="299.5" y="595.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,763 samples, 0.16%)</title><rect x="299.5" y="579.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="302.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,280 samples, 0.29%)</title><rect x="301.3" y="595.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.3" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (911 samples, 0.08%)</title><rect x="301.3" y="579.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="304.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (893 samples, 0.08%)</title><rect x="302.3" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.3" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (893 samples, 0.08%)</title><rect x="302.3" y="563.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="305.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,476 samples, 0.13%)</title><rect x="303.2" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,476 samples, 0.13%)</title><rect x="303.2" y="563.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="306.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (17,347 samples, 1.55%)</title><rect x="304.8" y="611.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (567 samples, 0.05%)</title><rect x="304.8" y="595.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="307.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (2,694 samples, 0.24%)</title><rect x="305.4" y="595.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="308.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (652 samples, 0.06%)</title><rect x="308.2" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (652 samples, 0.06%)</title><rect x="308.2" y="579.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="311.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (13,434 samples, 1.20%)</title><rect x="308.9" y="595.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (13,434 samples, 1.20%)</title><rect x="308.9" y="579.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.9" y="590.0"></text>
</g>
<g>
<title>java.lang.Class[] (1,187 samples, 0.11%)</title><rect x="308.9" y="563.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="311.9" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,197 samples, 0.11%)</title><rect x="310.2" y="563.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="313.2" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (1,202 samples, 0.11%)</title><rect x="311.4" y="563.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="314.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (5,979 samples, 0.53%)</title><rect x="312.7" y="563.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (5,979 samples, 0.53%)</title><rect x="312.7" y="547.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.7" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (5,979 samples, 0.53%)</title><rect x="312.7" y="531.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.7" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (5,979 samples, 0.53%)</title><rect x="312.7" y="515.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.7" y="526.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (5,979 samples, 0.53%)</title><rect x="312.7" y="499.0" width="6.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="315.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2,053 samples, 0.18%)</title><rect x="319.0" y="563.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2,053 samples, 0.18%)</title><rect x="319.0" y="547.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (618 samples, 0.06%)</title><rect x="319.0" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (618 samples, 0.06%)</title><rect x="319.0" y="515.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="322.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1,435 samples, 0.13%)</title><rect x="319.6" y="531.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (1,435 samples, 0.13%)</title><rect x="319.6" y="515.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="322.6" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,816 samples, 0.16%)</title><rect x="321.1" y="563.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.1" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,816 samples, 0.16%)</title><rect x="321.1" y="547.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.1" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,816 samples, 0.16%)</title><rect x="321.1" y="531.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="324.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (9,677 samples, 0.86%)</title><rect x="323.1" y="611.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,861 samples, 0.17%)</title><rect x="323.1" y="595.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (890 samples, 0.08%)</title><rect x="323.1" y="579.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="326.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (971 samples, 0.09%)</title><rect x="324.0" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (971 samples, 0.09%)</title><rect x="324.0" y="563.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (947 samples, 0.08%)</title><rect x="324.0" y="547.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="327.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,244 samples, 0.11%)</title><rect x="325.0" y="595.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="328.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6,572 samples, 0.59%)</title><rect x="326.3" y="595.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,213 samples, 0.11%)</title><rect x="326.3" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,213 samples, 0.11%)</title><rect x="326.3" y="563.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/1586761708.get$Lambda (630 samples, 0.06%)</title><rect x="326.3" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$181 (630 samples, 0.06%)</title><rect x="326.3" y="531.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="329.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1182132911.get$Lambda (583 samples, 0.05%)</title><rect x="327.0" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$184 (583 samples, 0.05%)</title><rect x="327.0" y="531.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="330.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5,359 samples, 0.48%)</title><rect x="327.6" y="579.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5,359 samples, 0.48%)</title><rect x="327.6" y="563.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,946 samples, 0.26%)</title><rect x="327.6" y="547.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="330.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,413 samples, 0.22%)</title><rect x="330.7" y="547.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,413 samples, 0.22%)</title><rect x="330.7" y="531.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,413 samples, 0.22%)</title><rect x="330.7" y="515.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="333.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (15,368 samples, 1.37%)</title><rect x="333.2" y="675.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (1,481 samples, 0.13%)</title><rect x="333.2" y="659.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="336.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (13,887 samples, 1.24%)</title><rect x="334.8" y="659.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.8" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13,310 samples, 1.19%)</title><rect x="334.8" y="643.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13,310 samples, 1.19%)</title><rect x="334.8" y="627.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.8" y="638.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (568 samples, 0.05%)</title><rect x="334.8" y="611.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="337.8" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (837 samples, 0.07%)</title><rect x="335.4" y="611.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="338.4" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,800 samples, 0.16%)</title><rect x="336.3" y="611.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="339.3" y="622.0"></text>
</g>
<g>
<title>java.util.TreeSet (561 samples, 0.05%)</title><rect x="338.2" y="611.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="341.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,221 samples, 0.11%)</title><rect x="338.8" y="611.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="341.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,221 samples, 0.11%)</title><rect x="338.8" y="595.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.get$Lambda (1,221 samples, 0.11%)</title><rect x="338.8" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.8" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$142 (1,221 samples, 0.11%)</title><rect x="338.8" y="563.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="341.8" y="574.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,187 samples, 0.11%)</title><rect x="340.1" y="611.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.1" y="622.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,187 samples, 0.11%)</title><rect x="340.1" y="595.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="343.1" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5,370 samples, 0.48%)</title><rect x="341.3" y="611.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.3" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (5,370 samples, 0.48%)</title><rect x="341.3" y="595.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5,370 samples, 0.48%)</title><rect x="341.3" y="579.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,019 samples, 0.18%)</title><rect x="341.3" y="563.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (2,019 samples, 0.18%)</title><rect x="341.3" y="547.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2,019 samples, 0.18%)</title><rect x="341.3" y="531.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,019 samples, 0.18%)</title><rect x="341.3" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,019 samples, 0.18%)</title><rect x="341.3" y="499.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,019 samples, 0.18%)</title><rect x="341.3" y="483.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,019 samples, 0.18%)</title><rect x="341.3" y="467.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,019 samples, 0.18%)</title><rect x="341.3" y="451.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,019 samples, 0.18%)</title><rect x="341.3" y="435.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="344.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,850 samples, 0.17%)</title><rect x="343.4" y="563.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.4" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,850 samples, 0.17%)</title><rect x="343.4" y="547.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (915 samples, 0.08%)</title><rect x="343.4" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (915 samples, 0.08%)</title><rect x="343.4" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.4" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (915 samples, 0.08%)</title><rect x="343.4" y="499.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="346.4" y="510.0"></text>
</g>
<g>
<title>java/util/List.of (935 samples, 0.08%)</title><rect x="344.4" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.4" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (935 samples, 0.08%)</title><rect x="344.4" y="515.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="347.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,501 samples, 0.13%)</title><rect x="345.4" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,501 samples, 0.13%)</title><rect x="345.4" y="547.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="348.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,766 samples, 0.16%)</title><rect x="347.0" y="611.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.0" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,766 samples, 0.16%)</title><rect x="347.0" y="595.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="350.0" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (577 samples, 0.05%)</title><rect x="348.8" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.8" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (577 samples, 0.05%)</title><rect x="348.8" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.8" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (577 samples, 0.05%)</title><rect x="348.8" y="611.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="351.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3,297 samples, 0.29%)</title><rect x="349.4" y="675.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3,297 samples, 0.29%)</title><rect x="349.4" y="659.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3,297 samples, 0.29%)</title><rect x="349.4" y="643.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (907 samples, 0.08%)</title><rect x="349.4" y="627.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="352.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (869 samples, 0.08%)</title><rect x="350.4" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.4" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (869 samples, 0.08%)</title><rect x="350.4" y="611.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="353.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,521 samples, 0.14%)</title><rect x="351.3" y="627.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,521 samples, 0.14%)</title><rect x="351.3" y="611.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="354.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (15,374 samples, 1.37%)</title><rect x="352.9" y="675.0" width="16.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.9" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (409 samples, 0.04%)</title><rect x="352.9" y="659.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="355.9" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (436 samples, 0.04%)</title><rect x="353.3" y="659.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="356.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (317 samples, 0.03%)</title><rect x="353.8" y="659.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="356.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (306 samples, 0.03%)</title><rect x="354.1" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (306 samples, 0.03%)</title><rect x="354.1" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$223/558130116.get$Lambda (306 samples, 0.03%)</title><rect x="354.1" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.FuturesWorker$$Lambda$223 (306 samples, 0.03%)</title><rect x="354.1" y="611.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="357.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1880446865.linkToTargetMethod (602 samples, 0.05%)</title><rect x="354.4" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1857219467.invokeStatic (602 samples, 0.05%)</title><rect x="354.4" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$219/958209831.get$Lambda (602 samples, 0.05%)</title><rect x="354.4" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.FuturesWorker$$Lambda$219 (602 samples, 0.05%)</title><rect x="354.4" y="611.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="357.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12,753 samples, 1.14%)</title><rect x="355.1" y="659.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$223/558130116.accept (12,753 samples, 1.14%)</title><rect x="355.1" y="643.0" width="13.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (12,753 samples, 1.14%)</title><rect x="355.1" y="627.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,607 samples, 0.23%)</title><rect x="355.1" y="611.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,607 samples, 0.23%)</title><rect x="355.1" y="595.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,462 samples, 0.13%)</title><rect x="355.1" y="579.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="358.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,145 samples, 0.10%)</title><rect x="356.6" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,145 samples, 0.10%)</title><rect x="356.6" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,145 samples, 0.10%)</title><rect x="356.6" y="547.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="359.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (7,548 samples, 0.67%)</title><rect x="357.8" y="611.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Canceller (648 samples, 0.06%)</title><rect x="357.8" y="595.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="360.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Timeout (650 samples, 0.06%)</title><rect x="358.5" y="595.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="361.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (3,514 samples, 0.31%)</title><rect x="359.2" y="595.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (3,514 samples, 0.31%)</title><rect x="359.2" y="579.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (2,589 samples, 0.23%)</title><rect x="359.2" y="563.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="362.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (910 samples, 0.08%)</title><rect x="361.9" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (910 samples, 0.08%)</title><rect x="361.9" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (910 samples, 0.08%)</title><rect x="361.9" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (910 samples, 0.08%)</title><rect x="361.9" y="515.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="364.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,736 samples, 0.24%)</title><rect x="362.9" y="595.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,736 samples, 0.24%)</title><rect x="362.9" y="579.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,535 samples, 0.14%)</title><rect x="362.9" y="563.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="365.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,201 samples, 0.11%)</title><rect x="364.5" y="563.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,201 samples, 0.11%)</title><rect x="364.5" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,201 samples, 0.11%)</title><rect x="364.5" y="531.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="367.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2,598 samples, 0.23%)</title><rect x="365.8" y="611.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,598 samples, 0.23%)</title><rect x="365.8" y="595.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,476 samples, 0.13%)</title><rect x="365.8" y="579.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="368.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,122 samples, 0.10%)</title><rect x="367.3" y="579.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,122 samples, 0.10%)</title><rect x="367.3" y="563.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,122 samples, 0.10%)</title><rect x="367.3" y="547.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="370.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (551 samples, 0.05%)</title><rect x="368.5" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (285 samples, 0.03%)</title><rect x="368.5" y="643.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="371.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object (266 samples, 0.02%)</title><rect x="368.8" y="643.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="371.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4,582 samples, 0.41%)</title><rect x="369.1" y="739.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4,582 samples, 0.41%)</title><rect x="369.1" y="723.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$136/412513292.accept (4,582 samples, 0.41%)</title><rect x="369.1" y="707.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$9 (4,582 samples, 0.41%)</title><rect x="369.1" y="691.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getSuccessAndSendIfReachedExpected (4,582 samples, 0.41%)</title><rect x="369.1" y="675.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.1" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (650 samples, 0.06%)</title><rect x="369.1" y="659.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="372.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,731 samples, 0.15%)</title><rect x="369.8" y="659.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.8" y="670.0"></text>
</g>
<g>
<title>byte[] (718 samples, 0.06%)</title><rect x="369.8" y="643.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="372.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (592 samples, 0.05%)</title><rect x="370.5" y="643.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="373.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (421 samples, 0.04%)</title><rect x="371.2" y="643.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="374.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (2,201 samples, 0.20%)</title><rect x="371.6" y="659.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (2,201 samples, 0.20%)</title><rect x="371.6" y="643.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,201 samples, 0.20%)</title><rect x="371.6" y="627.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,201 samples, 0.20%)</title><rect x="371.6" y="611.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,531 samples, 0.14%)</title><rect x="371.6" y="595.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,531 samples, 0.14%)</title><rect x="371.6" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.6" y="590.0"></text>
</g>
<g>
<title>byte[] (1,529 samples, 0.14%)</title><rect x="371.6" y="563.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="374.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (670 samples, 0.06%)</title><rect x="373.2" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.2" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (670 samples, 0.06%)</title><rect x="373.2" y="579.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="376.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (26,604 samples, 2.37%)</title><rect x="373.9" y="755.0" width="28.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.9" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (26,352 samples, 2.35%)</title><rect x="373.9" y="739.0" width="27.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.9" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25,910 samples, 2.31%)</title><rect x="373.9" y="723.0" width="27.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (25,910 samples, 2.31%)</title><rect x="373.9" y="707.0" width="27.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.9" y="718.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (25,910 samples, 2.31%)</title><rect x="373.9" y="691.0" width="27.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="376.9" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (442 samples, 0.04%)</title><rect x="401.2" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (442 samples, 0.04%)</title><rect x="401.2" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (442 samples, 0.04%)</title><rect x="401.2" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (442 samples, 0.04%)</title><rect x="401.2" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (442 samples, 0.04%)</title><rect x="401.2" y="659.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="404.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (252 samples, 0.02%)</title><rect x="401.7" y="739.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (252 samples, 0.02%)</title><rect x="401.7" y="723.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (252 samples, 0.02%)</title><rect x="401.7" y="707.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (252 samples, 0.02%)</title><rect x="401.7" y="691.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.7" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (252 samples, 0.02%)</title><rect x="401.7" y="675.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="404.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$394/1798067653.run (19,274 samples, 1.72%)</title><rect x="401.9" y="755.0" width="20.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (19,274 samples, 1.72%)</title><rect x="401.9" y="739.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (19,274 samples, 1.72%)</title><rect x="401.9" y="723.0" width="20.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (19,274 samples, 1.72%)</title><rect x="401.9" y="707.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19,274 samples, 1.72%)</title><rect x="401.9" y="691.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19,274 samples, 1.72%)</title><rect x="401.9" y="675.0" width="20.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19,274 samples, 1.72%)</title><rect x="401.9" y="659.0" width="20.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19,274 samples, 1.72%)</title><rect x="401.9" y="643.0" width="20.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19,274 samples, 1.72%)</title><rect x="401.9" y="627.0" width="20.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19,274 samples, 1.72%)</title><rect x="401.9" y="611.0" width="20.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (19,274 samples, 1.72%)</title><rect x="401.9" y="595.0" width="20.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (17,598 samples, 1.57%)</title><rect x="401.9" y="579.0" width="18.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,237 samples, 0.11%)</title><rect x="401.9" y="563.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,237 samples, 0.11%)</title><rect x="401.9" y="547.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/197561838.get$Lambda (356 samples, 0.03%)</title><rect x="401.9" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$405 (356 samples, 0.03%)</title><rect x="401.9" y="515.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="404.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/293231219.get$Lambda (503 samples, 0.04%)</title><rect x="402.3" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$427 (503 samples, 0.04%)</title><rect x="402.3" y="515.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="405.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$428/974970919.get$Lambda (378 samples, 0.03%)</title><rect x="402.8" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$428 (378 samples, 0.03%)</title><rect x="402.8" y="515.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="405.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (16,361 samples, 1.46%)</title><rect x="403.2" y="563.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (735 samples, 0.07%)</title><rect x="403.2" y="547.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="406.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15,626 samples, 1.39%)</title><rect x="404.0" y="547.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (15,626 samples, 1.39%)</title><rect x="404.0" y="531.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15,626 samples, 1.39%)</title><rect x="404.0" y="515.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,740 samples, 0.24%)</title><rect x="404.0" y="499.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (913 samples, 0.08%)</title><rect x="404.0" y="483.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="407.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$424/484639362.apply (1,676 samples, 0.15%)</title><rect x="405.0" y="483.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1,676 samples, 0.15%)</title><rect x="405.0" y="467.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1,676 samples, 0.15%)</title><rect x="405.0" y="451.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (349 samples, 0.03%)</title><rect x="405.0" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (349 samples, 0.03%)</title><rect x="405.0" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.0" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (349 samples, 0.03%)</title><rect x="405.0" y="403.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="408.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1,327 samples, 0.12%)</title><rect x="405.3" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (239 samples, 0.02%)</title><rect x="405.3" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (239 samples, 0.02%)</title><rect x="405.3" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.get$Lambda (239 samples, 0.02%)</title><rect x="405.3" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$430 (239 samples, 0.02%)</title><rect x="405.3" y="371.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="408.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1,088 samples, 0.10%)</title><rect x="405.6" y="419.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,088 samples, 0.10%)</title><rect x="405.6" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (613 samples, 0.05%)</title><rect x="405.6" y="387.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="408.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (472 samples, 0.04%)</title><rect x="406.2" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (472 samples, 0.04%)</title><rect x="406.2" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (472 samples, 0.04%)</title><rect x="406.2" y="355.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="409.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (12,886 samples, 1.15%)</title><rect x="406.9" y="499.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12,886 samples, 1.15%)</title><rect x="406.9" y="483.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$370/1725152409.apply (12,886 samples, 1.15%)</title><rect x="406.9" y="467.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (12,886 samples, 1.15%)</title><rect x="406.9" y="451.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="409.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (12,886 samples, 1.15%)</title><rect x="406.9" y="435.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/1264514825.apply (12,886 samples, 1.15%)</title><rect x="406.9" y="419.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (12,886 samples, 1.15%)</title><rect x="406.9" y="403.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,101 samples, 0.10%)</title><rect x="407.2" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,101 samples, 0.10%)</title><rect x="407.2" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (614 samples, 0.05%)</title><rect x="407.2" y="355.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="410.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.04%)</title><rect x="407.8" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (487 samples, 0.04%)</title><rect x="407.8" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (487 samples, 0.04%)</title><rect x="407.8" y="323.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="410.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (11,551 samples, 1.03%)</title><rect x="408.3" y="387.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (464 samples, 0.04%)</title><rect x="408.3" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (464 samples, 0.04%)</title><rect x="408.3" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$411/290053851.get$Lambda (240 samples, 0.02%)</title><rect x="408.3" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$411 (240 samples, 0.02%)</title><rect x="408.3" y="323.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="411.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (4,161 samples, 0.37%)</title><rect x="408.8" y="371.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (4,161 samples, 0.37%)</title><rect x="408.8" y="355.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (4,161 samples, 0.37%)</title><rect x="408.8" y="339.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$411/290053851.accept (1,420 samples, 0.13%)</title><rect x="408.8" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1,420 samples, 0.13%)</title><rect x="408.8" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1,420 samples, 0.13%)</title><rect x="408.8" y="291.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (353 samples, 0.03%)</title><rect x="408.8" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (353 samples, 0.03%)</title><rect x="408.8" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$413/924182516.get$Lambda (353 samples, 0.03%)</title><rect x="408.8" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$413 (353 samples, 0.03%)</title><rect x="408.8" y="227.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="411.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,067 samples, 0.10%)</title><rect x="409.2" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,067 samples, 0.10%)</title><rect x="409.2" y="259.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (579 samples, 0.05%)</title><rect x="409.2" y="243.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="412.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (488 samples, 0.04%)</title><rect x="409.8" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (488 samples, 0.04%)</title><rect x="409.8" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (488 samples, 0.04%)</title><rect x="409.8" y="211.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="412.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$419/1031079439.accept (1,767 samples, 0.16%)</title><rect x="410.3" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1,767 samples, 0.16%)</title><rect x="410.3" y="307.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1,767 samples, 0.16%)</title><rect x="410.3" y="291.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1,767 samples, 0.16%)</title><rect x="410.3" y="275.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1,767 samples, 0.16%)</title><rect x="410.3" y="259.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,767 samples, 0.16%)</title><rect x="410.3" y="243.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,767 samples, 0.16%)</title><rect x="410.3" y="227.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,767 samples, 0.16%)</title><rect x="410.3" y="211.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,767 samples, 0.16%)</title><rect x="410.3" y="195.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1,767 samples, 0.16%)</title><rect x="410.3" y="179.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (717 samples, 0.06%)</title><rect x="410.3" y="163.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (717 samples, 0.06%)</title><rect x="410.3" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (354 samples, 0.03%)</title><rect x="410.3" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="413.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (363 samples, 0.03%)</title><rect x="410.7" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (363 samples, 0.03%)</title><rect x="410.7" y="115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (363 samples, 0.03%)</title><rect x="410.7" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (363 samples, 0.03%)</title><rect x="410.7" y="83.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (363 samples, 0.03%)</title><rect x="410.7" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.7" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (363 samples, 0.03%)</title><rect x="410.7" y="51.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="413.7" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1,050 samples, 0.09%)</title><rect x="411.0" y="163.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1,050 samples, 0.09%)</title><rect x="411.0" y="147.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (325 samples, 0.03%)</title><rect x="411.0" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.0" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (325 samples, 0.03%)</title><rect x="411.0" y="115.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="414.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (725 samples, 0.06%)</title><rect x="411.4" y="131.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.4" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (358 samples, 0.03%)</title><rect x="411.4" y="115.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="414.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (367 samples, 0.03%)</title><rect x="411.8" y="115.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (367 samples, 0.03%)</title><rect x="411.8" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (367 samples, 0.03%)</title><rect x="411.8" y="83.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (367 samples, 0.03%)</title><rect x="411.8" y="67.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (367 samples, 0.03%)</title><rect x="411.8" y="51.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (367 samples, 0.03%)</title><rect x="411.8" y="35.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="414.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (974 samples, 0.09%)</title><rect x="412.2" y="323.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (974 samples, 0.09%)</title><rect x="412.2" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (974 samples, 0.09%)</title><rect x="412.2" y="291.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="415.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (6,926 samples, 0.62%)</title><rect x="413.2" y="371.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (631 samples, 0.06%)</title><rect x="413.2" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="416.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (477 samples, 0.04%)</title><rect x="413.8" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (477 samples, 0.04%)</title><rect x="413.8" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (477 samples, 0.04%)</title><rect x="413.8" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="416.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5,818 samples, 0.52%)</title><rect x="414.3" y="355.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (389 samples, 0.03%)</title><rect x="414.3" y="339.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="417.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (3,094 samples, 0.28%)</title><rect x="414.8" y="339.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (492 samples, 0.04%)</title><rect x="414.8" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (492 samples, 0.04%)</title><rect x="414.8" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="417.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (639 samples, 0.06%)</title><rect x="415.3" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="418.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1,963 samples, 0.18%)</title><rect x="415.9" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (246 samples, 0.02%)</title><rect x="415.9" y="307.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="418.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (465 samples, 0.04%)</title><rect x="416.5" y="307.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="419.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (327 samples, 0.03%)</title><rect x="416.9" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (327 samples, 0.03%)</title><rect x="416.9" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="419.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (690 samples, 0.06%)</title><rect x="417.3" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (241 samples, 0.02%)</title><rect x="417.5" y="291.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="420.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2,335 samples, 0.21%)</title><rect x="418.0" y="339.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.0" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (340 samples, 0.03%)</title><rect x="418.0" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="421.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,162 samples, 0.10%)</title><rect x="418.4" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (687 samples, 0.06%)</title><rect x="418.4" y="307.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="421.4" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (475 samples, 0.04%)</title><rect x="419.1" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.1" y="318.0"></text>
</g>
<g>
<title>byte[] (475 samples, 0.04%)</title><rect x="419.1" y="291.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="422.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (833 samples, 0.07%)</title><rect x="419.6" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (833 samples, 0.07%)</title><rect x="419.6" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (833 samples, 0.07%)</title><rect x="419.6" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (833 samples, 0.07%)</title><rect x="419.6" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (833 samples, 0.07%)</title><rect x="419.6" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (833 samples, 0.07%)</title><rect x="419.6" y="243.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="422.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,676 samples, 0.15%)</title><rect x="420.5" y="579.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,676 samples, 0.15%)</title><rect x="420.5" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,676 samples, 0.15%)</title><rect x="420.5" y="547.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="423.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,676 samples, 0.15%)</title><rect x="420.5" y="531.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,676 samples, 0.15%)</title><rect x="420.5" y="515.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,676 samples, 0.15%)</title><rect x="420.5" y="499.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (724 samples, 0.06%)</title><rect x="420.5" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.5" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (724 samples, 0.06%)</title><rect x="420.5" y="467.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="423.5" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (952 samples, 0.08%)</title><rect x="421.2" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.2" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (952 samples, 0.08%)</title><rect x="421.2" y="467.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="424.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (62,625 samples, 5.59%)</title><rect x="422.2" y="755.0" width="66.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.2" y="766.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (62,625 samples, 5.59%)</title><rect x="422.2" y="739.0" width="66.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.2" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (52,477 samples, 4.68%)</title><rect x="422.2" y="723.0" width="55.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.2" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (52,477 samples, 4.68%)</title><rect x="422.2" y="707.0" width="55.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.2" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (52,477 samples, 4.68%)</title><rect x="422.2" y="691.0" width="55.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.2" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,182 samples, 0.11%)</title><rect x="422.2" y="675.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,182 samples, 0.11%)</title><rect x="422.2" y="659.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,182 samples, 0.11%)</title><rect x="422.2" y="643.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,182 samples, 0.11%)</title><rect x="422.2" y="627.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (717 samples, 0.06%)</title><rect x="422.2" y="611.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (717 samples, 0.06%)</title><rect x="422.2" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (717 samples, 0.06%)</title><rect x="422.2" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (717 samples, 0.06%)</title><rect x="422.2" y="563.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (717 samples, 0.06%)</title><rect x="422.2" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.2" y="558.0"></text>
</g>
<g>
<title>byte[] (717 samples, 0.06%)</title><rect x="422.2" y="531.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="425.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (465 samples, 0.04%)</title><rect x="423.0" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (465 samples, 0.04%)</title><rect x="423.0" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (465 samples, 0.04%)</title><rect x="423.0" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398/1871476137.get$Lambda (465 samples, 0.04%)</title><rect x="423.0" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398 (465 samples, 0.04%)</title><rect x="423.0" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="426.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (51,295 samples, 4.58%)</title><rect x="423.5" y="675.0" width="54.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.5" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (51,295 samples, 4.58%)</title><rect x="423.5" y="659.0" width="54.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.5" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (51,295 samples, 4.58%)</title><rect x="423.5" y="643.0" width="54.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.5" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (51,295 samples, 4.58%)</title><rect x="423.5" y="627.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.5" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24,319 samples, 2.17%)</title><rect x="423.5" y="611.0" width="25.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.5" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24,319 samples, 2.17%)</title><rect x="423.5" y="595.0" width="25.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24,319 samples, 2.17%)</title><rect x="423.5" y="579.0" width="25.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.5" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (24,319 samples, 2.17%)</title><rect x="423.5" y="563.0" width="25.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.5" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24,319 samples, 2.17%)</title><rect x="423.5" y="547.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.5" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (24,319 samples, 2.17%)</title><rect x="423.5" y="531.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.5" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24,319 samples, 2.17%)</title><rect x="423.5" y="515.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.5" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (23,563 samples, 2.10%)</title><rect x="423.5" y="499.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.5" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23,563 samples, 2.10%)</title><rect x="423.5" y="483.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.5" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (23,101 samples, 2.06%)</title><rect x="423.5" y="467.0" width="24.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.5" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (495 samples, 0.04%)</title><rect x="423.5" y="451.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="426.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1182132911.apply (21,613 samples, 1.93%)</title><rect x="424.0" y="451.0" width="22.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.0" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (21,613 samples, 1.93%)</title><rect x="424.0" y="435.0" width="22.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.0" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (355 samples, 0.03%)</title><rect x="424.0" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (355 samples, 0.03%)</title><rect x="424.0" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$467/1200215500.get$Lambda (355 samples, 0.03%)</title><rect x="424.0" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$467 (355 samples, 0.03%)</title><rect x="424.0" y="371.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="427.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,151 samples, 0.10%)</title><rect x="424.4" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,151 samples, 0.10%)</title><rect x="424.4" y="403.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (630 samples, 0.06%)</title><rect x="424.4" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="427.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (521 samples, 0.05%)</title><rect x="425.0" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (521 samples, 0.05%)</title><rect x="425.0" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="428.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (521 samples, 0.05%)</title><rect x="425.0" y="355.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="428.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (20,107 samples, 1.79%)</title><rect x="425.6" y="419.0" width="21.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.6" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (241 samples, 0.02%)</title><rect x="425.6" y="403.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (241 samples, 0.02%)</title><rect x="425.6" y="387.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$464/299828296.get$Lambda (241 samples, 0.02%)</title><rect x="425.6" y="371.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$464 (241 samples, 0.02%)</title><rect x="425.6" y="355.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="428.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,116 samples, 0.10%)</title><rect x="425.8" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,116 samples, 0.10%)</title><rect x="425.8" y="387.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (621 samples, 0.06%)</title><rect x="425.8" y="371.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="428.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (495 samples, 0.04%)</title><rect x="426.5" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (495 samples, 0.04%)</title><rect x="426.5" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (495 samples, 0.04%)</title><rect x="426.5" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="429.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (18,750 samples, 1.67%)</title><rect x="427.0" y="403.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$157/1563968298.apply (1,303 samples, 0.12%)</title><rect x="427.0" y="387.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1,303 samples, 0.12%)</title><rect x="427.0" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1,303 samples, 0.12%)</title><rect x="427.0" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (502 samples, 0.04%)</title><rect x="427.0" y="339.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="430.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (801 samples, 0.07%)</title><rect x="427.6" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (375 samples, 0.03%)</title><rect x="427.6" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="430.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (426 samples, 0.04%)</title><rect x="427.9" y="323.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="430.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (17,447 samples, 1.56%)</title><rect x="428.4" y="387.0" width="18.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (555 samples, 0.05%)</title><rect x="428.4" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (555 samples, 0.05%)</title><rect x="428.4" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$458/9249739.get$Lambda (268 samples, 0.02%)</title><rect x="428.4" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$458 (268 samples, 0.02%)</title><rect x="428.4" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="431.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$460/1540370286.get$Lambda (287 samples, 0.03%)</title><rect x="428.7" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$460 (287 samples, 0.03%)</title><rect x="428.7" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="431.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/423820432.linkToTargetMethod (636 samples, 0.06%)</title><rect x="429.0" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2123217960.invokeStatic (636 samples, 0.06%)</title><rect x="429.0" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$440/1852712216.get$Lambda (636 samples, 0.06%)</title><rect x="429.0" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$440 (636 samples, 0.06%)</title><rect x="429.0" y="323.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="432.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3,487 samples, 0.31%)</title><rect x="429.6" y="371.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,307 samples, 0.12%)</title><rect x="429.6" y="355.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (494 samples, 0.04%)</title><rect x="429.6" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.6" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (494 samples, 0.04%)</title><rect x="429.6" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="432.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (813 samples, 0.07%)</title><rect x="430.2" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.2" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (813 samples, 0.07%)</title><rect x="430.2" y="323.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="433.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1,187 samples, 0.11%)</title><rect x="431.0" y="355.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,187 samples, 0.11%)</title><rect x="431.0" y="339.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,187 samples, 0.11%)</title><rect x="431.0" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (393 samples, 0.04%)</title><rect x="431.0" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (393 samples, 0.04%)</title><rect x="431.0" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (393 samples, 0.04%)</title><rect x="431.0" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.0" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (393 samples, 0.04%)</title><rect x="431.0" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="434.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$437/1604600042.get (413 samples, 0.04%)</title><rect x="431.4" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (413 samples, 0.04%)</title><rect x="431.4" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="434.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (381 samples, 0.03%)</title><rect x="431.9" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (381 samples, 0.03%)</title><rect x="431.9" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.9" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (381 samples, 0.03%)</title><rect x="431.9" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.9" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (381 samples, 0.03%)</title><rect x="431.9" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="434.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (993 samples, 0.09%)</title><rect x="432.3" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (993 samples, 0.09%)</title><rect x="432.3" y="339.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="435.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,113 samples, 0.19%)</title><rect x="433.3" y="371.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,045 samples, 0.09%)</title><rect x="433.3" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (585 samples, 0.05%)</title><rect x="433.3" y="339.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="436.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (460 samples, 0.04%)</title><rect x="433.9" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (460 samples, 0.04%)</title><rect x="433.9" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (460 samples, 0.04%)</title><rect x="433.9" y="307.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="436.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,068 samples, 0.10%)</title><rect x="434.4" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,068 samples, 0.10%)</title><rect x="434.4" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (603 samples, 0.05%)</title><rect x="434.4" y="323.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="437.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (465 samples, 0.04%)</title><rect x="435.1" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (465 samples, 0.04%)</title><rect x="435.1" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (465 samples, 0.04%)</title><rect x="435.1" y="291.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="438.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (389 samples, 0.03%)</title><rect x="435.5" y="371.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="438.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (470 samples, 0.04%)</title><rect x="436.0" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="439.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (493 samples, 0.04%)</title><rect x="436.5" y="371.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="439.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (247 samples, 0.02%)</title><rect x="437.0" y="371.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (247 samples, 0.02%)</title><rect x="437.0" y="355.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="440.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9,057 samples, 0.81%)</title><rect x="437.2" y="371.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$440/1852712216.run (9,057 samples, 0.81%)</title><rect x="437.2" y="355.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (9,057 samples, 0.81%)</title><rect x="437.2" y="339.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,094 samples, 0.10%)</title><rect x="437.2" y="323.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,094 samples, 0.10%)</title><rect x="437.2" y="307.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/358927442.get$Lambda (244 samples, 0.02%)</title><rect x="437.2" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$441 (244 samples, 0.02%)</title><rect x="437.2" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="440.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$443/527689736.get$Lambda (377 samples, 0.03%)</title><rect x="437.5" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$443 (377 samples, 0.03%)</title><rect x="437.5" y="275.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="440.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$450/1661108157.get$Lambda (473 samples, 0.04%)</title><rect x="437.9" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$450 (473 samples, 0.04%)</title><rect x="437.9" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="440.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,138 samples, 0.10%)</title><rect x="438.4" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,138 samples, 0.10%)</title><rect x="438.4" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (639 samples, 0.06%)</title><rect x="438.4" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="441.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (499 samples, 0.04%)</title><rect x="439.1" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (499 samples, 0.04%)</title><rect x="439.1" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (499 samples, 0.04%)</title><rect x="439.1" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="442.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (601 samples, 0.05%)</title><rect x="439.6" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="442.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (491 samples, 0.04%)</title><rect x="440.2" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (491 samples, 0.04%)</title><rect x="440.2" y="307.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="443.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1,487 samples, 0.13%)</title><rect x="440.7" y="323.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1,487 samples, 0.13%)</title><rect x="440.7" y="307.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (361 samples, 0.03%)</title><rect x="440.7" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (361 samples, 0.03%)</title><rect x="440.7" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$454/1351673014.get$Lambda (361 samples, 0.03%)</title><rect x="440.7" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="443.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$454 (361 samples, 0.03%)</title><rect x="440.7" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="443.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,123 samples, 0.10%)</title><rect x="441.1" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,123 samples, 0.10%)</title><rect x="441.1" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,123 samples, 0.10%)</title><rect x="441.1" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (629 samples, 0.06%)</title><rect x="441.1" y="243.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="444.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (494 samples, 0.04%)</title><rect x="441.8" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (494 samples, 0.04%)</title><rect x="441.8" y="227.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (494 samples, 0.04%)</title><rect x="441.8" y="211.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="444.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,503 samples, 0.13%)</title><rect x="442.3" y="323.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,503 samples, 0.13%)</title><rect x="442.3" y="307.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (1,503 samples, 0.13%)</title><rect x="442.3" y="291.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,503 samples, 0.13%)</title><rect x="442.3" y="275.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (411 samples, 0.04%)</title><rect x="442.3" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (411 samples, 0.04%)</title><rect x="442.3" y="243.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="445.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,092 samples, 0.10%)</title><rect x="442.7" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,092 samples, 0.10%)</title><rect x="442.7" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.7" y="254.0"></text>
</g>
<g>
<title>byte[] (1,092 samples, 0.10%)</title><rect x="442.7" y="227.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="445.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2,743 samples, 0.24%)</title><rect x="443.9" y="323.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (886 samples, 0.08%)</title><rect x="443.9" y="307.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="446.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1,857 samples, 0.17%)</title><rect x="444.8" y="307.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,857 samples, 0.17%)</title><rect x="444.8" y="291.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (1,857 samples, 0.17%)</title><rect x="444.8" y="275.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,857 samples, 0.17%)</title><rect x="444.8" y="259.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (393 samples, 0.04%)</title><rect x="444.8" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (393 samples, 0.04%)</title><rect x="444.8" y="227.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="447.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,464 samples, 0.13%)</title><rect x="445.2" y="243.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,464 samples, 0.13%)</title><rect x="445.2" y="227.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.2" y="238.0"></text>
</g>
<g>
<title>byte[] (1,464 samples, 0.13%)</title><rect x="445.2" y="211.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="448.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$371/526674589.apply (993 samples, 0.09%)</title><rect x="446.8" y="451.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (993 samples, 0.09%)</title><rect x="446.8" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (505 samples, 0.05%)</title><rect x="446.8" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (505 samples, 0.05%)</title><rect x="446.8" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.8" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (505 samples, 0.05%)</title><rect x="446.8" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.8" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (505 samples, 0.05%)</title><rect x="446.8" y="371.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="449.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (488 samples, 0.04%)</title><rect x="447.3" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (488 samples, 0.04%)</title><rect x="447.3" y="403.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="450.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (462 samples, 0.04%)</title><rect x="447.8" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (462 samples, 0.04%)</title><rect x="447.8" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$373/1864395379.apply (462 samples, 0.04%)</title><rect x="447.8" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (462 samples, 0.04%)</title><rect x="447.8" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (462 samples, 0.04%)</title><rect x="447.8" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (462 samples, 0.04%)</title><rect x="447.8" y="387.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="450.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.apply (756 samples, 0.07%)</title><rect x="448.3" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (756 samples, 0.07%)</title><rect x="448.3" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (756 samples, 0.07%)</title><rect x="448.3" y="467.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="451.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (26,976 samples, 2.41%)</title><rect x="449.1" y="611.0" width="28.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.1" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,700 samples, 0.15%)</title><rect x="449.1" y="595.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,700 samples, 0.15%)</title><rect x="449.1" y="579.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,700 samples, 0.15%)</title><rect x="449.1" y="563.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,700 samples, 0.15%)</title><rect x="449.1" y="547.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,700 samples, 0.15%)</title><rect x="449.1" y="531.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.1" y="542.0"></text>
</g>
<g>
<title>byte[] (1,700 samples, 0.15%)</title><rect x="449.1" y="515.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="452.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1,131 samples, 0.10%)</title><rect x="450.9" y="595.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,131 samples, 0.10%)</title><rect x="450.9" y="579.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,131 samples, 0.10%)</title><rect x="450.9" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,131 samples, 0.10%)</title><rect x="450.9" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,131 samples, 0.10%)</title><rect x="450.9" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.9" y="542.0"></text>
</g>
<g>
<title>byte[] (1,131 samples, 0.10%)</title><rect x="450.9" y="515.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="453.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2,200 samples, 0.20%)</title><rect x="452.1" y="595.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (373 samples, 0.03%)</title><rect x="452.1" y="579.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="455.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (354 samples, 0.03%)</title><rect x="452.5" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (354 samples, 0.03%)</title><rect x="452.5" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (354 samples, 0.03%)</title><rect x="452.5" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.5" y="558.0"></text>
</g>
<g>
<title>byte[] (354 samples, 0.03%)</title><rect x="452.5" y="531.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="455.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (502 samples, 0.04%)</title><rect x="452.8" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (502 samples, 0.04%)</title><rect x="452.8" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.8" y="574.0"></text>
</g>
<g>
<title>byte[] (502 samples, 0.04%)</title><rect x="452.8" y="547.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="455.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (971 samples, 0.09%)</title><rect x="453.4" y="579.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (971 samples, 0.09%)</title><rect x="453.4" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (366 samples, 0.03%)</title><rect x="453.4" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="456.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (605 samples, 0.05%)</title><rect x="453.8" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.8" y="558.0"></text>
</g>
<g>
<title>byte[] (605 samples, 0.05%)</title><rect x="453.8" y="531.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="456.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6,992 samples, 0.62%)</title><rect x="454.4" y="595.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6,992 samples, 0.62%)</title><rect x="454.4" y="579.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6,992 samples, 0.62%)</title><rect x="454.4" y="563.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.4" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (245 samples, 0.02%)</title><rect x="454.4" y="547.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="457.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (373 samples, 0.03%)</title><rect x="454.7" y="547.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="457.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (793 samples, 0.07%)</title><rect x="455.0" y="547.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="458.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (257 samples, 0.02%)</title><rect x="455.9" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="458.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (473 samples, 0.04%)</title><rect x="456.2" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (473 samples, 0.04%)</title><rect x="456.2" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.get$Lambda (473 samples, 0.04%)</title><rect x="456.2" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.2" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$142 (473 samples, 0.04%)</title><rect x="456.2" y="499.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="459.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (499 samples, 0.04%)</title><rect x="456.7" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.7" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (499 samples, 0.04%)</title><rect x="456.7" y="531.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="459.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3,592 samples, 0.32%)</title><rect x="457.2" y="547.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (3,592 samples, 0.32%)</title><rect x="457.2" y="531.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,592 samples, 0.32%)</title><rect x="457.2" y="515.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (907 samples, 0.08%)</title><rect x="457.2" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (907 samples, 0.08%)</title><rect x="457.2" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (907 samples, 0.08%)</title><rect x="457.2" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (907 samples, 0.08%)</title><rect x="457.2" y="451.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (907 samples, 0.08%)</title><rect x="457.2" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (907 samples, 0.08%)</title><rect x="457.2" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (907 samples, 0.08%)</title><rect x="457.2" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (907 samples, 0.08%)</title><rect x="457.2" y="387.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (907 samples, 0.08%)</title><rect x="457.2" y="371.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="460.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,454 samples, 0.13%)</title><rect x="458.1" y="499.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.1" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,454 samples, 0.13%)</title><rect x="458.1" y="483.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (743 samples, 0.07%)</title><rect x="458.1" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (743 samples, 0.07%)</title><rect x="458.1" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (743 samples, 0.07%)</title><rect x="458.1" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="461.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (711 samples, 0.06%)</title><rect x="458.9" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.9" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (711 samples, 0.06%)</title><rect x="458.9" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="461.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,231 samples, 0.11%)</title><rect x="459.7" y="499.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,231 samples, 0.11%)</title><rect x="459.7" y="483.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="462.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (760 samples, 0.07%)</title><rect x="461.0" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.0" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (760 samples, 0.07%)</title><rect x="461.0" y="531.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="464.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (14,953 samples, 1.33%)</title><rect x="461.8" y="595.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.8" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (723 samples, 0.06%)</title><rect x="461.8" y="579.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="464.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (990 samples, 0.09%)</title><rect x="462.5" y="579.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (990 samples, 0.09%)</title><rect x="462.5" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.5" y="574.0"></text>
</g>
<g>
<title>byte[] (990 samples, 0.09%)</title><rect x="462.5" y="547.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="465.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,024 samples, 0.18%)</title><rect x="463.6" y="579.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,024 samples, 0.18%)</title><rect x="463.6" y="563.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (771 samples, 0.07%)</title><rect x="463.6" y="547.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="466.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,253 samples, 0.11%)</title><rect x="464.4" y="547.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.4" y="558.0"></text>
</g>
<g>
<title>byte[] (1,253 samples, 0.11%)</title><rect x="464.4" y="531.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="467.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (11,216 samples, 1.00%)</title><rect x="465.7" y="579.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,305 samples, 0.29%)</title><rect x="465.7" y="563.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,305 samples, 0.29%)</title><rect x="465.7" y="547.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,424 samples, 0.13%)</title><rect x="465.7" y="531.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="468.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,881 samples, 0.17%)</title><rect x="467.2" y="531.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,881 samples, 0.17%)</title><rect x="467.2" y="515.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="470.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,696 samples, 0.15%)</title><rect x="469.2" y="563.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,696 samples, 0.15%)</title><rect x="469.2" y="547.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.2" y="558.0"></text>
</g>
<g>
<title>byte[] (934 samples, 0.08%)</title><rect x="469.2" y="531.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="472.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (762 samples, 0.07%)</title><rect x="470.2" y="531.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="473.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,597 samples, 0.14%)</title><rect x="471.0" y="563.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,597 samples, 0.14%)</title><rect x="471.0" y="547.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,597 samples, 0.14%)</title><rect x="471.0" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (743 samples, 0.07%)</title><rect x="471.0" y="515.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="474.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (854 samples, 0.08%)</title><rect x="471.7" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.7" y="526.0"></text>
</g>
<g>
<title>byte[] (854 samples, 0.08%)</title><rect x="471.7" y="499.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="474.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,692 samples, 0.15%)</title><rect x="472.6" y="563.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,692 samples, 0.15%)</title><rect x="472.6" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,692 samples, 0.15%)</title><rect x="472.6" y="531.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,692 samples, 0.15%)</title><rect x="472.6" y="515.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,692 samples, 0.15%)</title><rect x="472.6" y="499.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,692 samples, 0.15%)</title><rect x="472.6" y="483.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="475.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,926 samples, 0.26%)</title><rect x="474.4" y="563.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (960 samples, 0.09%)</title><rect x="474.4" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (960 samples, 0.09%)</title><rect x="474.4" y="531.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="477.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,285 samples, 0.11%)</title><rect x="475.4" y="547.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,285 samples, 0.11%)</title><rect x="475.4" y="531.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="478.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$434/1133747825.apply (681 samples, 0.06%)</title><rect x="476.8" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (681 samples, 0.06%)</title><rect x="476.8" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (681 samples, 0.06%)</title><rect x="476.8" y="515.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="479.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (10,148 samples, 0.91%)</title><rect x="477.5" y="723.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,148 samples, 0.91%)</title><rect x="477.5" y="707.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10,148 samples, 0.91%)</title><rect x="477.5" y="691.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (10,148 samples, 0.91%)</title><rect x="477.5" y="675.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10,148 samples, 0.91%)</title><rect x="477.5" y="659.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (9,755 samples, 0.87%)</title><rect x="477.5" y="643.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (646 samples, 0.06%)</title><rect x="477.5" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (646 samples, 0.06%)</title><rect x="477.5" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$339/2104430634.get$Lambda (273 samples, 0.02%)</title><rect x="477.5" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$339 (273 samples, 0.02%)</title><rect x="477.5" y="579.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="480.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1039595485.get$Lambda (373 samples, 0.03%)</title><rect x="477.8" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$343 (373 samples, 0.03%)</title><rect x="477.8" y="579.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="480.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (501 samples, 0.04%)</title><rect x="478.2" y="627.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="481.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (637 samples, 0.06%)</title><rect x="478.7" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (637 samples, 0.06%)</title><rect x="478.7" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (260 samples, 0.02%)</title><rect x="478.7" y="595.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="481.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (377 samples, 0.03%)</title><rect x="479.0" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (377 samples, 0.03%)</title><rect x="479.0" y="579.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="482.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7,971 samples, 0.71%)</title><rect x="479.4" y="627.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (7,971 samples, 0.71%)</title><rect x="479.4" y="611.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/358927442.run (6,726 samples, 0.60%)</title><rect x="479.4" y="595.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (6,726 samples, 0.60%)</title><rect x="479.4" y="579.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (6,726 samples, 0.60%)</title><rect x="479.4" y="563.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,966 samples, 0.18%)</title><rect x="479.4" y="547.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,341 samples, 0.12%)</title><rect x="479.4" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.4" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (484 samples, 0.04%)</title><rect x="479.4" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.4" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (484 samples, 0.04%)</title><rect x="479.4" y="499.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="482.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (857 samples, 0.08%)</title><rect x="479.9" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (857 samples, 0.08%)</title><rect x="479.9" y="499.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="482.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (625 samples, 0.06%)</title><rect x="480.8" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (625 samples, 0.06%)</title><rect x="480.8" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (625 samples, 0.06%)</title><rect x="480.8" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (388 samples, 0.03%)</title><rect x="480.8" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (388 samples, 0.03%)</title><rect x="480.8" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="483.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4,527 samples, 0.40%)</title><rect x="481.7" y="547.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.7" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (342 samples, 0.03%)</title><rect x="481.7" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.7" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (342 samples, 0.03%)</title><rect x="481.7" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (342 samples, 0.03%)</title><rect x="481.7" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (342 samples, 0.03%)</title><rect x="481.7" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.7" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (342 samples, 0.03%)</title><rect x="481.7" y="467.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="484.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4,185 samples, 0.37%)</title><rect x="482.1" y="531.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,558 samples, 0.14%)</title><rect x="482.1" y="515.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (387 samples, 0.03%)</title><rect x="482.1" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (387 samples, 0.03%)</title><rect x="482.1" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (387 samples, 0.03%)</title><rect x="482.1" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (387 samples, 0.03%)</title><rect x="482.1" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (387 samples, 0.03%)</title><rect x="482.1" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.1" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (387 samples, 0.03%)</title><rect x="482.1" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="485.1" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (349 samples, 0.03%)</title><rect x="482.5" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (349 samples, 0.03%)</title><rect x="482.5" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (349 samples, 0.03%)</title><rect x="482.5" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (349 samples, 0.03%)</title><rect x="482.5" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (349 samples, 0.03%)</title><rect x="482.5" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.5" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (349 samples, 0.03%)</title><rect x="482.5" y="419.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="485.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (356 samples, 0.03%)</title><rect x="482.8" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (356 samples, 0.03%)</title><rect x="482.8" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (356 samples, 0.03%)</title><rect x="482.8" y="467.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="485.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (463 samples, 0.04%)</title><rect x="483.2" y="499.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="486.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (924 samples, 0.08%)</title><rect x="483.7" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (546 samples, 0.05%)</title><rect x="483.7" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (546 samples, 0.05%)</title><rect x="483.7" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (546 samples, 0.05%)</title><rect x="483.7" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (546 samples, 0.05%)</title><rect x="483.7" y="451.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="486.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (378 samples, 0.03%)</title><rect x="484.3" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (378 samples, 0.03%)</title><rect x="484.3" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (378 samples, 0.03%)</title><rect x="484.3" y="467.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="487.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,703 samples, 0.15%)</title><rect x="484.7" y="515.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (406 samples, 0.04%)</title><rect x="484.7" y="499.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="487.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,297 samples, 0.12%)</title><rect x="485.1" y="499.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (475 samples, 0.04%)</title><rect x="485.1" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (475 samples, 0.04%)</title><rect x="485.1" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (475 samples, 0.04%)</title><rect x="485.1" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (475 samples, 0.04%)</title><rect x="485.1" y="435.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="488.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (822 samples, 0.07%)</title><rect x="485.6" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (822 samples, 0.07%)</title><rect x="485.6" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (594 samples, 0.05%)</title><rect x="485.6" y="451.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="488.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,245 samples, 0.11%)</title><rect x="486.5" y="595.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,245 samples, 0.11%)</title><rect x="486.5" y="579.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1,245 samples, 0.11%)</title><rect x="486.5" y="563.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,005 samples, 0.09%)</title><rect x="486.5" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,005 samples, 0.09%)</title><rect x="486.5" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,005 samples, 0.09%)</title><rect x="486.5" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,005 samples, 0.09%)</title><rect x="486.5" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$458/9249739.accept (1,005 samples, 0.09%)</title><rect x="486.5" y="483.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1,005 samples, 0.09%)</title><rect x="486.5" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,005 samples, 0.09%)</title><rect x="486.5" y="451.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,005 samples, 0.09%)</title><rect x="486.5" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,005 samples, 0.09%)</title><rect x="486.5" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$467/1200215500.apply (1,005 samples, 0.09%)</title><rect x="486.5" y="403.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1,005 samples, 0.09%)</title><rect x="486.5" y="387.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (1,005 samples, 0.09%)</title><rect x="486.5" y="371.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="489.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (240 samples, 0.02%)</title><rect x="487.5" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.5" y="558.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.02%)</title><rect x="487.5" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="490.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (393 samples, 0.04%)</title><rect x="487.8" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (393 samples, 0.04%)</title><rect x="487.8" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (393 samples, 0.04%)</title><rect x="487.8" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (393 samples, 0.04%)</title><rect x="487.8" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.run (129,811 samples, 11.59%)</title><rect x="488.2" y="755.0" width="136.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.2" y="766.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (129,811 samples, 11.59%)</title><rect x="488.2" y="739.0" width="136.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.2" y="750.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (129,811 samples, 11.59%)</title><rect x="488.2" y="723.0" width="136.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.2" y="734.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15,805 samples, 1.41%)</title><rect x="488.2" y="707.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (15,805 samples, 1.41%)</title><rect x="488.2" y="691.0" width="16.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15,805 samples, 1.41%)</title><rect x="488.2" y="675.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (11,090 samples, 0.99%)</title><rect x="488.2" y="659.0" width="11.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="491.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,715 samples, 0.42%)</title><rect x="499.9" y="659.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.9" y="670.0"></text>
</g>
<g>
<title>byte[] (4,715 samples, 0.42%)</title><rect x="499.9" y="643.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="502.9" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.MetaInfoRequest (12,741 samples, 1.14%)</title><rect x="504.8" y="707.0" width="13.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="507.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (40,893 samples, 3.65%)</title><rect x="518.3" y="707.0" width="43.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.3" y="718.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.substring (12,172 samples, 1.09%)</title><rect x="518.3" y="691.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12,172 samples, 1.09%)</title><rect x="518.3" y="675.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (6,695 samples, 0.60%)</title><rect x="518.3" y="659.0" width="7.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="521.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,477 samples, 0.49%)</title><rect x="525.3" y="659.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.3" y="670.0"></text>
</g>
<g>
<title>byte[] (5,477 samples, 0.49%)</title><rect x="525.3" y="643.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="528.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,303 samples, 1.28%)</title><rect x="531.1" y="691.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,303 samples, 1.28%)</title><rect x="531.1" y="675.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.1" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14,303 samples, 1.28%)</title><rect x="531.1" y="659.0" width="15.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="534.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14,418 samples, 1.29%)</title><rect x="546.1" y="691.0" width="15.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (14,418 samples, 1.29%)</title><rect x="546.1" y="675.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14,418 samples, 1.29%)</title><rect x="546.1" y="659.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (7,130 samples, 0.64%)</title><rect x="546.1" y="643.0" width="7.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="549.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7,288 samples, 0.65%)</title><rect x="553.7" y="643.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.7" y="654.0"></text>
</g>
<g>
<title>byte[] (7,288 samples, 0.65%)</title><rect x="553.7" y="627.0" width="7.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="556.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.upserting (60,372 samples, 5.39%)</title><rect x="561.3" y="707.0" width="63.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.3" y="718.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (396 samples, 0.04%)</title><rect x="561.3" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (396 samples, 0.04%)</title><rect x="561.3" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (396 samples, 0.04%)</title><rect x="561.3" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (396 samples, 0.04%)</title><rect x="561.3" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.3" y="654.0"></text>
</g>
<g>
<title>byte[] (396 samples, 0.04%)</title><rect x="561.3" y="627.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="564.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,402 samples, 0.13%)</title><rect x="561.7" y="691.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,402 samples, 0.13%)</title><rect x="561.7" y="675.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$119/927168992.get$Lambda (431 samples, 0.04%)</title><rect x="561.7" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.7" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$119 (431 samples, 0.04%)</title><rect x="561.7" y="643.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="564.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/2025425731.get$Lambda (414 samples, 0.04%)</title><rect x="562.2" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.2" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$130 (414 samples, 0.04%)</title><rect x="562.2" y="643.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="565.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$136/412513292.get$Lambda (557 samples, 0.05%)</title><rect x="562.6" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.6" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$136 (557 samples, 0.05%)</title><rect x="562.6" y="643.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="565.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (846 samples, 0.08%)</title><rect x="563.2" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (846 samples, 0.08%)</title><rect x="563.2" y="675.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.2" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (846 samples, 0.08%)</title><rect x="563.2" y="659.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="566.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,110 samples, 0.10%)</title><rect x="564.1" y="691.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,110 samples, 0.10%)</title><rect x="564.1" y="675.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (688 samples, 0.06%)</title><rect x="564.1" y="659.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="567.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (422 samples, 0.04%)</title><rect x="564.8" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (422 samples, 0.04%)</title><rect x="564.8" y="643.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="567.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (1,173 samples, 0.10%)</title><rect x="565.3" y="691.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,173 samples, 0.10%)</title><rect x="565.3" y="675.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (733 samples, 0.07%)</title><rect x="565.3" y="659.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="568.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (435 samples, 0.04%)</title><rect x="566.1" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (435 samples, 0.04%)</title><rect x="566.1" y="643.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="569.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,177 samples, 0.11%)</title><rect x="566.5" y="691.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,177 samples, 0.11%)</title><rect x="566.5" y="675.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (717 samples, 0.06%)</title><rect x="566.5" y="659.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="569.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (460 samples, 0.04%)</title><rect x="567.3" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (460 samples, 0.04%)</title><rect x="567.3" y="643.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="570.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (8,139 samples, 0.73%)</title><rect x="567.8" y="691.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.8" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (407 samples, 0.04%)</title><rect x="567.8" y="675.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="570.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1,664 samples, 0.15%)</title><rect x="568.2" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.2" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (402 samples, 0.04%)</title><rect x="568.2" y="659.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.2" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1,262 samples, 0.11%)</title><rect x="568.6" y="659.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (720 samples, 0.06%)</title><rect x="568.6" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.6" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (720 samples, 0.06%)</title><rect x="568.6" y="627.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="571.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (542 samples, 0.05%)</title><rect x="569.4" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.4" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (542 samples, 0.05%)</title><rect x="569.4" y="627.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="572.4" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (280 samples, 0.02%)</title><rect x="569.9" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.9" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (280 samples, 0.02%)</title><rect x="569.9" y="659.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="572.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (966 samples, 0.09%)</title><rect x="570.2" y="675.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (966 samples, 0.09%)</title><rect x="570.2" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (966 samples, 0.09%)</title><rect x="570.2" y="643.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (966 samples, 0.09%)</title><rect x="570.2" y="627.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (966 samples, 0.09%)</title><rect x="570.2" y="611.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (966 samples, 0.09%)</title><rect x="570.2" y="595.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="573.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (868 samples, 0.08%)</title><rect x="571.3" y="675.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (868 samples, 0.08%)</title><rect x="571.3" y="659.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.3" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (868 samples, 0.08%)</title><rect x="571.3" y="643.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="574.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (3,911 samples, 0.35%)</title><rect x="572.2" y="675.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (3,048 samples, 0.27%)</title><rect x="572.2" y="659.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2,473 samples, 0.22%)</title><rect x="572.2" y="643.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2,473 samples, 0.22%)</title><rect x="572.2" y="627.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.2" y="638.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (924 samples, 0.08%)</title><rect x="572.2" y="611.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="575.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1,549 samples, 0.14%)</title><rect x="573.2" y="611.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1,549 samples, 0.14%)</title><rect x="573.2" y="595.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1,549 samples, 0.14%)</title><rect x="573.2" y="579.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,549 samples, 0.14%)</title><rect x="573.2" y="563.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.2" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (862 samples, 0.08%)</title><rect x="573.2" y="547.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="576.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (687 samples, 0.06%)</title><rect x="574.1" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.1" y="558.0"></text>
</g>
<g>
<title>byte[] (687 samples, 0.06%)</title><rect x="574.1" y="531.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="577.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (575 samples, 0.05%)</title><rect x="574.8" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="577.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (575 samples, 0.05%)</title><rect x="574.8" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.8" y="638.0"></text>
</g>
<g>
<title>byte[] (575 samples, 0.05%)</title><rect x="574.8" y="611.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="577.8" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (444 samples, 0.04%)</title><rect x="575.4" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.4" y="670.0"></text>
</g>
<g>
<title>java.lang.Long (444 samples, 0.04%)</title><rect x="575.4" y="643.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="578.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (408 samples, 0.04%)</title><rect x="575.9" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (408 samples, 0.04%)</title><rect x="575.9" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.9" y="654.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (408 samples, 0.04%)</title><rect x="575.9" y="627.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="578.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doUpsert (44,452 samples, 3.97%)</title><rect x="576.3" y="691.0" width="46.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.3" y="702.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6,570 samples, 0.59%)</title><rect x="576.3" y="675.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6,570 samples, 0.59%)</title><rect x="576.3" y="659.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$431/1260245568.get$Lambda (6,570 samples, 0.59%)</title><rect x="576.3" y="643.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.3" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$431 (6,570 samples, 0.59%)</title><rect x="576.3" y="627.0" width="7.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="579.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (18,369 samples, 1.64%)</title><rect x="583.3" y="675.0" width="19.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (18,369 samples, 1.64%)</title><rect x="583.3" y="659.0" width="19.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (11,161 samples, 1.00%)</title><rect x="583.3" y="643.0" width="11.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="586.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (7,208 samples, 0.64%)</title><rect x="595.0" y="643.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (7,208 samples, 0.64%)</title><rect x="595.0" y="627.0" width="7.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="598.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (19,513 samples, 1.74%)</title><rect x="602.6" y="675.0" width="20.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (19,513 samples, 1.74%)</title><rect x="602.6" y="659.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncRun (6,531 samples, 0.58%)</title><rect x="602.6" y="643.0" width="6.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="605.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (5,368 samples, 0.48%)</title><rect x="609.5" y="643.0" width="5.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="612.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7,614 samples, 0.68%)</title><rect x="615.1" y="643.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7,614 samples, 0.68%)</title><rect x="615.1" y="627.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7,581 samples, 0.68%)</title><rect x="615.1" y="611.0" width="8.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="618.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (1,677 samples, 0.15%)</title><rect x="623.1" y="691.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (426 samples, 0.04%)</title><rect x="623.1" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (426 samples, 0.04%)</title><rect x="623.1" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$122/964985208.get$Lambda (426 samples, 0.04%)</title><rect x="623.1" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.1" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$122 (426 samples, 0.04%)</title><rect x="623.1" y="627.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="626.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,251 samples, 0.11%)</title><rect x="623.6" y="675.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,251 samples, 0.11%)</title><rect x="623.6" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (406 samples, 0.04%)</title><rect x="623.6" y="643.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="626.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (402 samples, 0.04%)</title><rect x="624.0" y="643.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="627.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (443 samples, 0.04%)</title><rect x="624.4" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (443 samples, 0.04%)</title><rect x="624.4" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (441 samples, 0.04%)</title><rect x="624.4" y="611.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="627.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (8,452 samples, 0.75%)</title><rect x="624.9" y="803.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (8,452 samples, 0.75%)</title><rect x="624.9" y="787.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (8,452 samples, 0.75%)</title><rect x="624.9" y="771.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (8,452 samples, 0.75%)</title><rect x="624.9" y="755.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (8,452 samples, 0.75%)</title><rect x="624.9" y="739.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (8,452 samples, 0.75%)</title><rect x="624.9" y="723.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8,452 samples, 0.75%)</title><rect x="624.9" y="707.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8,265 samples, 0.74%)</title><rect x="625.1" y="691.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$219/958209831.accept (8,265 samples, 0.74%)</title><rect x="625.1" y="675.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (8,265 samples, 0.74%)</title><rect x="625.1" y="659.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,091 samples, 0.28%)</title><rect x="625.1" y="643.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,091 samples, 0.28%)</title><rect x="625.1" y="627.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,091 samples, 0.28%)</title><rect x="625.1" y="611.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,091 samples, 0.28%)</title><rect x="625.1" y="595.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3,091 samples, 0.28%)</title><rect x="625.1" y="579.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3,091 samples, 0.28%)</title><rect x="625.1" y="563.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3,091 samples, 0.28%)</title><rect x="625.1" y="547.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3,056 samples, 0.27%)</title><rect x="625.1" y="531.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="628.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (5,174 samples, 0.46%)</title><rect x="628.4" y="643.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5,174 samples, 0.46%)</title><rect x="628.4" y="627.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.4" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (5,174 samples, 0.46%)</title><rect x="628.4" y="611.0" width="5.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="631.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (20,355 samples, 1.82%)</title><rect x="633.8" y="803.0" width="21.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.8" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (484 samples, 0.04%)</title><rect x="633.8" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (484 samples, 0.04%)</title><rect x="633.8" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$378/1494430800.get$Lambda (370 samples, 0.03%)</title><rect x="633.8" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$378 (370 samples, 0.03%)</title><rect x="633.8" y="739.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="636.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (539 samples, 0.05%)</title><rect x="634.3" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (539 samples, 0.05%)</title><rect x="634.3" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$379/1036176339.get$Lambda (539 samples, 0.05%)</title><rect x="634.3" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$379 (539 samples, 0.05%)</title><rect x="634.3" y="739.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="637.3" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5,508 samples, 0.49%)</title><rect x="634.9" y="787.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/874005815.accept (4,562 samples, 0.41%)</title><rect x="634.9" y="771.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (4,562 samples, 0.41%)</title><rect x="634.9" y="755.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (4,562 samples, 0.41%)</title><rect x="634.9" y="739.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (4,562 samples, 0.41%)</title><rect x="634.9" y="723.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (4,562 samples, 0.41%)</title><rect x="634.9" y="707.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (4,562 samples, 0.41%)</title><rect x="634.9" y="691.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,562 samples, 0.41%)</title><rect x="634.9" y="675.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,562 samples, 0.41%)</title><rect x="634.9" y="659.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,562 samples, 0.41%)</title><rect x="634.9" y="643.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4,562 samples, 0.41%)</title><rect x="634.9" y="627.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (4,562 samples, 0.41%)</title><rect x="634.9" y="611.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (4,562 samples, 0.41%)</title><rect x="634.9" y="595.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,083 samples, 0.10%)</title><rect x="634.9" y="579.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1,083 samples, 0.10%)</title><rect x="634.9" y="563.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1,083 samples, 0.10%)</title><rect x="634.9" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (560 samples, 0.05%)</title><rect x="634.9" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (560 samples, 0.05%)</title><rect x="634.9" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (560 samples, 0.05%)</title><rect x="634.9" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (560 samples, 0.05%)</title><rect x="634.9" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (560 samples, 0.05%)</title><rect x="634.9" y="467.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="637.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (523 samples, 0.05%)</title><rect x="635.5" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (523 samples, 0.05%)</title><rect x="635.5" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (523 samples, 0.05%)</title><rect x="635.5" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (523 samples, 0.05%)</title><rect x="635.5" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (523 samples, 0.05%)</title><rect x="635.5" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (514 samples, 0.05%)</title><rect x="635.5" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="638.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (378 samples, 0.03%)</title><rect x="636.0" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (378 samples, 0.03%)</title><rect x="636.0" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (378 samples, 0.03%)</title><rect x="636.0" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398/1871476137.get$Lambda (378 samples, 0.03%)</title><rect x="636.0" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398 (378 samples, 0.03%)</title><rect x="636.0" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="639.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3,099 samples, 0.28%)</title><rect x="636.4" y="579.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,705 samples, 0.15%)</title><rect x="636.4" y="563.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,137 samples, 0.10%)</title><rect x="636.4" y="547.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,137 samples, 0.10%)</title><rect x="636.4" y="531.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="639.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (568 samples, 0.05%)</title><rect x="637.6" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.6" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (568 samples, 0.05%)</title><rect x="637.6" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.6" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (568 samples, 0.05%)</title><rect x="637.6" y="515.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="640.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1,394 samples, 0.12%)</title><rect x="638.2" y="563.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$251/888933062.get (1,394 samples, 0.12%)</title><rect x="638.2" y="547.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1,394 samples, 0.12%)</title><rect x="638.2" y="531.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,394 samples, 0.12%)</title><rect x="638.2" y="515.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,386 samples, 0.12%)</title><rect x="638.2" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.2" y="510.0"></text>
</g>
<g>
<title>byte[] (1,344 samples, 0.12%)</title><rect x="638.3" y="483.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1942835848.accept (946 samples, 0.08%)</title><rect x="639.7" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (946 samples, 0.08%)</title><rect x="639.7" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$379/1036176339.run (946 samples, 0.08%)</title><rect x="639.7" y="739.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (946 samples, 0.08%)</title><rect x="639.7" y="723.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (946 samples, 0.08%)</title><rect x="639.7" y="707.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (946 samples, 0.08%)</title><rect x="639.7" y="691.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (946 samples, 0.08%)</title><rect x="639.7" y="675.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.7" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (946 samples, 0.08%)</title><rect x="639.7" y="659.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="642.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (686 samples, 0.06%)</title><rect x="640.7" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.7" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (686 samples, 0.06%)</title><rect x="640.7" y="771.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="643.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1,108 samples, 0.10%)</title><rect x="641.4" y="787.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (560 samples, 0.05%)</title><rect x="641.4" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (560 samples, 0.05%)</title><rect x="641.4" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (560 samples, 0.05%)</title><rect x="641.4" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (560 samples, 0.05%)</title><rect x="641.4" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (560 samples, 0.05%)</title><rect x="641.4" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (560 samples, 0.05%)</title><rect x="641.4" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (560 samples, 0.05%)</title><rect x="641.4" y="675.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="644.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (548 samples, 0.05%)</title><rect x="642.0" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (548 samples, 0.05%)</title><rect x="642.0" y="755.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="645.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (3,748 samples, 0.33%)</title><rect x="642.6" y="787.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$271/848948697.run (1,859 samples, 0.17%)</title><rect x="642.6" y="771.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (1,859 samples, 0.17%)</title><rect x="642.6" y="755.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,859 samples, 0.17%)</title><rect x="642.6" y="739.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,859 samples, 0.17%)</title><rect x="642.6" y="723.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,859 samples, 0.17%)</title><rect x="642.6" y="707.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,859 samples, 0.17%)</title><rect x="642.6" y="691.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (1,859 samples, 0.17%)</title><rect x="642.6" y="675.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,859 samples, 0.17%)</title><rect x="642.6" y="659.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1,859 samples, 0.17%)</title><rect x="642.6" y="643.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,859 samples, 0.17%)</title><rect x="642.6" y="627.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1,293 samples, 0.12%)</title><rect x="642.6" y="611.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,293 samples, 0.12%)</title><rect x="642.6" y="595.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,293 samples, 0.12%)</title><rect x="642.6" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (912 samples, 0.08%)</title><rect x="642.6" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (912 samples, 0.08%)</title><rect x="642.6" y="547.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (912 samples, 0.08%)</title><rect x="642.6" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (912 samples, 0.08%)</title><rect x="642.6" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (912 samples, 0.08%)</title><rect x="642.6" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.6" y="510.0"></text>
</g>
<g>
<title>byte[] (912 samples, 0.08%)</title><rect x="642.6" y="483.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="645.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (381 samples, 0.03%)</title><rect x="643.5" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (381 samples, 0.03%)</title><rect x="643.5" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (381 samples, 0.03%)</title><rect x="643.5" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398/1871476137.get$Lambda (381 samples, 0.03%)</title><rect x="643.5" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398 (381 samples, 0.03%)</title><rect x="643.5" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="646.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (566 samples, 0.05%)</title><rect x="643.9" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (566 samples, 0.05%)</title><rect x="643.9" y="595.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (566 samples, 0.05%)</title><rect x="643.9" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (566 samples, 0.05%)</title><rect x="643.9" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (566 samples, 0.05%)</title><rect x="643.9" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (566 samples, 0.05%)</title><rect x="643.9" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (559 samples, 0.05%)</title><rect x="643.9" y="515.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="646.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/525677631.run (1,889 samples, 0.17%)</title><rect x="644.5" y="771.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,889 samples, 0.17%)</title><rect x="644.5" y="755.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (775 samples, 0.07%)</title><rect x="644.5" y="739.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (775 samples, 0.07%)</title><rect x="644.5" y="723.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$394/1798067653.get$Lambda (775 samples, 0.07%)</title><rect x="644.5" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.5" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$394 (775 samples, 0.07%)</title><rect x="644.5" y="691.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="647.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,114 samples, 0.10%)</title><rect x="645.4" y="739.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,114 samples, 0.10%)</title><rect x="645.4" y="723.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,114 samples, 0.10%)</title><rect x="645.4" y="707.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,109 samples, 0.10%)</title><rect x="645.4" y="691.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="648.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,468 samples, 0.22%)</title><rect x="646.5" y="787.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (380 samples, 0.03%)</title><rect x="646.5" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.5" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (380 samples, 0.03%)</title><rect x="646.5" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.5" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (380 samples, 0.03%)</title><rect x="646.5" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.5" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (380 samples, 0.03%)</title><rect x="646.5" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.5" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (380 samples, 0.03%)</title><rect x="646.5" y="707.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="649.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,088 samples, 0.19%)</title><rect x="646.9" y="771.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (289 samples, 0.03%)</title><rect x="646.9" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (289 samples, 0.03%)</title><rect x="646.9" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$482/1079468707.get$Lambda (289 samples, 0.03%)</title><rect x="646.9" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.9" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$482 (289 samples, 0.03%)</title><rect x="646.9" y="707.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="649.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (510 samples, 0.05%)</title><rect x="647.2" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.2" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (510 samples, 0.05%)</title><rect x="647.2" y="739.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="650.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (245 samples, 0.02%)</title><rect x="647.8" y="755.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.8" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (245 samples, 0.02%)</title><rect x="647.8" y="739.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.8" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (245 samples, 0.02%)</title><rect x="647.8" y="723.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="650.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,044 samples, 0.09%)</title><rect x="648.0" y="755.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (465 samples, 0.04%)</title><rect x="648.0" y="739.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="651.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (579 samples, 0.05%)</title><rect x="648.5" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (579 samples, 0.05%)</title><rect x="648.5" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.5" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (579 samples, 0.05%)</title><rect x="648.5" y="707.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="651.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3,935 samples, 0.35%)</title><rect x="649.1" y="787.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (361 samples, 0.03%)</title><rect x="649.1" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (361 samples, 0.03%)</title><rect x="649.1" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$377/847739542.get$Lambda (361 samples, 0.03%)</title><rect x="649.1" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.1" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$377 (361 samples, 0.03%)</title><rect x="649.1" y="723.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="652.1" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,099 samples, 0.19%)</title><rect x="649.5" y="771.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (865 samples, 0.08%)</title><rect x="649.5" y="755.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="652.5" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (865 samples, 0.08%)</title><rect x="649.5" y="739.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="652.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,234 samples, 0.11%)</title><rect x="650.4" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.4" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,234 samples, 0.11%)</title><rect x="650.4" y="739.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="653.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,475 samples, 0.13%)</title><rect x="651.7" y="771.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.7" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,475 samples, 0.13%)</title><rect x="651.7" y="755.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="654.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1,084 samples, 0.10%)</title><rect x="653.3" y="787.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,084 samples, 0.10%)</title><rect x="653.3" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,084 samples, 0.10%)</title><rect x="653.3" y="755.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,084 samples, 0.10%)</title><rect x="653.3" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (426 samples, 0.04%)</title><rect x="653.3" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.3" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (426 samples, 0.04%)</title><rect x="653.3" y="707.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="656.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (658 samples, 0.06%)</title><rect x="653.7" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (658 samples, 0.06%)</title><rect x="653.7" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (658 samples, 0.06%)</title><rect x="653.7" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (658 samples, 0.06%)</title><rect x="653.7" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (658 samples, 0.06%)</title><rect x="653.7" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (658 samples, 0.06%)</title><rect x="653.7" y="643.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="656.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (503 samples, 0.04%)</title><rect x="654.4" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (503 samples, 0.04%)</title><rect x="654.4" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (503 samples, 0.04%)</title><rect x="654.4" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (503 samples, 0.04%)</title><rect x="654.4" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (407 samples, 0.04%)</title><rect x="654.4" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.4" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (407 samples, 0.04%)</title><rect x="654.4" y="707.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="657.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (292 samples, 0.03%)</title><rect x="654.9" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (292 samples, 0.03%)</title><rect x="654.9" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (292 samples, 0.03%)</title><rect x="654.9" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.9" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (292 samples, 0.03%)</title><rect x="654.9" y="739.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="657.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (507,731 samples, 45.32%)</title><rect x="655.3" y="803.0" width="534.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.3" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (26,729 samples, 2.39%)</title><rect x="655.3" y="787.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.3" y="798.0">on..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (26,729 samples, 2.39%)</title><rect x="655.3" y="771.0" width="28.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="658.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (481,002 samples, 42.93%)</title><rect x="683.4" y="787.0" width="506.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.4" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (481,002 samples, 42.93%)</title><rect x="683.4" y="771.0" width="506.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.4" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (481,002 samples, 42.93%)</title><rect x="683.4" y="755.0" width="506.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.4" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (199,221 samples, 17.78%)</title><rect x="683.4" y="739.0" width="209.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.4" y="750.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (199,221 samples, 17.78%)</title><rect x="683.4" y="723.0" width="209.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.4" y="734.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (180,576 samples, 16.12%)</title><rect x="683.4" y="707.0" width="190.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.4" y="718.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15,133 samples, 1.35%)</title><rect x="683.4" y="691.0" width="15.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (15,133 samples, 1.35%)</title><rect x="683.4" y="675.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15,133 samples, 1.35%)</title><rect x="683.4" y="659.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String (7,714 samples, 0.69%)</title><rect x="683.4" y="643.0" width="8.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="686.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7,419 samples, 0.66%)</title><rect x="691.5" y="643.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.5" y="654.0"></text>
</g>
<g>
<title>byte[] (7,419 samples, 0.66%)</title><rect x="691.5" y="627.0" width="7.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="694.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (165,443 samples, 14.77%)</title><rect x="699.3" y="691.0" width="174.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.3" y="702.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (14,413 samples, 1.29%)</title><rect x="699.3" y="675.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8,202 samples, 0.73%)</title><rect x="699.3" y="659.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8,202 samples, 0.73%)</title><rect x="699.3" y="643.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.get$Lambda (8,202 samples, 0.73%)</title><rect x="699.3" y="627.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.3" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$110 (8,202 samples, 0.73%)</title><rect x="699.3" y="611.0" width="8.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="702.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6,211 samples, 0.55%)</title><rect x="708.0" y="659.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6,211 samples, 0.55%)</title><rect x="708.0" y="643.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (6,068 samples, 0.54%)</title><rect x="708.0" y="627.0" width="6.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="711.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (151,030 samples, 13.48%)</title><rect x="714.5" y="675.0" width="159.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.5" y="686.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/util/Set.copyOf (151,030 samples, 13.48%)</title><rect x="714.5" y="659.0" width="159.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.5" y="670.0">java/util/Set.copyOf</text>
</g>
<g>
<title>java.util.HashSet (4,945 samples, 0.44%)</title><rect x="714.5" y="643.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="717.5" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (27,878 samples, 2.49%)</title><rect x="719.7" y="643.0" width="29.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.7" y="654.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (9,298 samples, 0.83%)</title><rect x="719.7" y="627.0" width="9.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="722.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (18,580 samples, 1.66%)</title><rect x="729.5" y="627.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12,540 samples, 1.12%)</title><rect x="729.5" y="611.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.5" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12,540 samples, 1.12%)</title><rect x="729.5" y="595.0" width="13.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="732.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (6,040 samples, 0.54%)</title><rect x="742.7" y="611.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.7" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (6,040 samples, 0.54%)</title><rect x="742.7" y="595.0" width="6.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="745.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (98,221 samples, 8.77%)</title><rect x="749.1" y="643.0" width="103.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.1" y="654.0">java/util/Ha..</text>
</g>
<g>
<title>java.util.HashMap (13,238 samples, 1.18%)</title><rect x="749.1" y="627.0" width="13.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="752.1" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (84,983 samples, 7.59%)</title><rect x="763.0" y="627.0" width="89.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="766.0" y="638.0">java/util/..</text>
</g>
<g>
<title>java/util/HashSet.add (74,571 samples, 6.66%)</title><rect x="763.0" y="611.0" width="78.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.0" y="622.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap.put (74,571 samples, 6.66%)</title><rect x="763.0" y="595.0" width="78.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.0" y="606.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap.putVal (74,571 samples, 6.66%)</title><rect x="763.0" y="579.0" width="78.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="766.0" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap.newNode (47,758 samples, 4.26%)</title><rect x="763.0" y="563.0" width="50.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.0" y="574.0">java/..</text>
</g>
<g>
<title>java.util.HashMap$Node (47,758 samples, 4.26%)</title><rect x="763.0" y="547.0" width="50.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="766.0" y="558.0">java...</text>
</g>
<g>
<title>java/util/HashMap.resize (26,813 samples, 2.39%)</title><rect x="813.3" y="563.0" width="28.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.3" y="574.0">ja..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (16,148 samples, 1.44%)</title><rect x="813.3" y="547.0" width="17.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="816.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (10,665 samples, 0.95%)</title><rect x="830.3" y="547.0" width="11.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (10,412 samples, 0.93%)</title><rect x="841.6" y="611.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (10,412 samples, 0.93%)</title><rect x="841.6" y="595.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (10,412 samples, 0.93%)</title><rect x="841.6" y="579.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.6" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (10,412 samples, 0.93%)</title><rect x="841.6" y="563.0" width="10.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="844.6" y="574.0"></text>
</g>
<g>
<title>java/util/Set.of (19,986 samples, 1.78%)</title><rect x="852.5" y="643.0" width="21.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.5" y="654.0">j..</text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (6,084 samples, 0.54%)</title><rect x="852.5" y="627.0" width="6.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="855.5" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (13,902 samples, 1.24%)</title><rect x="858.9" y="627.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.9" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (13,902 samples, 1.24%)</title><rect x="858.9" y="611.0" width="14.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="861.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18,645 samples, 1.66%)</title><rect x="873.6" y="707.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (18,645 samples, 1.66%)</title><rect x="873.6" y="691.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18,645 samples, 1.66%)</title><rect x="873.6" y="675.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (6,936 samples, 0.62%)</title><rect x="873.6" y="659.0" width="7.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="876.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11,709 samples, 1.05%)</title><rect x="880.9" y="659.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.9" y="670.0"></text>
</g>
<g>
<title>byte[] (11,709 samples, 1.05%)</title><rect x="880.9" y="643.0" width="12.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="883.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (85,955 samples, 7.67%)</title><rect x="893.2" y="739.0" width="90.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.2" y="750.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (10,617 samples, 0.95%)</title><rect x="893.2" y="723.0" width="11.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="896.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29,102 samples, 2.60%)</title><rect x="904.4" y="723.0" width="30.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.4" y="734.0">on..</text>
</g>
<g>
<title>java.lang.String[] (14,794 samples, 1.32%)</title><rect x="904.4" y="707.0" width="15.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="907.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (14,308 samples, 1.28%)</title><rect x="920.0" y="707.0" width="15.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="923.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46,236 samples, 4.13%)</title><rect x="935.1" y="723.0" width="48.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.1" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (46,236 samples, 4.13%)</title><rect x="935.1" y="707.0" width="48.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.1" y="718.0">one/..</text>
</g>
<g>
<title>char[] (21,347 samples, 1.91%)</title><rect x="935.1" y="691.0" width="22.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="938.1" y="702.0">c..</text>
</g>
<g>
<title>char[] (3,145 samples, 0.28%)</title><rect x="957.5" y="691.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (8,097 samples, 0.72%)</title><rect x="960.9" y="691.0" width="8.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="963.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,647 samples, 1.22%)</title><rect x="969.4" y="691.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,647 samples, 1.22%)</title><rect x="969.4" y="675.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13,647 samples, 1.22%)</title><rect x="969.4" y="659.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.4" y="670.0"></text>
</g>
<g>
<title>byte[] (13,647 samples, 1.22%)</title><rect x="969.4" y="643.0" width="14.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="972.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14,035 samples, 1.25%)</title><rect x="983.8" y="739.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.8" y="750.0"></text>
</g>
<g>
<title>byte[] (14,035 samples, 1.25%)</title><rect x="983.8" y="723.0" width="14.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="986.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12,405 samples, 1.11%)</title><rect x="998.5" y="739.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (12,405 samples, 1.11%)</title><rect x="998.5" y="723.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12,405 samples, 1.11%)</title><rect x="998.5" y="707.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (4,261 samples, 0.38%)</title><rect x="998.5" y="691.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1001.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8,144 samples, 0.73%)</title><rect x="1003.0" y="691.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.0" y="702.0"></text>
</g>
<g>
<title>byte[] (8,144 samples, 0.73%)</title><rect x="1003.0" y="675.0" width="8.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1006.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (169,386 samples, 15.12%)</title><rect x="1011.6" y="739.0" width="178.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1014.6" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (169,386 samples, 15.12%)</title><rect x="1011.6" y="723.0" width="178.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.6" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (59,213 samples, 5.29%)</title><rect x="1011.6" y="707.0" width="62.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1014.6" y="718.0">char[]</text>
</g>
<g>
<title>char[] (17,164 samples, 1.53%)</title><rect x="1074.0" y="707.0" width="18.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1077.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (40,585 samples, 3.62%)</title><rect x="1092.0" y="707.0" width="42.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1095.0" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52,424 samples, 4.68%)</title><rect x="1134.8" y="707.0" width="55.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.8" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52,424 samples, 4.68%)</title><rect x="1134.8" y="691.0" width="55.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.8" y="702.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (52,424 samples, 4.68%)</title><rect x="1134.8" y="675.0" width="55.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.8" y="686.0">java/..</text>
</g>
<g>
<title>byte[] (49,790 samples, 4.44%)</title><rect x="1134.8" y="659.0" width="52.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1137.8" y="670.0">byte[]</text>
</g>
<g>
<title>byte[] (2,634 samples, 0.24%)</title><rect x="1187.2" y="659.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.2" y="670.0"></text>
</g>
</g>
</svg>
