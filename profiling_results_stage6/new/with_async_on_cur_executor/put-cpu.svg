<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1221"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1221"> </text>
<g id="frames">
<g>
<title>all (17,214 samples, 100.00%)</title><rect x="10.0" y="1187.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1198.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (9 samples, 0.05%)</title><rect x="10.0" y="1171.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (7 samples, 0.04%)</title><rect x="10.8" y="1171.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="1182.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (4 samples, 0.02%)</title><rect x="11.0" y="1155.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="1166.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (7 samples, 0.04%)</title><rect x="11.3" y="1171.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.3" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.04%)</title><rect x="11.3" y="1155.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.3" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (7 samples, 0.04%)</title><rect x="11.3" y="1139.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.3" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.03%)</title><rect x="11.4" y="1123.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.4" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.03%)</title><rect x="11.4" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.4" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (201 samples, 1.17%)</title><rect x="11.8" y="1171.0" width="13.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.8" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (199 samples, 1.16%)</title><rect x="11.9" y="1155.0" width="13.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.9" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (196 samples, 1.14%)</title><rect x="12.0" y="1139.0" width="13.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.0" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (184 samples, 1.07%)</title><rect x="12.5" y="1123.0" width="12.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.5" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (136 samples, 0.79%)</title><rect x="12.8" y="1107.0" width="9.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.8" y="1118.0"></text>
</g>
<g>
<title>SpinPause (23 samples, 0.13%)</title><rect x="22.1" y="1107.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="25.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (16 samples, 0.09%)</title><rect x="23.7" y="1107.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="26.7" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="24.3" y="1091.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.3" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="24.3" y="1075.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="27.3" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="24.4" y="1059.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.4" y="1070.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="24.4" y="1043.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="27.4" y="1054.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="24.4" y="1027.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="27.4" y="1038.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (4 samples, 0.02%)</title><rect x="24.8" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.8" y="1118.0"></text>
</g>
<g>
<title>[no_Java_frame] (53 samples, 0.31%)</title><rect x="25.6" y="1171.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="28.6" y="1182.0"></text>
</g>
<g>
<title>[not_walkable_Java] (26 samples, 0.15%)</title><rect x="29.3" y="1171.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="32.3" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (14 samples, 0.08%)</title><rect x="29.3" y="1155.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.3" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (14 samples, 0.08%)</title><rect x="29.3" y="1139.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.3" y="1150.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.02%)</title><rect x="29.4" y="1123.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.4" y="1134.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (9 samples, 0.05%)</title><rect x="29.7" y="1123.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.7" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="30.5" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="33.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 0.58%)</title><rect x="31.0" y="1171.0" width="6.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.0" y="1182.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (32 samples, 0.19%)</title><rect x="31.0" y="1155.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.0" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (26 samples, 0.15%)</title><rect x="33.4" y="1155.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="36.4" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="34.5" y="1139.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="34.5" y="1123.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="34.7" y="1107.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.7" y="1118.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="34.7" y="1091.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="37.7" y="1102.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="34.8" y="1075.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="37.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.02%)</title><rect x="35.2" y="1155.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="38.2" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.02%)</title><rect x="35.6" y="1155.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="38.6" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (26 samples, 0.15%)</title><rect x="35.9" y="1155.0" width="1.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="38.9" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.08%)</title><rect x="36.7" y="1139.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="39.7" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="36.7" y="1123.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="39.7" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="36.9" y="1107.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="39.9" y="1118.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="36.9" y="1091.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.9" y="1102.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.06%)</title><rect x="36.9" y="1075.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="39.9" y="1086.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.03%)</title><rect x="37.0" y="1059.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.0" y="1070.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (5 samples, 0.03%)</title><rect x="37.0" y="1043.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="40.0" y="1054.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.02%)</title><rect x="37.0" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.0" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="37.0" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="40.0" y="1022.0"></text>
</g>
<g>
<title>[unknown_Java] (112 samples, 0.65%)</title><rect x="37.8" y="1171.0" width="7.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="40.8" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (85 samples, 0.49%)</title><rect x="38.8" y="1155.0" width="5.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="41.8" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 0.41%)</title><rect x="39.8" y="1139.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.8" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (70 samples, 0.41%)</title><rect x="39.8" y="1123.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="42.8" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (65 samples, 0.38%)</title><rect x="40.0" y="1107.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="43.0" y="1118.0"></text>
</g>
<g>
<title>do_futex (65 samples, 0.38%)</title><rect x="40.0" y="1091.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.0" y="1102.0"></text>
</g>
<g>
<title>futex_wake (60 samples, 0.35%)</title><rect x="40.2" y="1075.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="43.2" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (56 samples, 0.33%)</title><rect x="40.5" y="1059.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.5" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (55 samples, 0.32%)</title><rect x="40.6" y="1043.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="43.6" y="1054.0"></text>
</g>
<g>
<title>__lock_text_start (54 samples, 0.31%)</title><rect x="40.6" y="1027.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.6" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.06%)</title><rect x="44.6" y="1155.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="47.6" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.02%)</title><rect x="45.0" y="1139.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="48.0" y="1150.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.02%)</title><rect x="45.0" y="1123.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="48.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9,686 samples, 56.27%)</title><rect x="45.9" y="1171.0" width="663.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.9" y="1182.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,686 samples, 56.27%)</title><rect x="45.9" y="1155.0" width="663.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.9" y="1166.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,686 samples, 56.27%)</title><rect x="45.9" y="1139.0" width="663.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.9" y="1150.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (15 samples, 0.09%)</title><rect x="46.7" y="1123.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (14 samples, 0.08%)</title><rect x="46.7" y="1107.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.7" y="1118.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (9 samples, 0.05%)</title><rect x="46.8" y="1091.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="49.8" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (4 samples, 0.02%)</title><rect x="46.9" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="49.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (900 samples, 5.23%)</title><rect x="47.8" y="1123.0" width="61.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.8" y="1134.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$431/1260245568.run (895 samples, 5.20%)</title><rect x="48.1" y="1107.0" width="61.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.1" y="1118.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$11 (895 samples, 5.20%)</title><rect x="48.1" y="1091.0" width="61.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.1" y="1102.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.08%)</title><rect x="48.5" y="1075.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.5" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.08%)</title><rect x="48.5" y="1059.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.5" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="48.7" y="1043.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="48.7" y="1027.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.7" y="1038.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="48.9" y="1043.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="51.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.07%)</title><rect x="49.4" y="1075.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.4" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (180 samples, 1.05%)</title><rect x="50.2" y="1075.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.05%)</title><rect x="50.3" y="1059.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 0.05%)</title><rect x="50.3" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.05%)</title><rect x="50.4" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.03%)</title><rect x="50.4" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.03%)</title><rect x="50.4" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (151 samples, 0.88%)</title><rect x="51.2" y="1059.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (10 samples, 0.06%)</title><rect x="51.6" y="1043.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="52.0" y="1027.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="52.0" y="1011.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (134 samples, 0.78%)</title><rect x="52.4" y="1043.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (134 samples, 0.78%)</title><rect x="52.4" y="1027.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (33 samples, 0.19%)</title><rect x="53.9" y="1011.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (33 samples, 0.19%)</title><rect x="53.9" y="995.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (72 samples, 0.42%)</title><rect x="56.6" y="1011.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (70 samples, 0.41%)</title><rect x="56.8" y="995.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (70 samples, 0.41%)</title><rect x="56.8" y="979.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.8" y="990.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (62 samples, 0.36%)</title><rect x="56.9" y="963.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.9" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="61.1" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (15 samples, 0.09%)</title><rect x="61.5" y="1059.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (14 samples, 0.08%)</title><rect x="61.6" y="1043.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (12 samples, 0.07%)</title><rect x="61.8" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (10 samples, 0.06%)</title><rect x="61.9" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 0.04%)</title><rect x="62.0" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (7 samples, 0.04%)</title><rect x="62.0" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 0.04%)</title><rect x="62.0" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.0" y="974.0"></text>
</g>
<g>
<title>__libc_write (7 samples, 0.04%)</title><rect x="62.0" y="947.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="65.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="62.0" y="931.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="65.0" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="62.0" y="915.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="65.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 0.03%)</title><rect x="62.1" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.1" y="910.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.03%)</title><rect x="62.1" y="883.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.1" y="894.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.02%)</title><rect x="62.2" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="65.2" y="878.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.02%)</title><rect x="62.2" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="65.2" y="862.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.02%)</title><rect x="62.2" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="65.2" y="846.0"></text>
</g>
<g>
<title>ext4_file_write_iter (4 samples, 0.02%)</title><rect x="62.2" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.2" y="830.0"></text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 0.02%)</title><rect x="62.2" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="65.2" y="814.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 0.02%)</title><rect x="62.2" y="787.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="65.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (684 samples, 3.97%)</title><rect x="62.6" y="1075.0" width="46.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.6" y="1086.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (684 samples, 3.97%)</title><rect x="62.6" y="1059.0" width="46.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.6" y="1070.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.04%)</title><rect x="63.1" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.04%)</title><rect x="63.1" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.04%)</title><rect x="63.1" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (659 samples, 3.83%)</title><rect x="63.6" y="1043.0" width="45.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.6" y="1054.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (40 samples, 0.23%)</title><rect x="63.6" y="1027.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="64.1" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (27 samples, 0.16%)</title><rect x="64.4" y="1011.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.05%)</title><rect x="64.6" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (17 samples, 0.10%)</title><rect x="65.1" y="995.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.09%)</title><rect x="65.2" y="979.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.2" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.09%)</title><rect x="65.2" y="963.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.2" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (619 samples, 3.60%)</title><rect x="66.3" y="1027.0" width="42.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.3" y="1038.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (614 samples, 3.57%)</title><rect x="66.7" y="1011.0" width="42.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.7" y="1022.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (612 samples, 3.56%)</title><rect x="66.8" y="995.0" width="41.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.8" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (609 samples, 3.54%)</title><rect x="67.0" y="979.0" width="41.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.0" y="990.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (32 samples, 0.19%)</title><rect x="67.4" y="963.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="70.4" y="974.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.03%)</title><rect x="68.1" y="947.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="71.1" y="958.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.08%)</title><rect x="68.5" y="947.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="71.5" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (9 samples, 0.05%)</title><rect x="68.9" y="931.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="71.9" y="942.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.04%)</title><rect x="69.0" y="915.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="72.0" y="926.0"></text>
</g>
<g>
<title>__send (568 samples, 3.30%)</title><rect x="69.6" y="963.0" width="39.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="72.6" y="974.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (535 samples, 3.11%)</title><rect x="71.9" y="947.0" width="36.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.9" y="958.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (534 samples, 3.10%)</title><rect x="72.0" y="931.0" width="36.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="75.0" y="942.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (521 samples, 3.03%)</title><rect x="72.9" y="915.0" width="35.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.9" y="926.0">__x..</text>
</g>
<g>
<title>__sys_sendto (519 samples, 3.01%)</title><rect x="72.9" y="899.0" width="35.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="75.9" y="910.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (508 samples, 2.95%)</title><rect x="73.1" y="883.0" width="34.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.1" y="894.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (501 samples, 2.91%)</title><rect x="73.3" y="867.0" width="34.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.3" y="878.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (499 samples, 2.90%)</title><rect x="73.3" y="851.0" width="34.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.3" y="862.0">tc..</text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.03%)</title><rect x="73.3" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.3" y="846.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.03%)</title><rect x="74.0" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.0" y="846.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (481 samples, 2.79%)</title><rect x="74.4" y="835.0" width="33.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="77.4" y="846.0">tc..</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.03%)</title><rect x="74.9" y="819.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.9" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.02%)</title><rect x="75.1" y="803.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="78.1" y="814.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.02%)</title><rect x="75.5" y="819.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.5" y="830.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7 samples, 0.04%)</title><rect x="75.8" y="819.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.8" y="830.0"></text>
</g>
<g>
<title>skb_page_frag_refill (7 samples, 0.04%)</title><rect x="75.8" y="803.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="78.8" y="814.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.20%)</title><rect x="76.3" y="819.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.3" y="830.0"></text>
</g>
<g>
<title>__alloc_skb (32 samples, 0.19%)</title><rect x="76.4" y="803.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.4" y="814.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (15 samples, 0.09%)</title><rect x="76.6" y="787.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.6" y="798.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.04%)</title><rect x="76.6" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.6" y="782.0"></text>
</g>
<g>
<title>memset_erms (7 samples, 0.04%)</title><rect x="77.1" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.1" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.04%)</title><rect x="77.7" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="80.7" y="798.0"></text>
</g>
<g>
<title>tcp_push (403 samples, 2.34%)</title><rect x="78.8" y="819.0" width="27.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.8" y="830.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (403 samples, 2.34%)</title><rect x="78.8" y="803.0" width="27.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="81.8" y="814.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (398 samples, 2.31%)</title><rect x="79.2" y="787.0" width="27.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.2" y="798.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (361 samples, 2.10%)</title><rect x="79.9" y="771.0" width="24.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="82.9" y="782.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (342 samples, 1.99%)</title><rect x="80.7" y="755.0" width="23.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.7" y="766.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (342 samples, 1.99%)</title><rect x="80.7" y="739.0" width="23.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="83.7" y="750.0">_..</text>
</g>
<g>
<title>ip_local_out (331 samples, 1.92%)</title><rect x="81.2" y="723.0" width="22.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="84.2" y="734.0">i..</text>
</g>
<g>
<title>__ip_local_out (93 samples, 0.54%)</title><rect x="81.3" y="707.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.3" y="718.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.03%)</title><rect x="81.4" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="84.4" y="702.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.03%)</title><rect x="81.7" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="84.7" y="702.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.02%)</title><rect x="82.0" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.0" y="702.0"></text>
</g>
<g>
<title>nf_hook_slow (77 samples, 0.45%)</title><rect x="82.3" y="691.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="85.3" y="702.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.06%)</title><rect x="82.5" y="675.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.5" y="686.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.06%)</title><rect x="82.5" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.5" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (59 samples, 0.34%)</title><rect x="83.2" y="675.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="86.2" y="686.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (53 samples, 0.31%)</title><rect x="83.5" y="659.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.5" y="670.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (9 samples, 0.05%)</title><rect x="84.0" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.0" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (25 samples, 0.15%)</title><rect x="85.0" y="643.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.0" y="654.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (12 samples, 0.07%)</title><rect x="85.9" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.9" y="638.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (6 samples, 0.03%)</title><rect x="86.3" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.3" y="622.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.02%)</title><rect x="86.7" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="89.7" y="654.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (5 samples, 0.03%)</title><rect x="87.3" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="90.3" y="686.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (4 samples, 0.02%)</title><rect x="87.3" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.3" y="670.0"></text>
</g>
<g>
<title>ip_output (234 samples, 1.36%)</title><rect x="87.7" y="707.0" width="16.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.7" y="718.0"></text>
</g>
<g>
<title>ip_finish_output (220 samples, 1.28%)</title><rect x="88.1" y="691.0" width="15.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.1" y="702.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.02%)</title><rect x="88.6" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.6" y="686.0"></text>
</g>
<g>
<title>__ip_finish_output (208 samples, 1.21%)</title><rect x="88.9" y="675.0" width="14.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.9" y="686.0"></text>
</g>
<g>
<title>ip_finish_output2 (204 samples, 1.19%)</title><rect x="89.1" y="659.0" width="14.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.1" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (177 samples, 1.03%)</title><rect x="89.7" y="643.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.7" y="654.0"></text>
</g>
<g>
<title>do_softirq.part.0 (176 samples, 1.02%)</title><rect x="89.8" y="627.0" width="12.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="92.8" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (173 samples, 1.00%)</title><rect x="90.0" y="611.0" width="11.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="93.0" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (170 samples, 0.99%)</title><rect x="90.0" y="595.0" width="11.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.0" y="606.0"></text>
</g>
<g>
<title>net_rx_action (162 samples, 0.94%)</title><rect x="90.5" y="579.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="93.5" y="590.0"></text>
</g>
<g>
<title>process_backlog (156 samples, 0.91%)</title><rect x="91.0" y="563.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.0" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb (151 samples, 0.88%)</title><rect x="91.2" y="547.0" width="10.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.2" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (149 samples, 0.87%)</title><rect x="91.2" y="531.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.2" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.02%)</title><rect x="91.2" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.2" y="526.0"></text>
</g>
<g>
<title>ip_rcv (145 samples, 0.84%)</title><rect x="91.5" y="515.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.5" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (126 samples, 0.73%)</title><rect x="91.6" y="499.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.6" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver (123 samples, 0.71%)</title><rect x="91.6" y="483.0" width="8.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.6" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (112 samples, 0.65%)</title><rect x="91.8" y="467.0" width="7.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.8" y="478.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (112 samples, 0.65%)</title><rect x="91.8" y="451.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="94.8" y="462.0"></text>
</g>
<g>
<title>sock_put (4 samples, 0.02%)</title><rect x="92.0" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="95.0" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (105 samples, 0.61%)</title><rect x="92.3" y="435.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.3" y="446.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="92.9" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="95.9" y="430.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.03%)</title><rect x="93.4" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="96.4" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (83 samples, 0.48%)</title><rect x="93.8" y="419.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="96.8" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (80 samples, 0.46%)</title><rect x="94.0" y="403.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="97.0" y="414.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (14 samples, 0.08%)</title><rect x="94.7" y="387.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="97.7" y="398.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.07%)</title><rect x="94.8" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="97.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.06%)</title><rect x="94.9" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="97.9" y="366.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.06%)</title><rect x="94.9" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="97.9" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.05%)</title><rect x="94.9" y="323.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="97.9" y="334.0"></text>
</g>
<g>
<title>tcp_data_ready (49 samples, 0.28%)</title><rect x="95.9" y="387.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.9" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (49 samples, 0.28%)</title><rect x="95.9" y="371.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.9" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 0.26%)</title><rect x="96.2" y="355.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.2" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 0.25%)</title><rect x="96.3" y="339.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.3" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (43 samples, 0.25%)</title><rect x="96.3" y="323.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.3" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="100.8" y="499.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.8" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.02%)</title><rect x="101.0" y="483.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="104.0" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.02%)</title><rect x="101.0" y="467.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="104.0" y="478.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.10%)</title><rect x="101.9" y="643.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.9" y="654.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.10%)</title><rect x="101.9" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.9" y="638.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.05%)</title><rect x="102.2" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="105.2" y="622.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.04%)</title><rect x="102.3" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.3" y="606.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.02%)</title><rect x="102.7" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.7" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="103.3" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.3" y="702.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.02%)</title><rect x="104.1" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="107.1" y="766.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.08%)</title><rect x="104.7" y="771.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.7" y="782.0"></text>
</g>
<g>
<title>tcp_rearm_rto (10 samples, 0.06%)</title><rect x="105.0" y="755.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="108.0" y="766.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.06%)</title><rect x="105.0" y="739.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.0" y="750.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.06%)</title><rect x="105.0" y="723.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="108.0" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.05%)</title><rect x="105.1" y="707.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="108.1" y="718.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.02%)</title><rect x="105.9" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="108.9" y="782.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.08%)</title><rect x="106.5" y="819.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.5" y="830.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.06%)</title><rect x="106.7" y="803.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="109.7" y="814.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.03%)</title><rect x="107.6" y="867.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.6" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.04%)</title><rect x="108.0" y="883.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="111.0" y="894.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.03%)</title><rect x="108.0" y="867.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.0" y="878.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="108.0" y="851.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="111.0" y="862.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.03%)</title><rect x="108.0" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.05%)</title><rect x="108.8" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.03%)</title><rect x="109.0" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.03%)</title><rect x="109.0" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,218 samples, 7.08%)</title><rect x="109.5" y="1123.0" width="83.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.5" y="1134.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,124 samples, 6.53%)</title><rect x="110.5" y="1107.0" width="77.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.5" y="1118.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,123 samples, 6.52%)</title><rect x="110.6" y="1091.0" width="76.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.6" y="1102.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.08%)</title><rect x="111.1" y="1075.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.05%)</title><rect x="111.4" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.05%)</title><rect x="111.4" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.03%)</title><rect x="111.5" y="1027.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.02%)</title><rect x="111.5" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="111.5" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.02%)</title><rect x="111.5" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="111.5" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="111.5" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.5" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="111.5" y="931.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="114.5" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="111.5" y="915.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.5" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="111.5" y="899.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.5" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="111.5" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.5" y="894.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="111.5" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.5" y="878.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="111.5" y="851.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/1586761708.apply (1,099 samples, 6.38%)</title><rect x="112.2" y="1075.0" width="75.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.2" y="1086.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,096 samples, 6.37%)</title><rect x="112.4" y="1059.0" width="75.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.4" y="1070.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,095 samples, 6.36%)</title><rect x="112.5" y="1043.0" width="75.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.5" y="1054.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.03%)</title><rect x="113.0" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.03%)</title><rect x="113.0" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,043 samples, 6.06%)</title><rect x="113.4" y="1027.0" width="71.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.4" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,042 samples, 6.05%)</title><rect x="113.4" y="1011.0" width="71.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.4" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,038 samples, 6.03%)</title><rect x="113.7" y="995.0" width="71.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.7" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="114.0" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (534 samples, 3.10%)</title><rect x="114.3" y="979.0" width="36.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.3" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (534 samples, 3.10%)</title><rect x="114.3" y="963.0" width="36.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.3" y="974.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (532 samples, 3.09%)</title><rect x="114.3" y="947.0" width="36.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.3" y="958.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1624614356.apply (532 samples, 3.09%)</title><rect x="114.3" y="931.0" width="36.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.3" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (532 samples, 3.09%)</title><rect x="114.3" y="915.0" width="36.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.3" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (531 samples, 3.08%)</title><rect x="114.4" y="899.0" width="36.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.4" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1690211041.apply (530 samples, 3.08%)</title><rect x="114.5" y="883.0" width="36.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.5" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (530 samples, 3.08%)</title><rect x="114.5" y="867.0" width="36.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.5" y="878.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.03%)</title><rect x="114.6" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.03%)</title><rect x="114.6" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (4 samples, 0.02%)</title><rect x="114.6" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.02%)</title><rect x="114.6" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (4 samples, 0.02%)</title><rect x="114.6" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (4 samples, 0.02%)</title><rect x="114.6" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (522 samples, 3.03%)</title><rect x="115.0" y="851.0" width="35.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.0" y="862.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (430 samples, 2.50%)</title><rect x="115.2" y="835.0" width="29.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.2" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (430 samples, 2.50%)</title><rect x="115.2" y="819.0" width="29.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.2" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (6 samples, 0.03%)</title><rect x="115.4" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.03%)</title><rect x="115.4" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/2119173243.apply (412 samples, 2.39%)</title><rect x="116.3" y="803.0" width="28.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.3" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (411 samples, 2.39%)</title><rect x="116.3" y="787.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.3" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (13 samples, 0.08%)</title><rect x="117.0" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (13 samples, 0.08%)</title><rect x="117.0" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="117.2" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.06%)</title><rect x="117.2" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.04%)</title><rect x="117.4" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.04%)</title><rect x="117.4" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.03%)</title><rect x="117.4" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.02%)</title><rect x="117.6" y="659.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (137 samples, 0.80%)</title><rect x="117.9" y="771.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (137 samples, 0.80%)</title><rect x="117.9" y="755.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (24 samples, 0.14%)</title><rect x="117.9" y="739.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (23 samples, 0.13%)</title><rect x="118.0" y="723.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (23 samples, 0.13%)</title><rect x="118.0" y="707.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.04%)</title><rect x="118.4" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.04%)</title><rect x="118.4" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (4 samples, 0.02%)</title><rect x="118.9" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (5 samples, 0.03%)</title><rect x="119.2" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (111 samples, 0.64%)</title><rect x="119.7" y="739.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (109 samples, 0.63%)</title><rect x="119.8" y="723.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (4 samples, 0.02%)</title><rect x="119.9" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.02%)</title><rect x="119.9" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (97 samples, 0.56%)</title><rect x="120.2" y="707.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (87 samples, 0.51%)</title><rect x="120.3" y="691.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (87 samples, 0.51%)</title><rect x="120.3" y="675.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.3" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.13%)</title><rect x="121.5" y="659.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="124.5" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (23 samples, 0.13%)</title><rect x="121.5" y="643.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="124.5" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (23 samples, 0.13%)</title><rect x="121.5" y="627.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="124.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (20 samples, 0.12%)</title><rect x="121.5" y="611.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="124.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.03%)</title><rect x="123.1" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="123.2" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (40 samples, 0.23%)</title><rect x="123.5" y="659.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (36 samples, 0.21%)</title><rect x="123.8" y="643.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.8" y="654.0"></text>
</g>
<g>
<title>__libc_write (35 samples, 0.20%)</title><rect x="123.8" y="627.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="126.8" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.16%)</title><rect x="124.3" y="611.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.3" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.16%)</title><rect x="124.3" y="595.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_write (27 samples, 0.16%)</title><rect x="124.3" y="579.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.3" y="590.0"></text>
</g>
<g>
<title>ksys_write (27 samples, 0.16%)</title><rect x="124.3" y="563.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="127.3" y="574.0"></text>
</g>
<g>
<title>vfs_write (25 samples, 0.15%)</title><rect x="124.5" y="547.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.5" y="558.0"></text>
</g>
<g>
<title>__vfs_write (21 samples, 0.12%)</title><rect x="124.5" y="531.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="127.5" y="542.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.12%)</title><rect x="124.5" y="515.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="127.5" y="526.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.10%)</title><rect x="124.8" y="499.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="127.8" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 0.10%)</title><rect x="124.8" y="483.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="127.8" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.10%)</title><rect x="124.8" y="467.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="127.8" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.09%)</title><rect x="124.9" y="451.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (8 samples, 0.05%)</title><rect x="126.3" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (5 samples, 0.03%)</title><rect x="126.5" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (7 samples, 0.04%)</title><rect x="126.8" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.03%)</title><rect x="126.9" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="127.0" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="127.0" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.02%)</title><rect x="127.0" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (251 samples, 1.46%)</title><rect x="127.3" y="771.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.toString (4 samples, 0.02%)</title><rect x="127.6" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.10%)</title><rect x="127.9" y="755.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.10%)</title><rect x="127.9" y="739.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (17 samples, 0.10%)</title><rect x="127.9" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.08%)</title><rect x="129.1" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.1" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 0.08%)</title><rect x="129.1" y="739.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.1" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.05%)</title><rect x="129.2" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.03%)</title><rect x="130.0" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="130.0" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.02%)</title><rect x="130.0" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (127 samples, 0.74%)</title><rect x="130.6" y="755.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.05%)</title><rect x="130.7" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.7" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.05%)</title><rect x="130.7" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.7" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.05%)</title><rect x="130.7" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.05%)</title><rect x="130.7" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (10 samples, 0.06%)</title><rect x="131.3" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.04%)</title><rect x="131.3" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.03%)</title><rect x="131.4" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.03%)</title><rect x="131.4" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="131.4" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.02%)</title><rect x="131.5" y="659.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (52 samples, 0.30%)</title><rect x="132.0" y="739.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.02%)</title><rect x="132.5" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.02%)</title><rect x="132.5" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.5" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (5 samples, 0.03%)</title><rect x="132.8" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.8" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (5 samples, 0.03%)</title><rect x="132.8" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.8" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (4 samples, 0.02%)</title><rect x="132.8" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.8" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (4 samples, 0.02%)</title><rect x="132.8" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (4 samples, 0.02%)</title><rect x="132.8" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.8" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey (4 samples, 0.02%)</title><rect x="133.1" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.1" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (22 samples, 0.13%)</title><rect x="133.4" y="723.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (19 samples, 0.11%)</title><rect x="133.6" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (18 samples, 0.10%)</title><rect x="133.7" y="691.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (17 samples, 0.10%)</title><rect x="133.7" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (13 samples, 0.08%)</title><rect x="133.9" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.9" y="670.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/1920061559.test (9 samples, 0.05%)</title><rect x="135.0" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.0" y="734.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (8 samples, 0.05%)</title><rect x="135.0" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$276/777160068.test (5 samples, 0.03%)</title><rect x="135.0" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (5 samples, 0.03%)</title><rect x="135.0" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.02%)</title><rect x="135.1" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (4 samples, 0.02%)</title><rect x="135.6" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (4 samples, 0.02%)</title><rect x="135.6" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.02%)</title><rect x="135.6" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="135.6" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (51 samples, 0.30%)</title><rect x="135.9" y="739.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.9" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (51 samples, 0.30%)</title><rect x="135.9" y="723.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.9" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (50 samples, 0.29%)</title><rect x="135.9" y="707.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (44 samples, 0.26%)</title><rect x="136.3" y="691.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.3" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (42 samples, 0.24%)</title><rect x="136.5" y="675.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.5" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (40 samples, 0.23%)</title><rect x="136.6" y="659.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (12 samples, 0.07%)</title><rect x="137.0" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.0" y="654.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.06%)</title><rect x="137.0" y="627.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="140.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.06%)</title><rect x="137.8" y="643.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (6 samples, 0.03%)</title><rect x="138.0" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.0" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.03%)</title><rect x="138.0" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.07%)</title><rect x="138.5" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (7 samples, 0.04%)</title><rect x="138.8" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (14 samples, 0.08%)</title><rect x="139.4" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.08%)</title><rect x="139.4" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (13 samples, 0.08%)</title><rect x="139.4" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (13 samples, 0.08%)</title><rect x="139.4" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.08%)</title><rect x="139.4" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.03%)</title><rect x="139.6" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.02%)</title><rect x="139.6" y="659.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (27 samples, 0.16%)</title><rect x="140.4" y="755.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (24 samples, 0.14%)</title><rect x="140.6" y="739.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="141.3" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (7 samples, 0.04%)</title><rect x="141.3" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (7 samples, 0.04%)</title><rect x="141.3" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="141.3" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (33 samples, 0.19%)</title><rect x="142.2" y="755.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (23 samples, 0.13%)</title><rect x="142.8" y="739.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.04%)</title><rect x="143.5" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.04%)</title><rect x="143.5" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.04%)</title><rect x="143.5" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.03%)</title><rect x="144.0" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (85 samples, 0.49%)</title><rect x="144.8" y="835.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="145.3" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="145.3" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (33 samples, 0.19%)</title><rect x="145.6" y="819.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.17%)</title><rect x="145.9" y="803.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.17%)</title><rect x="145.9" y="787.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (28 samples, 0.16%)</title><rect x="145.9" y="771.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (28 samples, 0.16%)</title><rect x="145.9" y="755.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (18 samples, 0.10%)</title><rect x="145.9" y="739.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (18 samples, 0.10%)</title><rect x="145.9" y="723.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (18 samples, 0.10%)</title><rect x="145.9" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (12 samples, 0.07%)</title><rect x="146.2" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (10 samples, 0.06%)</title><rect x="146.3" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (10 samples, 0.06%)</title><rect x="146.3" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/358927442.run (10 samples, 0.06%)</title><rect x="146.3" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (10 samples, 0.06%)</title><rect x="146.3" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (10 samples, 0.06%)</title><rect x="146.3" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8 samples, 0.05%)</title><rect x="146.4" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8 samples, 0.05%)</title><rect x="146.4" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (8 samples, 0.05%)</title><rect x="146.4" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (8 samples, 0.05%)</title><rect x="146.4" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8 samples, 0.05%)</title><rect x="146.4" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8 samples, 0.05%)</title><rect x="146.4" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (8 samples, 0.05%)</title><rect x="146.4" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (8 samples, 0.05%)</title><rect x="146.4" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (8 samples, 0.05%)</title><rect x="146.4" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (8 samples, 0.05%)</title><rect x="146.4" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.05%)</title><rect x="146.4" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (10 samples, 0.06%)</title><rect x="147.2" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.05%)</title><rect x="147.3" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.03%)</title><rect x="147.4" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (36 samples, 0.21%)</title><rect x="147.9" y="819.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.&lt;init&gt; (4 samples, 0.02%)</title><rect x="150.3" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.08%)</title><rect x="150.9" y="979.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.08%)</title><rect x="150.9" y="963.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (5 samples, 0.03%)</title><rect x="151.0" y="947.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.03%)</title><rect x="151.0" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.0" y="942.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="151.0" y="915.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="154.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.03%)</title><rect x="151.4" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (482 samples, 2.80%)</title><rect x="151.8" y="979.0" width="33.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.8" y="990.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (12 samples, 0.07%)</title><rect x="152.1" y="963.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (12 samples, 0.07%)</title><rect x="152.1" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/1862905725.apply (4 samples, 0.02%)</title><rect x="152.7" y="931.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.08%)</title><rect x="152.9" y="963.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.08%)</title><rect x="152.9" y="947.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (5 samples, 0.03%)</title><rect x="153.0" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.03%)</title><rect x="153.0" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.03%)</title><rect x="153.3" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$302/1875352691.accept (5 samples, 0.03%)</title><rect x="153.4" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkCancelled (12 samples, 0.07%)</title><rect x="153.8" y="963.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (440 samples, 2.56%)</title><rect x="154.6" y="963.0" width="30.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.6" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (7 samples, 0.04%)</title><rect x="154.6" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (5 samples, 0.03%)</title><rect x="154.8" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (433 samples, 2.52%)</title><rect x="155.1" y="947.0" width="29.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.1" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (432 samples, 2.51%)</title><rect x="155.2" y="931.0" width="29.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.2" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (23 samples, 0.13%)</title><rect x="155.9" y="915.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.05%)</title><rect x="156.2" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.05%)</title><rect x="156.2" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.get$Lambda (9 samples, 0.05%)</title><rect x="156.2" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.&lt;init&gt; (9 samples, 0.05%)</title><rect x="156.2" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (4 samples, 0.02%)</title><rect x="157.0" y="899.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="157.2" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.02%)</title><rect x="157.2" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (26 samples, 0.15%)</title><rect x="157.5" y="915.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.06%)</title><rect x="157.9" y="899.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.06%)</title><rect x="157.9" y="883.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$235/326726215.get$Lambda (11 samples, 0.06%)</title><rect x="157.9" y="867.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (8 samples, 0.05%)</title><rect x="158.8" y="899.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (5 samples, 0.03%)</title><rect x="159.0" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (13 samples, 0.08%)</title><rect x="159.3" y="915.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.03%)</title><rect x="159.8" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (175 samples, 1.02%)</title><rect x="160.2" y="915.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (164 samples, 0.95%)</title><rect x="160.3" y="899.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.3" y="910.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (12 samples, 0.07%)</title><rect x="161.7" y="883.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="164.7" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.07%)</title><rect x="161.7" y="867.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="164.7" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.07%)</title><rect x="161.7" y="851.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="164.7" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.05%)</title><rect x="161.8" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="164.8" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (83 samples, 0.48%)</title><rect x="162.5" y="883.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="165.5" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (83 samples, 0.48%)</title><rect x="162.5" y="867.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="165.5" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (81 samples, 0.47%)</title><rect x="162.6" y="851.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="165.6" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (73 samples, 0.42%)</title><rect x="162.6" y="835.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="165.6" y="846.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.05%)</title><rect x="167.6" y="835.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="170.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (5 samples, 0.03%)</title><rect x="168.2" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (43 samples, 0.25%)</title><rect x="168.6" y="883.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.08%)</title><rect x="169.1" y="867.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.05%)</title><rect x="169.1" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.02%)</title><rect x="169.7" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (22 samples, 0.13%)</title><rect x="170.0" y="867.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.0" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (9 samples, 0.05%)</title><rect x="170.6" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (8 samples, 0.05%)</title><rect x="171.6" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (4 samples, 0.02%)</title><rect x="171.8" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (180 samples, 1.05%)</title><rect x="172.2" y="915.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.2" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (176 samples, 1.02%)</title><rect x="172.5" y="899.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.5" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (109 samples, 0.63%)</title><rect x="172.9" y="883.0" width="7.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="175.9" y="894.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (19 samples, 0.11%)</title><rect x="174.4" y="867.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="177.4" y="878.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.02%)</title><rect x="175.8" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="178.8" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (4 samples, 0.02%)</title><rect x="176.4" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="179.4" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (21 samples, 0.12%)</title><rect x="176.9" y="867.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="179.9" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.02%)</title><rect x="177.1" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="180.1" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (11 samples, 0.06%)</title><rect x="177.4" y="851.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="180.4" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.03%)</title><rect x="177.5" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="180.5" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (29 samples, 0.17%)</title><rect x="178.4" y="867.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="181.4" y="878.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (13 samples, 0.08%)</title><rect x="178.8" y="851.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="181.8" y="862.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (7 samples, 0.04%)</title><rect x="179.2" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="182.2" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (10 samples, 0.06%)</title><rect x="179.7" y="851.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="182.7" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (7 samples, 0.04%)</title><rect x="179.9" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="182.9" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.03%)</title><rect x="180.0" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="183.0" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.02%)</title><rect x="180.1" y="803.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="183.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1698958724.run (51 samples, 0.30%)</title><rect x="181.0" y="883.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (49 samples, 0.28%)</title><rect x="181.2" y="867.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.2" y="878.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (48 samples, 0.28%)</title><rect x="181.2" y="851.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.2" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (43 samples, 0.25%)</title><rect x="181.4" y="835.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.4" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (43 samples, 0.25%)</title><rect x="181.4" y="819.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.4" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (43 samples, 0.25%)</title><rect x="181.4" y="803.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.digit (5 samples, 0.03%)</title><rect x="181.5" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.digit (5 samples, 0.03%)</title><rect x="181.5" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.03%)</title><rect x="181.9" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.9" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (31 samples, 0.18%)</title><rect x="182.3" y="787.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.clone (15 samples, 0.09%)</title><rect x="182.3" y="771.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.3" y="782.0"></text>
</g>
<g>
<title>JVM_Clone (11 samples, 0.06%)</title><rect x="182.4" y="755.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="185.4" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="182.7" y="739.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="185.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.02%)</title><rect x="183.4" y="771.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (10 samples, 0.06%)</title><rect x="183.7" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (9 samples, 0.05%)</title><rect x="183.8" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="183.9" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="184.0" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (4 samples, 0.02%)</title><rect x="184.1" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (38 samples, 0.22%)</title><rect x="184.9" y="1027.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.9" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (6 samples, 0.03%)</title><rect x="185.3" y="1011.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (6 samples, 0.03%)</title><rect x="185.3" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.3" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (6 samples, 0.03%)</title><rect x="185.3" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.3" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (6 samples, 0.03%)</title><rect x="185.3" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.3" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (6 samples, 0.03%)</title><rect x="185.3" y="947.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.3" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (4 samples, 0.02%)</title><rect x="185.8" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (20 samples, 0.12%)</title><rect x="186.1" y="1011.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (9 samples, 0.05%)</title><rect x="186.2" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.06%)</title><rect x="186.8" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.8" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.03%)</title><rect x="187.1" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.1" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.02%)</title><rect x="187.1" y="963.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.1" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (4 samples, 0.02%)</title><rect x="187.1" y="947.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$122/964985208.get (76 samples, 0.44%)</title><rect x="187.7" y="1107.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (75 samples, 0.44%)</title><rect x="187.8" y="1091.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$119/927168992.run (74 samples, 0.43%)</title><rect x="187.9" y="1075.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$7 (74 samples, 0.43%)</title><rect x="187.9" y="1059.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (72 samples, 0.42%)</title><rect x="188.0" y="1043.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.04%)</title><rect x="188.0" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.04%)</title><rect x="188.0" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.03%)</title><rect x="188.0" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (57 samples, 0.33%)</title><rect x="188.5" y="1027.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (56 samples, 0.33%)</title><rect x="188.6" y="1011.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (56 samples, 0.33%)</title><rect x="188.6" y="995.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (12 samples, 0.07%)</title><rect x="188.8" y="979.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (12 samples, 0.07%)</title><rect x="188.8" y="963.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (37 samples, 0.21%)</title><rect x="189.9" y="979.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.9" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (37 samples, 0.21%)</title><rect x="189.9" y="963.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (37 samples, 0.21%)</title><rect x="189.9" y="947.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.9" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (37 samples, 0.21%)</title><rect x="189.9" y="931.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (7 samples, 0.04%)</title><rect x="192.4" y="1027.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (7 samples, 0.04%)</title><rect x="192.4" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (7 samples, 0.04%)</title><rect x="192.4" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,183 samples, 6.87%)</title><rect x="193.0" y="1123.0" width="81.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.0" y="1134.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (594 samples, 3.45%)</title><rect x="193.0" y="1107.0" width="40.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.0" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.02%)</title><rect x="193.5" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/2025425731.apply (582 samples, 3.38%)</title><rect x="193.8" y="1091.0" width="39.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.8" y="1102.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (581 samples, 3.38%)</title><rect x="193.8" y="1075.0" width="39.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.8" y="1086.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (581 samples, 3.38%)</title><rect x="193.8" y="1059.0" width="39.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.8" y="1070.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.07%)</title><rect x="193.9" y="1043.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (10 samples, 0.06%)</title><rect x="194.1" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.06%)</title><rect x="194.1" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.1" y="1022.0"></text>
</g>
<g>
<title>java/net/URI.create (63 samples, 0.37%)</title><rect x="194.7" y="1043.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.7" y="1054.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (63 samples, 0.37%)</title><rect x="194.7" y="1027.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.7" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (63 samples, 0.37%)</title><rect x="194.7" y="1011.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.7" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (4 samples, 0.02%)</title><rect x="195.0" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.02%)</title><rect x="195.0" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.0" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.02%)</title><rect x="195.4" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.4" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (48 samples, 0.28%)</title><rect x="195.7" y="995.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.7" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (44 samples, 0.26%)</title><rect x="195.8" y="979.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (37 samples, 0.21%)</title><rect x="196.0" y="963.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.0" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (8 samples, 0.05%)</title><rect x="196.2" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.04%)</title><rect x="196.3" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.3" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (10 samples, 0.06%)</title><rect x="196.9" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.9" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.03%)</title><rect x="197.2" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.2" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (10 samples, 0.06%)</title><rect x="197.8" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="198.0" y="931.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.04%)</title><rect x="198.0" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.04%)</title><rect x="198.0" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.0" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.03%)</title><rect x="198.5" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.5" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (6 samples, 0.03%)</title><rect x="199.1" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (5 samples, 0.03%)</title><rect x="199.2" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.2" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.ofByteArray (80 samples, 0.46%)</title><rect x="199.5" y="1043.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.5" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="204.5" y="1027.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="207.5" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.04%)</title><rect x="205.1" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.1" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.04%)</title><rect x="205.1" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.04%)</title><rect x="205.1" y="1011.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.1" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.04%)</title><rect x="205.1" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.1" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.04%)</title><rect x="205.1" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (310 samples, 1.80%)</title><rect x="205.6" y="1043.0" width="21.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.6" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (308 samples, 1.79%)</title><rect x="205.8" y="1027.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.8" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (308 samples, 1.79%)</title><rect x="205.8" y="1011.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.8" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (307 samples, 1.78%)</title><rect x="205.8" y="995.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.8" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (203 samples, 1.18%)</title><rect x="206.4" y="979.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.4" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (18 samples, 0.10%)</title><rect x="206.9" y="963.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.9" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.02%)</title><rect x="206.9" y="947.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.9" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.02%)</title><rect x="206.9" y="931.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.9" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.02%)</title><rect x="206.9" y="915.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.9" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.02%)</title><rect x="206.9" y="899.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.9" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.02%)</title><rect x="206.9" y="883.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (11 samples, 0.06%)</title><rect x="207.4" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.4" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.06%)</title><rect x="207.4" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.05%)</title><rect x="207.5" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.03%)</title><rect x="207.8" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.03%)</title><rect x="207.8" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (34 samples, 0.20%)</title><rect x="208.1" y="963.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.1" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (31 samples, 0.18%)</title><rect x="208.3" y="947.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.3" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (5 samples, 0.03%)</title><rect x="208.4" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.4" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (5 samples, 0.03%)</title><rect x="208.4" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.4" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (24 samples, 0.14%)</title><rect x="208.7" y="931.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.7" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (24 samples, 0.14%)</title><rect x="208.7" y="915.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.7" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (24 samples, 0.14%)</title><rect x="208.7" y="899.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.7" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (24 samples, 0.14%)</title><rect x="208.7" y="883.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (18 samples, 0.10%)</title><rect x="208.8" y="867.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (18 samples, 0.10%)</title><rect x="208.8" y="851.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.8" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (18 samples, 0.10%)</title><rect x="208.8" y="835.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.03%)</title><rect x="208.9" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.03%)</title><rect x="208.9" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/119290689.test (11 samples, 0.06%)</title><rect x="209.3" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (11 samples, 0.06%)</title><rect x="209.3" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (5 samples, 0.03%)</title><rect x="209.3" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.03%)</title><rect x="209.3" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.3" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.03%)</title><rect x="209.3" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.03%)</title><rect x="209.3" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.03%)</title><rect x="209.3" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="209.3" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.03%)</title><rect x="209.3" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="209.4" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="209.4" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.02%)</title><rect x="209.4" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (10 samples, 0.06%)</title><rect x="210.4" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.04%)</title><rect x="210.5" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (130 samples, 0.76%)</title><rect x="211.1" y="963.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.1" y="974.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (129 samples, 0.75%)</title><rect x="211.2" y="947.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.2" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (119 samples, 0.69%)</title><rect x="211.9" y="931.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.9" y="942.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (70 samples, 0.41%)</title><rect x="212.4" y="915.0" width="4.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="215.4" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.02%)</title><rect x="213.2" y="899.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="216.2" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (4 samples, 0.02%)</title><rect x="213.2" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="216.2" y="894.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (13 samples, 0.08%)</title><rect x="213.7" y="899.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="216.7" y="910.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.02%)</title><rect x="214.2" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="217.2" y="894.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (13 samples, 0.08%)</title><rect x="215.3" y="899.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="218.3" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.06%)</title><rect x="215.5" y="883.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="218.5" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.04%)</title><rect x="215.5" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="218.5" y="878.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (14 samples, 0.08%)</title><rect x="216.2" y="899.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="219.2" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.02%)</title><rect x="216.9" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="219.9" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (36 samples, 0.21%)</title><rect x="217.6" y="915.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.6" y="926.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (35 samples, 0.20%)</title><rect x="217.6" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (11 samples, 0.06%)</title><rect x="218.0" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.06%)</title><rect x="218.0" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.05%)</title><rect x="218.1" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="221.1" y="862.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (12 samples, 0.07%)</title><rect x="219.2" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.2" y="894.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (5 samples, 0.03%)</title><rect x="219.2" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.2" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.02%)</title><rect x="219.3" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.3" y="862.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.02%)</title><rect x="219.3" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.02%)</title><rect x="219.3" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.3" y="830.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (7 samples, 0.04%)</title><rect x="219.6" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.04%)</title><rect x="219.6" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.02%)</title><rect x="219.8" y="835.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (62 samples, 0.36%)</title><rect x="220.3" y="979.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.02%)</title><rect x="221.7" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (35 samples, 0.20%)</title><rect x="222.2" y="963.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (34 samples, 0.20%)</title><rect x="222.2" y="947.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.2" y="958.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (13 samples, 0.08%)</title><rect x="222.4" y="931.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (9 samples, 0.05%)</title><rect x="222.4" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.4" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (5 samples, 0.03%)</title><rect x="222.7" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (4 samples, 0.02%)</title><rect x="223.0" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.0" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (13 samples, 0.08%)</title><rect x="223.3" y="931.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.3" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (6 samples, 0.03%)</title><rect x="223.4" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.4" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (5 samples, 0.03%)</title><rect x="223.5" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.5" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (5 samples, 0.03%)</title><rect x="223.5" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (5 samples, 0.03%)</title><rect x="223.5" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.5" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (4 samples, 0.02%)</title><rect x="224.2" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.2" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.02%)</title><rect x="224.2" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.2" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.02%)</title><rect x="224.2" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (33 samples, 0.19%)</title><rect x="224.6" y="979.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (23 samples, 0.13%)</title><rect x="224.8" y="963.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.13%)</title><rect x="224.8" y="947.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.12%)</title><rect x="224.9" y="931.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.06%)</title><rect x="225.0" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.05%)</title><rect x="225.2" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.05%)</title><rect x="225.2" y="883.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.05%)</title><rect x="225.2" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.05%)</title><rect x="225.2" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.05%)</title><rect x="225.2" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.2" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="225.2" y="819.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="228.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="225.3" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="225.3" y="787.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="228.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="225.3" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="228.3" y="782.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="225.3" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.3" y="766.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="225.3" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="228.3" y="750.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="225.4" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="228.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="225.4" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="228.4" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="225.4" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="228.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.05%)</title><rect x="225.7" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.05%)</title><rect x="225.7" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (7 samples, 0.04%)</title><rect x="226.3" y="963.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.03%)</title><rect x="226.5" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.03%)</title><rect x="226.5" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (37 samples, 0.21%)</title><rect x="226.9" y="1043.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (36 samples, 0.21%)</title><rect x="227.0" y="1027.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.0" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (30 samples, 0.17%)</title><rect x="227.2" y="1011.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.2" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (30 samples, 0.17%)</title><rect x="227.2" y="995.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.2" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (4 samples, 0.02%)</title><rect x="227.5" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.5" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (4 samples, 0.02%)</title><rect x="227.5" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.5" y="974.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="227.5" y="947.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="230.5" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (5 samples, 0.03%)</title><rect x="227.8" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.8" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.09%)</title><rect x="228.2" y="979.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.2" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (15 samples, 0.09%)</title><rect x="228.2" y="963.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.2" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.08%)</title><rect x="228.3" y="947.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.3" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (8 samples, 0.05%)</title><rect x="228.3" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.3" y="942.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="228.4" y="915.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="231.4" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.03%)</title><rect x="228.8" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (6 samples, 0.03%)</title><rect x="228.8" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.03%)</title><rect x="228.8" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (6 samples, 0.03%)</title><rect x="228.8" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.03%)</title><rect x="228.8" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.8" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.03%)</title><rect x="228.8" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.03%)</title><rect x="228.9" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.9" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.03%)</title><rect x="228.9" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="228.9" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.03%)</title><rect x="228.9" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="228.9" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="228.9" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.02%)</title><rect x="228.9" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (18 samples, 0.10%)</title><rect x="229.4" y="1043.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (18 samples, 0.10%)</title><rect x="229.4" y="1027.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (13 samples, 0.08%)</title><rect x="229.5" y="1011.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (12 samples, 0.07%)</title><rect x="229.5" y="995.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (12 samples, 0.07%)</title><rect x="229.5" y="979.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.5" y="990.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (12 samples, 0.07%)</title><rect x="229.5" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.5" y="974.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (12 samples, 0.07%)</title><rect x="229.5" y="947.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.5" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (12 samples, 0.07%)</title><rect x="229.5" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.5" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (12 samples, 0.07%)</title><rect x="229.5" y="915.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.5" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (12 samples, 0.07%)</title><rect x="229.5" y="899.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="230.0" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="230.0" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="230.0" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.02%)</title><rect x="230.4" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.4" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.02%)</title><rect x="230.4" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="230.4" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.02%)</title><rect x="230.4" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.02%)</title><rect x="230.4" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (41 samples, 0.24%)</title><rect x="230.7" y="1043.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.7" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (36 samples, 0.21%)</title><rect x="230.7" y="1027.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$223/558130116.accept (34 samples, 0.20%)</title><rect x="230.9" y="1011.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (32 samples, 0.19%)</title><rect x="231.0" y="995.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (25 samples, 0.15%)</title><rect x="231.2" y="979.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (16 samples, 0.09%)</title><rect x="231.3" y="963.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (16 samples, 0.09%)</title><rect x="231.3" y="947.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (13 samples, 0.08%)</title><rect x="231.4" y="931.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (11 samples, 0.06%)</title><rect x="231.4" y="915.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (10 samples, 0.06%)</title><rect x="231.5" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (10 samples, 0.06%)</title><rect x="231.5" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.04%)</title><rect x="231.6" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.04%)</title><rect x="231.6" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Timeout.&lt;init&gt; (4 samples, 0.02%)</title><rect x="232.4" y="963.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.02%)</title><rect x="232.6" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="232.6" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.02%)</title><rect x="232.9" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="232.9" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (4 samples, 0.02%)</title><rect x="233.2" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (589 samples, 3.42%)</title><rect x="233.7" y="1107.0" width="40.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.7" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.03%)</title><rect x="233.9" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (581 samples, 3.38%)</title><rect x="234.2" y="1091.0" width="39.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.2" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="234.3" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.3" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$136/412513292.accept (575 samples, 3.34%)</title><rect x="234.6" y="1075.0" width="39.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.6" y="1086.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$9 (575 samples, 3.34%)</title><rect x="234.6" y="1059.0" width="39.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.6" y="1070.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getSuccessAndSendIfReachedExpected (575 samples, 3.34%)</title><rect x="234.6" y="1043.0" width="39.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.6" y="1054.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (569 samples, 3.31%)</title><rect x="235.0" y="1027.0" width="39.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.0" y="1038.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (569 samples, 3.31%)</title><rect x="235.0" y="1011.0" width="39.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.0" y="1022.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (568 samples, 3.30%)</title><rect x="235.1" y="995.0" width="39.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.1" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (553 samples, 3.21%)</title><rect x="235.5" y="979.0" width="37.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.5" y="990.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.11%)</title><rect x="235.5" y="963.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.09%)</title><rect x="235.7" y="947.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.03%)</title><rect x="235.8" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.05%)</title><rect x="236.1" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.1" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.05%)</title><rect x="236.1" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.1" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.05%)</title><rect x="236.1" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (534 samples, 3.10%)</title><rect x="236.8" y="963.0" width="36.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.8" y="974.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (534 samples, 3.10%)</title><rect x="236.8" y="947.0" width="36.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.8" y="958.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (532 samples, 3.09%)</title><rect x="236.9" y="931.0" width="36.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.9" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (531 samples, 3.08%)</title><rect x="237.0" y="915.0" width="36.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.0" y="926.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.08%)</title><rect x="237.1" y="899.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="240.1" y="910.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.05%)</title><rect x="237.4" y="883.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="240.4" y="894.0"></text>
</g>
<g>
<title>__send (512 samples, 2.97%)</title><rect x="238.1" y="899.0" width="35.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="241.1" y="910.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (488 samples, 2.83%)</title><rect x="239.7" y="883.0" width="33.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="242.7" y="894.0">en..</text>
</g>
<g>
<title>do_syscall_64 (487 samples, 2.83%)</title><rect x="239.8" y="867.0" width="33.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.8" y="878.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (482 samples, 2.80%)</title><rect x="240.1" y="851.0" width="33.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.1" y="862.0">__..</text>
</g>
<g>
<title>__sys_sendto (481 samples, 2.79%)</title><rect x="240.1" y="835.0" width="33.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="243.1" y="846.0">__..</text>
</g>
<g>
<title>sock_sendmsg (461 samples, 2.68%)</title><rect x="240.6" y="819.0" width="31.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.6" y="830.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (457 samples, 2.65%)</title><rect x="240.7" y="803.0" width="31.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.7" y="814.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (453 samples, 2.63%)</title><rect x="240.9" y="787.0" width="31.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="243.9" y="798.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (445 samples, 2.59%)</title><rect x="241.4" y="771.0" width="30.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.4" y="782.0">tc..</text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.03%)</title><rect x="242.0" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.0" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="242.1" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.1" y="750.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.02%)</title><rect x="242.4" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.4" y="766.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.02%)</title><rect x="242.4" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="245.4" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (24 samples, 0.14%)</title><rect x="242.7" y="755.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.7" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.13%)</title><rect x="242.8" y="739.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="245.8" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (8 samples, 0.05%)</title><rect x="242.9" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="245.9" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.02%)</title><rect x="242.9" y="707.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="245.9" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.03%)</title><rect x="243.5" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.5" y="734.0"></text>
</g>
<g>
<title>tcp_push (390 samples, 2.27%)</title><rect x="244.6" y="755.0" width="26.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.6" y="766.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (390 samples, 2.27%)</title><rect x="244.6" y="739.0" width="26.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.6" y="750.0">_..</text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.02%)</title><rect x="244.6" y="723.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.6" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (384 samples, 2.23%)</title><rect x="245.0" y="723.0" width="26.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="248.0" y="734.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (362 samples, 2.10%)</title><rect x="245.3" y="707.0" width="24.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="248.3" y="718.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (343 samples, 1.99%)</title><rect x="246.2" y="691.0" width="23.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.2" y="702.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (342 samples, 1.99%)</title><rect x="246.2" y="675.0" width="23.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="249.2" y="686.0">_..</text>
</g>
<g>
<title>ip_local_out (336 samples, 1.95%)</title><rect x="246.5" y="659.0" width="23.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="249.5" y="670.0">i..</text>
</g>
<g>
<title>__ip_local_out (57 samples, 0.33%)</title><rect x="246.6" y="643.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="249.6" y="654.0"></text>
</g>
<g>
<title>nf_hook_slow (50 samples, 0.29%)</title><rect x="246.8" y="627.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="249.8" y="638.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (38 samples, 0.22%)</title><rect x="247.4" y="611.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.4" y="622.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (36 samples, 0.21%)</title><rect x="247.5" y="595.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="250.5" y="606.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (12 samples, 0.07%)</title><rect x="247.7" y="579.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.7" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (12 samples, 0.07%)</title><rect x="248.8" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.8" y="590.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.02%)</title><rect x="249.3" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.3" y="574.0"></text>
</g>
<g>
<title>ip_output (277 samples, 1.61%)</title><rect x="250.5" y="643.0" width="19.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.5" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (268 samples, 1.56%)</title><rect x="250.6" y="627.0" width="18.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="253.6" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (266 samples, 1.55%)</title><rect x="250.6" y="611.0" width="18.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.6" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (265 samples, 1.54%)</title><rect x="250.7" y="595.0" width="18.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="253.7" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (242 samples, 1.41%)</title><rect x="251.0" y="579.0" width="16.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="254.0" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.0 (242 samples, 1.41%)</title><rect x="251.0" y="563.0" width="16.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.0" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (240 samples, 1.39%)</title><rect x="251.2" y="547.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="254.2" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (239 samples, 1.39%)</title><rect x="251.2" y="531.0" width="16.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="254.2" y="542.0"></text>
</g>
<g>
<title>net_rx_action (236 samples, 1.37%)</title><rect x="251.4" y="515.0" width="16.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.4" y="526.0"></text>
</g>
<g>
<title>process_backlog (234 samples, 1.36%)</title><rect x="251.5" y="499.0" width="16.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.5" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (230 samples, 1.34%)</title><rect x="251.8" y="483.0" width="15.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.8" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (228 samples, 1.32%)</title><rect x="251.9" y="467.0" width="15.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.9" y="478.0"></text>
</g>
<g>
<title>ip_rcv (224 samples, 1.30%)</title><rect x="252.2" y="451.0" width="15.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.2" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (217 samples, 1.26%)</title><rect x="252.2" y="435.0" width="14.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.2" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (215 samples, 1.25%)</title><rect x="252.2" y="419.0" width="14.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.2" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (211 samples, 1.23%)</title><rect x="252.2" y="403.0" width="14.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="255.2" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (207 samples, 1.20%)</title><rect x="252.2" y="387.0" width="14.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="255.2" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (204 samples, 1.19%)</title><rect x="252.4" y="371.0" width="14.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="255.4" y="382.0"></text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.05%)</title><rect x="252.9" y="355.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.9" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (184 samples, 1.07%)</title><rect x="253.8" y="355.0" width="12.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="256.8" y="366.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.03%)</title><rect x="253.8" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.8" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (178 samples, 1.03%)</title><rect x="254.2" y="339.0" width="12.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="257.2" y="350.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.05%)</title><rect x="254.8" y="323.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="257.8" y="334.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.05%)</title><rect x="254.8" y="307.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="257.8" y="318.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.05%)</title><rect x="254.8" y="291.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="257.8" y="302.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.05%)</title><rect x="254.9" y="275.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="257.9" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="254.9" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="257.9" y="270.0"></text>
</g>
<g>
<title>tcp_ack (41 samples, 0.24%)</title><rect x="255.7" y="323.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="258.7" y="334.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (29 samples, 0.17%)</title><rect x="256.2" y="307.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="259.2" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (24 samples, 0.14%)</title><rect x="256.4" y="291.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.4" y="302.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.04%)</title><rect x="256.4" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="259.4" y="286.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.03%)</title><rect x="256.6" y="259.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="259.6" y="270.0"></text>
</g>
<g>
<title>skb_release_all (17 samples, 0.10%)</title><rect x="256.9" y="275.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.9" y="286.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.10%)</title><rect x="256.9" y="259.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="259.9" y="270.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.02%)</title><rect x="257.8" y="243.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="260.8" y="254.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.02%)</title><rect x="257.8" y="227.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="260.8" y="238.0"></text>
</g>
<g>
<title>tcp_data_ready (109 samples, 0.63%)</title><rect x="258.5" y="323.0" width="7.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="261.5" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (109 samples, 0.63%)</title><rect x="258.5" y="307.0" width="7.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="261.5" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (104 samples, 0.60%)</title><rect x="258.8" y="291.0" width="7.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="261.8" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (104 samples, 0.60%)</title><rect x="258.8" y="275.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.8" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (104 samples, 0.60%)</title><rect x="258.8" y="259.0" width="7.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.8" y="270.0"></text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.02%)</title><rect x="266.4" y="387.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="269.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="266.6" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="269.6" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (16 samples, 0.09%)</title><rect x="267.6" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="270.6" y="590.0"></text>
</g>
<g>
<title>__dev_queue_xmit (16 samples, 0.09%)</title><rect x="267.6" y="563.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.6" y="574.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.06%)</title><rect x="267.7" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="270.7" y="558.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.04%)</title><rect x="267.9" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="270.9" y="542.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.02%)</title><rect x="268.4" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.4" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="269.1" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.1" y="638.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.03%)</title><rect x="269.7" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.7" y="702.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.02%)</title><rect x="269.7" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.7" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.04%)</title><rect x="270.3" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.3" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.03%)</title><rect x="270.4" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.4" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="270.4" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.4" y="686.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.03%)</title><rect x="270.4" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.4" y="670.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.04%)</title><rect x="271.3" y="755.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="274.3" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.02%)</title><rect x="271.5" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.5" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.08%)</title><rect x="272.2" y="819.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.2" y="830.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.06%)</title><rect x="272.2" y="803.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.06%)</title><rect x="272.2" y="787.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.2" y="798.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.06%)</title><rect x="272.2" y="771.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.06%)</title><rect x="273.4" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="273.7" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="273.7" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (11 samples, 0.06%)</title><rect x="274.1" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.06%)</title><rect x="274.1" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="277.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (7 samples, 0.04%)</title><rect x="274.3" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (30 samples, 0.17%)</title><rect x="274.8" y="1123.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.10%)</title><rect x="275.5" y="1107.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (11 samples, 0.06%)</title><rect x="275.8" y="1091.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (11 samples, 0.06%)</title><rect x="275.8" y="1075.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,738 samples, 10.10%)</title><rect x="276.9" y="1123.0" width="119.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.9" y="1134.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (10 samples, 0.06%)</title><rect x="278.6" y="1107.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="281.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.02%)</title><rect x="279.5" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,669 samples, 9.70%)</title><rect x="279.9" y="1107.0" width="114.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.9" y="1118.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,234 samples, 7.17%)</title><rect x="281.2" y="1091.0" width="84.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.2" y="1102.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (47 samples, 0.27%)</title><rect x="281.6" y="1075.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (11 samples, 0.06%)</title><rect x="284.0" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (7 samples, 0.04%)</title><rect x="284.1" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.08%)</title><rect x="285.0" y="1075.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.03%)</title><rect x="285.4" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.03%)</title><rect x="285.4" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.03%)</title><rect x="285.4" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (285 samples, 1.66%)</title><rect x="285.9" y="1075.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (285 samples, 1.66%)</title><rect x="285.9" y="1059.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (272 samples, 1.58%)</title><rect x="286.0" y="1043.0" width="18.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (270 samples, 1.57%)</title><rect x="286.1" y="1027.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (270 samples, 1.57%)</title><rect x="286.1" y="1011.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.1" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (33 samples, 0.19%)</title><rect x="286.5" y="995.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="289.5" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (11 samples, 0.06%)</title><rect x="286.7" y="979.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="289.7" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.06%)</title><rect x="288.0" y="979.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="291.0" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (231 samples, 1.34%)</title><rect x="288.8" y="995.0" width="15.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="291.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (189 samples, 1.10%)</title><rect x="291.7" y="979.0" width="12.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="294.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (189 samples, 1.10%)</title><rect x="291.7" y="963.0" width="12.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="294.7" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (177 samples, 1.03%)</title><rect x="292.5" y="947.0" width="12.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="295.5" y="958.0"></text>
</g>
<g>
<title>do_futex (177 samples, 1.03%)</title><rect x="292.5" y="931.0" width="12.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.5" y="942.0"></text>
</g>
<g>
<title>futex_wake (175 samples, 1.02%)</title><rect x="292.6" y="915.0" width="12.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="295.6" y="926.0"></text>
</g>
<g>
<title>mark_wake_futex (9 samples, 0.05%)</title><rect x="293.0" y="899.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="296.0" y="910.0"></text>
</g>
<g>
<title>wake_q_add_safe (4 samples, 0.02%)</title><rect x="293.7" y="899.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="296.7" y="910.0"></text>
</g>
<g>
<title>wake_up_q (156 samples, 0.91%)</title><rect x="293.9" y="899.0" width="10.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="296.9" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (155 samples, 0.90%)</title><rect x="294.0" y="883.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="297.0" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (154 samples, 0.89%)</title><rect x="294.1" y="867.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (12 samples, 0.07%)</title><rect x="304.6" y="1043.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (5 samples, 0.03%)</title><rect x="305.4" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (5 samples, 0.03%)</title><rect x="305.4" y="1059.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (875 samples, 5.08%)</title><rect x="305.8" y="1075.0" width="60.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.8" y="1086.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (871 samples, 5.06%)</title><rect x="306.1" y="1059.0" width="59.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.1" y="1070.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Park (326 samples, 1.89%)</title><rect x="307.0" y="1043.0" width="22.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="310.0" y="1054.0">U..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.04%)</title><rect x="308.0" y="1027.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="311.0" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (72 samples, 0.42%)</title><rect x="308.5" y="1027.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="311.5" y="1038.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (13 samples, 0.08%)</title><rect x="311.1" y="1011.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="314.1" y="1022.0"></text>
</g>
<g>
<title>Monitor::unlock() (11 samples, 0.06%)</title><rect x="312.0" y="1011.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="315.0" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.04%)</title><rect x="312.8" y="1011.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="315.8" y="1022.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (4 samples, 0.02%)</title><rect x="313.5" y="1027.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="316.5" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.04%)</title><rect x="313.7" y="1027.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="316.7" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (4 samples, 0.02%)</title><rect x="314.2" y="1027.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="317.2" y="1038.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (11 samples, 0.06%)</title><rect x="314.5" y="1027.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="317.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (184 samples, 1.07%)</title><rect x="315.5" y="1027.0" width="12.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="318.5" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 0.45%)</title><rect x="322.8" y="1011.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.8" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="322.8" y="995.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 0.42%)</title><rect x="323.1" y="995.0" width="5.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="326.1" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (36 samples, 0.21%)</title><rect x="325.5" y="979.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="328.5" y="990.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.19%)</title><rect x="325.7" y="963.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="328.7" y="974.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.15%)</title><rect x="325.8" y="947.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="328.8" y="958.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.05%)</title><rect x="327.0" y="931.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="330.0" y="942.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (5 samples, 0.03%)</title><rect x="327.2" y="915.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.2" y="926.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.02%)</title><rect x="327.7" y="947.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="330.7" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (6 samples, 0.03%)</title><rect x="328.5" y="1027.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="331.5" y="1038.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (5 samples, 0.03%)</title><rect x="328.9" y="1027.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="331.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (530 samples, 3.08%)</title><rect x="329.3" y="1043.0" width="36.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="332.3" y="1054.0">[un..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (6 samples, 0.03%)</title><rect x="329.3" y="1027.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="332.3" y="1038.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (6 samples, 0.03%)</title><rect x="329.7" y="1027.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="332.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (459 samples, 2.67%)</title><rect x="330.1" y="1027.0" width="31.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="333.1" y="1038.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (139 samples, 0.81%)</title><rect x="352.1" y="1011.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="355.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="352.1" y="995.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="355.1" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (135 samples, 0.78%)</title><rect x="352.3" y="995.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.3" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (94 samples, 0.55%)</title><rect x="355.1" y="979.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="358.1" y="990.0"></text>
</g>
<g>
<title>do_futex (86 samples, 0.50%)</title><rect x="355.5" y="963.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.5" y="974.0"></text>
</g>
<g>
<title>futex_wait (83 samples, 0.48%)</title><rect x="355.6" y="947.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="358.6" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (36 samples, 0.21%)</title><rect x="356.2" y="931.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.2" y="942.0"></text>
</g>
<g>
<title>schedule (27 samples, 0.16%)</title><rect x="356.8" y="915.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="359.8" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (27 samples, 0.16%)</title><rect x="356.8" y="899.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="359.8" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.05%)</title><rect x="358.0" y="883.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="361.0" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (30 samples, 0.17%)</title><rect x="358.6" y="931.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="361.6" y="942.0"></text>
</g>
<g>
<title>get_futex_key (7 samples, 0.04%)</title><rect x="359.6" y="915.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.6" y="926.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (5 samples, 0.03%)</title><rect x="359.7" y="899.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.7" y="910.0"></text>
</g>
<g>
<title>get_futex_value_locked (9 samples, 0.05%)</title><rect x="360.1" y="915.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.1" y="926.0"></text>
</g>
<g>
<title>plist_add (8 samples, 0.05%)</title><rect x="360.8" y="931.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="363.8" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (45 samples, 0.26%)</title><rect x="361.6" y="1027.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="364.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.02%)</title><rect x="364.7" y="1027.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="367.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (8 samples, 0.05%)</title><rect x="364.9" y="1027.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="367.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (135 samples, 0.78%)</title><rect x="365.9" y="1091.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (135 samples, 0.78%)</title><rect x="365.9" y="1075.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (12 samples, 0.07%)</title><rect x="366.1" y="1059.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.04%)</title><rect x="366.5" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.5" y="1054.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (7 samples, 0.04%)</title><rect x="366.5" y="1027.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="369.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (99 samples, 0.58%)</title><rect x="367.0" y="1059.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (54 samples, 0.31%)</title><rect x="367.9" y="1043.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.03%)</title><rect x="368.2" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 0.25%)</title><rect x="368.6" y="1027.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (12 samples, 0.07%)</title><rect x="368.6" y="1011.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.18%)</title><rect x="369.4" y="1011.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.4" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.09%)</title><rect x="369.5" y="995.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="372.5" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (13 samples, 0.08%)</title><rect x="369.7" y="979.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="372.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="370.2" y="963.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="373.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="370.2" y="947.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="373.2" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="370.3" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="373.3" y="942.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="370.3" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="373.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.08%)</title><rect x="370.6" y="995.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="373.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.07%)</title><rect x="370.6" y="979.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="373.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="371.0" y="963.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="374.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="371.0" y="947.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="374.0" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="371.0" y="931.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="374.0" y="942.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="371.0" y="915.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="374.0" y="926.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="371.0" y="899.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (5 samples, 0.03%)</title><rect x="371.6" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (25 samples, 0.15%)</title><rect x="371.9" y="1043.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (20 samples, 0.12%)</title><rect x="372.3" y="1027.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (13 samples, 0.08%)</title><rect x="372.8" y="1011.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (13 samples, 0.08%)</title><rect x="372.8" y="995.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (13 samples, 0.08%)</title><rect x="372.8" y="979.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (20 samples, 0.12%)</title><rect x="373.8" y="1059.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (18 samples, 0.10%)</title><rect x="373.9" y="1043.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.02%)</title><rect x="374.5" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (280 samples, 1.63%)</title><rect x="375.2" y="1091.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (278 samples, 1.61%)</title><rect x="375.3" y="1075.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (278 samples, 1.61%)</title><rect x="375.3" y="1059.0" width="19.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (278 samples, 1.61%)</title><rect x="375.3" y="1043.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (278 samples, 1.61%)</title><rect x="375.3" y="1027.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.3" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.23%)</title><rect x="375.5" y="1011.0" width="2.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="378.5" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.02%)</title><rect x="375.9" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="378.9" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.02%)</title><rect x="376.8" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="379.8" y="1006.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.03%)</title><rect x="377.4" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="380.4" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.03%)</title><rect x="377.7" y="995.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="380.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (236 samples, 1.37%)</title><rect x="378.2" y="1011.0" width="16.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="381.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (194 samples, 1.13%)</title><rect x="381.1" y="995.0" width="13.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="384.1" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="381.1" y="979.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="384.1" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (190 samples, 1.10%)</title><rect x="381.3" y="979.0" width="13.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.3" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (172 samples, 1.00%)</title><rect x="382.6" y="963.0" width="11.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.6" y="974.0"></text>
</g>
<g>
<title>do_futex (171 samples, 0.99%)</title><rect x="382.6" y="947.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.6" y="958.0"></text>
</g>
<g>
<title>futex_wake (170 samples, 0.99%)</title><rect x="382.6" y="931.0" width="11.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.6" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (11 samples, 0.06%)</title><rect x="383.3" y="915.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.3" y="926.0"></text>
</g>
<g>
<title>wake_up_q (146 samples, 0.85%)</title><rect x="384.3" y="915.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.3" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (143 samples, 0.83%)</title><rect x="384.5" y="899.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="387.5" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (142 samples, 0.82%)</title><rect x="384.6" y="883.0" width="9.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="387.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (8 samples, 0.05%)</title><rect x="394.4" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (8 samples, 0.05%)</title><rect x="394.4" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (5 samples, 0.03%)</title><rect x="394.6" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.04%)</title><rect x="395.2" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.run (5 samples, 0.03%)</title><rect x="395.7" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$394/1798067653.run (2,005 samples, 11.65%)</title><rect x="396.1" y="1123.0" width="137.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.1" y="1134.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2,004 samples, 11.64%)</title><rect x="396.1" y="1107.0" width="137.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.1" y="1118.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2,000 samples, 11.62%)</title><rect x="396.4" y="1091.0" width="137.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.4" y="1102.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,978 samples, 11.49%)</title><rect x="397.6" y="1075.0" width="135.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.6" y="1086.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,974 samples, 11.47%)</title><rect x="397.8" y="1059.0" width="135.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.8" y="1070.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,973 samples, 11.46%)</title><rect x="397.9" y="1043.0" width="135.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.9" y="1054.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,973 samples, 11.46%)</title><rect x="397.9" y="1027.0" width="135.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.9" y="1038.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,973 samples, 11.46%)</title><rect x="397.9" y="1011.0" width="135.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.9" y="1022.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,973 samples, 11.46%)</title><rect x="397.9" y="995.0" width="135.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.9" y="1006.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,970 samples, 11.44%)</title><rect x="398.1" y="979.0" width="135.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.1" y="990.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,965 samples, 11.42%)</title><rect x="398.5" y="963.0" width="134.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.5" y="974.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (276 samples, 1.60%)</title><rect x="399.2" y="947.0" width="18.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (232 samples, 1.35%)</title><rect x="399.6" y="931.0" width="15.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="402.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.21%)</title><rect x="399.6" y="915.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.21%)</title><rect x="399.6" y="899.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.02%)</title><rect x="399.8" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.02%)</title><rect x="399.8" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.02%)</title><rect x="399.8" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (27 samples, 0.16%)</title><rect x="400.1" y="883.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (24 samples, 0.14%)</title><rect x="400.3" y="867.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (23 samples, 0.13%)</title><rect x="400.4" y="851.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (22 samples, 0.13%)</title><rect x="400.4" y="835.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.4" y="846.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="400.4" y="819.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="403.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (8 samples, 0.05%)</title><rect x="400.8" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$428/974970919.get (7 samples, 0.04%)</title><rect x="401.4" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (196 samples, 1.14%)</title><rect x="402.1" y="915.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (194 samples, 1.13%)</title><rect x="402.1" y="899.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (193 samples, 1.12%)</title><rect x="402.1" y="883.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (62 samples, 0.36%)</title><rect x="402.2" y="867.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.03%)</title><rect x="402.8" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (5 samples, 0.03%)</title><rect x="403.2" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.03%)</title><rect x="403.2" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="403.2" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$424/484639362.apply (24 samples, 0.14%)</title><rect x="403.9" y="851.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (19 samples, 0.11%)</title><rect x="404.2" y="835.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (15 samples, 0.09%)</title><rect x="404.4" y="819.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (12 samples, 0.07%)</title><rect x="404.6" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="405.0" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="405.0" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.get$Lambda (4 samples, 0.02%)</title><rect x="405.0" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.&lt;init&gt; (4 samples, 0.02%)</title><rect x="405.0" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1182132911.apply (14 samples, 0.08%)</title><rect x="405.5" y="851.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (14 samples, 0.08%)</title><rect x="405.5" y="835.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (14 samples, 0.08%)</title><rect x="405.5" y="819.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (14 samples, 0.08%)</title><rect x="405.5" y="803.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (14 samples, 0.08%)</title><rect x="405.5" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.08%)</title><rect x="405.5" y="771.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="408.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$440/1852712216.run (14 samples, 0.08%)</title><rect x="405.5" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (14 samples, 0.08%)</title><rect x="405.5" y="739.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (12 samples, 0.07%)</title><rect x="405.7" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (12 samples, 0.07%)</title><rect x="405.7" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.07%)</title><rect x="405.7" y="691.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.07%)</title><rect x="405.7" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.07%)</title><rect x="405.7" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.06%)</title><rect x="405.8" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (10 samples, 0.06%)</title><rect x="405.8" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (9 samples, 0.05%)</title><rect x="405.9" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (9 samples, 0.05%)</title><rect x="405.9" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.9" y="606.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (9 samples, 0.05%)</title><rect x="405.9" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (9 samples, 0.05%)</title><rect x="405.9" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (9 samples, 0.05%)</title><rect x="405.9" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.9" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.05%)</title><rect x="405.9" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.05%)</title><rect x="405.9" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.9" y="526.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (9 samples, 0.05%)</title><rect x="405.9" y="499.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="408.9" y="510.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (9 samples, 0.05%)</title><rect x="405.9" y="483.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="408.9" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (9 samples, 0.05%)</title><rect x="405.9" y="467.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="408.9" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (8 samples, 0.05%)</title><rect x="405.9" y="451.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="408.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (128 samples, 0.74%)</title><rect x="406.5" y="867.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (128 samples, 0.74%)</title><rect x="406.5" y="851.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.06%)</title><rect x="406.5" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (9 samples, 0.05%)</title><rect x="406.6" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$370/1725152409.apply (118 samples, 0.69%)</title><rect x="407.2" y="835.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (114 samples, 0.66%)</title><rect x="407.4" y="819.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (112 samples, 0.65%)</title><rect x="407.6" y="803.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/1264514825.apply (103 samples, 0.60%)</title><rect x="407.7" y="787.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (102 samples, 0.59%)</title><rect x="407.7" y="771.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (10 samples, 0.06%)</title><rect x="408.0" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.05%)</title><rect x="408.1" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (85 samples, 0.49%)</title><rect x="408.9" y="755.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (43 samples, 0.25%)</title><rect x="409.0" y="739.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (42 samples, 0.24%)</title><rect x="409.0" y="723.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (42 samples, 0.24%)</title><rect x="409.0" y="707.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$411/290053851.accept (12 samples, 0.07%)</title><rect x="409.3" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (12 samples, 0.07%)</title><rect x="409.3" y="675.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (12 samples, 0.07%)</title><rect x="409.3" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (10 samples, 0.06%)</title><rect x="409.4" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.06%)</title><rect x="409.4" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="409.8" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.02%)</title><rect x="409.8" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$419/1031079439.accept (23 samples, 0.13%)</title><rect x="410.1" y="691.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (23 samples, 0.13%)</title><rect x="410.1" y="675.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (23 samples, 0.13%)</title><rect x="410.1" y="659.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (21 samples, 0.12%)</title><rect x="410.3" y="643.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (21 samples, 0.12%)</title><rect x="410.3" y="627.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.12%)</title><rect x="410.3" y="611.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.11%)</title><rect x="410.4" y="595.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19 samples, 0.11%)</title><rect x="410.4" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19 samples, 0.11%)</title><rect x="410.4" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (18 samples, 0.10%)</title><rect x="410.5" y="547.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (9 samples, 0.05%)</title><rect x="410.5" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.05%)</title><rect x="410.5" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.05%)</title><rect x="410.5" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.05%)</title><rect x="410.5" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (7 samples, 0.04%)</title><rect x="411.1" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (7 samples, 0.04%)</title><rect x="411.1" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.02%)</title><rect x="411.3" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.02%)</title><rect x="411.3" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="411.3" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (40 samples, 0.23%)</title><rect x="411.9" y="739.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (7 samples, 0.04%)</title><rect x="412.0" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (5 samples, 0.03%)</title><rect x="412.2" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (31 samples, 0.18%)</title><rect x="412.5" y="723.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (14 samples, 0.08%)</title><rect x="412.8" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (13 samples, 0.08%)</title><rect x="413.8" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="416.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.02%)</title><rect x="413.9" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.03%)</title><rect x="414.2" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1690211041.apply (7 samples, 0.04%)</title><rect x="414.7" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7 samples, 0.04%)</title><rect x="414.7" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7 samples, 0.04%)</title><rect x="414.7" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (7 samples, 0.04%)</title><rect x="414.7" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (5 samples, 0.03%)</title><rect x="414.8" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (25 samples, 0.15%)</title><rect x="415.5" y="931.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.06%)</title><rect x="415.8" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.8" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.06%)</title><rect x="415.8" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="418.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.02%)</title><rect x="416.2" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (11 samples, 0.06%)</title><rect x="416.5" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.08%)</title><rect x="417.2" y="931.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.05%)</title><rect x="417.5" y="915.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.05%)</title><rect x="417.5" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="417.7" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="417.7" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.02%)</title><rect x="417.7" y="851.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (22 samples, 0.13%)</title><rect x="418.1" y="947.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (22 samples, 0.13%)</title><rect x="418.1" y="931.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (18 samples, 0.10%)</title><rect x="418.4" y="915.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,653 samples, 9.60%)</title><rect x="419.6" y="947.0" width="113.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.6" y="958.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,651 samples, 9.59%)</title><rect x="419.8" y="931.0" width="113.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.8" y="942.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,651 samples, 9.59%)</title><rect x="419.8" y="915.0" width="113.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.8" y="926.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,648 samples, 9.57%)</title><rect x="419.9" y="899.0" width="112.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.9" y="910.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$408/1974387419.run (7 samples, 0.04%)</title><rect x="420.4" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (7 samples, 0.04%)</title><rect x="420.4" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (7 samples, 0.04%)</title><rect x="420.4" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,626 samples, 9.45%)</title><rect x="420.9" y="883.0" width="111.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.9" y="894.0">jdk/internal/..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1,599 samples, 9.29%)</title><rect x="421.2" y="867.0" width="109.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.2" y="878.0">java/nio/chan..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,599 samples, 9.29%)</title><rect x="421.2" y="851.0" width="109.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.2" y="862.0">sun/nio/ch/So..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.08%)</title><rect x="421.7" y="835.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.08%)</title><rect x="421.7" y="819.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="422.7" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="422.7" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,572 samples, 9.13%)</title><rect x="423.0" y="835.0" width="107.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.0" y="846.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,569 samples, 9.11%)</title><rect x="423.2" y="819.0" width="107.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.2" y="830.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (11 samples, 0.06%)</title><rect x="424.4" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.4" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (9 samples, 0.05%)</title><rect x="424.6" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (7 samples, 0.04%)</title><rect x="424.7" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.03%)</title><rect x="424.8" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.03%)</title><rect x="424.8" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (7 samples, 0.04%)</title><rect x="425.5" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1,503 samples, 8.73%)</title><rect x="426.2" y="803.0" width="103.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.2" y="814.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1,503 samples, 8.73%)</title><rect x="426.2" y="787.0" width="103.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.2" y="798.0">sun/nio/ch/F..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.03%)</title><rect x="427.0" y="771.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="430.0" y="782.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.02%)</title><rect x="427.6" y="771.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="430.6" y="782.0"></text>
</g>
<g>
<title>writev (1,478 samples, 8.59%)</title><rect x="427.9" y="771.0" width="101.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="430.9" y="782.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,396 samples, 8.11%)</title><rect x="433.5" y="755.0" width="95.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.5" y="766.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (1,394 samples, 8.10%)</title><rect x="433.6" y="739.0" width="95.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="436.6" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_writev (1,365 samples, 7.93%)</title><rect x="435.1" y="723.0" width="93.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.1" y="734.0">__x64_sys_w..</text>
</g>
<g>
<title>do_writev (1,362 samples, 7.91%)</title><rect x="435.1" y="707.0" width="93.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="438.1" y="718.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (21 samples, 0.12%)</title><rect x="435.3" y="691.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (21 samples, 0.12%)</title><rect x="435.3" y="675.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="438.3" y="686.0"></text>
</g>
<g>
<title>__fget (21 samples, 0.12%)</title><rect x="435.3" y="659.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="438.3" y="670.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="436.7" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="439.7" y="702.0"></text>
</g>
<g>
<title>vfs_writev (1,333 samples, 7.74%)</title><rect x="437.1" y="691.0" width="91.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="440.1" y="702.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (1,310 samples, 7.61%)</title><rect x="437.9" y="675.0" width="89.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="440.9" y="686.0">do_iter_wr..</text>
</g>
<g>
<title>__fsnotify_parent (18 samples, 0.10%)</title><rect x="438.2" y="659.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.2" y="670.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1,263 samples, 7.34%)</title><rect x="439.4" y="659.0" width="86.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="442.4" y="670.0">do_iter_re..</text>
</g>
<g>
<title>sock_write_iter (1,257 samples, 7.30%)</title><rect x="439.8" y="643.0" width="86.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="442.8" y="654.0">sock_write..</text>
</g>
<g>
<title>sock_sendmsg (1,240 samples, 7.20%)</title><rect x="441.0" y="627.0" width="85.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.0" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (11 samples, 0.06%)</title><rect x="441.0" y="611.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="444.0" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,220 samples, 7.09%)</title><rect x="441.7" y="611.0" width="83.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.7" y="622.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (1,211 samples, 7.03%)</title><rect x="442.3" y="595.0" width="83.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="445.3" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (10 samples, 0.06%)</title><rect x="442.3" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="445.3" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.02%)</title><rect x="443.0" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="446.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.02%)</title><rect x="443.6" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="446.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,182 samples, 6.87%)</title><rect x="444.1" y="579.0" width="81.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="447.1" y="590.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.03%)</title><rect x="445.3" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.3" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.02%)</title><rect x="445.4" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.4" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (11 samples, 0.06%)</title><rect x="445.8" y="563.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="448.8" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.03%)</title><rect x="445.8" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="448.8" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.03%)</title><rect x="446.9" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="449.9" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.02%)</title><rect x="446.9" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="449.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (72 samples, 0.42%)</title><rect x="447.2" y="563.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="450.2" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (62 samples, 0.36%)</title><rect x="447.8" y="547.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="450.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (32 samples, 0.19%)</title><rect x="448.1" y="531.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (21 samples, 0.12%)</title><rect x="448.1" y="515.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.1" y="526.0"></text>
</g>
<g>
<title>memset_erms (9 samples, 0.05%)</title><rect x="449.6" y="515.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.07%)</title><rect x="450.4" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="453.4" y="542.0"></text>
</g>
<g>
<title>ksize (8 samples, 0.05%)</title><rect x="451.2" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="454.2" y="542.0"></text>
</g>
<g>
<title>__ksize (8 samples, 0.05%)</title><rect x="451.2" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.2" y="526.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.02%)</title><rect x="452.1" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.1" y="574.0"></text>
</g>
<g>
<title>tcp_push (1,038 samples, 6.03%)</title><rect x="452.6" y="563.0" width="71.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.6" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,037 samples, 6.02%)</title><rect x="452.6" y="547.0" width="71.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="455.6" y="558.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (1,034 samples, 6.01%)</title><rect x="452.8" y="531.0" width="70.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.8" y="542.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (969 samples, 5.63%)</title><rect x="453.9" y="515.0" width="66.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="456.9" y="526.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (933 samples, 5.42%)</title><rect x="455.0" y="499.0" width="64.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.0" y="510.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (926 samples, 5.38%)</title><rect x="455.0" y="483.0" width="63.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="458.0" y="494.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.02%)</title><rect x="455.6" y="467.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="458.6" y="478.0"></text>
</g>
<g>
<title>ip_local_out (909 samples, 5.28%)</title><rect x="455.8" y="467.0" width="62.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="458.8" y="478.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (138 samples, 0.80%)</title><rect x="456.0" y="451.0" width="9.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="459.0" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.02%)</title><rect x="456.4" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="459.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (122 samples, 0.71%)</title><rect x="456.9" y="435.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="459.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.05%)</title><rect x="457.1" y="419.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="460.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.05%)</title><rect x="457.1" y="403.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.1" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (100 samples, 0.58%)</title><rect x="457.8" y="419.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="460.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (94 samples, 0.55%)</title><rect x="458.0" y="403.0" width="6.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.0" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (27 samples, 0.16%)</title><rect x="458.4" y="387.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="461.4" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (9 samples, 0.05%)</title><rect x="460.6" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="463.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (37 samples, 0.21%)</title><rect x="461.3" y="387.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="464.3" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.02%)</title><rect x="461.7" y="371.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.7" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (27 samples, 0.16%)</title><rect x="461.9" y="371.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.9" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (15 samples, 0.09%)</title><rect x="462.8" y="355.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.8" y="366.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (10 samples, 0.06%)</title><rect x="463.8" y="387.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="466.8" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (7 samples, 0.04%)</title><rect x="464.8" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (5 samples, 0.03%)</title><rect x="465.0" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="468.0" y="414.0"></text>
</g>
<g>
<title>ip_output (763 samples, 4.43%)</title><rect x="465.6" y="451.0" width="52.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.6" y="462.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (735 samples, 4.27%)</title><rect x="466.3" y="435.0" width="50.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.3" y="446.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.06%)</title><rect x="466.4" y="419.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.4" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (719 samples, 4.18%)</title><rect x="467.1" y="419.0" width="49.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.1" y="430.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (715 samples, 4.15%)</title><rect x="467.2" y="403.0" width="49.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="470.2" y="414.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (631 samples, 3.67%)</title><rect x="468.6" y="387.0" width="43.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.6" y="398.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (630 samples, 3.66%)</title><rect x="468.7" y="371.0" width="43.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="471.7" y="382.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (626 samples, 3.64%)</title><rect x="468.9" y="355.0" width="42.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="471.9" y="366.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (619 samples, 3.60%)</title><rect x="468.9" y="339.0" width="42.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="471.9" y="350.0">__so..</text>
</g>
<g>
<title>net_rx_action (604 samples, 3.51%)</title><rect x="469.8" y="323.0" width="41.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.8" y="334.0">net..</text>
</g>
<g>
<title>process_backlog (599 samples, 3.48%)</title><rect x="470.1" y="307.0" width="41.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="473.1" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (588 samples, 3.42%)</title><rect x="470.7" y="291.0" width="40.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.7" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (586 samples, 3.40%)</title><rect x="470.9" y="275.0" width="40.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.9" y="286.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.08%)</title><rect x="471.3" y="259.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv (563 samples, 3.27%)</title><rect x="472.2" y="259.0" width="38.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.2" y="270.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (9 samples, 0.05%)</title><rect x="472.6" y="243.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (520 samples, 3.02%)</title><rect x="473.2" y="243.0" width="35.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.2" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (512 samples, 2.97%)</title><rect x="473.3" y="227.0" width="35.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="476.3" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (480 samples, 2.79%)</title><rect x="473.5" y="211.0" width="32.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="476.5" y="222.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (474 samples, 2.75%)</title><rect x="473.5" y="195.0" width="32.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.5" y="206.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (461 samples, 2.68%)</title><rect x="474.3" y="179.0" width="31.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="477.3" y="190.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (26 samples, 0.15%)</title><rect x="475.2" y="163.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.2" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.06%)</title><rect x="477.2" y="163.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="480.2" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.03%)</title><rect x="477.6" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (408 samples, 2.37%)</title><rect x="478.0" y="163.0" width="28.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.0" y="174.0">t..</text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.03%)</title><rect x="478.2" y="147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.2" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (399 samples, 2.32%)</title><rect x="478.6" y="147.0" width="27.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.6" y="158.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.09%)</title><rect x="479.9" y="131.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="482.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (14 samples, 0.08%)</title><rect x="480.0" y="115.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.0" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.08%)</title><rect x="480.0" y="99.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.0" y="110.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.08%)</title><rect x="480.0" y="83.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.0" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.08%)</title><rect x="480.0" y="67.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.04%)</title><rect x="481.1" y="131.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack (80 samples, 0.46%)</title><rect x="481.6" y="131.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.6" y="142.0"></text>
</g>
<g>
<title>rb_first (6 samples, 0.03%)</title><rect x="483.1" y="115.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="486.1" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (47 samples, 0.27%)</title><rect x="483.6" y="115.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.16%)</title><rect x="484.5" y="99.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="487.5" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.03%)</title><rect x="484.5" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="487.5" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.02%)</title><rect x="484.6" y="67.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="487.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="484.6" y="51.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="487.6" y="62.0"></text>
</g>
<g>
<title>skb_release_all (21 samples, 0.12%)</title><rect x="484.9" y="83.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.9" y="94.0"></text>
</g>
<g>
<title>skb_release_data (20 samples, 0.12%)</title><rect x="484.9" y="67.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.9" y="78.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.06%)</title><rect x="485.6" y="51.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.6" y="62.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.06%)</title><rect x="485.6" y="35.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="488.6" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (255 samples, 1.48%)</title><rect x="487.1" y="131.0" width="17.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.1" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (255 samples, 1.48%)</title><rect x="487.1" y="115.0" width="17.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="490.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (247 samples, 1.43%)</title><rect x="487.6" y="99.0" width="17.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="490.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (245 samples, 1.42%)</title><rect x="487.8" y="83.0" width="16.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="490.8" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (243 samples, 1.41%)</title><rect x="487.9" y="67.0" width="16.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="490.9" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.05%)</title><rect x="504.6" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="507.6" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.05%)</title><rect x="505.1" y="131.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="508.1" y="142.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.03%)</title><rect x="505.3" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.3" y="126.0"></text>
</g>
<g>
<title>raw_local_deliver (6 samples, 0.03%)</title><rect x="506.0" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.0" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.12%)</title><rect x="506.8" y="211.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="509.8" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (13 samples, 0.08%)</title><rect x="506.9" y="195.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="509.9" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (13 samples, 0.08%)</title><rect x="506.9" y="179.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.9" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.03%)</title><rect x="507.8" y="195.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.8" y="206.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (4 samples, 0.02%)</title><rect x="507.9" y="179.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (5 samples, 0.03%)</title><rect x="508.5" y="227.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="511.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (4 samples, 0.02%)</title><rect x="508.8" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.8" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (5 samples, 0.03%)</title><rect x="509.1" y="243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.1" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.09%)</title><rect x="509.7" y="243.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="512.7" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (8 samples, 0.05%)</title><rect x="509.9" y="227.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.9" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.04%)</title><rect x="509.9" y="211.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="512.9" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (4 samples, 0.02%)</title><rect x="510.5" y="227.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="513.5" y="238.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.04%)</title><rect x="511.4" y="339.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="514.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (64 samples, 0.37%)</title><rect x="511.8" y="387.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="514.8" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (62 samples, 0.36%)</title><rect x="511.8" y="371.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="514.8" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (35 samples, 0.20%)</title><rect x="512.7" y="355.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="515.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (23 samples, 0.13%)</title><rect x="513.1" y="339.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.1" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.03%)</title><rect x="513.3" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.3" y="334.0"></text>
</g>
<g>
<title>netif_rx (10 samples, 0.06%)</title><rect x="513.6" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="516.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.05%)</title><rect x="513.7" y="307.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="516.7" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.04%)</title><rect x="513.8" y="291.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.8" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.03%)</title><rect x="514.8" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="517.8" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (11 samples, 0.06%)</title><rect x="515.3" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.08%)</title><rect x="516.8" y="435.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="519.8" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (10 samples, 0.06%)</title><rect x="516.8" y="419.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="519.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (5 samples, 0.03%)</title><rect x="517.1" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="520.1" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="517.9" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="520.9" y="462.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.02%)</title><rect x="518.2" y="467.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.2" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (4 samples, 0.02%)</title><rect x="518.6" y="483.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="521.6" y="494.0"></text>
</g>
<g>
<title>skb_clone (12 samples, 0.07%)</title><rect x="519.0" y="499.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="522.0" y="510.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.03%)</title><rect x="519.4" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.4" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (24 samples, 0.14%)</title><rect x="520.8" y="515.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (15 samples, 0.09%)</title><rect x="521.4" y="499.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="524.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.08%)</title><rect x="521.5" y="483.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.5" y="494.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.08%)</title><rect x="521.5" y="467.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="524.5" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="522.0" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.0" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.05%)</title><rect x="522.9" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="525.9" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.02%)</title><rect x="523.2" y="499.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.2" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.02%)</title><rect x="523.7" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="526.7" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (16 samples, 0.09%)</title><rect x="524.0" y="563.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="527.0" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.02%)</title><rect x="524.1" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="527.1" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.06%)</title><rect x="524.4" y="547.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="527.4" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.02%)</title><rect x="524.8" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="527.8" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.04%)</title><rect x="525.4" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.4" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (22 samples, 0.13%)</title><rect x="526.0" y="659.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.0" y="670.0"></text>
</g>
<g>
<title>security_file_permission (18 samples, 0.10%)</title><rect x="526.3" y="643.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="529.3" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (13 samples, 0.08%)</title><rect x="526.6" y="627.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="529.6" y="638.0"></text>
</g>
<g>
<title>common_file_perm (12 samples, 0.07%)</title><rect x="526.7" y="611.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="529.7" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (6 samples, 0.03%)</title><rect x="527.1" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="530.1" y="606.0"></text>
</g>
<g>
<title>import_iovec (11 samples, 0.06%)</title><rect x="527.7" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.7" y="686.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (9 samples, 0.05%)</title><rect x="527.8" y="659.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.03%)</title><rect x="528.8" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="531.8" y="734.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.02%)</title><rect x="528.8" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="531.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (22 samples, 0.13%)</title><rect x="529.2" y="803.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.2" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.05%)</title><rect x="529.4" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.02%)</title><rect x="529.6" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.06%)</title><rect x="529.9" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (4 samples, 0.02%)</title><rect x="530.4" y="771.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.4" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (23 samples, 0.13%)</title><rect x="530.8" y="867.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.8" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (10 samples, 0.06%)</title><rect x="530.9" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.9" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (10 samples, 0.06%)</title><rect x="531.6" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.6" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (10 samples, 0.06%)</title><rect x="531.6" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (5 samples, 0.03%)</title><rect x="532.5" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.5" y="894.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (5 samples, 0.03%)</title><rect x="532.5" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (5 samples, 0.03%)</title><rect x="533.2" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (5 samples, 0.03%)</title><rect x="533.2" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,265 samples, 13.16%)</title><rect x="533.5" y="1123.0" width="155.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.5" y="1134.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,256 samples, 13.11%)</title><rect x="534.1" y="1107.0" width="154.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.1" y="1118.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (895 samples, 5.20%)</title><rect x="534.5" y="1091.0" width="61.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.5" y="1102.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (890 samples, 5.17%)</title><rect x="534.8" y="1075.0" width="61.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.8" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (888 samples, 5.16%)</title><rect x="534.9" y="1059.0" width="60.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.9" y="1070.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.remove (4 samples, 0.02%)</title><rect x="535.4" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (109 samples, 0.63%)</title><rect x="535.8" y="1043.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (106 samples, 0.62%)</title><rect x="535.8" y="1027.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.compareAndSet (6 samples, 0.03%)</title><rect x="536.1" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (6 samples, 0.03%)</title><rect x="536.1" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (94 samples, 0.55%)</title><rect x="536.5" y="1011.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (93 samples, 0.54%)</title><rect x="536.6" y="995.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (87 samples, 0.51%)</title><rect x="536.9" y="979.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (86 samples, 0.50%)</title><rect x="536.9" y="963.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (76 samples, 0.44%)</title><rect x="537.0" y="947.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (76 samples, 0.44%)</title><rect x="537.0" y="931.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (70 samples, 0.41%)</title><rect x="537.4" y="915.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.4" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.10%)</title><rect x="537.9" y="899.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="540.9" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.10%)</title><rect x="538.0" y="883.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="541.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (17 samples, 0.10%)</title><rect x="538.0" y="867.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="541.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (12 samples, 0.07%)</title><rect x="538.0" y="851.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.0" y="862.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="538.8" y="851.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="541.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (45 samples, 0.26%)</title><rect x="539.1" y="899.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (41 samples, 0.24%)</title><rect x="539.4" y="883.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.4" y="894.0"></text>
</g>
<g>
<title>__libc_write (41 samples, 0.24%)</title><rect x="539.4" y="867.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="542.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.19%)</title><rect x="540.0" y="851.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="543.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.19%)</title><rect x="540.0" y="835.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_write (29 samples, 0.17%)</title><rect x="540.2" y="819.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="543.2" y="830.0"></text>
</g>
<g>
<title>ksys_write (29 samples, 0.17%)</title><rect x="540.2" y="803.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.2" y="814.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.14%)</title><rect x="540.5" y="787.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="543.5" y="798.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.13%)</title><rect x="540.5" y="771.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.5" y="782.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.13%)</title><rect x="540.5" y="755.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.5" y="766.0"></text>
</g>
<g>
<title>pipe_write (19 samples, 0.11%)</title><rect x="540.7" y="739.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.7" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 0.09%)</title><rect x="540.8" y="723.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="543.8" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.09%)</title><rect x="540.8" y="707.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="543.8" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.09%)</title><rect x="540.8" y="691.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9 samples, 0.05%)</title><rect x="542.2" y="947.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.05%)</title><rect x="542.2" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.2" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="542.6" y="915.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.6" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="542.6" y="899.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.03%)</title><rect x="543.2" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.02%)</title><rect x="543.3" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.02%)</title><rect x="543.3" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/358927442.run (4 samples, 0.02%)</title><rect x="543.3" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.02%)</title><rect x="543.3" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.02%)</title><rect x="543.3" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (759 samples, 4.41%)</title><rect x="543.7" y="1043.0" width="52.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.7" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (753 samples, 4.37%)</title><rect x="543.9" y="1027.0" width="51.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.9" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (753 samples, 4.37%)</title><rect x="543.9" y="1011.0" width="51.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.9" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (753 samples, 4.37%)</title><rect x="543.9" y="995.0" width="51.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.9" y="1006.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (412 samples, 2.39%)</title><rect x="544.3" y="979.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.3" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (10 samples, 0.06%)</title><rect x="544.3" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.06%)</title><rect x="544.3" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (6 samples, 0.03%)</title><rect x="544.3" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (402 samples, 2.34%)</title><rect x="545.0" y="963.0" width="27.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.0" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (401 samples, 2.33%)</title><rect x="545.0" y="947.0" width="27.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.0" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (398 samples, 2.31%)</title><rect x="545.1" y="931.0" width="27.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.1" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (393 samples, 2.28%)</title><rect x="545.4" y="915.0" width="27.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.4" y="926.0">j..</text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="545.4" y="899.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="548.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (389 samples, 2.26%)</title><rect x="545.7" y="899.0" width="26.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.7" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (386 samples, 2.24%)</title><rect x="545.9" y="883.0" width="26.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.9" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.02%)</title><rect x="546.0" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (336 samples, 1.95%)</title><rect x="546.4" y="867.0" width="23.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.4" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (332 samples, 1.93%)</title><rect x="546.7" y="851.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.7" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (304 samples, 1.77%)</title><rect x="546.9" y="835.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="547.3" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (10 samples, 0.06%)</title><rect x="547.6" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.06%)</title><rect x="547.6" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.06%)</title><rect x="547.6" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.6" y="798.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="547.8" y="771.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="550.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1182132911.apply (201 samples, 1.17%)</title><rect x="548.7" y="819.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (198 samples, 1.15%)</title><rect x="548.9" y="803.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (8 samples, 0.05%)</title><rect x="549.9" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7 samples, 0.04%)</title><rect x="550.0" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.02%)</title><rect x="550.2" y="755.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (166 samples, 0.96%)</title><rect x="550.7" y="787.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.03%)</title><rect x="550.8" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.03%)</title><rect x="550.9" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (158 samples, 0.92%)</title><rect x="551.2" y="771.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.2" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$157/1563968298.apply (9 samples, 0.05%)</title><rect x="551.2" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (8 samples, 0.05%)</title><rect x="551.3" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (8 samples, 0.05%)</title><rect x="551.3" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (5 samples, 0.03%)</title><rect x="551.5" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (149 samples, 0.87%)</title><rect x="551.8" y="755.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.8" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (38 samples, 0.22%)</title><rect x="552.0" y="739.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (15 samples, 0.09%)</title><rect x="552.0" y="723.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.0" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (13 samples, 0.08%)</title><rect x="552.2" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.2" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (13 samples, 0.08%)</title><rect x="552.2" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.06%)</title><rect x="552.4" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (9 samples, 0.05%)</title><rect x="552.4" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (17 samples, 0.10%)</title><rect x="553.1" y="723.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.10%)</title><rect x="553.1" y="707.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (14 samples, 0.08%)</title><rect x="553.3" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.06%)</title><rect x="553.5" y="675.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.03%)</title><rect x="553.5" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.02%)</title><rect x="553.9" y="659.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (5 samples, 0.03%)</title><rect x="554.3" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (5 samples, 0.03%)</title><rect x="554.3" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (5 samples, 0.03%)</title><rect x="554.3" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (5 samples, 0.03%)</title><rect x="554.3" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.02%)</title><rect x="554.3" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (7 samples, 0.04%)</title><rect x="554.8" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="554.9" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (99 samples, 0.58%)</title><rect x="555.2" y="739.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$440/1852712216.run (97 samples, 0.56%)</title><rect x="555.4" y="723.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (95 samples, 0.55%)</title><rect x="555.5" y="707.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.04%)</title><rect x="555.6" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.04%)</title><rect x="555.6" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.06%)</title><rect x="556.1" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="556.5" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.02%)</title><rect x="556.5" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (5 samples, 0.03%)</title><rect x="556.8" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (58 samples, 0.34%)</title><rect x="557.5" y="691.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (57 samples, 0.33%)</title><rect x="557.6" y="675.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.6" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (42 samples, 0.24%)</title><rect x="558.5" y="659.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.5" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (35 samples, 0.20%)</title><rect x="558.9" y="643.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.9" y="654.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (34 samples, 0.20%)</title><rect x="558.9" y="627.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.9" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (20 samples, 0.12%)</title><rect x="559.1" y="611.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="562.1" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (7 samples, 0.04%)</title><rect x="559.6" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="562.6" y="606.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (5 samples, 0.03%)</title><rect x="560.4" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="563.4" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (5 samples, 0.03%)</title><rect x="560.8" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="563.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (5 samples, 0.03%)</title><rect x="561.7" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$371/526674589.apply (77 samples, 0.45%)</title><rect x="562.4" y="819.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (74 samples, 0.43%)</title><rect x="562.6" y="803.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (66 samples, 0.38%)</title><rect x="562.8" y="787.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.8" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (4 samples, 0.02%)</title><rect x="563.7" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.7" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (17 samples, 0.10%)</title><rect x="564.0" y="771.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.0" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (17 samples, 0.10%)</title><rect x="564.0" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.0" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (16 samples, 0.09%)</title><rect x="564.0" y="739.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (25 samples, 0.15%)</title><rect x="565.2" y="771.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (25 samples, 0.15%)</title><rect x="565.2" y="755.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.2" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (12 samples, 0.07%)</title><rect x="566.1" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.1" y="750.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.03%)</title><rect x="566.5" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.02%)</title><rect x="566.6" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.03%)</title><rect x="567.3" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10 samples, 0.06%)</title><rect x="567.7" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.06%)</title><rect x="567.7" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.02%)</title><rect x="567.8" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.02%)</title><rect x="567.8" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$373/1864395379.apply (5 samples, 0.03%)</title><rect x="568.1" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (5 samples, 0.03%)</title><rect x="568.1" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.02%)</title><rect x="568.1" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (15 samples, 0.09%)</title><rect x="568.4" y="835.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (7 samples, 0.04%)</title><rect x="568.8" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.03%)</title><rect x="568.9" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="568.9" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.apply (32 samples, 0.19%)</title><rect x="569.4" y="867.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (32 samples, 0.19%)</title><rect x="569.4" y="851.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (25 samples, 0.15%)</title><rect x="569.9" y="835.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (23 samples, 0.13%)</title><rect x="570.0" y="819.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.12%)</title><rect x="570.2" y="803.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.03%)</title><rect x="570.2" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.09%)</title><rect x="570.5" y="787.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.04%)</title><rect x="570.5" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.04%)</title><rect x="570.5" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.5" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (7 samples, 0.04%)</title><rect x="570.5" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$467/1200215500.apply (11 samples, 0.06%)</title><rect x="571.6" y="867.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (11 samples, 0.06%)</title><rect x="571.6" y="851.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (10 samples, 0.06%)</title><rect x="571.7" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (327 samples, 1.90%)</title><rect x="572.5" y="979.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.5" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (15 samples, 0.09%)</title><rect x="573.2" y="963.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.06%)</title><rect x="573.5" y="947.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.5" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.06%)</title><rect x="573.5" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.5" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.06%)</title><rect x="573.5" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (34 samples, 0.20%)</title><rect x="574.2" y="963.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.05%)</title><rect x="575.3" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.3" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.05%)</title><rect x="575.3" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.3" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.02%)</title><rect x="575.5" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.5" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="576.1" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (36 samples, 0.21%)</title><rect x="576.6" y="963.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (18 samples, 0.10%)</title><rect x="576.8" y="947.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.8" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (18 samples, 0.10%)</title><rect x="576.8" y="931.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.8" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (12 samples, 0.07%)</title><rect x="577.2" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.2" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.07%)</title><rect x="578.2" y="947.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (19 samples, 0.11%)</title><rect x="579.0" y="963.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.03%)</title><rect x="579.2" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.2" y="958.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.03%)</title><rect x="579.2" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.02%)</title><rect x="579.7" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.02%)</title><rect x="579.7" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (78 samples, 0.45%)</title><rect x="580.3" y="963.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.3" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (73 samples, 0.42%)</title><rect x="580.5" y="947.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.5" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (70 samples, 0.41%)</title><rect x="580.7" y="931.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.7" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (12 samples, 0.07%)</title><rect x="581.0" y="915.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (12 samples, 0.07%)</title><rect x="581.0" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.0" y="910.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.06%)</title><rect x="581.0" y="883.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="584.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (47 samples, 0.27%)</title><rect x="581.9" y="915.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (38 samples, 0.22%)</title><rect x="582.5" y="899.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.5" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (35 samples, 0.20%)</title><rect x="582.7" y="883.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (10 samples, 0.06%)</title><rect x="583.2" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.2" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.05%)</title><rect x="583.9" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.9" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.05%)</title><rect x="584.4" y="867.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.03%)</title><rect x="584.5" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.03%)</title><rect x="584.5" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.03%)</title><rect x="584.5" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (6 samples, 0.03%)</title><rect x="585.1" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (134 samples, 0.78%)</title><rect x="585.7" y="963.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.06%)</title><rect x="586.7" y="947.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.05%)</title><rect x="586.8" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.03%)</title><rect x="587.5" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.5" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="587.8" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (99 samples, 0.58%)</title><rect x="588.1" y="947.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.15%)</title><rect x="588.7" y="931.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.09%)</title><rect x="589.2" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.05%)</title><rect x="589.2" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.2" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="589.9" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (28 samples, 0.16%)</title><rect x="590.4" y="931.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (28 samples, 0.16%)</title><rect x="590.4" y="915.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.trim (13 samples, 0.08%)</title><rect x="592.3" y="931.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (11 samples, 0.06%)</title><rect x="592.5" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="592.9" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (21 samples, 0.12%)</title><rect x="593.3" y="931.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.03%)</title><rect x="593.4" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="593.4" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.03%)</title><rect x="593.4" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.02%)</title><rect x="593.8" y="915.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.02%)</title><rect x="594.0" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$434/1133747825.apply (6 samples, 0.03%)</title><rect x="594.3" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (5 samples, 0.03%)</title><rect x="594.4" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.4" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.02%)</title><rect x="594.4" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/1804175133.accept (8 samples, 0.05%)</title><rect x="595.0" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (7 samples, 0.04%)</title><rect x="595.1" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.02%)</title><rect x="595.3" y="947.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,356 samples, 7.88%)</title><rect x="595.8" y="1091.0" width="93.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.8" y="1102.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,349 samples, 7.84%)</title><rect x="596.3" y="1075.0" width="92.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.3" y="1086.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,348 samples, 7.83%)</title><rect x="596.4" y="1059.0" width="92.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.4" y="1070.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (1,347 samples, 7.83%)</title><rect x="596.4" y="1043.0" width="92.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.4" y="1054.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,346 samples, 7.82%)</title><rect x="596.5" y="1027.0" width="92.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.5" y="1038.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,322 samples, 7.68%)</title><rect x="597.1" y="1011.0" width="90.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.1" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (9 samples, 0.05%)</title><rect x="597.3" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (7 samples, 0.04%)</title><rect x="597.5" y="979.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.5" y="990.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.02%)</title><rect x="597.6" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,309 samples, 7.60%)</title><rect x="597.9" y="995.0" width="89.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.9" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,309 samples, 7.60%)</title><rect x="597.9" y="979.0" width="89.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.9" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/358927442.run (843 samples, 4.90%)</title><rect x="598.0" y="963.0" width="57.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.0" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (843 samples, 4.90%)</title><rect x="598.0" y="947.0" width="57.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.0" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (843 samples, 4.90%)</title><rect x="598.0" y="931.0" width="57.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.0" y="942.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (36 samples, 0.21%)</title><rect x="598.0" y="915.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.0" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.04%)</title><rect x="598.0" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.0" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.02%)</title><rect x="598.2" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.2" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.02%)</title><rect x="598.2" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.02%)</title><rect x="598.2" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.2" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.02%)</title><rect x="598.2" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.2" y="846.0"></text>
</g>
<g>
<title>java/util/Collection.stream (22 samples, 0.13%)</title><rect x="598.5" y="899.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (20 samples, 0.12%)</title><rect x="598.6" y="883.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (17 samples, 0.10%)</title><rect x="598.8" y="867.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (17 samples, 0.10%)</title><rect x="598.8" y="851.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (17 samples, 0.10%)</title><rect x="598.8" y="835.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.8" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.04%)</title><rect x="600.0" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.03%)</title><rect x="600.1" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.03%)</title><rect x="600.1" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (806 samples, 4.68%)</title><rect x="600.5" y="915.0" width="55.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.5" y="926.0">jdk/i..</text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.03%)</title><rect x="600.5" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.5" y="910.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.03%)</title><rect x="600.5" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.03%)</title><rect x="600.5" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (800 samples, 4.65%)</title><rect x="600.9" y="899.0" width="54.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.9" y="910.0">jdk/i..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (190 samples, 1.10%)</title><rect x="604.7" y="883.0" width="13.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="607.7" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (189 samples, 1.10%)</title><rect x="604.7" y="867.0" width="13.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="607.7" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (187 samples, 1.09%)</title><rect x="604.7" y="851.0" width="12.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="607.7" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (161 samples, 0.94%)</title><rect x="604.9" y="835.0" width="11.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="607.9" y="846.0"></text>
</g>
<g>
<title>SpinPause (24 samples, 0.14%)</title><rect x="615.9" y="835.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="618.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (375 samples, 2.18%)</title><rect x="617.7" y="883.0" width="25.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.7" y="894.0">j..</text>
</g>
<g>
<title>java/time/Instant.isAfter (101 samples, 0.59%)</title><rect x="623.1" y="867.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.1" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (101 samples, 0.59%)</title><rect x="623.1" y="851.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Long.compare (13 samples, 0.08%)</title><rect x="629.1" y="835.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.1" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.07%)</title><rect x="630.0" y="867.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.0" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (11 samples, 0.06%)</title><rect x="630.1" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.1" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.06%)</title><rect x="630.1" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.1" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (8 samples, 0.05%)</title><rect x="630.8" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.8" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (130 samples, 0.76%)</title><rect x="631.4" y="867.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.4" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (130 samples, 0.76%)</title><rect x="631.4" y="851.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.4" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (128 samples, 0.74%)</title><rect x="631.4" y="835.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.4" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (126 samples, 0.73%)</title><rect x="631.5" y="819.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.5" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (36 samples, 0.21%)</title><rect x="640.4" y="867.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.4" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (8 samples, 0.05%)</title><rect x="642.3" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.3" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.03%)</title><rect x="642.8" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (178 samples, 1.03%)</title><rect x="643.5" y="883.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (178 samples, 1.03%)</title><rect x="643.5" y="867.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (8 samples, 0.05%)</title><rect x="643.5" y="851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.05%)</title><rect x="643.5" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.05%)</title><rect x="643.5" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.04%)</title><rect x="643.6" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.04%)</title><rect x="643.6" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.03%)</title><rect x="643.7" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (170 samples, 0.99%)</title><rect x="644.1" y="851.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (170 samples, 0.99%)</title><rect x="644.1" y="835.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (98 samples, 0.57%)</title><rect x="644.1" y="819.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (98 samples, 0.57%)</title><rect x="644.1" y="803.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (98 samples, 0.57%)</title><rect x="644.1" y="787.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.1" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (38 samples, 0.22%)</title><rect x="644.9" y="771.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="647.9" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (37 samples, 0.21%)</title><rect x="645.0" y="755.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (32 samples, 0.19%)</title><rect x="645.0" y="739.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="648.0" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (25 samples, 0.15%)</title><rect x="645.1" y="723.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.1" y="734.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.03%)</title><rect x="646.8" y="723.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="649.8" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (4 samples, 0.02%)</title><rect x="647.2" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="650.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (47 samples, 0.27%)</title><rect x="647.6" y="771.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (46 samples, 0.27%)</title><rect x="647.6" y="755.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.6" y="766.0"></text>
</g>
<g>
<title>__libc_write (45 samples, 0.26%)</title><rect x="647.7" y="739.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="650.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.22%)</title><rect x="648.2" y="723.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.21%)</title><rect x="648.3" y="707.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="651.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (37 samples, 0.21%)</title><rect x="648.3" y="691.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.3" y="702.0"></text>
</g>
<g>
<title>ksys_write (37 samples, 0.21%)</title><rect x="648.3" y="675.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="651.3" y="686.0"></text>
</g>
<g>
<title>vfs_write (34 samples, 0.20%)</title><rect x="648.5" y="659.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="651.5" y="670.0"></text>
</g>
<g>
<title>__vfs_write (31 samples, 0.18%)</title><rect x="648.5" y="643.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="651.5" y="654.0"></text>
</g>
<g>
<title>new_sync_write (31 samples, 0.18%)</title><rect x="648.5" y="627.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="651.5" y="638.0"></text>
</g>
<g>
<title>pipe_write (30 samples, 0.17%)</title><rect x="648.5" y="611.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="651.5" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (25 samples, 0.15%)</title><rect x="648.6" y="595.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="651.6" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.15%)</title><rect x="648.6" y="579.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="651.6" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.14%)</title><rect x="648.6" y="563.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="651.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (72 samples, 0.42%)</title><rect x="650.8" y="819.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (72 samples, 0.42%)</title><rect x="650.8" y="803.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (72 samples, 0.42%)</title><rect x="650.8" y="787.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (72 samples, 0.42%)</title><rect x="650.8" y="771.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (71 samples, 0.41%)</title><rect x="650.9" y="755.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.9" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="655.3" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="658.3" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.02%)</title><rect x="655.3" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="658.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$443/527689736.accept (49 samples, 0.28%)</title><rect x="655.8" y="963.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (49 samples, 0.28%)</title><rect x="655.8" y="947.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (46 samples, 0.27%)</title><rect x="656.0" y="931.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (33 samples, 0.19%)</title><rect x="656.2" y="915.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31 samples, 0.18%)</title><rect x="656.3" y="899.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (30 samples, 0.17%)</title><rect x="656.4" y="883.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (29 samples, 0.17%)</title><rect x="656.5" y="867.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.07%)</title><rect x="656.8" y="851.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$450/1661108157.accept (6 samples, 0.03%)</title><rect x="657.2" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$450/1661108157.accept (4 samples, 0.02%)</title><rect x="657.6" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (4 samples, 0.02%)</title><rect x="657.6" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (4 samples, 0.02%)</title><rect x="657.6" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$454/1351673014.accept (8 samples, 0.05%)</title><rect x="657.9" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (6 samples, 0.03%)</title><rect x="658.1" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (6 samples, 0.03%)</title><rect x="658.1" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$333/1164372824.accept (8 samples, 0.05%)</title><rect x="658.5" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (8 samples, 0.05%)</title><rect x="658.5" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.02%)</title><rect x="658.8" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (410 samples, 2.38%)</title><rect x="659.2" y="963.0" width="28.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.2" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (410 samples, 2.38%)</title><rect x="659.2" y="947.0" width="28.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.2" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (408 samples, 2.37%)</title><rect x="659.3" y="931.0" width="28.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.3" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (408 samples, 2.37%)</title><rect x="659.3" y="915.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.3" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (407 samples, 2.36%)</title><rect x="659.3" y="899.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.3" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (405 samples, 2.35%)</title><rect x="659.4" y="883.0" width="27.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.4" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (404 samples, 2.35%)</title><rect x="659.5" y="867.0" width="27.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.5" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.05%)</title><rect x="659.6" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.6" y="862.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="659.7" y="835.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="662.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$458/9249739.accept (393 samples, 2.28%)</title><rect x="660.3" y="851.0" width="26.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.3" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (392 samples, 2.28%)</title><rect x="660.3" y="835.0" width="26.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.3" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (391 samples, 2.27%)</title><rect x="660.4" y="819.0" width="26.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.4" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (8 samples, 0.05%)</title><rect x="660.4" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (7 samples, 0.04%)</title><rect x="660.5" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (7 samples, 0.04%)</title><rect x="660.5" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (383 samples, 2.22%)</title><rect x="660.9" y="803.0" width="26.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.9" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.10%)</title><rect x="661.1" y="787.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.apply (10 samples, 0.06%)</title><rect x="661.5" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (10 samples, 0.06%)</title><rect x="661.5" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (8 samples, 0.05%)</title><rect x="661.6" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.04%)</title><rect x="661.6" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="661.8" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.02%)</title><rect x="662.3" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (356 samples, 2.07%)</title><rect x="662.6" y="787.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.6" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (11 samples, 0.06%)</title><rect x="662.8" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.06%)</title><rect x="662.8" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.8" y="766.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="663.0" y="739.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="666.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.02%)</title><rect x="663.3" y="739.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (342 samples, 1.99%)</title><rect x="663.5" y="771.0" width="23.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.5" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (327 samples, 1.90%)</title><rect x="664.0" y="755.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.0" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (315 samples, 1.83%)</title><rect x="664.4" y="739.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.4" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (315 samples, 1.83%)</title><rect x="664.4" y="723.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.4" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (312 samples, 1.81%)</title><rect x="664.6" y="707.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.6" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (305 samples, 1.77%)</title><rect x="665.1" y="691.0" width="20.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (298 samples, 1.73%)</title><rect x="665.5" y="675.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (298 samples, 1.73%)</title><rect x="665.5" y="659.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.5" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (49 samples, 0.28%)</title><rect x="666.0" y="643.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="669.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.03%)</title><rect x="667.2" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="670.2" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.06%)</title><rect x="667.7" y="627.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="670.7" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.02%)</title><rect x="668.5" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="671.5" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.04%)</title><rect x="668.9" y="627.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="671.9" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (235 samples, 1.37%)</title><rect x="669.6" y="643.0" width="16.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="672.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (192 samples, 1.12%)</title><rect x="672.5" y="627.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="675.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (192 samples, 1.12%)</title><rect x="672.5" y="611.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="675.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (184 samples, 1.07%)</title><rect x="673.0" y="595.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="676.0" y="606.0"></text>
</g>
<g>
<title>do_futex (183 samples, 1.06%)</title><rect x="673.1" y="579.0" width="12.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.1" y="590.0"></text>
</g>
<g>
<title>futex_wake (174 samples, 1.01%)</title><rect x="673.5" y="563.0" width="11.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="676.5" y="574.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.03%)</title><rect x="673.8" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="676.8" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.06%)</title><rect x="674.2" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.2" y="558.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.02%)</title><rect x="674.6" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="677.6" y="542.0"></text>
</g>
<g>
<title>wake_up_q (152 samples, 0.88%)</title><rect x="675.0" y="547.0" width="10.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="678.0" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (148 samples, 0.86%)</title><rect x="675.3" y="531.0" width="10.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="678.3" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (147 samples, 0.85%)</title><rect x="675.3" y="515.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="678.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$198/1866554373.accept (4 samples, 0.02%)</title><rect x="686.2" y="739.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$464/299828296.accept (4 samples, 0.02%)</title><rect x="686.4" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (4 samples, 0.02%)</title><rect x="686.4" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$198/1866554373.accept (4 samples, 0.02%)</title><rect x="686.7" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (4 samples, 0.02%)</title><rect x="686.7" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (4 samples, 0.02%)</title><rect x="686.7" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (6 samples, 0.03%)</title><rect x="687.3" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (6 samples, 0.03%)</title><rect x="687.3" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (5 samples, 0.03%)</title><rect x="687.3" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (5 samples, 0.03%)</title><rect x="687.7" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (9 samples, 0.05%)</title><rect x="688.2" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7 samples, 0.04%)</title><rect x="688.2" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7 samples, 0.04%)</title><rect x="688.2" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7 samples, 0.04%)</title><rect x="688.2" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.run (307 samples, 1.78%)</title><rect x="688.8" y="1123.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.8" y="1134.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (305 samples, 1.77%)</title><rect x="688.9" y="1107.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (305 samples, 1.77%)</title><rect x="688.9" y="1091.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (39 samples, 0.23%)</title><rect x="689.1" y="1075.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (27 samples, 0.16%)</title><rect x="689.8" y="1059.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (27 samples, 0.16%)</title><rect x="689.8" y="1043.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (53 samples, 0.31%)</title><rect x="691.8" y="1075.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.08%)</title><rect x="692.3" y="1059.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.05%)</title><rect x="692.5" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.05%)</title><rect x="693.2" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.05%)</title><rect x="693.2" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="693.3" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="693.3" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="693.3" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="693.4" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.4" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="693.4" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.4" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="693.4" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.4" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.15%)</title><rect x="693.7" y="1059.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.02%)</title><rect x="694.0" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.02%)</title><rect x="694.0" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="694.3" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="694.3" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.04%)</title><rect x="694.9" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="695.1" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="695.1" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.02%)</title><rect x="695.1" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.upserting (210 samples, 1.22%)</title><rect x="695.4" y="1075.0" width="14.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (5 samples, 0.03%)</title><rect x="695.7" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.03%)</title><rect x="695.7" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.02%)</title><rect x="696.0" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.02%)</title><rect x="696.0" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (47 samples, 0.27%)</title><rect x="696.3" y="1059.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.3" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (10 samples, 0.06%)</title><rect x="696.6" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.6" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (9 samples, 0.05%)</title><rect x="696.7" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (4 samples, 0.02%)</title><rect x="696.7" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (4 samples, 0.02%)</title><rect x="697.0" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (30 samples, 0.17%)</title><rect x="697.5" y="1043.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.5" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (26 samples, 0.15%)</title><rect x="697.5" y="1027.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.5" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (5 samples, 0.03%)</title><rect x="697.5" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.5" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (5 samples, 0.03%)</title><rect x="697.5" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.5" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (5 samples, 0.03%)</title><rect x="697.5" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.5" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5 samples, 0.03%)</title><rect x="697.5" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.5" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5 samples, 0.03%)</title><rect x="697.5" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.5" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.02%)</title><rect x="697.5" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.5" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="697.5" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.5" y="926.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (11 samples, 0.06%)</title><rect x="697.9" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.9" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.munch (5 samples, 0.03%)</title><rect x="697.9" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.compact (5 samples, 0.03%)</title><rect x="697.9" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.9" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (4 samples, 0.02%)</title><rect x="698.2" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.2" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode.fromBytesNoCopy (4 samples, 0.02%)</title><rect x="698.2" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.2" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (9 samples, 0.05%)</title><rect x="698.6" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (6 samples, 0.03%)</title><rect x="698.8" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.03%)</title><rect x="698.8" y="979.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.8" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="698.9" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.9" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="698.9" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doUpsert (128 samples, 0.74%)</title><rect x="699.5" y="1059.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (18 samples, 0.10%)</title><rect x="699.6" y="1043.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (15 samples, 0.09%)</title><rect x="699.8" y="1027.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.8" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="699.8" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="702.8" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="699.9" y="995.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="702.9" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="699.9" y="979.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="702.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="700.4" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (109 samples, 0.63%)</title><rect x="700.8" y="1043.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (107 samples, 0.62%)</title><rect x="700.9" y="1027.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (102 samples, 0.59%)</title><rect x="701.2" y="1011.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (101 samples, 0.59%)</title><rect x="701.2" y="995.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (81 samples, 0.47%)</title><rect x="701.8" y="979.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (79 samples, 0.46%)</title><rect x="701.9" y="963.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (79 samples, 0.46%)</title><rect x="701.9" y="947.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (79 samples, 0.46%)</title><rect x="701.9" y="931.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (79 samples, 0.46%)</title><rect x="701.9" y="915.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (79 samples, 0.46%)</title><rect x="701.9" y="899.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.9" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.09%)</title><rect x="701.9" y="883.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="704.9" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.03%)</title><rect x="702.7" y="867.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="705.7" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (62 samples, 0.36%)</title><rect x="703.0" y="883.0" width="4.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="706.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 0.30%)</title><rect x="703.7" y="867.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="706.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 0.30%)</title><rect x="703.8" y="851.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="706.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (47 samples, 0.27%)</title><rect x="704.1" y="835.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.1" y="846.0"></text>
</g>
<g>
<title>do_futex (46 samples, 0.27%)</title><rect x="704.1" y="819.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.1" y="830.0"></text>
</g>
<g>
<title>futex_wake (45 samples, 0.26%)</title><rect x="704.1" y="803.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.1" y="814.0"></text>
</g>
<g>
<title>wake_up_q (40 samples, 0.23%)</title><rect x="704.5" y="787.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.5" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (40 samples, 0.23%)</title><rect x="704.5" y="771.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="707.5" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (40 samples, 0.23%)</title><rect x="704.5" y="755.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="707.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.04%)</title><rect x="707.3" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.03%)</title><rect x="707.5" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.02%)</title><rect x="707.6" y="947.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.02%)</title><rect x="707.6" y="931.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (22 samples, 0.13%)</title><rect x="708.3" y="1059.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (22 samples, 0.13%)</title><rect x="708.3" y="1043.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (22 samples, 0.13%)</title><rect x="708.3" y="1027.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.12%)</title><rect x="708.4" y="1011.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.12%)</title><rect x="708.4" y="995.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.08%)</title><rect x="708.6" y="979.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.06%)</title><rect x="708.7" y="963.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.06%)</title><rect x="708.7" y="947.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.06%)</title><rect x="708.7" y="931.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.06%)</title><rect x="708.7" y="915.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.06%)</title><rect x="708.7" y="899.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.7" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.05%)</title><rect x="708.9" y="883.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="711.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="709.1" y="867.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="712.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="709.1" y="851.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="709.1" y="835.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.1" y="846.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="709.1" y="819.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="712.1" y="830.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="709.1" y="803.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.1" y="814.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="709.2" y="787.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="712.2" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="709.2" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="712.2" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="709.2" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,075 samples, 6.24%)</title><rect x="710.0" y="1171.0" width="73.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.0" y="1182.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,075 samples, 6.24%)</title><rect x="710.0" y="1155.0" width="73.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.0" y="1166.0">java/uti..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (7 samples, 0.04%)</title><rect x="711.7" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet (7 samples, 0.04%)</title><rect x="711.7" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (539 samples, 3.13%)</title><rect x="712.2" y="1139.0" width="37.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.2" y="1150.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (11 samples, 0.06%)</title><rect x="713.8" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (11 samples, 0.06%)</title><rect x="713.8" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (6 samples, 0.03%)</title><rect x="714.5" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (6 samples, 0.03%)</title><rect x="714.5" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (494 samples, 2.87%)</title><rect x="715.0" y="1123.0" width="33.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.0" y="1134.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (486 samples, 2.82%)</title><rect x="715.5" y="1107.0" width="33.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.5" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (481 samples, 2.79%)</title><rect x="715.8" y="1091.0" width="33.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.8" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (480 samples, 2.79%)</title><rect x="715.8" y="1075.0" width="33.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.8" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (395 samples, 2.29%)</title><rect x="715.8" y="1059.0" width="27.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.8" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (383 samples, 2.22%)</title><rect x="716.7" y="1043.0" width="26.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.7" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (5 samples, 0.03%)</title><rect x="716.7" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (375 samples, 2.18%)</title><rect x="717.1" y="1027.0" width="25.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.1" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.06%)</title><rect x="717.3" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.06%)</title><rect x="717.3" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.3" y="1006.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="717.3" y="979.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="720.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.02%)</title><rect x="717.7" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (362 samples, 2.10%)</title><rect x="718.0" y="1011.0" width="24.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.0" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (57 samples, 0.33%)</title><rect x="718.2" y="995.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (56 samples, 0.33%)</title><rect x="718.2" y="979.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (56 samples, 0.33%)</title><rect x="718.2" y="963.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.cancel (4 samples, 0.02%)</title><rect x="718.2" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (51 samples, 0.30%)</title><rect x="718.5" y="947.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (48 samples, 0.28%)</title><rect x="718.7" y="931.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf (4 samples, 0.02%)</title><rect x="718.8" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (26 samples, 0.15%)</title><rect x="719.1" y="915.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (6 samples, 0.03%)</title><rect x="720.4" y="899.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.05%)</title><rect x="720.9" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.05%)</title><rect x="720.9" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.04%)</title><rect x="721.5" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.04%)</title><rect x="721.5" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (302 samples, 1.75%)</title><rect x="722.1" y="995.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.1" y="1006.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="722.2" y="979.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="725.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (294 samples, 1.71%)</title><rect x="722.6" y="979.0" width="20.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (293 samples, 1.70%)</title><rect x="722.6" y="963.0" width="20.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (290 samples, 1.68%)</title><rect x="722.8" y="947.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (289 samples, 1.68%)</title><rect x="722.9" y="931.0" width="19.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (284 samples, 1.65%)</title><rect x="723.3" y="915.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (284 samples, 1.65%)</title><rect x="723.3" y="899.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.3" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (40 samples, 0.23%)</title><rect x="723.5" y="883.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="726.5" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.03%)</title><rect x="724.1" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="727.1" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.06%)</title><rect x="724.4" y="867.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="727.4" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.06%)</title><rect x="725.5" y="867.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="728.5" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (239 samples, 1.39%)</title><rect x="726.3" y="883.0" width="16.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="729.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (189 samples, 1.10%)</title><rect x="729.7" y="867.0" width="13.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (189 samples, 1.10%)</title><rect x="729.7" y="851.0" width="13.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="732.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (174 samples, 1.01%)</title><rect x="730.7" y="835.0" width="12.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="733.7" y="846.0"></text>
</g>
<g>
<title>do_futex (173 samples, 1.00%)</title><rect x="730.7" y="819.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="733.7" y="830.0"></text>
</g>
<g>
<title>futex_wake (171 samples, 0.99%)</title><rect x="730.8" y="803.0" width="11.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.8" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (12 samples, 0.07%)</title><rect x="731.7" y="787.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="734.7" y="798.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.02%)</title><rect x="732.2" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.2" y="782.0"></text>
</g>
<g>
<title>wake_up_q (146 samples, 0.85%)</title><rect x="732.5" y="787.0" width="10.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="735.5" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (145 samples, 0.84%)</title><rect x="732.6" y="771.0" width="9.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.6" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (145 samples, 0.84%)</title><rect x="732.6" y="755.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="735.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (85 samples, 0.49%)</title><rect x="742.9" y="1059.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.09%)</title><rect x="743.5" y="1043.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.5" y="1054.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="743.7" y="1027.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="746.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$207/1752749326.accept (6 samples, 0.03%)</title><rect x="744.1" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$219/958209831.accept (60 samples, 0.35%)</title><rect x="744.6" y="1043.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (60 samples, 0.35%)</title><rect x="744.6" y="1027.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (46 samples, 0.27%)</title><rect x="744.8" y="1011.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (46 samples, 0.27%)</title><rect x="744.8" y="995.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (6 samples, 0.03%)</title><rect x="744.8" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (38 samples, 0.22%)</title><rect x="745.3" y="979.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35 samples, 0.20%)</title><rect x="745.5" y="963.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (35 samples, 0.20%)</title><rect x="745.5" y="947.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 0.20%)</title><rect x="745.5" y="931.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (35 samples, 0.20%)</title><rect x="745.5" y="915.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 0.14%)</title><rect x="745.7" y="899.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.14%)</title><rect x="745.7" y="883.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.14%)</title><rect x="745.7" y="867.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.14%)</title><rect x="745.7" y="851.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.14%)</title><rect x="745.7" y="835.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.14%)</title><rect x="745.7" y="819.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 0.13%)</title><rect x="745.9" y="803.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="748.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.11%)</title><rect x="746.1" y="787.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="749.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.11%)</title><rect x="746.1" y="771.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="749.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.10%)</title><rect x="746.1" y="755.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="749.1" y="766.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.10%)</title><rect x="746.1" y="739.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="749.1" y="750.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.10%)</title><rect x="746.1" y="723.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="749.1" y="734.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.10%)</title><rect x="746.2" y="707.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="749.2" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.09%)</title><rect x="746.3" y="691.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="749.3" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.09%)</title><rect x="746.3" y="675.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="749.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.02%)</title><rect x="747.4" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (11 samples, 0.06%)</title><rect x="748.0" y="1011.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.03%)</title><rect x="748.8" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="748.8" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="748.8" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.8" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="748.8" y="1075.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="751.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (389 samples, 2.26%)</title><rect x="749.2" y="1139.0" width="26.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.2" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (387 samples, 2.25%)</title><rect x="749.3" y="1123.0" width="26.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.3" y="1134.0">j..</text>
</g>
<g>
<title>Unsafe_Park (158 samples, 0.92%)</title><rect x="749.8" y="1107.0" width="10.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="752.8" y="1118.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.02%)</title><rect x="750.3" y="1091.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="753.3" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (23 samples, 0.13%)</title><rect x="750.6" y="1091.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="753.6" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (9 samples, 0.05%)</title><rect x="751.2" y="1075.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="754.2" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (7 samples, 0.04%)</title><rect x="752.5" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="755.5" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (108 samples, 0.63%)</title><rect x="753.1" y="1091.0" width="7.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="756.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 0.28%)</title><rect x="757.1" y="1075.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="760.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.27%)</title><rect x="757.3" y="1059.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="760.3" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.13%)</title><rect x="759.0" y="1043.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.0" y="1054.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.11%)</title><rect x="759.2" y="1027.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="762.2" y="1038.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.09%)</title><rect x="759.2" y="1011.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (220 samples, 1.28%)</title><rect x="760.6" y="1107.0" width="15.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.6" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.02%)</title><rect x="760.7" y="1091.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.7" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (198 samples, 1.15%)</title><rect x="761.0" y="1091.0" width="13.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="764.0" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.38%)</title><rect x="770.1" y="1075.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="773.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 0.37%)</title><rect x="770.2" y="1059.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="773.2" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 0.25%)</title><rect x="771.6" y="1043.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="774.6" y="1054.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.22%)</title><rect x="771.9" y="1027.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.9" y="1038.0"></text>
</g>
<g>
<title>futex_wait (36 samples, 0.21%)</title><rect x="771.9" y="1011.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="774.9" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.06%)</title><rect x="772.4" y="995.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.4" y="1006.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.06%)</title><rect x="772.4" y="979.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="775.4" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.05%)</title><rect x="772.5" y="963.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="775.5" y="974.0"></text>
</g>
<g>
<title>futex_wait_setup (14 samples, 0.08%)</title><rect x="773.2" y="995.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.2" y="1006.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="773.6" y="979.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="776.6" y="990.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.02%)</title><rect x="773.8" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="776.8" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.06%)</title><rect x="774.5" y="1091.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="777.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (113 samples, 0.66%)</title><rect x="775.8" y="1139.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (113 samples, 0.66%)</title><rect x="775.8" y="1123.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.8" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (39 samples, 0.23%)</title><rect x="776.1" y="1107.0" width="2.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="779.1" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.06%)</title><rect x="776.5" y="1091.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="779.5" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (18 samples, 0.10%)</title><rect x="777.5" y="1091.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="780.5" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="778.2" y="1075.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.2" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="778.2" y="1059.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="781.2" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="778.4" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="781.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.41%)</title><rect x="778.8" y="1107.0" width="4.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="781.8" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (65 samples, 0.38%)</title><rect x="779.1" y="1091.0" width="4.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="782.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.16%)</title><rect x="781.7" y="1075.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="784.7" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.16%)</title><rect x="781.7" y="1059.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.7" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.13%)</title><rect x="782.0" y="1043.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.0" y="1054.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.12%)</title><rect x="782.1" y="1027.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="785.1" y="1038.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.12%)</title><rect x="782.1" y="1011.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="785.1" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.06%)</title><rect x="782.1" y="995.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="785.1" y="1006.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (9 samples, 0.05%)</title><rect x="782.1" y="979.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.1" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (8 samples, 0.05%)</title><rect x="782.2" y="963.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="785.2" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.05%)</title><rect x="782.2" y="947.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="785.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,129 samples, 6.56%)</title><rect x="783.7" y="1171.0" width="77.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.7" y="1182.0">jdk/inter..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.08%)</title><rect x="785.5" y="1155.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="788.5" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (13 samples, 0.08%)</title><rect x="785.6" y="1139.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="788.6" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.06%)</title><rect x="785.7" y="1123.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="788.7" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.04%)</title><rect x="785.7" y="1107.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="788.7" y="1118.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="786.2" y="1107.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="789.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (6 samples, 0.03%)</title><rect x="787.0" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.0" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (6 samples, 0.03%)</title><rect x="787.0" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.0" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="787.4" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (377 samples, 2.19%)</title><rect x="787.8" y="1155.0" width="25.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.8" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/874005815.accept (367 samples, 2.13%)</title><rect x="787.8" y="1139.0" width="25.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.8" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (367 samples, 2.13%)</title><rect x="787.8" y="1123.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.8" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (366 samples, 2.13%)</title><rect x="787.9" y="1107.0" width="25.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.9" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (366 samples, 2.13%)</title><rect x="787.9" y="1091.0" width="25.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.9" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (365 samples, 2.12%)</title><rect x="788.0" y="1075.0" width="25.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.0" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.05%)</title><rect x="788.0" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (8 samples, 0.05%)</title><rect x="788.0" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.02%)</title><rect x="788.2" y="1027.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (357 samples, 2.07%)</title><rect x="788.5" y="1059.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.5" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (357 samples, 2.07%)</title><rect x="788.5" y="1043.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.5" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (357 samples, 2.07%)</title><rect x="788.5" y="1027.0" width="24.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.5" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (357 samples, 2.07%)</title><rect x="788.5" y="1011.0" width="24.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.5" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (357 samples, 2.07%)</title><rect x="788.5" y="995.0" width="24.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.5" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (349 samples, 2.03%)</title><rect x="788.9" y="979.0" width="23.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.9" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (349 samples, 2.03%)</title><rect x="788.9" y="963.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.9" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (43 samples, 0.25%)</title><rect x="789.1" y="947.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (40 samples, 0.23%)</title><rect x="789.3" y="931.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (35 samples, 0.20%)</title><rect x="789.6" y="915.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (5 samples, 0.03%)</title><rect x="789.7" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5 samples, 0.03%)</title><rect x="789.7" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5 samples, 0.03%)</title><rect x="789.7" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.17%)</title><rect x="790.0" y="899.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.17%)</title><rect x="790.0" y="883.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (28 samples, 0.16%)</title><rect x="790.0" y="867.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.16%)</title><rect x="790.0" y="851.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (27 samples, 0.16%)</title><rect x="790.1" y="835.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (16 samples, 0.09%)</title><rect x="790.3" y="819.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.09%)</title><rect x="790.4" y="803.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.09%)</title><rect x="790.4" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.09%)</title><rect x="790.4" y="771.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.09%)</title><rect x="790.4" y="755.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.09%)</title><rect x="790.4" y="739.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.4" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.05%)</title><rect x="790.8" y="723.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="793.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="790.8" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="793.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="790.9" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="790.9" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.9" y="686.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="790.9" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="793.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="790.9" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="793.9" y="654.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="791.0" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="794.0" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="791.0" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="794.0" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="791.0" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="794.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.06%)</title><rect x="792.2" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.04%)</title><rect x="792.4" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.03%)</title><rect x="792.5" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.03%)</title><rect x="792.5" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (289 samples, 1.68%)</title><rect x="792.9" y="947.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (7 samples, 0.04%)</title><rect x="793.2" y="931.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (7 samples, 0.04%)</title><rect x="793.7" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$251/888933062.get (5 samples, 0.03%)</title><rect x="793.8" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (5 samples, 0.03%)</title><rect x="793.8" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.8" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.03%)</title><rect x="793.8" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.8" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="793.9" y="867.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (271 samples, 1.57%)</title><rect x="794.1" y="931.0" width="18.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.02%)</title><rect x="794.3" y="915.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.02%)</title><rect x="794.3" y="899.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (262 samples, 1.52%)</title><rect x="794.6" y="915.0" width="18.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (262 samples, 1.52%)</title><rect x="794.6" y="899.0" width="18.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.6" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.03%)</title><rect x="795.1" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.1" y="894.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.03%)</title><rect x="795.1" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.02%)</title><rect x="795.2" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (234 samples, 1.36%)</title><rect x="795.5" y="883.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (231 samples, 1.34%)</title><rect x="795.7" y="867.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.7" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (231 samples, 1.34%)</title><rect x="795.7" y="851.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.7" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.02%)</title><rect x="796.4" y="835.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="799.4" y="846.0"></text>
</g>
<g>
<title>__read (214 samples, 1.24%)</title><rect x="796.8" y="835.0" width="14.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="799.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (152 samples, 0.88%)</title><rect x="801.1" y="819.0" width="10.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="804.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (150 samples, 0.87%)</title><rect x="801.2" y="803.0" width="10.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="804.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_read (135 samples, 0.78%)</title><rect x="802.2" y="787.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="805.2" y="798.0"></text>
</g>
<g>
<title>ksys_read (134 samples, 0.78%)</title><rect x="802.3" y="771.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="805.3" y="782.0"></text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.03%)</title><rect x="802.6" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.6" y="766.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="802.6" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="805.6" y="750.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.03%)</title><rect x="802.6" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="805.6" y="734.0"></text>
</g>
<g>
<title>vfs_read (119 samples, 0.69%)</title><rect x="803.3" y="755.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="806.3" y="766.0"></text>
</g>
<g>
<title>__vfs_read (89 samples, 0.52%)</title><rect x="803.7" y="739.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="806.7" y="750.0"></text>
</g>
<g>
<title>new_sync_read (89 samples, 0.52%)</title><rect x="803.7" y="723.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.7" y="734.0"></text>
</g>
<g>
<title>sock_read_iter (84 samples, 0.49%)</title><rect x="804.0" y="707.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="807.0" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (84 samples, 0.49%)</title><rect x="804.0" y="691.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="807.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.06%)</title><rect x="804.1" y="675.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="807.1" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (71 samples, 0.41%)</title><rect x="804.8" y="675.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="807.8" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (68 samples, 0.40%)</title><rect x="805.0" y="659.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="808.0" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.06%)</title><rect x="806.5" y="643.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="809.5" y="654.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.05%)</title><rect x="806.6" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="809.6" y="638.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.02%)</title><rect x="806.7" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="809.7" y="622.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.02%)</title><rect x="806.7" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="809.7" y="606.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.08%)</title><rect x="807.7" y="643.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="810.7" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.08%)</title><rect x="807.7" y="627.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="810.7" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (10 samples, 0.06%)</title><rect x="807.9" y="611.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="810.9" y="622.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.03%)</title><rect x="807.9" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="810.9" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.05%)</title><rect x="808.6" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="811.6" y="654.0"></text>
</g>
<g>
<title>tcp_send_ack (5 samples, 0.03%)</title><rect x="808.8" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.8" y="638.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (5 samples, 0.03%)</title><rect x="808.8" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.8" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.02%)</title><rect x="808.9" y="595.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="811.9" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.02%)</title><rect x="808.9" y="579.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="811.9" y="590.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.02%)</title><rect x="808.9" y="563.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="811.9" y="574.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.02%)</title><rect x="808.9" y="547.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="811.9" y="558.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.02%)</title><rect x="808.9" y="531.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="811.9" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.03%)</title><rect x="809.1" y="643.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="812.1" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.02%)</title><rect x="809.3" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="812.3" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (23 samples, 0.13%)</title><rect x="809.9" y="739.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="812.9" y="750.0"></text>
</g>
<g>
<title>security_file_permission (19 samples, 0.11%)</title><rect x="810.2" y="723.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.2" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.05%)</title><rect x="810.7" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="813.7" y="718.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.05%)</title><rect x="810.7" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="813.7" y="702.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.02%)</title><rect x="810.9" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="813.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.08%)</title><rect x="811.5" y="883.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.06%)</title><rect x="811.7" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1942835848.accept (10 samples, 0.06%)</title><rect x="813.0" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (10 samples, 0.06%)</title><rect x="813.0" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$379/1036176339.run (9 samples, 0.05%)</title><rect x="813.0" y="1107.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (9 samples, 0.05%)</title><rect x="813.0" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (8 samples, 0.05%)</title><rect x="813.1" y="1075.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (6 samples, 0.03%)</title><rect x="813.8" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.8" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (6 samples, 0.03%)</title><rect x="813.8" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (25 samples, 0.15%)</title><rect x="814.4" y="1155.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.4" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.13%)</title><rect x="814.4" y="1139.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.4" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (21 samples, 0.12%)</title><rect x="814.4" y="1123.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.4" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (21 samples, 0.12%)</title><rect x="814.4" y="1107.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.4" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (21 samples, 0.12%)</title><rect x="814.4" y="1091.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (20 samples, 0.12%)</title><rect x="814.4" y="1075.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (11 samples, 0.06%)</title><rect x="814.5" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.5" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (10 samples, 0.06%)</title><rect x="814.6" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$377/847739542.test (4 samples, 0.02%)</title><rect x="815.0" y="1027.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.0" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.04%)</title><rect x="815.2" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (111 samples, 0.64%)</title><rect x="816.1" y="1155.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$271/848948697.run (80 samples, 0.46%)</title><rect x="816.1" y="1139.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (80 samples, 0.46%)</title><rect x="816.1" y="1123.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (80 samples, 0.46%)</title><rect x="816.1" y="1107.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (80 samples, 0.46%)</title><rect x="816.1" y="1091.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.03%)</title><rect x="816.2" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.03%)</title><rect x="816.2" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.03%)</title><rect x="816.2" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (4 samples, 0.02%)</title><rect x="816.3" y="1027.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (71 samples, 0.41%)</title><rect x="816.7" y="1075.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (71 samples, 0.41%)</title><rect x="816.7" y="1059.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (62 samples, 0.36%)</title><rect x="817.2" y="1043.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (62 samples, 0.36%)</title><rect x="817.2" y="1027.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (59 samples, 0.34%)</title><rect x="817.2" y="1011.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (39 samples, 0.23%)</title><rect x="818.6" y="995.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (30 samples, 0.17%)</title><rect x="818.7" y="979.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (30 samples, 0.17%)</title><rect x="818.7" y="963.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (30 samples, 0.17%)</title><rect x="818.7" y="947.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (27 samples, 0.16%)</title><rect x="818.7" y="931.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (27 samples, 0.16%)</title><rect x="818.7" y="915.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (27 samples, 0.16%)</title><rect x="818.7" y="899.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (27 samples, 0.16%)</title><rect x="818.7" y="883.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.7" y="894.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.02%)</title><rect x="818.7" y="867.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (23 samples, 0.13%)</title><rect x="818.9" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.9" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.add (21 samples, 0.12%)</title><rect x="819.1" y="851.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (21 samples, 0.12%)</title><rect x="819.1" y="835.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (21 samples, 0.12%)</title><rect x="819.1" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (8 samples, 0.05%)</title><rect x="820.7" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.05%)</title><rect x="820.7" y="963.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/525677631.run (31 samples, 0.18%)</title><rect x="821.5" y="1139.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (31 samples, 0.18%)</title><rect x="821.5" y="1123.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.15%)</title><rect x="821.7" y="1107.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.15%)</title><rect x="821.7" y="1091.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.15%)</title><rect x="821.8" y="1075.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (6 samples, 0.03%)</title><rect x="821.8" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.03%)</title><rect x="822.2" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (11 samples, 0.06%)</title><rect x="822.5" y="1059.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (11 samples, 0.06%)</title><rect x="822.5" y="1043.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (11 samples, 0.06%)</title><rect x="822.5" y="1027.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (7 samples, 0.04%)</title><rect x="822.5" y="1011.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.02%)</title><rect x="823.0" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (128 samples, 0.74%)</title><rect x="823.7" y="1155.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.7" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.now (22 samples, 0.13%)</title><rect x="823.9" y="1139.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="826.9" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (22 samples, 0.13%)</title><rect x="823.9" y="1123.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.9" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (17 samples, 0.10%)</title><rect x="823.9" y="1107.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.9" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.create (17 samples, 0.10%)</title><rect x="823.9" y="1091.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.9" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (16 samples, 0.09%)</title><rect x="823.9" y="1075.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (16 samples, 0.09%)</title><rect x="823.9" y="1059.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.03%)</title><rect x="825.0" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.0" y="1118.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.02%)</title><rect x="825.1" y="1091.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="828.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (103 samples, 0.60%)</title><rect x="825.4" y="1139.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.4" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (58 samples, 0.34%)</title><rect x="826.8" y="1123.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="829.8" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (57 samples, 0.33%)</title><rect x="826.9" y="1107.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="829.9" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (56 samples, 0.33%)</title><rect x="826.9" y="1091.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="829.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (49 samples, 0.28%)</title><rect x="827.0" y="1075.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="830.0" y="1086.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="830.4" y="1075.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="833.4" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.until (4 samples, 0.02%)</title><rect x="830.9" y="1123.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (7 samples, 0.04%)</title><rect x="831.2" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (9 samples, 0.05%)</title><rect x="831.7" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (6 samples, 0.03%)</title><rect x="832.4" y="1155.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (30 samples, 0.17%)</title><rect x="832.9" y="1155.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="832.9" y="1139.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="832.9" y="1123.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.9" y="1134.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.09%)</title><rect x="833.1" y="1139.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.1" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.08%)</title><rect x="833.2" y="1123.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (12 samples, 0.07%)</title><rect x="833.3" y="1107.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (12 samples, 0.07%)</title><rect x="833.3" y="1091.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.3" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (11 samples, 0.06%)</title><rect x="833.4" y="1075.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.4" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (11 samples, 0.06%)</title><rect x="834.2" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.2" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (11 samples, 0.06%)</title><rect x="834.2" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (11 samples, 0.06%)</title><rect x="834.2" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.2" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (11 samples, 0.06%)</title><rect x="834.2" y="1091.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (11 samples, 0.06%)</title><rect x="834.2" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.03%)</title><rect x="834.9" y="1155.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.9" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.02%)</title><rect x="835.1" y="1139.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.1" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.02%)</title><rect x="835.1" y="1123.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (4 samples, 0.02%)</title><rect x="835.3" y="1155.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.3" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (290 samples, 1.68%)</title><rect x="835.7" y="1155.0" width="19.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.7" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (290 samples, 1.68%)</title><rect x="835.7" y="1139.0" width="19.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.7" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (286 samples, 1.66%)</title><rect x="835.9" y="1123.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (149 samples, 0.87%)</title><rect x="836.2" y="1107.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.2" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (140 samples, 0.81%)</title><rect x="836.6" y="1091.0" width="9.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="839.6" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 0.58%)</title><rect x="839.4" y="1075.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="842.4" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 0.58%)</title><rect x="839.4" y="1059.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.4" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (90 samples, 0.52%)</title><rect x="840.1" y="1043.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="843.1" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (90 samples, 0.52%)</title><rect x="840.1" y="1027.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.1" y="1038.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.02%)</title><rect x="840.1" y="1011.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="843.1" y="1022.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="840.1" y="995.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="843.1" y="1006.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="840.1" y="979.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="843.1" y="990.0"></text>
</g>
<g>
<title>ep_poll (84 samples, 0.49%)</title><rect x="840.3" y="1011.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.3" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (69 samples, 0.40%)</title><rect x="840.5" y="995.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="843.5" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (63 samples, 0.37%)</title><rect x="840.7" y="979.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.7" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (50 samples, 0.29%)</title><rect x="841.5" y="963.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="844.5" y="974.0"></text>
</g>
<g>
<title>pipe_poll (5 samples, 0.03%)</title><rect x="842.0" y="947.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="845.0" y="958.0"></text>
</g>
<g>
<title>sock_poll (36 samples, 0.21%)</title><rect x="842.4" y="947.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="845.4" y="958.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.05%)</title><rect x="843.8" y="931.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="846.8" y="942.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.04%)</title><rect x="844.4" y="931.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="847.4" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (10 samples, 0.06%)</title><rect x="845.3" y="995.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.3" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.06%)</title><rect x="845.3" y="979.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="848.3" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (7 samples, 0.04%)</title><rect x="845.5" y="963.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.5" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="845.5" y="947.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (117 samples, 0.68%)</title><rect x="846.4" y="1107.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.09%)</title><rect x="846.4" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (14 samples, 0.08%)</title><rect x="846.5" y="1075.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (91 samples, 0.53%)</title><rect x="847.5" y="1091.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (90 samples, 0.52%)</title><rect x="847.5" y="1075.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.5" y="1086.0"></text>
</g>
<g>
<title>__read (84 samples, 0.49%)</title><rect x="847.9" y="1059.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="850.9" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.38%)</title><rect x="849.2" y="1043.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.38%)</title><rect x="849.2" y="1027.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="852.2" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (59 samples, 0.34%)</title><rect x="849.7" y="1011.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="852.7" y="1022.0"></text>
</g>
<g>
<title>ksys_read (59 samples, 0.34%)</title><rect x="849.7" y="995.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="852.7" y="1006.0"></text>
</g>
<g>
<title>vfs_read (52 samples, 0.30%)</title><rect x="850.1" y="979.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="853.1" y="990.0"></text>
</g>
<g>
<title>__vfs_read (42 samples, 0.24%)</title><rect x="850.2" y="963.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.2" y="974.0"></text>
</g>
<g>
<title>new_sync_read (41 samples, 0.24%)</title><rect x="850.2" y="947.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="853.2" y="958.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (4 samples, 0.02%)</title><rect x="850.3" y="931.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="853.3" y="942.0"></text>
</g>
<g>
<title>pipe_read (30 samples, 0.17%)</title><rect x="851.0" y="931.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="854.0" y="942.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.04%)</title><rect x="851.5" y="915.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="854.5" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.04%)</title><rect x="851.5" y="899.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="854.5" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="851.6" y="883.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="854.6" y="894.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.03%)</title><rect x="852.0" y="915.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="855.0" y="926.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.02%)</title><rect x="852.1" y="899.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="855.1" y="910.0"></text>
</g>
<g>
<title>touch_atime (8 samples, 0.05%)</title><rect x="852.5" y="915.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="855.5" y="926.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.03%)</title><rect x="852.6" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.6" y="910.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.05%)</title><rect x="853.2" y="963.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="856.2" y="974.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.05%)</title><rect x="853.2" y="947.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.2" y="958.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.02%)</title><rect x="853.4" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="856.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (11 samples, 0.06%)</title><rect x="853.7" y="1091.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (4 samples, 0.02%)</title><rect x="854.1" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.02%)</title><rect x="854.6" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (4 samples, 0.02%)</title><rect x="854.6" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.02%)</title><rect x="854.9" y="1107.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.9" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.02%)</title><rect x="854.9" y="1091.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.02%)</title><rect x="854.9" y="1075.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="857.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.02%)</title><rect x="854.9" y="1059.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (6 samples, 0.03%)</title><rect x="855.1" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.1" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (62 samples, 0.36%)</title><rect x="855.6" y="1155.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.6" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (62 samples, 0.36%)</title><rect x="855.6" y="1139.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.6" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (60 samples, 0.35%)</title><rect x="855.7" y="1123.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.7" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (45 samples, 0.26%)</title><rect x="855.7" y="1107.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.7" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (45 samples, 0.26%)</title><rect x="855.7" y="1091.0" width="3.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="858.7" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.16%)</title><rect x="856.9" y="1075.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="859.9" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.16%)</title><rect x="856.9" y="1059.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="859.9" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 0.15%)</title><rect x="857.1" y="1043.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="860.1" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (25 samples, 0.15%)</title><rect x="857.1" y="1027.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="860.1" y="1038.0"></text>
</g>
<g>
<title>ep_poll (23 samples, 0.13%)</title><rect x="857.2" y="1011.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="860.2" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (21 samples, 0.12%)</title><rect x="857.3" y="995.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.3" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.12%)</title><rect x="857.4" y="979.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="860.4" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (13 samples, 0.08%)</title><rect x="857.7" y="963.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="860.7" y="974.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.05%)</title><rect x="858.0" y="947.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="861.0" y="958.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.02%)</title><rect x="858.4" y="931.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="861.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (15 samples, 0.09%)</title><rect x="858.8" y="1107.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (8 samples, 0.05%)</title><rect x="859.0" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (7 samples, 0.04%)</title><rect x="859.0" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.0" y="1086.0"></text>
</g>
<g>
<title>__read (6 samples, 0.03%)</title><rect x="859.1" y="1059.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="862.1" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="859.1" y="1043.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="859.1" y="1027.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (6 samples, 0.03%)</title><rect x="859.1" y="1011.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.1" y="1022.0"></text>
</g>
<g>
<title>ksys_read (6 samples, 0.03%)</title><rect x="859.1" y="995.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.1" y="1006.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.03%)</title><rect x="859.2" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="862.2" y="990.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.03%)</title><rect x="859.2" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.2" y="974.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.03%)</title><rect x="859.2" y="947.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="862.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.02%)</title><rect x="859.5" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (7 samples, 0.04%)</title><rect x="859.9" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.9" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (7 samples, 0.04%)</title><rect x="859.9" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.9" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.03%)</title><rect x="859.9" y="1123.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (11 samples, 0.06%)</title><rect x="860.3" y="1155.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.3" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (11 samples, 0.06%)</title><rect x="860.3" y="1139.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.3" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.03%)</title><rect x="860.6" y="1123.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.6" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="860.6" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="860.6" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,002 samples, 11.63%)</title><rect x="861.2" y="1171.0" width="137.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.2" y="1182.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (5 samples, 0.03%)</title><rect x="862.5" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.05%)</title><rect x="862.9" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.05%)</title><rect x="862.9" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (477 samples, 2.77%)</title><rect x="863.5" y="1155.0" width="32.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.5" y="1166.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (23 samples, 0.13%)</title><rect x="863.8" y="1139.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (17 samples, 0.10%)</title><rect x="864.0" y="1123.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (450 samples, 2.61%)</title><rect x="865.4" y="1139.0" width="30.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.4" y="1150.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (17 samples, 0.10%)</title><rect x="866.5" y="1123.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="869.5" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.02%)</title><rect x="867.9" y="1123.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="870.9" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (17 samples, 0.10%)</title><rect x="868.3" y="1123.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="871.3" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (390 samples, 2.27%)</title><rect x="869.5" y="1123.0" width="26.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="872.5" y="1134.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (278 samples, 1.61%)</title><rect x="877.1" y="1107.0" width="19.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="880.1" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (276 samples, 1.60%)</title><rect x="877.3" y="1091.0" width="18.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.3" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (248 samples, 1.44%)</title><rect x="879.0" y="1075.0" width="17.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.0" y="1086.0"></text>
</g>
<g>
<title>do_epoll_wait (248 samples, 1.44%)</title><rect x="879.0" y="1059.0" width="17.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="882.0" y="1070.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.06%)</title><rect x="879.2" y="1043.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="882.2" y="1054.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.06%)</title><rect x="879.2" y="1027.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.2" y="1038.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.06%)</title><rect x="879.2" y="1011.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="882.2" y="1022.0"></text>
</g>
<g>
<title>ep_poll (223 samples, 1.30%)</title><rect x="880.2" y="1043.0" width="15.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="883.2" y="1054.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (164 samples, 0.95%)</title><rect x="881.1" y="1027.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="884.1" y="1038.0"></text>
</g>
<g>
<title>ep_send_events_proc (134 samples, 0.78%)</title><rect x="882.3" y="1011.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.3" y="1022.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (110 samples, 0.64%)</title><rect x="883.4" y="995.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="886.4" y="1006.0"></text>
</g>
<g>
<title>sock_poll (81 samples, 0.47%)</title><rect x="885.4" y="979.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.4" y="990.0"></text>
</g>
<g>
<title>tcp_poll (16 samples, 0.09%)</title><rect x="889.1" y="963.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="892.1" y="974.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (10 samples, 0.06%)</title><rect x="890.2" y="963.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.2" y="974.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.04%)</title><rect x="891.0" y="995.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="894.0" y="1006.0"></text>
</g>
<g>
<title>mutex_lock (12 samples, 0.07%)</title><rect x="891.5" y="1011.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="894.5" y="1022.0"></text>
</g>
<g>
<title>mutex_unlock (7 samples, 0.04%)</title><rect x="892.6" y="1027.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="895.6" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (33 samples, 0.19%)</title><rect x="893.0" y="1027.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="896.0" y="1038.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.04%)</title><rect x="893.0" y="1011.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="896.0" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (26 samples, 0.15%)</title><rect x="893.5" y="1011.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="896.5" y="1022.0"></text>
</g>
<g>
<title>schedule (23 samples, 0.13%)</title><rect x="893.7" y="995.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="896.7" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (17 samples, 0.10%)</title><rect x="894.1" y="979.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.1" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.03%)</title><rect x="894.9" y="963.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.9" y="974.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.04%)</title><rect x="895.5" y="1043.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="898.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,491 samples, 8.66%)</title><rect x="896.2" y="1155.0" width="102.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.2" y="1166.0">one/nio/net/..</text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="897.4" y="1139.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="900.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,461 samples, 8.49%)</title><rect x="897.6" y="1139.0" width="100.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.6" y="1150.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (587 samples, 3.41%)</title><rect x="898.1" y="1123.0" width="40.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.1" y="1134.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (403 samples, 2.34%)</title><rect x="900.9" y="1107.0" width="27.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.9" y="1118.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (403 samples, 2.34%)</title><rect x="900.9" y="1091.0" width="27.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.9" y="1102.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (379 samples, 2.20%)</title><rect x="901.1" y="1075.0" width="26.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.1" y="1086.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29 samples, 0.17%)</title><rect x="901.3" y="1059.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="901.8" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="901.8" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.04%)</title><rect x="902.2" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.04%)</title><rect x="902.2" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.05%)</title><rect x="902.7" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="902.9" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="902.9" y="1011.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="902.9" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (348 samples, 2.02%)</title><rect x="903.3" y="1059.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.3" y="1070.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (192 samples, 1.12%)</title><rect x="903.8" y="1043.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="903.9" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="903.9" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.get$Lambda (4 samples, 0.02%)</title><rect x="903.9" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (187 samples, 1.09%)</title><rect x="904.2" y="1027.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (185 samples, 1.07%)</title><rect x="904.3" y="1011.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (8 samples, 0.05%)</title><rect x="905.0" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (142 samples, 0.82%)</title><rect x="905.5" y="995.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="905.6" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="905.6" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.02%)</title><rect x="905.7" y="947.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (136 samples, 0.79%)</title><rect x="905.9" y="979.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (135 samples, 0.78%)</title><rect x="906.0" y="963.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (135 samples, 0.78%)</title><rect x="906.0" y="947.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (135 samples, 0.78%)</title><rect x="906.0" y="931.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (135 samples, 0.78%)</title><rect x="906.0" y="915.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.0" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 0.14%)</title><rect x="906.2" y="899.0" width="1.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="909.2" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (6 samples, 0.03%)</title><rect x="906.6" y="883.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="909.6" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.04%)</title><rect x="907.4" y="883.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="910.4" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (106 samples, 0.62%)</title><rect x="907.9" y="899.0" width="7.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="910.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 0.52%)</title><rect x="909.0" y="883.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="912.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 0.52%)</title><rect x="909.0" y="867.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="912.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (86 samples, 0.50%)</title><rect x="909.2" y="851.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="912.2" y="862.0"></text>
</g>
<g>
<title>do_futex (85 samples, 0.49%)</title><rect x="909.3" y="835.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.3" y="846.0"></text>
</g>
<g>
<title>futex_wake (84 samples, 0.49%)</title><rect x="909.4" y="819.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="912.4" y="830.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.02%)</title><rect x="910.0" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="913.0" y="814.0"></text>
</g>
<g>
<title>wake_up_q (71 samples, 0.41%)</title><rect x="910.3" y="803.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.3" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (70 samples, 0.41%)</title><rect x="910.3" y="787.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.3" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (70 samples, 0.41%)</title><rect x="910.3" y="771.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="913.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.07%)</title><rect x="915.3" y="995.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.04%)</title><rect x="915.5" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.03%)</title><rect x="915.6" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (6 samples, 0.03%)</title><rect x="915.6" y="947.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.05%)</title><rect x="916.1" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.03%)</title><rect x="916.2" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.02%)</title><rect x="916.6" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="916.6" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (148 samples, 0.86%)</title><rect x="917.0" y="1043.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.0" y="1054.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (148 samples, 0.86%)</title><rect x="917.0" y="1027.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.0" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (31 samples, 0.18%)</title><rect x="917.4" y="1011.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (7 samples, 0.04%)</title><rect x="917.8" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (6 samples, 0.03%)</title><rect x="917.9" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (18 samples, 0.10%)</title><rect x="918.3" y="995.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.03%)</title><rect x="918.5" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (9 samples, 0.05%)</title><rect x="918.9" y="979.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (90 samples, 0.52%)</title><rect x="919.5" y="1011.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.5" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (81 samples, 0.47%)</title><rect x="919.8" y="995.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.8" y="1006.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="920.4" y="979.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="923.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (40 samples, 0.23%)</title><rect x="920.8" y="979.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (39 samples, 0.23%)</title><rect x="920.9" y="963.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (37 samples, 0.21%)</title><rect x="921.0" y="947.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.05%)</title><rect x="921.5" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="924.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.05%)</title><rect x="922.0" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (4 samples, 0.02%)</title><rect x="922.4" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.4" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (13 samples, 0.08%)</title><rect x="922.7" y="931.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.7" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="923.2" y="915.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.2" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (5 samples, 0.03%)</title><rect x="923.2" y="899.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="926.2" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="923.2" y="883.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="926.2" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="923.2" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="926.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (11 samples, 0.06%)</title><rect x="923.6" y="979.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (9 samples, 0.05%)</title><rect x="923.7" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="926.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (9 samples, 0.05%)</title><rect x="923.7" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (5 samples, 0.03%)</title><rect x="924.3" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.3" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (10 samples, 0.06%)</title><rect x="924.6" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.02%)</title><rect x="925.1" y="963.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.02%)</title><rect x="925.4" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.4" y="1006.0"></text>
</g>
<g>
<title>java/util/Set.of (18 samples, 0.10%)</title><rect x="925.9" y="1011.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.9" y="1022.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (13 samples, 0.08%)</title><rect x="926.2" y="995.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (6 samples, 0.03%)</title><rect x="926.7" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (4 samples, 0.02%)</title><rect x="926.8" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (20 samples, 0.12%)</title><rect x="927.1" y="1075.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (20 samples, 0.12%)</title><rect x="927.1" y="1059.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.03%)</title><rect x="927.1" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (14 samples, 0.08%)</title><rect x="927.5" y="1043.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="930.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (14 samples, 0.08%)</title><rect x="927.5" y="1027.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (14 samples, 0.08%)</title><rect x="927.5" y="1011.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="930.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (60 samples, 0.35%)</title><rect x="928.6" y="1107.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.08%)</title><rect x="929.4" y="1091.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="929.7" y="1075.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="929.7" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.05%)</title><rect x="929.7" y="1043.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="932.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="929.9" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.17%)</title><rect x="930.3" y="1091.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.11%)</title><rect x="931.0" y="1075.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.03%)</title><rect x="932.3" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.06%)</title><rect x="932.7" y="1107.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.05%)</title><rect x="932.8" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.05%)</title><rect x="932.8" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.41%)</title><rect x="933.5" y="1107.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.25%)</title><rect x="935.4" y="1091.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.4" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.04%)</title><rect x="937.3" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="940.3" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.04%)</title><rect x="937.3" y="1059.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="940.3" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.04%)</title><rect x="937.3" y="1043.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="940.3" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="937.3" y="1027.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="940.3" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="937.7" y="1075.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="940.7" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="937.8" y="1059.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="940.8" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="937.8" y="1043.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="940.8" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="937.8" y="1027.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="940.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (867 samples, 5.04%)</title><rect x="938.4" y="1123.0" width="59.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.4" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (866 samples, 5.03%)</title><rect x="938.4" y="1107.0" width="59.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="941.4" y="1118.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (66 samples, 0.38%)</title><rect x="939.0" y="1091.0" width="4.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="942.0" y="1102.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.06%)</title><rect x="939.2" y="1075.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="942.2" y="1086.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (42 samples, 0.24%)</title><rect x="940.6" y="1075.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="943.6" y="1086.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (7 samples, 0.04%)</title><rect x="941.1" y="1059.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="944.1" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.04%)</title><rect x="941.6" y="1059.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="944.6" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (8 samples, 0.05%)</title><rect x="942.1" y="1059.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="945.1" y="1070.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (11 samples, 0.06%)</title><rect x="942.6" y="1059.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="945.6" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.02%)</title><rect x="943.9" y="1091.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="946.9" y="1102.0"></text>
</g>
<g>
<title>recv (782 samples, 4.54%)</title><rect x="944.2" y="1091.0" width="53.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="947.2" y="1102.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (689 samples, 4.00%)</title><rect x="950.6" y="1075.0" width="47.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="953.6" y="1086.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (686 samples, 3.99%)</title><rect x="950.8" y="1059.0" width="47.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="953.8" y="1070.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (660 samples, 3.83%)</title><rect x="952.5" y="1043.0" width="45.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="955.5" y="1054.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (659 samples, 3.83%)</title><rect x="952.5" y="1027.0" width="45.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="955.5" y="1038.0">__sy..</text>
</g>
<g>
<title>sock_recvmsg (627 samples, 3.64%)</title><rect x="953.2" y="1011.0" width="43.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="956.2" y="1022.0">sock..</text>
</g>
<g>
<title>inet6_recvmsg (607 samples, 3.53%)</title><rect x="953.6" y="995.0" width="41.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="956.6" y="1006.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (600 samples, 3.49%)</title><rect x="954.1" y="979.0" width="41.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="957.1" y="990.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.16%)</title><rect x="955.4" y="963.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.4" y="974.0"></text>
</g>
<g>
<title>skb_release_all (25 samples, 0.15%)</title><rect x="955.6" y="947.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="958.6" y="958.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.06%)</title><rect x="955.9" y="931.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.9" y="942.0"></text>
</g>
<g>
<title>dst_release (9 samples, 0.05%)</title><rect x="956.0" y="915.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.0" y="926.0"></text>
</g>
<g>
<title>sock_rfree (10 samples, 0.06%)</title><rect x="956.6" y="931.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="959.6" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="957.3" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="960.3" y="974.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.04%)</title><rect x="957.8" y="963.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="960.8" y="974.0"></text>
</g>
<g>
<title>__release_sock (4 samples, 0.02%)</title><rect x="957.9" y="947.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="960.9" y="958.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.02%)</title><rect x="957.9" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.9" y="942.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (36 samples, 0.21%)</title><rect x="958.3" y="963.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="961.3" y="974.0"></text>
</g>
<g>
<title>__skb_datagram_iter (36 samples, 0.21%)</title><rect x="958.3" y="947.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="961.3" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (20 samples, 0.12%)</title><rect x="959.4" y="931.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="962.4" y="942.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.05%)</title><rect x="959.4" y="915.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.4" y="926.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="959.6" y="899.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="962.6" y="910.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.06%)</title><rect x="960.0" y="915.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="963.0" y="926.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.05%)</title><rect x="960.0" y="899.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.0" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (490 samples, 2.85%)</title><rect x="960.8" y="963.0" width="33.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.8" y="974.0">tc..</text>
</g>
<g>
<title>tcp_send_ack (483 samples, 2.81%)</title><rect x="961.3" y="947.0" width="33.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.3" y="958.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (480 samples, 2.79%)</title><rect x="961.5" y="931.0" width="32.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="964.5" y="942.0">__..</text>
</g>
<g>
<title>__alloc_skb (32 samples, 0.19%)</title><rect x="961.5" y="915.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="964.5" y="926.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (13 samples, 0.08%)</title><rect x="961.9" y="899.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="964.9" y="910.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.04%)</title><rect x="961.9" y="883.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="964.9" y="894.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.03%)</title><rect x="962.8" y="899.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="965.8" y="910.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.02%)</title><rect x="963.2" y="899.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="966.2" y="910.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.02%)</title><rect x="963.2" y="883.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="966.2" y="894.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (444 samples, 2.58%)</title><rect x="963.7" y="915.0" width="30.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="966.7" y="926.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (416 samples, 2.42%)</title><rect x="965.4" y="899.0" width="28.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.4" y="910.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (407 samples, 2.36%)</title><rect x="965.4" y="883.0" width="27.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="968.4" y="894.0">_..</text>
</g>
<g>
<title>ip_local_out (393 samples, 2.28%)</title><rect x="965.9" y="867.0" width="27.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.9" y="878.0">i..</text>
</g>
<g>
<title>__ip_local_out (97 samples, 0.56%)</title><rect x="966.1" y="851.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.1" y="862.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.04%)</title><rect x="966.4" y="835.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="969.4" y="846.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.02%)</title><rect x="967.1" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="970.1" y="846.0"></text>
</g>
<g>
<title>nf_hook_slow (77 samples, 0.45%)</title><rect x="967.4" y="835.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.4" y="846.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.04%)</title><rect x="967.6" y="819.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="970.6" y="830.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.04%)</title><rect x="967.6" y="803.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="970.6" y="814.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (59 samples, 0.34%)</title><rect x="968.1" y="819.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="971.1" y="830.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (57 samples, 0.33%)</title><rect x="968.2" y="803.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="971.2" y="814.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (30 samples, 0.17%)</title><rect x="968.3" y="787.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="971.3" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.03%)</title><rect x="970.4" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="973.4" y="798.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (14 samples, 0.08%)</title><rect x="970.9" y="787.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.9" y="798.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (9 samples, 0.05%)</title><rect x="971.3" y="771.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="974.3" y="782.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (5 samples, 0.03%)</title><rect x="972.3" y="819.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="975.3" y="830.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (4 samples, 0.02%)</title><rect x="972.4" y="803.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="975.4" y="814.0"></text>
</g>
<g>
<title>ip_output (289 samples, 1.68%)</title><rect x="972.8" y="851.0" width="19.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="975.8" y="862.0"></text>
</g>
<g>
<title>ip_finish_output (274 samples, 1.59%)</title><rect x="973.0" y="835.0" width="18.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.0" y="846.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.03%)</title><rect x="973.0" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="976.0" y="830.0"></text>
</g>
<g>
<title>__ip_finish_output (264 samples, 1.53%)</title><rect x="973.4" y="819.0" width="18.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="976.4" y="830.0"></text>
</g>
<g>
<title>ip_finish_output2 (261 samples, 1.52%)</title><rect x="973.6" y="803.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="976.6" y="814.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (221 samples, 1.28%)</title><rect x="974.1" y="787.0" width="15.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.1" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.0 (220 samples, 1.28%)</title><rect x="974.2" y="771.0" width="15.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.2" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (218 samples, 1.27%)</title><rect x="974.3" y="755.0" width="15.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.3" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (217 samples, 1.26%)</title><rect x="974.3" y="739.0" width="14.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="977.3" y="750.0"></text>
</g>
<g>
<title>net_rx_action (205 samples, 1.19%)</title><rect x="975.2" y="723.0" width="14.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.2" y="734.0"></text>
</g>
<g>
<title>process_backlog (201 samples, 1.17%)</title><rect x="975.4" y="707.0" width="13.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="978.4" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (197 samples, 1.14%)</title><rect x="975.6" y="691.0" width="13.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.6" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (195 samples, 1.13%)</title><rect x="975.8" y="675.0" width="13.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="978.8" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.03%)</title><rect x="975.9" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.9" y="670.0"></text>
</g>
<g>
<title>ip_rcv (185 samples, 1.07%)</title><rect x="976.3" y="659.0" width="12.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="979.3" y="670.0"></text>
</g>
<g>
<title>ip_rcv_finish (165 samples, 0.96%)</title><rect x="976.4" y="643.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="979.4" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (164 samples, 0.95%)</title><rect x="976.4" y="627.0" width="11.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="979.4" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (152 samples, 0.88%)</title><rect x="976.5" y="611.0" width="10.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="979.5" y="622.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (151 samples, 0.88%)</title><rect x="976.5" y="595.0" width="10.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.5" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (145 samples, 0.84%)</title><rect x="976.9" y="579.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="979.9" y="590.0"></text>
</g>
<g>
<title>__inet_lookup_established (15 samples, 0.09%)</title><rect x="977.6" y="563.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.6" y="574.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.03%)</title><rect x="978.8" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.8" y="574.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (111 samples, 0.64%)</title><rect x="979.1" y="563.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="982.1" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_established (107 samples, 0.62%)</title><rect x="979.4" y="547.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="982.4" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.05%)</title><rect x="979.6" y="531.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="982.6" y="542.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.03%)</title><rect x="979.9" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="982.9" y="526.0"></text>
</g>
<g>
<title>tcp_ack (83 samples, 0.48%)</title><rect x="980.3" y="531.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="983.3" y="542.0"></text>
</g>
<g>
<title>rb_next (6 samples, 0.03%)</title><rect x="982.0" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="985.0" y="526.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (45 samples, 0.26%)</title><rect x="982.5" y="515.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="985.5" y="526.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.12%)</title><rect x="983.5" y="499.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="986.5" y="510.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.03%)</title><rect x="983.5" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="986.5" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.03%)</title><rect x="983.5" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="986.5" y="478.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.08%)</title><rect x="983.8" y="483.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="986.8" y="494.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.07%)</title><rect x="983.8" y="467.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="986.8" y="478.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.03%)</title><rect x="984.3" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.3" y="462.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.03%)</title><rect x="984.3" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="987.3" y="446.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.02%)</title><rect x="984.9" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="987.9" y="510.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.03%)</title><rect x="985.2" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="988.2" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="987.2" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="990.2" y="622.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.03%)</title><rect x="987.2" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="990.2" y="606.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="987.2" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="990.2" y="590.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (4 samples, 0.02%)</title><rect x="987.8" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="990.8" y="654.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.06%)</title><rect x="988.2" y="643.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.2" y="654.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (7 samples, 0.04%)</title><rect x="988.5" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="991.5" y="638.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.04%)</title><rect x="988.5" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="991.5" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (31 samples, 0.18%)</title><rect x="989.3" y="787.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.3" y="798.0"></text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 0.17%)</title><rect x="989.3" y="771.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="992.3" y="782.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (17 samples, 0.10%)</title><rect x="989.8" y="755.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.8" y="766.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.07%)</title><rect x="990.1" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="993.1" y="750.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.05%)</title><rect x="990.3" y="723.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.3" y="734.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.05%)</title><rect x="990.3" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="993.3" y="718.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.05%)</title><rect x="990.3" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="993.3" y="702.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="992.0" y="835.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="995.0" y="846.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="992.6" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="995.6" y="862.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.02%)</title><rect x="992.9" y="867.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="995.9" y="878.0"></text>
</g>
<g>
<title>ip_copy_addrs (6 samples, 0.03%)</title><rect x="993.4" y="883.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="996.4" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.04%)</title><rect x="994.5" y="963.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.5" y="974.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.03%)</title><rect x="994.6" y="947.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="997.6" y="958.0"></text>
</g>
<g>
<title>security_socket_recvmsg (14 samples, 0.08%)</title><rect x="995.2" y="995.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="998.2" y="1006.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.06%)</title><rect x="995.5" y="979.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.5" y="990.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.06%)</title><rect x="995.5" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.5" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (22 samples, 0.13%)</title><rect x="996.2" y="1011.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.2" y="1022.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.06%)</title><rect x="996.2" y="995.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.2" y="1006.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.06%)</title><rect x="996.2" y="979.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.2" y="990.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="996.3" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.3" y="974.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.07%)</title><rect x="996.9" y="995.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="999.9" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.05%)</title><rect x="997.8" y="1139.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1000.8" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.03%)</title><rect x="998.0" y="1123.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1001.0" y="1134.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.02%)</title><rect x="998.1" y="1107.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1001.1" y="1118.0"></text>
</g>
<g>
<title>start_thread (2,795 samples, 16.24%)</title><rect x="998.4" y="1171.0" width="191.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1001.4" y="1182.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (2,795 samples, 16.24%)</title><rect x="998.4" y="1155.0" width="191.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1001.4" y="1166.0">thread_native_entry(Threa..</text>
</g>
<g>
<title>Thread::call_run() (2,795 samples, 16.24%)</title><rect x="998.4" y="1139.0" width="191.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.4" y="1150.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (241 samples, 1.40%)</title><rect x="998.4" y="1123.0" width="16.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1001.4" y="1134.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (238 samples, 1.38%)</title><rect x="998.4" y="1107.0" width="16.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1001.4" y="1118.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (128 samples, 0.74%)</title><rect x="998.4" y="1091.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.4" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (42 samples, 0.24%)</title><rect x="998.7" y="1075.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.7" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (25 samples, 0.15%)</title><rect x="999.2" y="1059.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1002.2" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.06%)</title><rect x="1000.9" y="1059.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.9" y="1070.0"></text>
</g>
<g>
<title>SpinPause (80 samples, 0.46%)</title><rect x="1001.7" y="1075.0" width="5.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1004.7" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (93 samples, 0.54%)</title><rect x="1007.2" y="1091.0" width="6.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1010.2" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (93 samples, 0.54%)</title><rect x="1007.2" y="1075.0" width="6.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.2" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (93 samples, 0.54%)</title><rect x="1007.2" y="1059.0" width="6.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.2" y="1070.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (93 samples, 0.54%)</title><rect x="1007.2" y="1043.0" width="6.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1010.2" y="1054.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (92 samples, 0.53%)</title><rect x="1007.2" y="1027.0" width="6.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1010.2" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (59 samples, 0.34%)</title><rect x="1007.2" y="1011.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1010.2" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (25 samples, 0.15%)</title><rect x="1008.1" y="995.0" width="1.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1011.1" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (20 samples, 0.12%)</title><rect x="1009.9" y="995.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.9" y="1006.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.05%)</title><rect x="1010.7" y="979.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1013.7" y="990.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (33 samples, 0.19%)</title><rect x="1011.3" y="1011.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1014.3" y="1022.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (29 samples, 0.17%)</title><rect x="1011.4" y="995.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1014.4" y="1006.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (5 samples, 0.03%)</title><rect x="1011.6" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.6" y="990.0"></text>
</g>
<g>
<title>oopDesc::size() (5 samples, 0.03%)</title><rect x="1012.1" y="979.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1015.1" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (8 samples, 0.05%)</title><rect x="1012.5" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1015.5" y="990.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (5 samples, 0.03%)</title><rect x="1013.0" y="979.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1016.0" y="990.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (16 samples, 0.09%)</title><rect x="1013.6" y="1091.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1016.6" y="1102.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (14 samples, 0.08%)</title><rect x="1013.8" y="1075.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1016.8" y="1086.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (11 samples, 0.06%)</title><rect x="1014.0" y="1059.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.0" y="1070.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (8 samples, 0.05%)</title><rect x="1014.2" y="1043.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1017.2" y="1054.0"></text>
</g>
<g>
<title>JavaThread::run() (2,538 samples, 14.74%)</title><rect x="1014.9" y="1123.0" width="174.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.9" y="1134.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2,520 samples, 14.64%)</title><rect x="1014.9" y="1107.0" width="172.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1017.9" y="1118.0">CompileBroker::compile..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2,517 samples, 14.62%)</title><rect x="1015.0" y="1091.0" width="172.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.0" y="1102.0">CompileBroker::invoke_..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2,463 samples, 14.31%)</title><rect x="1015.1" y="1075.0" width="168.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1018.1" y="1086.0">C2Compiler::compile_me..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2,463 samples, 14.31%)</title><rect x="1015.1" y="1059.0" width="168.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1018.1" y="1070.0">Compile::Compile(ciEnv..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (4 samples, 0.02%)</title><rect x="1015.1" y="1043.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1018.1" y="1054.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (4 samples, 0.02%)</title><rect x="1015.1" y="1027.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.1" y="1038.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.02%)</title><rect x="1015.1" y="1011.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1018.1" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (4 samples, 0.02%)</title><rect x="1015.1" y="995.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1018.1" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (4 samples, 0.02%)</title><rect x="1015.1" y="979.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.1" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.02%)</title><rect x="1015.1" y="963.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1018.1" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.02%)</title><rect x="1015.1" y="947.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1018.1" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (4 samples, 0.02%)</title><rect x="1015.1" y="931.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1018.1" y="942.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1,551 samples, 9.01%)</title><rect x="1015.4" y="1043.0" width="106.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1018.4" y="1054.0">Compile::Code..</text>
</g>
<g>
<title>Compile::Output() (53 samples, 0.31%)</title><rect x="1015.5" y="1027.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.5" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.02%)</title><rect x="1015.5" y="1011.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1018.5" y="1022.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (27 samples, 0.16%)</title><rect x="1015.7" y="1011.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.7" y="1022.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (6 samples, 0.03%)</title><rect x="1017.2" y="995.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.2" y="1006.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (5 samples, 0.03%)</title><rect x="1017.3" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1020.3" y="990.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (21 samples, 0.12%)</title><rect x="1017.6" y="1011.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1020.6" y="1022.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (17 samples, 0.10%)</title><rect x="1017.9" y="995.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.9" y="1006.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (9 samples, 0.05%)</title><rect x="1018.4" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1021.4" y="990.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (35 samples, 0.20%)</title><rect x="1019.1" y="1027.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1022.1" y="1038.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (11 samples, 0.06%)</title><rect x="1019.7" y="1011.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1022.7" y="1022.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (4 samples, 0.02%)</title><rect x="1020.0" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.0" y="1006.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (10 samples, 0.06%)</title><rect x="1020.6" y="1011.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1023.6" y="1022.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (9 samples, 0.05%)</title><rect x="1020.7" y="995.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.7" y="1006.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (5 samples, 0.03%)</title><rect x="1020.8" y="979.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.8" y="990.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (4 samples, 0.02%)</title><rect x="1021.6" y="1027.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1024.6" y="1038.0"></text>
</g>
<g>
<title>Matcher::match() (113 samples, 0.66%)</title><rect x="1021.8" y="1027.0" width="7.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1024.8" y="1038.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (15 samples, 0.09%)</title><rect x="1022.5" y="1011.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1025.5" y="1022.0"></text>
</g>
<g>
<title>Matcher::is_bmi_pattern(Node*, Node*) [clone .part.132] (4 samples, 0.02%)</title><rect x="1023.3" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1026.3" y="1006.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (88 samples, 0.51%)</title><rect x="1023.6" y="1011.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1026.6" y="1022.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (34 samples, 0.20%)</title><rect x="1024.5" y="995.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1027.5" y="1006.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (6 samples, 0.03%)</title><rect x="1027.0" y="995.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1030.0" y="1006.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.02%)</title><rect x="1027.1" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1030.1" y="990.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (28 samples, 0.16%)</title><rect x="1027.4" y="995.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1030.4" y="1006.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (14 samples, 0.08%)</title><rect x="1027.7" y="979.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1030.7" y="990.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (8 samples, 0.05%)</title><rect x="1027.9" y="963.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1030.9" y="974.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (9 samples, 0.05%)</title><rect x="1028.7" y="979.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1031.7" y="990.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (7 samples, 0.04%)</title><rect x="1028.7" y="963.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1031.7" y="974.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (5 samples, 0.03%)</title><rect x="1029.6" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1032.6" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (5 samples, 0.03%)</title><rect x="1029.9" y="1027.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1032.9" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (4 samples, 0.02%)</title><rect x="1030.0" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1033.0" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (145 samples, 0.84%)</title><rect x="1030.3" y="1027.0" width="9.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1033.3" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (140 samples, 0.81%)</title><rect x="1030.6" y="1011.0" width="9.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1033.6" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (5 samples, 0.03%)</title><rect x="1031.2" y="995.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1034.2" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (29 samples, 0.17%)</title><rect x="1031.5" y="995.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1034.5" y="1006.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (8 samples, 0.05%)</title><rect x="1032.0" y="979.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1035.0" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (4 samples, 0.02%)</title><rect x="1032.5" y="979.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1035.5" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (7 samples, 0.04%)</title><rect x="1032.8" y="979.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1035.8" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (27 samples, 0.16%)</title><rect x="1033.5" y="995.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1036.5" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (5 samples, 0.03%)</title><rect x="1034.1" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1037.1" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (5 samples, 0.03%)</title><rect x="1034.5" y="979.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1037.5" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (4 samples, 0.02%)</title><rect x="1034.9" y="979.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1037.9" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (17 samples, 0.10%)</title><rect x="1035.6" y="995.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1038.6" y="1006.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.03%)</title><rect x="1036.3" y="979.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1039.3" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (6 samples, 0.03%)</title><rect x="1036.8" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1039.8" y="1006.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (6 samples, 0.03%)</title><rect x="1037.2" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1040.2" y="1006.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (5 samples, 0.03%)</title><rect x="1037.3" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1040.3" y="990.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (34 samples, 0.20%)</title><rect x="1037.6" y="995.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.6" y="1006.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (18 samples, 0.10%)</title><rect x="1038.4" y="979.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1041.4" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.04%)</title><rect x="1039.2" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1042.2" y="974.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (4 samples, 0.02%)</title><rect x="1039.7" y="979.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1042.7" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (9 samples, 0.05%)</title><rect x="1040.2" y="1027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.2" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1,175 samples, 6.83%)</title><rect x="1040.9" y="1027.0" width="80.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1043.9" y="1038.0">PhaseChai..</text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (4 samples, 0.02%)</title><rect x="1041.9" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1044.9" y="1022.0"></text>
</g>
<g>
<title>Node::rematerialize() const (8 samples, 0.05%)</title><rect x="1042.3" y="1011.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1045.3" y="1022.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (30 samples, 0.17%)</title><rect x="1042.8" y="1011.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1045.8" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (73 samples, 0.42%)</title><rect x="1044.9" y="1011.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.9" y="1022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.02%)</title><rect x="1046.8" y="995.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1049.8" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (8 samples, 0.05%)</title><rect x="1047.1" y="995.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.1" y="1006.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (4 samples, 0.02%)</title><rect x="1047.3" y="979.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1050.3" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (32 samples, 0.19%)</title><rect x="1047.6" y="995.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.6" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (14 samples, 0.08%)</title><rect x="1048.9" y="979.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1051.9" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (71 samples, 0.41%)</title><rect x="1049.9" y="1011.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1052.9" y="1022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (13 samples, 0.08%)</title><rect x="1050.8" y="995.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1053.8" y="1006.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (45 samples, 0.26%)</title><rect x="1051.7" y="995.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1054.7" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (26 samples, 0.15%)</title><rect x="1053.0" y="979.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1056.0" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (105 samples, 0.61%)</title><rect x="1054.8" y="1011.0" width="7.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.8" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (6 samples, 0.03%)</title><rect x="1061.3" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1064.3" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (5 samples, 0.03%)</title><rect x="1061.3" y="979.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.3" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (268 samples, 1.56%)</title><rect x="1062.0" y="1011.0" width="18.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1065.0" y="1022.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (18 samples, 0.10%)</title><rect x="1066.1" y="995.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.1" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (9 samples, 0.05%)</title><rect x="1067.4" y="995.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1070.4" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (31 samples, 0.18%)</title><rect x="1068.3" y="995.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1071.3" y="1006.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (5 samples, 0.03%)</title><rect x="1069.9" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1072.9" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (104 samples, 0.60%)</title><rect x="1070.5" y="995.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1073.5" y="1006.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (6 samples, 0.03%)</title><rect x="1075.2" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1078.2" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (28 samples, 0.16%)</title><rect x="1075.7" y="979.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1078.7" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (31 samples, 0.18%)</title><rect x="1077.6" y="995.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1080.6" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.03%)</title><rect x="1078.1" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1081.1" y="990.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.02%)</title><rect x="1078.5" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1081.5" y="990.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (14 samples, 0.08%)</title><rect x="1078.8" y="979.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1081.8" y="990.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (4 samples, 0.02%)</title><rect x="1079.9" y="995.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1082.9" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (20 samples, 0.12%)</title><rect x="1080.3" y="1011.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1083.3" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (12 samples, 0.07%)</title><rect x="1080.9" y="995.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1083.9" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (7 samples, 0.04%)</title><rect x="1081.7" y="1011.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1084.7" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (113 samples, 0.66%)</title><rect x="1082.7" y="1011.0" width="7.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1085.7" y="1022.0"></text>
</g>
<g>
<title>RegMask::Size() const (22 samples, 0.13%)</title><rect x="1087.8" y="995.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1090.8" y="1006.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (4 samples, 0.02%)</title><rect x="1089.5" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1092.5" y="1006.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (4 samples, 0.02%)</title><rect x="1089.8" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1092.8" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (22 samples, 0.13%)</title><rect x="1090.4" y="1011.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.4" y="1022.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.03%)</title><rect x="1091.2" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1094.2" y="1006.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (5 samples, 0.03%)</title><rect x="1091.5" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.5" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (24 samples, 0.14%)</title><rect x="1091.9" y="1011.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1094.9" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (124 samples, 0.72%)</title><rect x="1093.6" y="1011.0" width="8.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.6" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (54 samples, 0.31%)</title><rect x="1097.5" y="995.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1100.5" y="1006.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (12 samples, 0.07%)</title><rect x="1101.2" y="995.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1104.2" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (5 samples, 0.03%)</title><rect x="1102.1" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.1" y="1022.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (40 samples, 0.23%)</title><rect x="1102.4" y="1011.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1105.4" y="1022.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (11 samples, 0.06%)</title><rect x="1102.5" y="995.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.5" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (5 samples, 0.03%)</title><rect x="1103.2" y="995.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1106.2" y="1006.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (23 samples, 0.13%)</title><rect x="1103.6" y="995.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.6" y="1006.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (6 samples, 0.03%)</title><rect x="1103.8" y="979.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1106.8" y="990.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (5 samples, 0.03%)</title><rect x="1104.6" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.6" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (35 samples, 0.20%)</title><rect x="1105.1" y="1011.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1108.1" y="1022.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (4 samples, 0.02%)</title><rect x="1106.0" y="995.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1109.0" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (19 samples, 0.11%)</title><rect x="1106.2" y="995.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1109.2" y="1006.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (33 samples, 0.19%)</title><rect x="1107.5" y="1011.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1110.5" y="1022.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (4 samples, 0.02%)</title><rect x="1108.3" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.3" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (17 samples, 0.10%)</title><rect x="1108.6" y="995.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.6" y="1006.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (25 samples, 0.15%)</title><rect x="1109.8" y="1011.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.8" y="1022.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (20 samples, 0.12%)</title><rect x="1110.1" y="995.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1113.1" y="1006.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (124 samples, 0.72%)</title><rect x="1111.5" y="1011.0" width="8.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.5" y="1022.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.03%)</title><rect x="1115.2" y="995.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.2" y="1006.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (6 samples, 0.03%)</title><rect x="1115.6" y="995.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1118.6" y="1006.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (55 samples, 0.32%)</title><rect x="1116.2" y="995.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1119.2" y="1006.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (5 samples, 0.03%)</title><rect x="1118.9" y="979.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.9" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.04%)</title><rect x="1119.4" y="979.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1122.4" y="990.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (4 samples, 0.02%)</title><rect x="1120.2" y="1011.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.2" y="1022.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (4 samples, 0.02%)</title><rect x="1121.5" y="1027.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1124.5" y="1038.0"></text>
</g>
<g>
<title>Compile::Optimize() (705 samples, 4.10%)</title><rect x="1121.7" y="1043.0" width="48.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.7" y="1054.0">Comp..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (10 samples, 0.06%)</title><rect x="1121.8" y="1027.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.8" y="1038.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (8 samples, 0.05%)</title><rect x="1121.9" y="1011.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.9" y="1022.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.255] (4 samples, 0.02%)</title><rect x="1122.2" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.2" y="1006.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (24 samples, 0.14%)</title><rect x="1122.5" y="1027.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.5" y="1038.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (18 samples, 0.10%)</title><rect x="1122.5" y="1011.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.5" y="1022.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (8 samples, 0.05%)</title><rect x="1122.6" y="995.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.6" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.05%)</title><rect x="1122.6" y="979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1125.6" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.05%)</title><rect x="1122.6" y="963.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1125.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.05%)</title><rect x="1122.6" y="947.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.05%)</title><rect x="1122.6" y="931.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1125.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.05%)</title><rect x="1122.6" y="915.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.05%)</title><rect x="1122.6" y="899.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.6" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.05%)</title><rect x="1122.6" y="883.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1125.6" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.05%)</title><rect x="1122.6" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.05%)</title><rect x="1122.6" y="851.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.05%)</title><rect x="1122.6" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1125.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.05%)</title><rect x="1122.6" y="819.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.05%)</title><rect x="1122.6" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1125.6" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1122.6" y="787.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1125.6" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="1122.6" y="771.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1125.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="1122.6" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.04%)</title><rect x="1122.6" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.04%)</title><rect x="1122.6" y="723.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.04%)</title><rect x="1122.6" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.6" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="1122.6" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1125.6" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="1122.6" y="675.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1125.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="1122.6" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1125.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.04%)</title><rect x="1122.6" y="643.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1125.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.04%)</title><rect x="1122.6" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (7 samples, 0.04%)</title><rect x="1122.6" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (7 samples, 0.04%)</title><rect x="1122.6" y="595.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.6" y="606.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (7 samples, 0.04%)</title><rect x="1122.6" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1125.6" y="590.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (7 samples, 0.04%)</title><rect x="1122.6" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.6" y="574.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (7 samples, 0.04%)</title><rect x="1122.6" y="547.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1125.6" y="558.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (7 samples, 0.04%)</title><rect x="1122.6" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1125.6" y="542.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (7 samples, 0.04%)</title><rect x="1122.6" y="515.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.6" y="526.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (7 samples, 0.04%)</title><rect x="1122.6" y="499.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.6" y="510.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (7 samples, 0.04%)</title><rect x="1122.6" y="483.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1125.6" y="494.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (7 samples, 0.04%)</title><rect x="1122.6" y="467.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1125.6" y="478.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1122.6" y="451.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1125.6" y="462.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1122.6" y="435.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1125.6" y="446.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.02%)</title><rect x="1122.6" y="419.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.6" y="430.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (8 samples, 0.05%)</title><rect x="1123.2" y="995.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1126.2" y="1006.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (8 samples, 0.05%)</title><rect x="1123.2" y="979.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1126.2" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.03%)</title><rect x="1123.7" y="1011.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1126.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.03%)</title><rect x="1123.7" y="995.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1126.7" y="1006.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (185 samples, 1.07%)</title><rect x="1124.1" y="1027.0" width="12.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.1" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (185 samples, 1.07%)</title><rect x="1124.1" y="1011.0" width="12.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1127.1" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (20 samples, 0.12%)</title><rect x="1124.5" y="995.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.5" y="1006.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (5 samples, 0.03%)</title><rect x="1125.4" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.4" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (16 samples, 0.09%)</title><rect x="1125.8" y="995.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.8" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (84 samples, 0.49%)</title><rect x="1126.9" y="995.0" width="5.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.9" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (59 samples, 0.34%)</title><rect x="1128.6" y="979.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.6" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (47 samples, 0.27%)</title><rect x="1129.3" y="963.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.3" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (8 samples, 0.05%)</title><rect x="1129.7" y="947.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.7" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (8 samples, 0.05%)</title><rect x="1129.7" y="931.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.7" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.123] (4 samples, 0.02%)</title><rect x="1130.0" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.0" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (30 samples, 0.17%)</title><rect x="1130.4" y="947.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1133.4" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (11 samples, 0.06%)</title><rect x="1132.7" y="995.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (31 samples, 0.18%)</title><rect x="1133.5" y="995.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.5" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (4 samples, 0.02%)</title><rect x="1134.5" y="979.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.5" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (12 samples, 0.07%)</title><rect x="1134.7" y="979.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.7" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (4 samples, 0.02%)</title><rect x="1135.2" y="963.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1138.2" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 0.05%)</title><rect x="1135.8" y="995.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.8" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.05%)</title><rect x="1135.8" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.8" y="990.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (4 samples, 0.02%)</title><rect x="1136.5" y="995.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.5" y="1006.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.258] (14 samples, 0.08%)</title><rect x="1136.9" y="1027.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.9" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (10 samples, 0.06%)</title><rect x="1137.1" y="1011.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1140.1" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (10 samples, 0.06%)</title><rect x="1137.1" y="995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.1" y="1006.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (7 samples, 0.04%)</title><rect x="1137.4" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1140.4" y="990.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (7 samples, 0.04%)</title><rect x="1137.4" y="963.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.4" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1137.4" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1140.4" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.04%)</title><rect x="1137.4" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.4" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.03%)</title><rect x="1137.4" y="915.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.4" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.03%)</title><rect x="1137.4" y="899.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1140.4" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1137.4" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1140.4" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1137.4" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.4" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1137.4" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1140.4" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1137.4" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.4" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1137.4" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.4" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1137.4" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.4" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1137.4" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.4" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (28 samples, 0.16%)</title><rect x="1137.8" y="1027.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1140.8" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (26 samples, 0.15%)</title><rect x="1137.8" y="1011.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.8" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (8 samples, 0.05%)</title><rect x="1138.2" y="995.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.2" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.271] (6 samples, 0.03%)</title><rect x="1138.2" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.2" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (10 samples, 0.06%)</title><rect x="1138.9" y="995.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.9" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (6 samples, 0.03%)</title><rect x="1139.0" y="979.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1142.0" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (4 samples, 0.02%)</title><rect x="1139.1" y="963.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.1" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (4 samples, 0.02%)</title><rect x="1139.1" y="947.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.1" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (4 samples, 0.02%)</title><rect x="1139.1" y="931.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1142.1" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (4 samples, 0.02%)</title><rect x="1139.1" y="915.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1142.1" y="926.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (27 samples, 0.16%)</title><rect x="1139.9" y="1027.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1142.9" y="1038.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (4 samples, 0.02%)</title><rect x="1141.5" y="1011.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.5" y="1022.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (11 samples, 0.06%)</title><rect x="1141.7" y="1027.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.7" y="1038.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (11 samples, 0.06%)</title><rect x="1141.7" y="1011.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.7" y="1022.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (4 samples, 0.02%)</title><rect x="1142.1" y="995.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (200 samples, 1.16%)</title><rect x="1142.5" y="1027.0" width="13.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.5" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (23 samples, 0.13%)</title><rect x="1143.1" y="1011.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.1" y="1022.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (5 samples, 0.03%)</title><rect x="1144.1" y="995.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (27 samples, 0.16%)</title><rect x="1144.7" y="1011.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (6 samples, 0.03%)</title><rect x="1146.0" y="995.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.0" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (85 samples, 0.49%)</title><rect x="1146.5" y="1011.0" width="5.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.5" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (54 samples, 0.31%)</title><rect x="1148.7" y="995.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (39 samples, 0.23%)</title><rect x="1149.6" y="979.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.6" y="990.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (6 samples, 0.03%)</title><rect x="1149.8" y="963.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.8" y="974.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (5 samples, 0.03%)</title><rect x="1149.9" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.9" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (5 samples, 0.03%)</title><rect x="1150.2" y="963.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.2" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (5 samples, 0.03%)</title><rect x="1150.2" y="947.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.2" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (21 samples, 0.12%)</title><rect x="1150.8" y="963.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.8" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (17 samples, 0.10%)</title><rect x="1152.5" y="1011.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.5" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (4 samples, 0.02%)</title><rect x="1153.4" y="995.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.4" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (10 samples, 0.06%)</title><rect x="1153.7" y="1011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (20 samples, 0.12%)</title><rect x="1154.4" y="1011.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.4" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (17 samples, 0.10%)</title><rect x="1154.5" y="995.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.5" y="1006.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (6 samples, 0.03%)</title><rect x="1155.0" y="979.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.0" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (164 samples, 0.95%)</title><rect x="1156.3" y="1027.0" width="11.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.3" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (161 samples, 0.94%)</title><rect x="1156.3" y="1011.0" width="11.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.3" y="1022.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (6 samples, 0.03%)</title><rect x="1157.2" y="995.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.2" y="1006.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (9 samples, 0.05%)</title><rect x="1157.6" y="995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.6" y="1006.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (5 samples, 0.03%)</title><rect x="1157.9" y="979.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.9" y="990.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (5 samples, 0.03%)</title><rect x="1157.9" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.9" y="974.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (4 samples, 0.02%)</title><rect x="1157.9" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.9" y="958.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (5 samples, 0.03%)</title><rect x="1158.4" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.4" y="1006.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (11 samples, 0.06%)</title><rect x="1158.9" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.9" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (13 samples, 0.08%)</title><rect x="1159.7" y="995.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (5 samples, 0.03%)</title><rect x="1160.2" y="979.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.2" y="990.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (13 samples, 0.08%)</title><rect x="1160.6" y="995.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.6" y="1006.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (6 samples, 0.03%)</title><rect x="1160.9" y="979.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.9" y="990.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (21 samples, 0.12%)</title><rect x="1161.6" y="995.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.6" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (7 samples, 0.04%)</title><rect x="1161.8" y="979.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.8" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (7 samples, 0.04%)</title><rect x="1161.8" y="963.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.8" y="974.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (5 samples, 0.03%)</title><rect x="1162.0" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.0" y="958.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (5 samples, 0.03%)</title><rect x="1162.3" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.3" y="990.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (6 samples, 0.03%)</title><rect x="1162.6" y="979.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.6" y="990.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (59 samples, 0.34%)</title><rect x="1163.2" y="995.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.2" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (57 samples, 0.33%)</title><rect x="1163.2" y="979.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.2" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (57 samples, 0.33%)</title><rect x="1163.2" y="963.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.2" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (56 samples, 0.33%)</title><rect x="1163.3" y="947.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.3" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (49 samples, 0.28%)</title><rect x="1163.3" y="931.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.3" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (46 samples, 0.27%)</title><rect x="1163.3" y="915.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.3" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (41 samples, 0.24%)</title><rect x="1163.3" y="899.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.3" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (40 samples, 0.23%)</title><rect x="1163.3" y="883.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.3" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (38 samples, 0.22%)</title><rect x="1163.3" y="867.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.3" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (35 samples, 0.20%)</title><rect x="1163.3" y="851.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.3" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (34 samples, 0.20%)</title><rect x="1163.3" y="835.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.3" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (30 samples, 0.17%)</title><rect x="1163.3" y="819.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.3" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (28 samples, 0.16%)</title><rect x="1163.3" y="803.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.3" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (23 samples, 0.13%)</title><rect x="1163.3" y="787.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.3" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (21 samples, 0.12%)</title><rect x="1163.3" y="771.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.3" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (18 samples, 0.10%)</title><rect x="1163.3" y="755.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.3" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.08%)</title><rect x="1163.3" y="739.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.3" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.07%)</title><rect x="1163.3" y="723.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.3" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (12 samples, 0.07%)</title><rect x="1163.3" y="707.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.3" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.06%)</title><rect x="1163.3" y="691.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.3" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.06%)</title><rect x="1163.3" y="675.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.3" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.05%)</title><rect x="1163.3" y="659.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.3" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.03%)</title><rect x="1163.3" y="643.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.3" y="654.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (5 samples, 0.03%)</title><rect x="1163.3" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.3" y="638.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (5 samples, 0.03%)</title><rect x="1163.3" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.3" y="622.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (5 samples, 0.03%)</title><rect x="1164.8" y="787.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.8" y="798.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (5 samples, 0.03%)</title><rect x="1164.8" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.8" y="782.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (4 samples, 0.02%)</title><rect x="1165.3" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.3" y="830.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (4 samples, 0.02%)</title><rect x="1165.3" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.3" y="814.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (5 samples, 0.03%)</title><rect x="1166.1" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.1" y="910.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (5 samples, 0.03%)</title><rect x="1166.1" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.1" y="894.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (7 samples, 0.04%)</title><rect x="1166.6" y="931.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.6" y="942.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (7 samples, 0.04%)</title><rect x="1166.6" y="915.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.6" y="926.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (17 samples, 0.10%)</title><rect x="1167.7" y="1027.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.7" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (12 samples, 0.07%)</title><rect x="1167.7" y="1011.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (11 samples, 0.06%)</title><rect x="1167.8" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.8" y="1006.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (4 samples, 0.02%)</title><rect x="1168.5" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.5" y="1022.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (12 samples, 0.07%)</title><rect x="1168.9" y="1027.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.9" y="1038.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (6 samples, 0.03%)</title><rect x="1168.9" y="1011.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.9" y="1022.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (6 samples, 0.03%)</title><rect x="1169.3" y="1011.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.3" y="1022.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (4 samples, 0.02%)</title><rect x="1169.4" y="995.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.4" y="1006.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (10 samples, 0.06%)</title><rect x="1170.2" y="1043.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.2" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (172 samples, 1.00%)</title><rect x="1171.0" y="1043.0" width="11.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.0" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (172 samples, 1.00%)</title><rect x="1171.0" y="1027.0" width="11.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (171 samples, 0.99%)</title><rect x="1171.0" y="1011.0" width="11.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (171 samples, 0.99%)</title><rect x="1171.0" y="995.0" width="11.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (171 samples, 0.99%)</title><rect x="1171.0" y="979.0" width="11.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (165 samples, 0.96%)</title><rect x="1171.1" y="963.0" width="11.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.1" y="974.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (10 samples, 0.06%)</title><rect x="1171.1" y="947.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.1" y="958.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (10 samples, 0.06%)</title><rect x="1171.1" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.1" y="942.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (8 samples, 0.05%)</title><rect x="1171.1" y="915.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.1" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (8 samples, 0.05%)</title><rect x="1171.1" y="899.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.1" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (8 samples, 0.05%)</title><rect x="1171.1" y="883.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.1" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (7 samples, 0.04%)</title><rect x="1171.1" y="867.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.1" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (7 samples, 0.04%)</title><rect x="1171.1" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.1" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (5 samples, 0.03%)</title><rect x="1171.2" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.2" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (4 samples, 0.02%)</title><rect x="1171.3" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.3" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (116 samples, 0.67%)</title><rect x="1172.0" y="947.0" width="8.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.0" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (116 samples, 0.67%)</title><rect x="1172.0" y="931.0" width="8.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (114 samples, 0.66%)</title><rect x="1172.0" y="915.0" width="7.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (113 samples, 0.66%)</title><rect x="1172.0" y="899.0" width="7.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (112 samples, 0.65%)</title><rect x="1172.1" y="883.0" width="7.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (106 samples, 0.62%)</title><rect x="1172.3" y="867.0" width="7.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (83 samples, 0.48%)</title><rect x="1172.6" y="851.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.6" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (83 samples, 0.48%)</title><rect x="1172.6" y="835.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (83 samples, 0.48%)</title><rect x="1172.6" y="819.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (83 samples, 0.48%)</title><rect x="1172.6" y="803.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (83 samples, 0.48%)</title><rect x="1172.6" y="787.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (72 samples, 0.42%)</title><rect x="1172.9" y="771.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.9" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (62 samples, 0.36%)</title><rect x="1173.2" y="755.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.2" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (62 samples, 0.36%)</title><rect x="1173.2" y="739.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (59 samples, 0.34%)</title><rect x="1173.3" y="723.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (59 samples, 0.34%)</title><rect x="1173.3" y="707.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (59 samples, 0.34%)</title><rect x="1173.3" y="691.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (52 samples, 0.30%)</title><rect x="1173.3" y="675.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.3" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (43 samples, 0.25%)</title><rect x="1173.5" y="659.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.5" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (43 samples, 0.25%)</title><rect x="1173.5" y="643.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (41 samples, 0.24%)</title><rect x="1173.5" y="627.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (40 samples, 0.23%)</title><rect x="1173.5" y="611.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (40 samples, 0.23%)</title><rect x="1173.5" y="595.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (36 samples, 0.21%)</title><rect x="1173.5" y="579.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.5" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (29 samples, 0.17%)</title><rect x="1173.7" y="563.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.7" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (29 samples, 0.17%)</title><rect x="1173.7" y="547.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (29 samples, 0.17%)</title><rect x="1173.7" y="531.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (29 samples, 0.17%)</title><rect x="1173.7" y="515.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (29 samples, 0.17%)</title><rect x="1173.7" y="499.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (26 samples, 0.15%)</title><rect x="1173.7" y="483.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.7" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (23 samples, 0.13%)</title><rect x="1173.8" y="467.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.8" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (23 samples, 0.13%)</title><rect x="1173.8" y="451.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 0.13%)</title><rect x="1173.8" y="435.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 0.13%)</title><rect x="1173.8" y="419.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.13%)</title><rect x="1173.8" y="403.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (21 samples, 0.12%)</title><rect x="1173.8" y="387.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.8" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.12%)</title><rect x="1173.8" y="371.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.8" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (21 samples, 0.12%)</title><rect x="1173.8" y="355.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 0.12%)</title><rect x="1173.8" y="339.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.12%)</title><rect x="1173.8" y="323.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (20 samples, 0.12%)</title><rect x="1173.8" y="307.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.8" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.10%)</title><rect x="1173.8" y="291.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.8" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.08%)</title><rect x="1173.9" y="275.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.9" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.08%)</title><rect x="1173.9" y="259.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.08%)</title><rect x="1173.9" y="243.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.9" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.08%)</title><rect x="1173.9" y="227.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.9" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.08%)</title><rect x="1173.9" y="211.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.9" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.06%)</title><rect x="1173.9" y="195.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.9" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.05%)</title><rect x="1174.0" y="179.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.0" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.05%)</title><rect x="1174.0" y="163.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.0" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="1174.0" y="147.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.0" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.04%)</title><rect x="1174.0" y="131.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.0" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.04%)</title><rect x="1174.0" y="115.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.0" y="126.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1174.0" y="99.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.0" y="110.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1176.4" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1176.4" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.4" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1176.4" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1176.4" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1176.4" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1176.4" y="579.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1176.4" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.4" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1176.4" y="547.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.4" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1176.4" y="531.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (4 samples, 0.02%)</title><rect x="1176.9" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.9" y="686.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1177.5" y="755.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.5" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1177.5" y="739.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.5" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1177.5" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1177.5" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="1177.5" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.03%)</title><rect x="1177.5" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1177.5" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.5" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1177.5" y="643.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1177.5" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1177.5" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1177.5" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1177.5" y="579.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1177.5" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.5" y="574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (18 samples, 0.10%)</title><rect x="1178.3" y="851.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.3" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.08%)</title><rect x="1178.4" y="835.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.4" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.08%)</title><rect x="1178.4" y="819.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.08%)</title><rect x="1178.4" y="803.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.08%)</title><rect x="1178.4" y="787.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.08%)</title><rect x="1178.4" y="771.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.08%)</title><rect x="1178.4" y="755.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.4" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.05%)</title><rect x="1178.5" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.5" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.05%)</title><rect x="1178.5" y="723.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.05%)</title><rect x="1178.5" y="707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.05%)</title><rect x="1178.5" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.05%)</title><rect x="1178.5" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.05%)</title><rect x="1178.5" y="659.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.5" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1178.5" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.03%)</title><rect x="1178.5" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="1178.5" y="611.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1178.5" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1178.5" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1178.5" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.5" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1178.6" y="547.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.6" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1178.6" y="531.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1178.6" y="515.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1178.6" y="499.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1178.6" y="483.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1178.6" y="467.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.6" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1179.1" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.1" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1179.1" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.1" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1179.1" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1179.1" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1179.1" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1179.1" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1179.1" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.1" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (33 samples, 0.19%)</title><rect x="1180.0" y="947.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.0" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (20 samples, 0.12%)</title><rect x="1180.1" y="931.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.1" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 0.12%)</title><rect x="1180.1" y="915.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (19 samples, 0.11%)</title><rect x="1180.1" y="899.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (19 samples, 0.11%)</title><rect x="1180.1" y="883.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.11%)</title><rect x="1180.1" y="867.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (19 samples, 0.11%)</title><rect x="1180.1" y="851.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.09%)</title><rect x="1180.1" y="835.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.1" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.09%)</title><rect x="1180.1" y="819.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.09%)</title><rect x="1180.1" y="803.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.09%)</title><rect x="1180.1" y="787.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.09%)</title><rect x="1180.1" y="771.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.08%)</title><rect x="1180.1" y="755.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.06%)</title><rect x="1180.1" y="739.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.06%)</title><rect x="1180.1" y="723.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.06%)</title><rect x="1180.1" y="707.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.06%)</title><rect x="1180.1" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.06%)</title><rect x="1180.1" y="675.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.06%)</title><rect x="1180.1" y="659.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.1" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.05%)</title><rect x="1180.2" y="643.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.2" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.05%)</title><rect x="1180.2" y="627.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.05%)</title><rect x="1180.2" y="611.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.05%)</title><rect x="1180.2" y="595.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.05%)</title><rect x="1180.2" y="579.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.05%)</title><rect x="1180.2" y="563.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.2" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.05%)</title><rect x="1180.2" y="547.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.2" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.05%)</title><rect x="1180.2" y="531.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.05%)</title><rect x="1180.2" y="515.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.05%)</title><rect x="1180.2" y="499.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.05%)</title><rect x="1180.2" y="483.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.04%)</title><rect x="1180.2" y="467.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.2" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1180.3" y="451.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.3" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.03%)</title><rect x="1180.3" y="435.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="1180.3" y="419.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1180.3" y="403.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1180.3" y="387.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1180.3" y="371.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.3" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1180.3" y="355.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.3" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1180.3" y="339.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.3" y="350.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1181.2" y="835.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1181.2" y="819.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1181.2" y="803.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1181.2" y="787.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1181.2" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1181.2" y="755.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1181.2" y="739.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (11 samples, 0.06%)</title><rect x="1181.5" y="931.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.5" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.06%)</title><rect x="1181.6" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.6" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.06%)</title><rect x="1181.6" y="899.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.06%)</title><rect x="1181.6" y="883.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.06%)</title><rect x="1181.6" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.06%)</title><rect x="1181.6" y="851.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.06%)</title><rect x="1181.6" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.05%)</title><rect x="1181.6" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.6" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.05%)</title><rect x="1181.6" y="803.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.05%)</title><rect x="1181.6" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.05%)</title><rect x="1181.6" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.05%)</title><rect x="1181.6" y="755.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.05%)</title><rect x="1181.6" y="739.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.6" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1181.6" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.03%)</title><rect x="1181.6" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="1181.6" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1181.6" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1181.6" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.03%)</title><rect x="1181.6" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="1181.6" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.6" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="1181.6" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="1181.6" y="595.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1181.6" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1181.6" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1181.6" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.6" y="558.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (9 samples, 0.05%)</title><rect x="1182.8" y="1043.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.8" y="1054.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (5 samples, 0.03%)</title><rect x="1182.9" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.9" y="1038.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (4 samples, 0.02%)</title><rect x="1183.5" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.5" y="1054.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (50 samples, 0.29%)</title><rect x="1183.9" y="1075.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.9" y="1086.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (50 samples, 0.29%)</title><rect x="1183.9" y="1059.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.9" y="1070.0"></text>
</g>
<g>
<title>Compilation::compile_method() (50 samples, 0.29%)</title><rect x="1183.9" y="1043.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="1054.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (48 samples, 0.28%)</title><rect x="1183.9" y="1027.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.9" y="1038.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (26 samples, 0.15%)</title><rect x="1183.9" y="1011.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.9" y="1022.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (23 samples, 0.13%)</title><rect x="1184.0" y="995.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.0" y="1006.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (23 samples, 0.13%)</title><rect x="1184.0" y="979.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.0" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (23 samples, 0.13%)</title><rect x="1184.0" y="963.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.0" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (23 samples, 0.13%)</title><rect x="1184.0" y="947.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.0" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (23 samples, 0.13%)</title><rect x="1184.0" y="931.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (18 samples, 0.10%)</title><rect x="1184.3" y="915.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.3" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (17 samples, 0.10%)</title><rect x="1184.3" y="899.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.3" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (17 samples, 0.10%)</title><rect x="1184.3" y="883.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.3" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (14 samples, 0.08%)</title><rect x="1184.3" y="867.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (14 samples, 0.08%)</title><rect x="1184.3" y="851.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (12 samples, 0.07%)</title><rect x="1184.4" y="835.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.4" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (9 samples, 0.05%)</title><rect x="1184.4" y="819.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.4" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.03%)</title><rect x="1184.4" y="803.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.4" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.03%)</title><rect x="1184.4" y="787.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.4" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.03%)</title><rect x="1184.4" y="771.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.4" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 0.03%)</title><rect x="1184.4" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.03%)</title><rect x="1184.4" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.4" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.02%)</title><rect x="1184.4" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.4" y="734.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (4 samples, 0.02%)</title><rect x="1185.7" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="1022.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (4 samples, 0.02%)</title><rect x="1185.7" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1006.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (18 samples, 0.10%)</title><rect x="1186.0" y="1011.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.0" y="1022.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (5 samples, 0.03%)</title><rect x="1186.0" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="1006.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (5 samples, 0.03%)</title><rect x="1186.0" y="979.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.0" y="990.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (12 samples, 0.07%)</title><rect x="1186.4" y="995.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="1006.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (4 samples, 0.02%)</title><rect x="1186.4" y="979.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.4" y="990.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (4 samples, 0.02%)</title><rect x="1186.4" y="963.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.4" y="974.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (17 samples, 0.10%)</title><rect x="1187.7" y="1107.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="1118.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (16 samples, 0.09%)</title><rect x="1187.7" y="1091.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="1102.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (16 samples, 0.09%)</title><rect x="1187.7" y="1075.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.7" y="1086.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (4 samples, 0.02%)</title><rect x="1187.9" y="1059.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.9" y="1070.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (8 samples, 0.05%)</title><rect x="1188.2" y="1059.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.2" y="1070.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (4 samples, 0.02%)</title><rect x="1188.3" y="1043.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="1054.0"></text>
</g>
<g>
<title>VMThread::run() (14 samples, 0.08%)</title><rect x="1189.0" y="1123.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.0" y="1134.0"></text>
</g>
<g>
<title>VMThread::loop() (14 samples, 0.08%)</title><rect x="1189.0" y="1107.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.0" y="1118.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (9 samples, 0.05%)</title><rect x="1189.0" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.0" y="1102.0"></text>
</g>
</g>
</svg>
