<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (134,523 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (70,066 samples, 52.08%)</title><rect x="10.0" y="691.0" width="614.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (70,066 samples, 52.08%)</title><rect x="10.0" y="675.0" width="614.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (70,066 samples, 52.08%)</title><rect x="10.0" y="659.0" width="614.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (34,881 samples, 25.93%)</title><rect x="10.0" y="643.0" width="306.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$As..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$512/1973649253.run (34,881 samples, 25.93%)</title><rect x="10.0" y="627.0" width="306.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="638.0">ru/mail/polis/service/boriskin/ReplicaWor..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5 (34,881 samples, 25.93%)</title><rect x="10.0" y="611.0" width="306.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="622.0">ru/mail/polis/service/boriskin/ReplicaWor..</text>
</g>
<g>
<title>java/lang/String.getBytes (133 samples, 0.10%)</title><rect x="10.0" y="595.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (133 samples, 0.10%)</title><rect x="10.0" y="579.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (133 samples, 0.10%)</title><rect x="10.0" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (133 samples, 0.10%)</title><rect x="10.0" y="547.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>byte[] (133 samples, 0.10%)</title><rect x="10.0" y="531.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (35 samples, 0.03%)</title><rect x="11.2" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (35 samples, 0.03%)</title><rect x="11.2" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.03%)</title><rect x="11.2" y="563.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (142 samples, 0.11%)</title><rect x="11.5" y="595.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (142 samples, 0.11%)</title><rect x="11.5" y="579.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (142 samples, 0.11%)</title><rect x="11.5" y="563.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (107 samples, 0.08%)</title><rect x="11.5" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (107 samples, 0.08%)</title><rect x="11.5" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.5" y="542.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.08%)</title><rect x="11.5" y="515.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="14.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 0.03%)</title><rect x="12.4" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (35 samples, 0.03%)</title><rect x="12.4" y="531.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="15.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (34,365 samples, 25.55%)</title><rect x="12.7" y="595.0" width="301.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.7" y="606.0">ru/mail/polis/service/boriskin/Value.from</text>
</g>
<g>
<title>byte[] (33 samples, 0.02%)</title><rect x="12.7" y="579.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="15.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,574 samples, 1.17%)</title><rect x="13.0" y="579.0" width="13.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,417 samples, 1.05%)</title><rect x="13.0" y="563.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (370 samples, 0.28%)</title><rect x="13.0" y="547.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (370 samples, 0.28%)</title><rect x="13.0" y="531.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (370 samples, 0.28%)</title><rect x="13.0" y="515.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (370 samples, 0.28%)</title><rect x="13.0" y="499.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (370 samples, 0.28%)</title><rect x="13.0" y="483.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (370 samples, 0.28%)</title><rect x="13.0" y="467.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (370 samples, 0.28%)</title><rect x="13.0" y="451.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (370 samples, 0.28%)</title><rect x="13.0" y="435.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (370 samples, 0.28%)</title><rect x="13.0" y="419.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (370 samples, 0.28%)</title><rect x="13.0" y="403.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (370 samples, 0.28%)</title><rect x="13.0" y="387.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.0" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (370 samples, 0.28%)</title><rect x="13.0" y="371.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="16.0" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,047 samples, 0.78%)</title><rect x="16.3" y="547.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,047 samples, 0.78%)</title><rect x="16.3" y="531.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,047 samples, 0.78%)</title><rect x="16.3" y="515.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,047 samples, 0.78%)</title><rect x="16.3" y="499.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,047 samples, 0.78%)</title><rect x="16.3" y="483.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,047 samples, 0.78%)</title><rect x="16.3" y="467.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (816 samples, 0.61%)</title><rect x="16.3" y="451.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (816 samples, 0.61%)</title><rect x="16.3" y="435.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (816 samples, 0.61%)</title><rect x="16.3" y="419.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (816 samples, 0.61%)</title><rect x="16.3" y="403.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (504 samples, 0.37%)</title><rect x="16.3" y="387.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (336 samples, 0.25%)</title><rect x="16.3" y="371.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="19.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (168 samples, 0.12%)</title><rect x="19.2" y="371.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.2" y="382.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.12%)</title><rect x="19.2" y="355.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="22.2" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (41 samples, 0.03%)</title><rect x="20.7" y="387.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (46 samples, 0.03%)</title><rect x="21.0" y="387.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="24.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (225 samples, 0.17%)</title><rect x="21.4" y="387.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (225 samples, 0.17%)</title><rect x="21.4" y="371.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (165 samples, 0.12%)</title><rect x="21.4" y="355.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="24.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.04%)</title><rect x="22.9" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.9" y="366.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.04%)</title><rect x="22.9" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="25.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (231 samples, 0.17%)</title><rect x="23.4" y="451.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (231 samples, 0.17%)</title><rect x="23.4" y="435.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (231 samples, 0.17%)</title><rect x="23.4" y="419.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (231 samples, 0.17%)</title><rect x="23.4" y="403.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (231 samples, 0.17%)</title><rect x="23.4" y="387.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.4" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (231 samples, 0.17%)</title><rect x="23.4" y="371.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (231 samples, 0.17%)</title><rect x="23.4" y="355.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="26.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$508/1845064780.apply (157 samples, 0.12%)</title><rect x="25.4" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (157 samples, 0.12%)</title><rect x="25.4" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.4" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (157 samples, 0.12%)</title><rect x="25.4" y="531.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.4" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (157 samples, 0.12%)</title><rect x="25.4" y="515.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="28.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (44 samples, 0.03%)</title><rect x="26.8" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (44 samples, 0.03%)</title><rect x="26.8" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.8" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (44 samples, 0.03%)</title><rect x="26.8" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="29.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (32,659 samples, 24.28%)</title><rect x="27.2" y="579.0" width="286.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.2" y="590.0">ru/mail/polis/service/boriskin/Value.g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4,511 samples, 3.35%)</title><rect x="27.2" y="563.0" width="39.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.2" y="574.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4,495 samples, 3.34%)</title><rect x="27.3" y="547.0" width="39.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.3" y="558.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (166 samples, 0.12%)</title><rect x="27.4" y="531.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.4" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (166 samples, 0.12%)</title><rect x="27.4" y="515.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="30.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4,272 samples, 3.18%)</title><rect x="29.3" y="531.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.3" y="542.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4,272 samples, 3.18%)</title><rect x="29.3" y="515.0" width="37.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.3" y="526.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (119 samples, 0.09%)</title><rect x="29.3" y="499.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (119 samples, 0.09%)</title><rect x="29.3" y="483.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (119 samples, 0.09%)</title><rect x="29.3" y="467.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="32.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4,153 samples, 3.09%)</title><rect x="30.3" y="499.0" width="36.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.3" y="510.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4,153 samples, 3.09%)</title><rect x="30.3" y="483.0" width="36.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.3" y="494.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,153 samples, 3.09%)</title><rect x="30.3" y="467.0" width="36.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.3" y="478.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,153 samples, 3.09%)</title><rect x="30.3" y="451.0" width="36.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.3" y="462.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,653 samples, 2.72%)</title><rect x="30.3" y="435.0" width="32.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.3" y="446.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (3,653 samples, 2.72%)</title><rect x="30.3" y="419.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.3" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (3,653 samples, 2.72%)</title><rect x="30.3" y="403.0" width="32.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.3" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (3,653 samples, 2.72%)</title><rect x="30.3" y="387.0" width="32.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.3" y="398.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,221 samples, 1.65%)</title><rect x="30.3" y="371.0" width="19.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.3" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,452 samples, 1.08%)</title><rect x="30.3" y="355.0" width="12.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="33.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (769 samples, 0.57%)</title><rect x="43.1" y="355.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.1" y="366.0"></text>
</g>
<g>
<title>byte[] (769 samples, 0.57%)</title><rect x="43.1" y="339.0" width="6.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="46.1" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (177 samples, 0.13%)</title><rect x="49.8" y="371.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="52.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (166 samples, 0.12%)</title><rect x="51.4" y="371.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="54.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (1,089 samples, 0.81%)</title><rect x="52.8" y="371.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,089 samples, 0.81%)</title><rect x="52.8" y="355.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (712 samples, 0.53%)</title><rect x="52.8" y="339.0" width="6.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="55.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (377 samples, 0.28%)</title><rect x="59.1" y="339.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.1" y="350.0"></text>
</g>
<g>
<title>byte[] (377 samples, 0.28%)</title><rect x="59.1" y="323.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="62.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (500 samples, 0.37%)</title><rect x="62.4" y="435.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (500 samples, 0.37%)</title><rect x="62.4" y="419.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (500 samples, 0.37%)</title><rect x="62.4" y="403.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (500 samples, 0.37%)</title><rect x="62.4" y="387.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (500 samples, 0.37%)</title><rect x="62.4" y="371.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (500 samples, 0.37%)</title><rect x="62.4" y="355.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (500 samples, 0.37%)</title><rect x="62.4" y="339.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (49 samples, 0.04%)</title><rect x="67.1" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.1" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.04%)</title><rect x="67.1" y="547.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="70.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (27,275 samples, 20.28%)</title><rect x="67.5" y="563.0" width="239.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.5" y="574.0">java/util/Collections$Unmodifiab..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (27,275 samples, 20.28%)</title><rect x="67.5" y="547.0" width="239.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.5" y="558.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (41 samples, 0.03%)</title><rect x="67.5" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$502/1244742828.accept (27,234 samples, 20.24%)</title><rect x="67.9" y="531.0" width="238.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.9" y="542.0">ru/mail/polis/service/boriskin/V..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (27,234 samples, 20.24%)</title><rect x="67.9" y="515.0" width="238.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.9" y="526.0">ru/mail/polis/service/boriskin/V..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (27,234 samples, 20.24%)</title><rect x="67.9" y="499.0" width="238.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.9" y="510.0">ru/mail/polis/dao/boriskin/Sorte..</text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.SortedStringTable$1 (268 samples, 0.20%)</title><rect x="67.9" y="483.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="70.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (26,966 samples, 20.05%)</title><rect x="70.2" y="483.0" width="236.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.2" y="494.0">ru/mail/polis/dao/boriskin/Sort..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (26,966 samples, 20.05%)</title><rect x="70.2" y="467.0" width="236.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.2" y="478.0">ru/mail/polis/dao/boriskin/Sort..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (26,966 samples, 20.05%)</title><rect x="70.2" y="451.0" width="236.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.2" y="462.0">ru/mail/polis/dao/boriskin/Sort..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18,044 samples, 13.41%)</title><rect x="70.2" y="435.0" width="158.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.2" y="446.0">java/nio/ByteBuffer...</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12,421 samples, 9.23%)</title><rect x="70.2" y="419.0" width="109.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="73.2" y="430.0">java.nio.Heap..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5,623 samples, 4.18%)</title><rect x="179.2" y="419.0" width="49.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.2" y="430.0">java/..</text>
</g>
<g>
<title>byte[] (5,623 samples, 4.18%)</title><rect x="179.2" y="403.0" width="49.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="182.2" y="414.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (8,922 samples, 6.63%)</title><rect x="228.5" y="435.0" width="78.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.5" y="446.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,922 samples, 6.63%)</title><rect x="228.5" y="419.0" width="78.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.5" y="430.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6,138 samples, 4.56%)</title><rect x="228.5" y="403.0" width="53.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="231.5" y="414.0">java...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,784 samples, 2.07%)</title><rect x="282.3" y="403.0" width="24.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.3" y="414.0">j..</text>
</g>
<g>
<title>byte[] (2,784 samples, 2.07%)</title><rect x="282.3" y="387.0" width="24.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="285.3" y="398.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (687 samples, 0.51%)</title><rect x="306.9" y="563.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (668 samples, 0.50%)</title><rect x="307.1" y="547.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (668 samples, 0.50%)</title><rect x="307.1" y="531.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (181 samples, 0.13%)</title><rect x="307.1" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (181 samples, 0.13%)</title><rect x="307.1" y="499.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (181 samples, 0.13%)</title><rect x="307.1" y="483.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (181 samples, 0.13%)</title><rect x="307.1" y="467.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (181 samples, 0.13%)</title><rect x="307.1" y="451.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.1" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (181 samples, 0.13%)</title><rect x="307.1" y="435.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (181 samples, 0.13%)</title><rect x="307.1" y="419.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (181 samples, 0.13%)</title><rect x="307.1" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (181 samples, 0.13%)</title><rect x="307.1" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (181 samples, 0.13%)</title><rect x="307.1" y="371.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (181 samples, 0.13%)</title><rect x="307.1" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (181 samples, 0.13%)</title><rect x="307.1" y="339.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="310.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (487 samples, 0.36%)</title><rect x="308.7" y="515.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (487 samples, 0.36%)</title><rect x="308.7" y="499.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (487 samples, 0.36%)</title><rect x="308.7" y="483.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="311.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (487 samples, 0.36%)</title><rect x="308.7" y="467.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (487 samples, 0.36%)</title><rect x="308.7" y="451.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (487 samples, 0.36%)</title><rect x="308.7" y="435.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (387 samples, 0.29%)</title><rect x="308.7" y="419.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (387 samples, 0.29%)</title><rect x="308.7" y="403.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (387 samples, 0.29%)</title><rect x="308.7" y="387.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (387 samples, 0.29%)</title><rect x="308.7" y="371.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (242 samples, 0.18%)</title><rect x="308.7" y="355.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.7" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (159 samples, 0.12%)</title><rect x="308.7" y="339.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="311.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (83 samples, 0.06%)</title><rect x="310.1" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.1" y="350.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.06%)</title><rect x="310.1" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="313.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (107 samples, 0.08%)</title><rect x="311.1" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.08%)</title><rect x="311.1" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.05%)</title><rect x="311.1" y="323.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="314.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.03%)</title><rect x="311.7" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.7" y="334.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.03%)</title><rect x="311.7" y="307.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="314.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (100 samples, 0.07%)</title><rect x="312.1" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.1" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (100 samples, 0.07%)</title><rect x="312.1" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (100 samples, 0.07%)</title><rect x="312.1" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (100 samples, 0.07%)</title><rect x="312.1" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (100 samples, 0.07%)</title><rect x="312.1" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (100 samples, 0.07%)</title><rect x="312.1" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (100 samples, 0.07%)</title><rect x="312.1" y="323.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="315.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (83 samples, 0.06%)</title><rect x="312.9" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (35 samples, 0.03%)</title><rect x="313.4" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (35 samples, 0.03%)</title><rect x="313.4" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (35 samples, 0.03%)</title><rect x="313.4" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (35 samples, 0.03%)</title><rect x="313.4" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="316.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.isPresent (55 samples, 0.04%)</title><rect x="313.7" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.7" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.Value (29 samples, 0.02%)</title><rect x="313.7" y="563.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="316.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (206 samples, 0.15%)</title><rect x="314.2" y="595.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (59 samples, 0.04%)</title><rect x="314.2" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/471192886.invoke (59 samples, 0.04%)</title><rect x="314.2" y="563.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="314.2" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (43 samples, 0.03%)</title><rect x="314.3" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (43 samples, 0.03%)</title><rect x="314.3" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.3" y="526.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.03%)</title><rect x="314.3" y="499.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="317.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (70 samples, 0.05%)</title><rect x="314.8" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.8" y="590.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.02%)</title><rect x="314.8" y="563.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="317.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getData (60 samples, 0.04%)</title><rect x="315.4" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (60 samples, 0.04%)</title><rect x="315.4" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.4" y="574.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.04%)</title><rect x="315.4" y="547.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="318.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (22,641 samples, 16.83%)</title><rect x="316.0" y="643.0" width="198.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.0" y="654.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,073 samples, 6.00%)</title><rect x="316.0" y="627.0" width="70.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.0" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,073 samples, 6.00%)</title><rect x="316.0" y="611.0" width="70.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.0" y="622.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (47 samples, 0.03%)</title><rect x="316.0" y="595.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="319.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/1586761708.apply (8,021 samples, 5.96%)</title><rect x="316.4" y="595.0" width="70.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.4" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (8,021 samples, 5.96%)</title><rect x="316.4" y="579.0" width="70.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.4" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (8,021 samples, 5.96%)</title><rect x="316.4" y="563.0" width="70.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.4" y="574.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.05%)</title><rect x="316.4" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.05%)</title><rect x="316.4" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$371/526674589.get$Lambda (29 samples, 0.02%)</title><rect x="316.4" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$371 (29 samples, 0.02%)</title><rect x="316.4" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="319.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$373/1864395379.get$Lambda (35 samples, 0.03%)</title><rect x="316.7" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$373 (35 samples, 0.03%)</title><rect x="316.7" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="319.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (135 samples, 0.10%)</title><rect x="317.0" y="547.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (135 samples, 0.10%)</title><rect x="317.0" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (79 samples, 0.06%)</title><rect x="317.0" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="320.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="317.7" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="317.7" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.04%)</title><rect x="317.7" y="483.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="320.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (217 samples, 0.16%)</title><rect x="318.2" y="547.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (217 samples, 0.16%)</title><rect x="318.2" y="531.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (110 samples, 0.08%)</title><rect x="318.2" y="515.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="321.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.08%)</title><rect x="319.1" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.08%)</title><rect x="319.1" y="499.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.08%)</title><rect x="319.1" y="483.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="322.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (7,605 samples, 5.65%)</title><rect x="320.1" y="547.0" width="66.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.1" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (7,605 samples, 5.65%)</title><rect x="320.1" y="531.0" width="66.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.1" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (7,605 samples, 5.65%)</title><rect x="320.1" y="515.0" width="66.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.1" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (180 samples, 0.13%)</title><rect x="320.1" y="499.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (180 samples, 0.13%)</title><rect x="320.1" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/1264514825.get$Lambda (101 samples, 0.08%)</title><rect x="320.1" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$209 (101 samples, 0.08%)</title><rect x="320.1" y="451.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="323.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1690211041.get$Lambda (31 samples, 0.02%)</title><rect x="321.0" y="467.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (31 samples, 0.02%)</title><rect x="321.0" y="451.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="324.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1624614356.get$Lambda (48 samples, 0.04%)</title><rect x="321.2" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$315 (48 samples, 0.04%)</title><rect x="321.2" y="451.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="324.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,263 samples, 3.91%)</title><rect x="321.7" y="499.0" width="46.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.7" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,263 samples, 3.91%)</title><rect x="321.7" y="483.0" width="46.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.7" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,212 samples, 3.87%)</title><rect x="321.7" y="467.0" width="45.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.7" y="478.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1624614356.apply (5,212 samples, 3.87%)</title><rect x="321.7" y="451.0" width="45.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.7" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,212 samples, 3.87%)</title><rect x="321.7" y="435.0" width="45.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.7" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,212 samples, 3.87%)</title><rect x="321.7" y="419.0" width="45.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1690211041.apply (5,212 samples, 3.87%)</title><rect x="321.7" y="403.0" width="45.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.7" y="414.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,212 samples, 3.87%)</title><rect x="321.7" y="387.0" width="45.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.7" y="398.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.03%)</title><rect x="321.7" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.03%)</title><rect x="321.7" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$370/1725152409.get$Lambda (43 samples, 0.03%)</title><rect x="321.7" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$370 (43 samples, 0.03%)</title><rect x="321.7" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="324.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (115 samples, 0.09%)</title><rect x="322.0" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (115 samples, 0.09%)</title><rect x="322.0" y="355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (66 samples, 0.05%)</title><rect x="322.0" y="339.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="325.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.04%)</title><rect x="322.6" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.04%)</title><rect x="322.6" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.04%)</title><rect x="322.6" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="325.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (128 samples, 0.10%)</title><rect x="323.0" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (128 samples, 0.10%)</title><rect x="323.0" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (84 samples, 0.06%)</title><rect x="323.0" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="326.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="323.8" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.03%)</title><rect x="323.8" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.03%)</title><rect x="323.8" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="326.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,926 samples, 3.66%)</title><rect x="324.2" y="371.0" width="43.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.2" y="382.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.04%)</title><rect x="324.2" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.04%)</title><rect x="324.2" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/2119173243.get$Lambda (29 samples, 0.02%)</title><rect x="324.2" y="323.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$367 (29 samples, 0.02%)</title><rect x="324.2" y="307.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="327.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,000 samples, 2.97%)</title><rect x="324.6" y="355.0" width="35.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.6" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,000 samples, 2.97%)</title><rect x="324.6" y="339.0" width="35.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.6" y="350.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (51 samples, 0.04%)</title><rect x="324.6" y="323.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="327.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/2119173243.apply (3,841 samples, 2.86%)</title><rect x="325.1" y="323.0" width="33.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.1" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,841 samples, 2.86%)</title><rect x="325.1" y="307.0" width="33.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.1" y="318.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (122 samples, 0.09%)</title><rect x="325.3" y="291.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (122 samples, 0.09%)</title><rect x="325.3" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (65 samples, 0.05%)</title><rect x="325.3" y="259.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="328.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="325.9" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="325.9" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="325.9" y="227.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="328.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="326.4" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="329.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (76 samples, 0.06%)</title><rect x="326.9" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (35 samples, 0.03%)</title><rect x="326.9" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="329.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (41 samples, 0.03%)</title><rect x="327.2" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (41 samples, 0.03%)</title><rect x="327.2" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (41 samples, 0.03%)</title><rect x="327.2" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (41 samples, 0.03%)</title><rect x="327.2" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (41 samples, 0.03%)</title><rect x="327.2" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (41 samples, 0.03%)</title><rect x="327.2" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="330.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (148 samples, 0.11%)</title><rect x="327.6" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (148 samples, 0.11%)</title><rect x="327.6" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (50 samples, 0.04%)</title><rect x="327.6" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (50 samples, 0.04%)</title><rect x="327.6" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (50 samples, 0.04%)</title><rect x="327.6" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (50 samples, 0.04%)</title><rect x="327.6" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="330.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (98 samples, 0.07%)</title><rect x="328.0" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (98 samples, 0.07%)</title><rect x="328.0" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (66 samples, 0.05%)</title><rect x="328.0" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="331.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (32 samples, 0.02%)</title><rect x="328.6" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (32 samples, 0.02%)</title><rect x="328.6" y="211.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="331.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,405 samples, 2.53%)</title><rect x="328.9" y="291.0" width="29.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.9" y="302.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (53 samples, 0.04%)</title><rect x="328.9" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="331.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (240 samples, 0.18%)</title><rect x="329.3" y="275.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (240 samples, 0.18%)</title><rect x="329.3" y="259.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (240 samples, 0.18%)</title><rect x="329.3" y="243.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.3" y="254.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.18%)</title><rect x="329.3" y="227.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="332.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (109 samples, 0.08%)</title><rect x="331.4" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (109 samples, 0.08%)</title><rect x="331.4" y="259.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.4" y="270.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.08%)</title><rect x="331.4" y="243.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="334.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (263 samples, 0.20%)</title><rect x="332.4" y="275.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (263 samples, 0.20%)</title><rect x="332.4" y="259.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (263 samples, 0.20%)</title><rect x="332.4" y="243.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.4" y="254.0"></text>
</g>
<g>
<title>byte[] (263 samples, 0.20%)</title><rect x="332.4" y="227.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="335.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (86 samples, 0.06%)</title><rect x="334.7" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (86 samples, 0.06%)</title><rect x="334.7" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.06%)</title><rect x="334.7" y="243.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="337.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (37 samples, 0.03%)</title><rect x="335.5" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (37 samples, 0.03%)</title><rect x="335.5" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="338.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,094 samples, 1.56%)</title><rect x="335.8" y="275.0" width="18.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.8" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (35 samples, 0.03%)</title><rect x="335.8" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="335.8" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="335.8" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.8" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/1920061559.get$Lambda (35 samples, 0.03%)</title><rect x="335.8" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.8" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$390 (35 samples, 0.03%)</title><rect x="335.8" y="195.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="338.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,148 samples, 0.85%)</title><rect x="336.1" y="259.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (676 samples, 0.50%)</title><rect x="336.1" y="243.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.1" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (676 samples, 0.50%)</title><rect x="336.1" y="227.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.1" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (676 samples, 0.50%)</title><rect x="336.1" y="211.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (676 samples, 0.50%)</title><rect x="336.1" y="195.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.1" y="206.0"></text>
</g>
<g>
<title>byte[] (676 samples, 0.50%)</title><rect x="336.1" y="179.0" width="5.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="339.1" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (104 samples, 0.08%)</title><rect x="342.0" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (104 samples, 0.08%)</title><rect x="342.0" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (104 samples, 0.08%)</title><rect x="342.0" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (104 samples, 0.08%)</title><rect x="342.0" y="195.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="345.0" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (114 samples, 0.08%)</title><rect x="342.9" y="243.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (49 samples, 0.04%)</title><rect x="342.9" y="227.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="345.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (65 samples, 0.05%)</title><rect x="343.4" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (65 samples, 0.05%)</title><rect x="343.4" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="346.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$390/1920061559.test (254 samples, 0.19%)</title><rect x="343.9" y="243.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.9" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (254 samples, 0.19%)</title><rect x="343.9" y="227.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (254 samples, 0.19%)</title><rect x="343.9" y="211.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (254 samples, 0.19%)</title><rect x="343.9" y="195.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.9" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (254 samples, 0.19%)</title><rect x="343.9" y="179.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.9" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (254 samples, 0.19%)</title><rect x="343.9" y="163.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (254 samples, 0.19%)</title><rect x="343.9" y="147.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (254 samples, 0.19%)</title><rect x="343.9" y="131.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (254 samples, 0.19%)</title><rect x="343.9" y="115.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (254 samples, 0.19%)</title><rect x="343.9" y="99.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (138 samples, 0.10%)</title><rect x="343.9" y="83.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="346.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (116 samples, 0.09%)</title><rect x="345.2" y="83.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.2" y="94.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.09%)</title><rect x="345.2" y="67.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="348.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (911 samples, 0.68%)</title><rect x="346.2" y="259.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (911 samples, 0.68%)</title><rect x="346.2" y="243.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (911 samples, 0.68%)</title><rect x="346.2" y="227.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.2" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (35 samples, 0.03%)</title><rect x="346.2" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="349.2" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.03%)</title><rect x="346.5" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="349.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (80 samples, 0.06%)</title><rect x="346.9" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="349.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.04%)</title><rect x="347.7" y="211.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="347.7" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.get$Lambda (59 samples, 0.04%)</title><rect x="347.7" y="179.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.7" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$142 (59 samples, 0.04%)</title><rect x="347.7" y="163.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="350.7" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (53 samples, 0.04%)</title><rect x="348.2" y="211.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.2" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (53 samples, 0.04%)</title><rect x="348.2" y="195.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="351.2" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (553 samples, 0.41%)</title><rect x="348.7" y="211.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.7" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (553 samples, 0.41%)</title><rect x="348.7" y="195.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (553 samples, 0.41%)</title><rect x="348.7" y="179.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (90 samples, 0.07%)</title><rect x="348.7" y="163.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.7" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (90 samples, 0.07%)</title><rect x="348.7" y="147.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (90 samples, 0.07%)</title><rect x="348.7" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (90 samples, 0.07%)</title><rect x="348.7" y="115.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (90 samples, 0.07%)</title><rect x="348.7" y="99.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.7" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (90 samples, 0.07%)</title><rect x="348.7" y="83.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.7" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (90 samples, 0.07%)</title><rect x="348.7" y="67.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (90 samples, 0.07%)</title><rect x="348.7" y="51.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (90 samples, 0.07%)</title><rect x="348.7" y="35.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="351.7" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (248 samples, 0.18%)</title><rect x="349.5" y="163.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (248 samples, 0.18%)</title><rect x="349.5" y="147.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (126 samples, 0.09%)</title><rect x="349.5" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (126 samples, 0.09%)</title><rect x="349.5" y="115.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (126 samples, 0.09%)</title><rect x="349.5" y="99.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="352.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (122 samples, 0.09%)</title><rect x="350.6" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.6" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (122 samples, 0.09%)</title><rect x="350.6" y="115.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="353.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (215 samples, 0.16%)</title><rect x="351.7" y="163.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.7" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (215 samples, 0.16%)</title><rect x="351.7" y="147.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="354.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (71 samples, 0.05%)</title><rect x="353.5" y="211.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (71 samples, 0.05%)</title><rect x="353.5" y="195.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="356.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (142 samples, 0.11%)</title><rect x="354.2" y="275.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (40 samples, 0.03%)</title><rect x="354.2" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="357.2" y="270.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.03%)</title><rect x="354.2" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="357.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (102 samples, 0.08%)</title><rect x="354.5" y="259.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (102 samples, 0.08%)</title><rect x="354.5" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (102 samples, 0.08%)</title><rect x="354.5" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (102 samples, 0.08%)</title><rect x="354.5" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (43 samples, 0.03%)</title><rect x="354.5" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.03%)</title><rect x="354.5" y="179.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="357.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (59 samples, 0.04%)</title><rect x="354.9" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (59 samples, 0.04%)</title><rect x="354.9" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.9" y="190.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.04%)</title><rect x="354.9" y="163.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="357.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (111 samples, 0.08%)</title><rect x="355.4" y="275.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (111 samples, 0.08%)</title><rect x="355.4" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (111 samples, 0.08%)</title><rect x="355.4" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (111 samples, 0.08%)</title><rect x="355.4" y="227.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (111 samples, 0.08%)</title><rect x="355.4" y="211.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.08%)</title><rect x="355.4" y="195.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (40 samples, 0.03%)</title><rect x="355.4" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.03%)</title><rect x="355.4" y="163.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="358.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (71 samples, 0.05%)</title><rect x="355.8" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (71 samples, 0.05%)</title><rect x="355.8" y="163.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.8" y="174.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.05%)</title><rect x="355.8" y="147.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="358.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (270 samples, 0.20%)</title><rect x="356.4" y="275.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.4" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.05%)</title><rect x="356.4" y="259.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="359.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (74 samples, 0.06%)</title><rect x="357.0" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.06%)</title><rect x="357.0" y="243.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="360.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (129 samples, 0.10%)</title><rect x="357.6" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (129 samples, 0.10%)</title><rect x="357.6" y="243.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="360.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.08%)</title><rect x="358.7" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.08%)</title><rect x="358.7" y="307.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.08%)</title><rect x="358.7" y="291.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="361.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (140 samples, 0.10%)</title><rect x="359.7" y="355.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="362.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.05%)</title><rect x="360.9" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="363.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (667 samples, 0.50%)</title><rect x="361.5" y="355.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.04%)</title><rect x="361.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="361.5" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/1804175133.get$Lambda (29 samples, 0.02%)</title><rect x="361.5" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$325 (29 samples, 0.02%)</title><rect x="361.5" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="364.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$333/1164372824.get$Lambda (30 samples, 0.02%)</title><rect x="361.8" y="307.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$333 (30 samples, 0.02%)</title><rect x="361.8" y="291.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="364.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (64 samples, 0.05%)</title><rect x="362.0" y="339.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="365.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (63 samples, 0.05%)</title><rect x="362.6" y="339.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="365.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (81 samples, 0.06%)</title><rect x="363.2" y="339.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="366.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (160 samples, 0.12%)</title><rect x="363.9" y="339.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (160 samples, 0.12%)</title><rect x="363.9" y="323.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (160 samples, 0.12%)</title><rect x="363.9" y="307.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (160 samples, 0.12%)</title><rect x="363.9" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (160 samples, 0.12%)</title><rect x="363.9" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (160 samples, 0.12%)</title><rect x="363.9" y="259.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (160 samples, 0.12%)</title><rect x="363.9" y="243.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (160 samples, 0.12%)</title><rect x="363.9" y="227.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (160 samples, 0.12%)</title><rect x="363.9" y="211.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.04%)</title><rect x="363.9" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.04%)</title><rect x="363.9" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (47 samples, 0.03%)</title><rect x="364.3" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="367.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (63 samples, 0.05%)</title><rect x="364.7" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (63 samples, 0.05%)</title><rect x="364.7" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (36 samples, 0.03%)</title><rect x="364.9" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (36 samples, 0.03%)</title><rect x="364.9" y="147.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="367.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (196 samples, 0.15%)</title><rect x="365.3" y="339.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.3" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.03%)</title><rect x="365.3" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="368.3" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (86 samples, 0.06%)</title><rect x="365.6" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="368.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (72 samples, 0.05%)</title><rect x="366.4" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.4" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (72 samples, 0.05%)</title><rect x="366.4" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.4" y="318.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.05%)</title><rect x="366.4" y="291.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="369.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (44 samples, 0.03%)</title><rect x="367.0" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.03%)</title><rect x="367.0" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="370.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="367.4" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="367.4" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="367.4" y="435.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="370.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (93 samples, 0.07%)</title><rect x="367.8" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (93 samples, 0.07%)</title><rect x="367.8" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (38 samples, 0.03%)</title><rect x="367.8" y="467.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="370.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.04%)</title><rect x="368.1" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.04%)</title><rect x="368.1" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.04%)</title><rect x="368.1" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="371.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,069 samples, 1.54%)</title><rect x="368.6" y="499.0" width="18.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.05%)</title><rect x="368.6" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.05%)</title><rect x="368.6" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$302/1875352691.get$Lambda (32 samples, 0.02%)</title><rect x="368.6" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$302 (32 samples, 0.02%)</title><rect x="368.6" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="371.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/1862905725.get$Lambda (31 samples, 0.02%)</title><rect x="368.9" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$306 (31 samples, 0.02%)</title><rect x="368.9" y="435.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="371.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (94 samples, 0.07%)</title><rect x="369.2" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (94 samples, 0.07%)</title><rect x="369.2" y="467.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/1862905725.apply (53 samples, 0.04%)</title><rect x="369.2" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (53 samples, 0.04%)</title><rect x="369.2" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (53 samples, 0.04%)</title><rect x="369.2" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="369.2" y="403.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="372.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.03%)</title><rect x="369.6" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.03%)</title><rect x="369.6" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.03%)</title><rect x="369.6" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="372.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.04%)</title><rect x="370.0" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.04%)</title><rect x="370.0" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="370.0" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="370.0" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="370.0" y="419.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="373.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,861 samples, 1.38%)</title><rect x="370.5" y="483.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,861 samples, 1.38%)</title><rect x="370.5" y="467.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (150 samples, 0.11%)</title><rect x="370.5" y="451.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="373.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,654 samples, 1.23%)</title><rect x="371.8" y="451.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (29 samples, 0.02%)</title><rect x="371.8" y="435.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="374.8" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (48 samples, 0.04%)</title><rect x="372.0" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="375.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (93 samples, 0.07%)</title><rect x="372.7" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.7" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (93 samples, 0.07%)</title><rect x="372.7" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.7" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (93 samples, 0.07%)</title><rect x="372.7" y="403.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="375.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (56 samples, 0.04%)</title><rect x="373.5" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (56 samples, 0.04%)</title><rect x="373.5" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="376.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (117 samples, 0.09%)</title><rect x="374.0" y="435.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="377.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (84 samples, 0.06%)</title><rect x="375.0" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="378.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (111 samples, 0.08%)</title><rect x="375.8" y="435.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="378.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (121 samples, 0.09%)</title><rect x="376.7" y="435.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="379.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (504 samples, 0.37%)</title><rect x="377.8" y="435.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (32 samples, 0.02%)</title><rect x="377.8" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="380.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (31 samples, 0.02%)</title><rect x="378.1" y="419.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="381.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (41 samples, 0.03%)</title><rect x="378.3" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="381.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (39 samples, 0.03%)</title><rect x="378.7" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="381.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (31 samples, 0.02%)</title><rect x="379.2" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (31 samples, 0.02%)</title><rect x="379.2" y="403.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="382.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (46 samples, 0.03%)</title><rect x="379.5" y="419.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="382.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (72 samples, 0.05%)</title><rect x="379.9" y="419.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="382.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (194 samples, 0.14%)</title><rect x="380.5" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (38 samples, 0.03%)</title><rect x="380.5" y="403.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="383.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (48 samples, 0.04%)</title><rect x="380.8" y="403.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="383.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (34 samples, 0.03%)</title><rect x="381.3" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (34 samples, 0.03%)</title><rect x="381.3" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="384.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (74 samples, 0.06%)</title><rect x="381.6" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (293 samples, 0.22%)</title><rect x="382.2" y="435.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (30 samples, 0.02%)</title><rect x="382.6" y="419.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="385.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (39 samples, 0.03%)</title><rect x="382.8" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (39 samples, 0.03%)</title><rect x="382.8" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="385.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (182 samples, 0.14%)</title><rect x="383.2" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (32 samples, 0.02%)</title><rect x="383.2" y="403.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="386.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (55 samples, 0.04%)</title><rect x="383.5" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="386.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (77 samples, 0.06%)</title><rect x="384.1" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (42 samples, 0.03%)</title><rect x="384.8" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (42 samples, 0.03%)</title><rect x="384.8" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (42 samples, 0.03%)</title><rect x="384.8" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (42 samples, 0.03%)</title><rect x="384.8" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.8" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (42 samples, 0.03%)</title><rect x="384.8" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (42 samples, 0.03%)</title><rect x="384.8" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.03%)</title><rect x="384.8" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="387.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (129 samples, 0.10%)</title><rect x="385.1" y="435.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (35 samples, 0.03%)</title><rect x="385.1" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="385.1" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1698958724.get$Lambda (35 samples, 0.03%)</title><rect x="385.1" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$239 (35 samples, 0.03%)</title><rect x="385.1" y="371.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="388.1" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (94 samples, 0.07%)</title><rect x="385.5" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1698958724.run (94 samples, 0.07%)</title><rect x="385.5" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (94 samples, 0.07%)</title><rect x="385.5" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.5" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (70 samples, 0.05%)</title><rect x="385.7" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.7" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (31 samples, 0.02%)</title><rect x="385.7" y="355.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="388.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (39 samples, 0.03%)</title><rect x="385.9" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.9" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (39 samples, 0.03%)</title><rect x="385.9" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.9" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (39 samples, 0.03%)</title><rect x="385.9" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.9" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (39 samples, 0.03%)</title><rect x="385.9" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.9" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (39 samples, 0.03%)</title><rect x="385.9" y="291.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="388.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (57 samples, 0.04%)</title><rect x="386.3" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="386.3" y="435.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="389.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$122/964985208.get (14,568 samples, 10.83%)</title><rect x="386.8" y="627.0" width="127.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.8" y="638.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (14,568 samples, 10.83%)</title><rect x="386.8" y="611.0" width="127.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.8" y="622.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$486/329204198.run (14,568 samples, 10.83%)</title><rect x="386.8" y="595.0" width="127.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.8" y="606.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$0 (14,568 samples, 10.83%)</title><rect x="386.8" y="579.0" width="127.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.8" y="590.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/String.getBytes (39 samples, 0.03%)</title><rect x="386.8" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (39 samples, 0.03%)</title><rect x="386.8" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (39 samples, 0.03%)</title><rect x="386.8" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.03%)</title><rect x="386.8" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.8" y="526.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.03%)</title><rect x="386.8" y="499.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="389.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (14,491 samples, 10.77%)</title><rect x="387.5" y="563.0" width="127.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.5" y="574.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (657 samples, 0.49%)</title><rect x="387.5" y="547.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (591 samples, 0.44%)</title><rect x="387.5" y="531.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.5" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (162 samples, 0.12%)</title><rect x="387.5" y="515.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (162 samples, 0.12%)</title><rect x="387.5" y="499.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (162 samples, 0.12%)</title><rect x="387.5" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (162 samples, 0.12%)</title><rect x="387.5" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (162 samples, 0.12%)</title><rect x="387.5" y="451.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (162 samples, 0.12%)</title><rect x="387.5" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (162 samples, 0.12%)</title><rect x="387.5" y="419.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (162 samples, 0.12%)</title><rect x="387.5" y="403.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (162 samples, 0.12%)</title><rect x="387.5" y="387.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (162 samples, 0.12%)</title><rect x="387.5" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (162 samples, 0.12%)</title><rect x="387.5" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (162 samples, 0.12%)</title><rect x="387.5" y="339.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="390.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (429 samples, 0.32%)</title><rect x="388.9" y="515.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.9" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (429 samples, 0.32%)</title><rect x="388.9" y="499.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (429 samples, 0.32%)</title><rect x="388.9" y="483.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (429 samples, 0.32%)</title><rect x="388.9" y="467.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (429 samples, 0.32%)</title><rect x="388.9" y="451.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (429 samples, 0.32%)</title><rect x="388.9" y="435.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (338 samples, 0.25%)</title><rect x="388.9" y="419.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (338 samples, 0.25%)</title><rect x="388.9" y="403.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (338 samples, 0.25%)</title><rect x="388.9" y="387.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (338 samples, 0.25%)</title><rect x="388.9" y="371.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (206 samples, 0.15%)</title><rect x="388.9" y="355.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.09%)</title><rect x="388.9" y="339.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="391.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (82 samples, 0.06%)</title><rect x="390.0" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.0" y="350.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.06%)</title><rect x="390.0" y="323.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="393.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (94 samples, 0.07%)</title><rect x="391.1" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (94 samples, 0.07%)</title><rect x="391.1" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (68 samples, 0.05%)</title><rect x="391.1" y="323.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="394.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (91 samples, 0.07%)</title><rect x="391.9" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (91 samples, 0.07%)</title><rect x="391.9" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (91 samples, 0.07%)</title><rect x="391.9" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (91 samples, 0.07%)</title><rect x="391.9" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (91 samples, 0.07%)</title><rect x="391.9" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (91 samples, 0.07%)</title><rect x="391.9" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (91 samples, 0.07%)</title><rect x="391.9" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="394.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$508/1845064780.apply (66 samples, 0.05%)</title><rect x="392.7" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (66 samples, 0.05%)</title><rect x="392.7" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (66 samples, 0.05%)</title><rect x="392.7" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.7" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (66 samples, 0.05%)</title><rect x="392.7" y="483.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="395.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (13,796 samples, 10.26%)</title><rect x="393.3" y="547.0" width="121.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.3" y="558.0">ru/mail/polis/s..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,909 samples, 1.42%)</title><rect x="393.3" y="531.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,904 samples, 1.42%)</title><rect x="393.4" y="515.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (74 samples, 0.06%)</title><rect x="393.5" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.5" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (74 samples, 0.06%)</title><rect x="393.5" y="483.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="396.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,797 samples, 1.34%)</title><rect x="394.3" y="499.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,797 samples, 1.34%)</title><rect x="394.3" y="483.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (33 samples, 0.02%)</title><rect x="394.3" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.02%)</title><rect x="394.3" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.02%)</title><rect x="394.3" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="397.3" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,764 samples, 1.31%)</title><rect x="394.6" y="467.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,764 samples, 1.31%)</title><rect x="394.6" y="451.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,764 samples, 1.31%)</title><rect x="394.6" y="435.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,764 samples, 1.31%)</title><rect x="394.6" y="419.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,519 samples, 1.13%)</title><rect x="394.6" y="403.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,519 samples, 1.13%)</title><rect x="394.6" y="387.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,519 samples, 1.13%)</title><rect x="394.6" y="371.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (1,519 samples, 1.13%)</title><rect x="394.6" y="355.0" width="13.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (904 samples, 0.67%)</title><rect x="394.6" y="339.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.6" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (575 samples, 0.43%)</title><rect x="394.6" y="323.0" width="5.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="397.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (329 samples, 0.24%)</title><rect x="399.7" y="323.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.7" y="334.0"></text>
</g>
<g>
<title>byte[] (329 samples, 0.24%)</title><rect x="399.7" y="307.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="402.7" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (83 samples, 0.06%)</title><rect x="402.5" y="339.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="405.5" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (87 samples, 0.06%)</title><rect x="403.3" y="339.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="406.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (445 samples, 0.33%)</title><rect x="404.0" y="339.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (445 samples, 0.33%)</title><rect x="404.0" y="323.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (301 samples, 0.22%)</title><rect x="404.0" y="307.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="407.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (144 samples, 0.11%)</title><rect x="406.7" y="307.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.7" y="318.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.11%)</title><rect x="406.7" y="291.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="409.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (245 samples, 0.18%)</title><rect x="407.9" y="403.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (245 samples, 0.18%)</title><rect x="407.9" y="387.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (245 samples, 0.18%)</title><rect x="407.9" y="371.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (245 samples, 0.18%)</title><rect x="407.9" y="355.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (245 samples, 0.18%)</title><rect x="407.9" y="339.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (245 samples, 0.18%)</title><rect x="407.9" y="323.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (245 samples, 0.18%)</title><rect x="407.9" y="307.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="410.9" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (11,480 samples, 8.53%)</title><rect x="410.4" y="531.0" width="100.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.4" y="542.0">java/util/Co..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (11,480 samples, 8.53%)</title><rect x="410.4" y="515.0" width="100.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.4" y="526.0">java/lang/It..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$502/1244742828.accept (11,456 samples, 8.52%)</title><rect x="410.6" y="499.0" width="100.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.6" y="510.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (11,456 samples, 8.52%)</title><rect x="410.6" y="483.0" width="100.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.6" y="494.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (11,456 samples, 8.52%)</title><rect x="410.6" y="467.0" width="100.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.6" y="478.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.SortedStringTable$1 (122 samples, 0.09%)</title><rect x="410.6" y="451.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="413.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (11,334 samples, 8.43%)</title><rect x="411.7" y="451.0" width="99.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.7" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (11,334 samples, 8.43%)</title><rect x="411.7" y="435.0" width="99.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.7" y="446.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (11,334 samples, 8.43%)</title><rect x="411.7" y="419.0" width="99.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.7" y="430.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7,483 samples, 5.56%)</title><rect x="411.7" y="403.0" width="65.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.7" y="414.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,098 samples, 3.79%)</title><rect x="411.7" y="387.0" width="44.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="414.7" y="398.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,385 samples, 1.77%)</title><rect x="456.4" y="387.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.4" y="398.0"></text>
</g>
<g>
<title>byte[] (2,385 samples, 1.77%)</title><rect x="456.4" y="371.0" width="20.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="459.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (3,851 samples, 2.86%)</title><rect x="477.3" y="403.0" width="33.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.3" y="414.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,851 samples, 2.86%)</title><rect x="477.3" y="387.0" width="33.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.3" y="398.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,579 samples, 1.92%)</title><rect x="477.3" y="371.0" width="22.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="480.3" y="382.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,272 samples, 0.95%)</title><rect x="499.9" y="371.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.9" y="382.0"></text>
</g>
<g>
<title>byte[] (1,272 samples, 0.95%)</title><rect x="499.9" y="355.0" width="11.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="502.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (324 samples, 0.24%)</title><rect x="511.1" y="531.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (318 samples, 0.24%)</title><rect x="511.2" y="515.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (318 samples, 0.24%)</title><rect x="511.2" y="499.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.2" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (83 samples, 0.06%)</title><rect x="511.2" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (83 samples, 0.06%)</title><rect x="511.2" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (83 samples, 0.06%)</title><rect x="511.2" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="511.2" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (83 samples, 0.06%)</title><rect x="511.2" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (83 samples, 0.06%)</title><rect x="511.2" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (83 samples, 0.06%)</title><rect x="511.2" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (83 samples, 0.06%)</title><rect x="511.2" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (83 samples, 0.06%)</title><rect x="511.2" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (83 samples, 0.06%)</title><rect x="511.2" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (83 samples, 0.06%)</title><rect x="511.2" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (83 samples, 0.06%)</title><rect x="511.2" y="307.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="514.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (235 samples, 0.17%)</title><rect x="511.9" y="483.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (235 samples, 0.17%)</title><rect x="511.9" y="467.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (235 samples, 0.17%)</title><rect x="511.9" y="451.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (235 samples, 0.17%)</title><rect x="511.9" y="435.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 0.17%)</title><rect x="511.9" y="419.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 0.17%)</title><rect x="511.9" y="403.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (185 samples, 0.14%)</title><rect x="511.9" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (185 samples, 0.14%)</title><rect x="511.9" y="371.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (185 samples, 0.14%)</title><rect x="511.9" y="355.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (185 samples, 0.14%)</title><rect x="511.9" y="339.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (108 samples, 0.08%)</title><rect x="511.9" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.05%)</title><rect x="511.9" y="307.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="514.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.03%)</title><rect x="512.5" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.5" y="318.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.03%)</title><rect x="512.5" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="515.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (59 samples, 0.04%)</title><rect x="513.0" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (59 samples, 0.04%)</title><rect x="513.0" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.03%)</title><rect x="513.0" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="516.0" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (50 samples, 0.04%)</title><rect x="513.6" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (50 samples, 0.04%)</title><rect x="513.6" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (50 samples, 0.04%)</title><rect x="513.6" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (50 samples, 0.04%)</title><rect x="513.6" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (50 samples, 0.04%)</title><rect x="513.6" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (50 samples, 0.04%)</title><rect x="513.6" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (50 samples, 0.04%)</title><rect x="513.6" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="516.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (42 samples, 0.03%)</title><rect x="514.0" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,671 samples, 1.99%)</title><rect x="514.6" y="643.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.6" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,383 samples, 1.77%)</title><rect x="514.6" y="627.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$492/81898337.apply (2,369 samples, 1.76%)</title><rect x="514.7" y="611.0" width="20.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$1 (2,369 samples, 1.76%)</title><rect x="514.7" y="595.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (2,369 samples, 1.76%)</title><rect x="514.7" y="579.0" width="20.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.06%)</title><rect x="514.8" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (76 samples, 0.06%)</title><rect x="514.8" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.06%)</title><rect x="514.8" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (64 samples, 0.05%)</title><rect x="514.9" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (64 samples, 0.05%)</title><rect x="514.9" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.9" y="510.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.05%)</title><rect x="514.9" y="483.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="517.9" y="494.0"></text>
</g>
<g>
<title>java/net/URI.create (263 samples, 0.20%)</title><rect x="515.5" y="563.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.5" y="574.0"></text>
</g>
<g>
<title>java.net.URI (66 samples, 0.05%)</title><rect x="515.5" y="547.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="518.5" y="558.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (197 samples, 0.15%)</title><rect x="516.1" y="547.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.1" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (179 samples, 0.13%)</title><rect x="516.2" y="531.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.03%)</title><rect x="516.2" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.03%)</title><rect x="516.2" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.2" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (140 samples, 0.10%)</title><rect x="516.6" y="515.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 0.05%)</title><rect x="516.6" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.05%)</title><rect x="516.6" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.02%)</title><rect x="516.6" y="467.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="519.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.03%)</title><rect x="516.8" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.8" y="478.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.03%)</title><rect x="516.8" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="519.8" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (71 samples, 0.05%)</title><rect x="517.2" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.03%)</title><rect x="517.2" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.03%)</title><rect x="517.2" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.2" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (34 samples, 0.03%)</title><rect x="517.5" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.5" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (34 samples, 0.03%)</title><rect x="517.5" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.03%)</title><rect x="517.5" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.03%)</title><rect x="517.5" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (75 samples, 0.06%)</title><rect x="517.8" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (53 samples, 0.04%)</title><rect x="518.0" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (43 samples, 0.03%)</title><rect x="518.1" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (43 samples, 0.03%)</title><rect x="518.1" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="521.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,315 samples, 0.98%)</title><rect x="518.6" y="563.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,315 samples, 0.98%)</title><rect x="518.6" y="547.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,315 samples, 0.98%)</title><rect x="518.6" y="531.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,315 samples, 0.98%)</title><rect x="518.6" y="515.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.03%)</title><rect x="518.7" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.03%)</title><rect x="518.7" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (54 samples, 0.04%)</title><rect x="519.1" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (54 samples, 0.04%)</title><rect x="519.1" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (35 samples, 0.03%)</title><rect x="519.6" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="522.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (69 samples, 0.05%)</title><rect x="519.9" y="499.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="522.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (627 samples, 0.47%)</title><rect x="520.5" y="499.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (71 samples, 0.05%)</title><rect x="520.5" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (61 samples, 0.05%)</title><rect x="520.5" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (34 samples, 0.03%)</title><rect x="520.8" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.8" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (34 samples, 0.03%)</title><rect x="520.8" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="523.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (246 samples, 0.18%)</title><rect x="521.1" y="483.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (246 samples, 0.18%)</title><rect x="521.1" y="467.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.1" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (32 samples, 0.02%)</title><rect x="521.4" y="451.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="524.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (90 samples, 0.07%)</title><rect x="521.9" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (90 samples, 0.07%)</title><rect x="521.9" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (90 samples, 0.07%)</title><rect x="521.9" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (90 samples, 0.07%)</title><rect x="521.9" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (35 samples, 0.03%)</title><rect x="521.9" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (35 samples, 0.03%)</title><rect x="521.9" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (35 samples, 0.03%)</title><rect x="521.9" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.03%)</title><rect x="521.9" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.03%)</title><rect x="521.9" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.03%)</title><rect x="521.9" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.03%)</title><rect x="521.9" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.03%)</title><rect x="521.9" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.03%)</title><rect x="521.9" y="259.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="524.9" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (33 samples, 0.02%)</title><rect x="522.2" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (33 samples, 0.02%)</title><rect x="522.2" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (30 samples, 0.02%)</title><rect x="522.7" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.7" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (30 samples, 0.02%)</title><rect x="522.7" y="435.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="525.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (36 samples, 0.03%)</title><rect x="523.0" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (36 samples, 0.03%)</title><rect x="523.0" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="526.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (203 samples, 0.15%)</title><rect x="523.4" y="483.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.4" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (203 samples, 0.15%)</title><rect x="523.4" y="467.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.4" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (186 samples, 0.14%)</title><rect x="523.4" y="451.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.4" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (186 samples, 0.14%)</title><rect x="523.4" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.4" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (186 samples, 0.14%)</title><rect x="523.4" y="419.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.4" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (47 samples, 0.03%)</title><rect x="523.4" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="526.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (75 samples, 0.06%)</title><rect x="523.8" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.8" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (75 samples, 0.06%)</title><rect x="523.8" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.8" y="398.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.06%)</title><rect x="523.8" y="371.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="526.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (64 samples, 0.05%)</title><rect x="524.5" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.05%)</title><rect x="524.5" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.05%)</title><rect x="524.5" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.5" y="382.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.05%)</title><rect x="524.5" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="527.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (33 samples, 0.02%)</title><rect x="525.2" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.02%)</title><rect x="525.2" y="467.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="528.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (64 samples, 0.05%)</title><rect x="525.5" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (33 samples, 0.02%)</title><rect x="525.7" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (33 samples, 0.02%)</title><rect x="525.7" y="451.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="528.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (294 samples, 0.22%)</title><rect x="526.0" y="499.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (42 samples, 0.03%)</title><rect x="526.1" y="483.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="529.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (232 samples, 0.17%)</title><rect x="526.6" y="483.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (232 samples, 0.17%)</title><rect x="526.6" y="467.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.6" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList (29 samples, 0.02%)</title><rect x="526.9" y="451.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="529.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (100 samples, 0.07%)</title><rect x="527.1" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (100 samples, 0.07%)</title><rect x="527.1" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (100 samples, 0.07%)</title><rect x="527.1" y="419.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.1" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (100 samples, 0.07%)</title><rect x="527.1" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.1" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (100 samples, 0.07%)</title><rect x="527.1" y="387.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="530.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (34 samples, 0.03%)</title><rect x="528.0" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (34 samples, 0.03%)</title><rect x="528.0" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (34 samples, 0.03%)</title><rect x="528.3" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (34 samples, 0.03%)</title><rect x="528.3" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (34 samples, 0.03%)</title><rect x="528.3" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="531.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (175 samples, 0.13%)</title><rect x="528.6" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (31 samples, 0.02%)</title><rect x="528.6" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (124 samples, 0.09%)</title><rect x="529.0" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (96 samples, 0.07%)</title><rect x="529.3" y="467.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (96 samples, 0.07%)</title><rect x="529.3" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (45 samples, 0.03%)</title><rect x="529.3" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="532.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="529.7" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="529.7" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="529.7" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="532.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (295 samples, 0.22%)</title><rect x="530.1" y="563.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (268 samples, 0.20%)</title><rect x="530.4" y="547.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (268 samples, 0.20%)</title><rect x="530.4" y="531.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (268 samples, 0.20%)</title><rect x="530.4" y="515.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (43 samples, 0.03%)</title><rect x="530.5" y="499.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="533.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (108 samples, 0.08%)</title><rect x="531.5" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (108 samples, 0.08%)</title><rect x="531.5" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (108 samples, 0.08%)</title><rect x="531.5" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (47 samples, 0.03%)</title><rect x="531.5" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (47 samples, 0.03%)</title><rect x="531.5" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (47 samples, 0.03%)</title><rect x="531.5" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.03%)</title><rect x="531.5" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.03%)</title><rect x="531.5" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.03%)</title><rect x="531.5" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.03%)</title><rect x="531.5" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.03%)</title><rect x="531.5" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.03%)</title><rect x="531.5" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="534.5" y="334.0"></text>
</g>
<g>
<title>java/util/List.copyOf (36 samples, 0.03%)</title><rect x="531.9" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.9" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (36 samples, 0.03%)</title><rect x="531.9" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.9" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (36 samples, 0.03%)</title><rect x="532.4" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (36 samples, 0.03%)</title><rect x="532.4" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="535.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (56 samples, 0.04%)</title><rect x="532.7" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (56 samples, 0.04%)</title><rect x="532.7" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (56 samples, 0.04%)</title><rect x="532.7" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (258 samples, 0.19%)</title><rect x="533.2" y="563.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (221 samples, 0.16%)</title><rect x="533.5" y="547.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$223/558130116.accept (221 samples, 0.16%)</title><rect x="533.5" y="531.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (221 samples, 0.16%)</title><rect x="533.5" y="515.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (45 samples, 0.03%)</title><rect x="533.5" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (45 samples, 0.03%)</title><rect x="533.5" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (136 samples, 0.10%)</title><rect x="533.9" y="499.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (67 samples, 0.05%)</title><rect x="534.0" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (67 samples, 0.05%)</title><rect x="534.0" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (49 samples, 0.04%)</title><rect x="534.0" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="537.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (48 samples, 0.04%)</title><rect x="534.6" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (48 samples, 0.04%)</title><rect x="534.6" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (40 samples, 0.03%)</title><rect x="535.0" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (40 samples, 0.03%)</title><rect x="535.0" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (288 samples, 0.21%)</title><rect x="535.5" y="627.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (288 samples, 0.21%)</title><rect x="535.5" y="611.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="538.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$494/1939492317.accept (288 samples, 0.21%)</title><rect x="535.5" y="595.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$3 (288 samples, 0.21%)</title><rect x="535.5" y="579.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getNumberOfSuccessfulResponses (85 samples, 0.06%)</title><rect x="535.5" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$522/1440614441.test (85 samples, 0.06%)</title><rect x="535.5" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$2 (85 samples, 0.06%)</title><rect x="535.5" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (85 samples, 0.06%)</title><rect x="535.5" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (41 samples, 0.03%)</title><rect x="535.7" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (46 samples, 0.03%)</title><rect x="536.2" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (46 samples, 0.03%)</title><rect x="536.2" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 0.03%)</title><rect x="536.2" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 0.03%)</title><rect x="536.2" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (29 samples, 0.02%)</title><rect x="536.2" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.2" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (29 samples, 0.02%)</title><rect x="536.2" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.2" y="494.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.02%)</title><rect x="536.2" y="467.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="539.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.merge (93 samples, 0.07%)</title><rect x="536.6" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.6" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (29 samples, 0.02%)</title><rect x="536.6" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (46 samples, 0.03%)</title><rect x="537.0" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (42 samples, 0.03%)</title><rect x="537.1" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.03%)</title><rect x="537.1" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (34 samples, 0.03%)</title><rect x="537.1" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (64 samples, 0.05%)</title><rect x="537.4" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (33 samples, 0.02%)</title><rect x="537.5" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (311 samples, 0.23%)</title><rect x="538.0" y="643.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (288 samples, 0.21%)</title><rect x="538.0" y="627.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (282 samples, 0.21%)</title><rect x="538.0" y="611.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (282 samples, 0.21%)</title><rect x="538.0" y="595.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (282 samples, 0.21%)</title><rect x="538.0" y="579.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="541.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$394/1798067653.run (841 samples, 0.63%)</title><rect x="540.7" y="643.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (841 samples, 0.63%)</title><rect x="540.7" y="627.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (841 samples, 0.63%)</title><rect x="540.7" y="611.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (841 samples, 0.63%)</title><rect x="540.7" y="595.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (841 samples, 0.63%)</title><rect x="540.7" y="579.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (841 samples, 0.63%)</title><rect x="540.7" y="563.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (841 samples, 0.63%)</title><rect x="540.7" y="547.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (841 samples, 0.63%)</title><rect x="540.7" y="531.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (841 samples, 0.63%)</title><rect x="540.7" y="515.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (841 samples, 0.63%)</title><rect x="540.7" y="499.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (841 samples, 0.63%)</title><rect x="540.7" y="483.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (746 samples, 0.55%)</title><rect x="540.7" y="467.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.05%)</title><rect x="540.7" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.05%)</title><rect x="540.7" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/197561838.get$Lambda (45 samples, 0.03%)</title><rect x="540.7" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$405 (45 samples, 0.03%)</title><rect x="540.7" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="543.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (680 samples, 0.51%)</title><rect x="541.3" y="451.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (80 samples, 0.06%)</title><rect x="541.3" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="544.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (600 samples, 0.45%)</title><rect x="542.0" y="435.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (600 samples, 0.45%)</title><rect x="542.0" y="419.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (600 samples, 0.45%)</title><rect x="542.0" y="403.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (274 samples, 0.20%)</title><rect x="542.0" y="387.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (103 samples, 0.08%)</title><rect x="542.0" y="371.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="545.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$424/484639362.apply (171 samples, 0.13%)</title><rect x="542.9" y="371.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="545.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (171 samples, 0.13%)</title><rect x="542.9" y="355.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (171 samples, 0.13%)</title><rect x="542.9" y="339.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (37 samples, 0.03%)</title><rect x="542.9" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.9" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (37 samples, 0.03%)</title><rect x="542.9" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.9" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (37 samples, 0.03%)</title><rect x="542.9" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="545.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (134 samples, 0.10%)</title><rect x="543.2" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (116 samples, 0.09%)</title><rect x="543.4" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (116 samples, 0.09%)</title><rect x="543.4" y="291.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (74 samples, 0.06%)</title><rect x="543.4" y="275.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="546.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="544.0" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.03%)</title><rect x="544.0" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.03%)</title><rect x="544.0" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="547.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (326 samples, 0.24%)</title><rect x="544.4" y="387.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (326 samples, 0.24%)</title><rect x="544.4" y="371.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$370/1725152409.apply (326 samples, 0.24%)</title><rect x="544.4" y="355.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (326 samples, 0.24%)</title><rect x="544.4" y="339.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (326 samples, 0.24%)</title><rect x="544.4" y="323.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/1264514825.apply (326 samples, 0.24%)</title><rect x="544.4" y="307.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (326 samples, 0.24%)</title><rect x="544.4" y="291.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (126 samples, 0.09%)</title><rect x="544.6" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (126 samples, 0.09%)</title><rect x="544.6" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (73 samples, 0.05%)</title><rect x="544.6" y="243.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="547.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="545.3" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="545.3" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="545.3" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="548.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (175 samples, 0.13%)</title><rect x="545.7" y="275.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (104 samples, 0.08%)</title><rect x="545.7" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (47 samples, 0.03%)</title><rect x="545.7" y="243.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="548.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (57 samples, 0.04%)</title><rect x="546.1" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (57 samples, 0.04%)</title><rect x="546.1" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="546.1" y="211.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="549.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (71 samples, 0.05%)</title><rect x="546.6" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (31 samples, 0.02%)</title><rect x="546.6" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="549.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (40 samples, 0.03%)</title><rect x="546.9" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (40 samples, 0.03%)</title><rect x="546.9" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (40 samples, 0.03%)</title><rect x="546.9" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (40 samples, 0.03%)</title><rect x="546.9" y="195.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (40 samples, 0.03%)</title><rect x="546.9" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (40 samples, 0.03%)</title><rect x="546.9" y="163.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="549.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (95 samples, 0.07%)</title><rect x="547.3" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (95 samples, 0.07%)</title><rect x="547.3" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (95 samples, 0.07%)</title><rect x="547.3" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (95 samples, 0.07%)</title><rect x="547.3" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (95 samples, 0.07%)</title><rect x="547.3" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.3" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (95 samples, 0.07%)</title><rect x="547.3" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (30 samples, 0.02%)</title><rect x="547.3" y="371.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.3" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (30 samples, 0.02%)</title><rect x="547.3" y="355.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="550.3" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (65 samples, 0.05%)</title><rect x="547.5" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.5" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (65 samples, 0.05%)</title><rect x="547.5" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="550.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8,003 samples, 5.95%)</title><rect x="548.1" y="643.0" width="70.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.1" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8,003 samples, 5.95%)</title><rect x="548.1" y="627.0" width="70.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.1" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,575 samples, 4.89%)</title><rect x="548.1" y="611.0" width="57.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.1" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (6,575 samples, 4.89%)</title><rect x="548.1" y="595.0" width="57.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.1" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6,575 samples, 4.89%)</title><rect x="548.1" y="579.0" width="57.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.1" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (117 samples, 0.09%)</title><rect x="548.1" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (117 samples, 0.09%)</title><rect x="548.1" y="547.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (117 samples, 0.09%)</title><rect x="548.1" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (117 samples, 0.09%)</title><rect x="548.1" y="515.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (68 samples, 0.05%)</title><rect x="548.1" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (68 samples, 0.05%)</title><rect x="548.1" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.05%)</title><rect x="548.1" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (68 samples, 0.05%)</title><rect x="548.1" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (68 samples, 0.05%)</title><rect x="548.1" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.1" y="446.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.05%)</title><rect x="548.1" y="419.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="551.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (49 samples, 0.04%)</title><rect x="548.7" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.04%)</title><rect x="548.7" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.04%)</title><rect x="548.7" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398/1871476137.get$Lambda (49 samples, 0.04%)</title><rect x="548.7" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398 (49 samples, 0.04%)</title><rect x="548.7" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="551.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6,458 samples, 4.80%)</title><rect x="549.1" y="563.0" width="56.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.1" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6,458 samples, 4.80%)</title><rect x="549.1" y="547.0" width="56.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.1" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,458 samples, 4.80%)</title><rect x="549.1" y="531.0" width="56.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.1" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,458 samples, 4.80%)</title><rect x="549.1" y="515.0" width="56.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.1" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,670 samples, 1.98%)</title><rect x="549.1" y="499.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,670 samples, 1.98%)</title><rect x="549.1" y="483.0" width="23.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,670 samples, 1.98%)</title><rect x="549.1" y="467.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.1" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,670 samples, 1.98%)</title><rect x="549.1" y="451.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.1" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,670 samples, 1.98%)</title><rect x="549.1" y="435.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.1" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,670 samples, 1.98%)</title><rect x="549.1" y="419.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.1" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,670 samples, 1.98%)</title><rect x="549.1" y="403.0" width="23.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.1" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,575 samples, 1.91%)</title><rect x="549.1" y="387.0" width="22.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.1" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,575 samples, 1.91%)</title><rect x="549.1" y="371.0" width="22.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.1" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,516 samples, 1.87%)</title><rect x="549.1" y="355.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.1" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (55 samples, 0.04%)</title><rect x="549.1" y="339.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="552.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1182132911.apply (2,338 samples, 1.74%)</title><rect x="549.6" y="339.0" width="20.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,338 samples, 1.74%)</title><rect x="549.6" y="323.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.03%)</title><rect x="549.6" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.03%)</title><rect x="549.6" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$467/1200215500.get$Lambda (40 samples, 0.03%)</title><rect x="549.6" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$467 (40 samples, 0.03%)</title><rect x="549.6" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="552.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (140 samples, 0.10%)</title><rect x="550.0" y="307.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (140 samples, 0.10%)</title><rect x="550.0" y="291.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (72 samples, 0.05%)</title><rect x="550.0" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="553.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.05%)</title><rect x="550.6" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.05%)</title><rect x="550.6" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.05%)</title><rect x="550.6" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="553.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,158 samples, 1.60%)</title><rect x="551.2" y="307.0" width="18.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (124 samples, 0.09%)</title><rect x="551.4" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (124 samples, 0.09%)</title><rect x="551.4" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (65 samples, 0.05%)</title><rect x="551.4" y="259.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="554.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="552.0" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="552.0" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.04%)</title><rect x="552.0" y="227.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="555.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,006 samples, 1.49%)</title><rect x="552.5" y="291.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.5" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$157/1563968298.apply (179 samples, 0.13%)</title><rect x="552.5" y="275.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (179 samples, 0.13%)</title><rect x="552.5" y="259.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (179 samples, 0.13%)</title><rect x="552.5" y="243.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (68 samples, 0.05%)</title><rect x="552.5" y="227.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="555.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (111 samples, 0.08%)</title><rect x="553.1" y="227.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (50 samples, 0.04%)</title><rect x="553.1" y="211.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="556.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.05%)</title><rect x="553.6" y="211.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="556.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,827 samples, 1.36%)</title><rect x="554.1" y="275.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.05%)</title><rect x="554.1" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.05%)</title><rect x="554.1" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$458/9249739.get$Lambda (31 samples, 0.02%)</title><rect x="554.1" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$458 (31 samples, 0.02%)</title><rect x="554.1" y="211.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="557.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$460/1540370286.get$Lambda (30 samples, 0.02%)</title><rect x="554.4" y="227.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$460 (30 samples, 0.02%)</title><rect x="554.4" y="211.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="557.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/423820432.linkToTargetMethod (71 samples, 0.05%)</title><rect x="554.6" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2123217960.invokeStatic (71 samples, 0.05%)</title><rect x="554.6" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$440/1852712216.get$Lambda (71 samples, 0.05%)</title><rect x="554.6" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$440 (71 samples, 0.05%)</title><rect x="554.6" y="211.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="557.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (381 samples, 0.28%)</title><rect x="555.3" y="259.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.3" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (147 samples, 0.11%)</title><rect x="555.3" y="243.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.3" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (59 samples, 0.04%)</title><rect x="555.3" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.3" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (59 samples, 0.04%)</title><rect x="555.3" y="211.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="558.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (88 samples, 0.07%)</title><rect x="555.8" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (88 samples, 0.07%)</title><rect x="555.8" y="211.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="558.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (118 samples, 0.09%)</title><rect x="556.5" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (118 samples, 0.09%)</title><rect x="556.5" y="227.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (118 samples, 0.09%)</title><rect x="556.5" y="211.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (31 samples, 0.02%)</title><rect x="556.5" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (31 samples, 0.02%)</title><rect x="556.5" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (31 samples, 0.02%)</title><rect x="556.5" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.5" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (31 samples, 0.02%)</title><rect x="556.5" y="147.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="559.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$437/1604600042.get (42 samples, 0.03%)</title><rect x="556.8" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.8" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (42 samples, 0.03%)</title><rect x="556.8" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="559.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (45 samples, 0.03%)</title><rect x="557.2" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (45 samples, 0.03%)</title><rect x="557.2" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (45 samples, 0.03%)</title><rect x="557.2" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (45 samples, 0.03%)</title><rect x="557.2" y="147.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="560.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (116 samples, 0.09%)</title><rect x="557.6" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (116 samples, 0.09%)</title><rect x="557.6" y="227.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="560.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (200 samples, 0.15%)</title><rect x="558.6" y="259.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (93 samples, 0.07%)</title><rect x="558.6" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (48 samples, 0.04%)</title><rect x="558.6" y="227.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="561.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.03%)</title><rect x="559.0" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.03%)</title><rect x="559.0" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.03%)</title><rect x="559.0" y="195.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="562.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (107 samples, 0.08%)</title><rect x="559.4" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (107 samples, 0.08%)</title><rect x="559.4" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.04%)</title><rect x="559.4" y="211.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="562.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="559.9" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="559.9" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="559.9" y="179.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="562.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (47 samples, 0.03%)</title><rect x="560.3" y="259.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="563.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (56 samples, 0.04%)</title><rect x="560.8" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="563.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="561.3" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="564.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (935 samples, 0.70%)</title><rect x="561.9" y="259.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$440/1852712216.run (935 samples, 0.70%)</title><rect x="561.9" y="243.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (935 samples, 0.70%)</title><rect x="561.9" y="227.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (125 samples, 0.09%)</title><rect x="561.9" y="211.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (125 samples, 0.09%)</title><rect x="561.9" y="195.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$443/527689736.get$Lambda (43 samples, 0.03%)</title><rect x="562.1" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$443 (43 samples, 0.03%)</title><rect x="562.1" y="163.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="565.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$450/1661108157.get$Lambda (56 samples, 0.04%)</title><rect x="562.5" y="179.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$450 (56 samples, 0.04%)</title><rect x="562.5" y="163.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="565.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (105 samples, 0.08%)</title><rect x="563.0" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (105 samples, 0.08%)</title><rect x="563.0" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.04%)</title><rect x="563.0" y="179.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="566.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="563.5" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="563.5" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="563.5" y="147.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="566.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (71 samples, 0.05%)</title><rect x="563.9" y="211.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="566.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (40 samples, 0.03%)</title><rect x="564.6" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.03%)</title><rect x="564.6" y="195.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="567.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (143 samples, 0.11%)</title><rect x="564.9" y="211.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (143 samples, 0.11%)</title><rect x="564.9" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.03%)</title><rect x="564.9" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.03%)</title><rect x="564.9" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$454/1351673014.get$Lambda (37 samples, 0.03%)</title><rect x="564.9" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$454 (37 samples, 0.03%)</title><rect x="564.9" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="567.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (106 samples, 0.08%)</title><rect x="565.2" y="179.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (106 samples, 0.08%)</title><rect x="565.2" y="163.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (106 samples, 0.08%)</title><rect x="565.2" y="147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (67 samples, 0.05%)</title><rect x="565.2" y="131.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="568.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.03%)</title><rect x="565.8" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.03%)</title><rect x="565.8" y="115.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.8" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.03%)</title><rect x="565.8" y="99.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="568.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (157 samples, 0.12%)</title><rect x="566.2" y="211.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (157 samples, 0.12%)</title><rect x="566.2" y="195.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (157 samples, 0.12%)</title><rect x="566.2" y="179.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 0.12%)</title><rect x="566.2" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (41 samples, 0.03%)</title><rect x="566.2" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.03%)</title><rect x="566.2" y="131.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="569.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (116 samples, 0.09%)</title><rect x="566.5" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (116 samples, 0.09%)</title><rect x="566.5" y="131.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.5" y="142.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.09%)</title><rect x="566.5" y="115.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="569.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (294 samples, 0.22%)</title><rect x="567.5" y="211.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (99 samples, 0.07%)</title><rect x="567.5" y="195.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="570.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (195 samples, 0.14%)</title><rect x="568.4" y="195.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (195 samples, 0.14%)</title><rect x="568.4" y="179.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (195 samples, 0.14%)</title><rect x="568.4" y="163.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.14%)</title><rect x="568.4" y="147.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (34 samples, 0.03%)</title><rect x="568.4" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.03%)</title><rect x="568.4" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="571.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (161 samples, 0.12%)</title><rect x="568.7" y="131.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (161 samples, 0.12%)</title><rect x="568.7" y="115.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.7" y="126.0"></text>
</g>
<g>
<title>byte[] (161 samples, 0.12%)</title><rect x="568.7" y="99.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$371/526674589.apply (123 samples, 0.09%)</title><rect x="570.1" y="339.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (123 samples, 0.09%)</title><rect x="570.1" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (65 samples, 0.05%)</title><rect x="570.1" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.1" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (65 samples, 0.05%)</title><rect x="570.1" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (65 samples, 0.05%)</title><rect x="570.1" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.1" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (65 samples, 0.05%)</title><rect x="570.1" y="259.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="573.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (58 samples, 0.04%)</title><rect x="570.7" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.04%)</title><rect x="570.7" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="573.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (59 samples, 0.04%)</title><rect x="571.2" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (59 samples, 0.04%)</title><rect x="571.2" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$373/1864395379.apply (59 samples, 0.04%)</title><rect x="571.2" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (59 samples, 0.04%)</title><rect x="571.2" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (59 samples, 0.04%)</title><rect x="571.2" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.04%)</title><rect x="571.2" y="275.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="574.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.apply (95 samples, 0.07%)</title><rect x="571.7" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (95 samples, 0.07%)</title><rect x="571.7" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (95 samples, 0.07%)</title><rect x="571.7" y="355.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="574.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (3,788 samples, 2.82%)</title><rect x="572.5" y="499.0" width="33.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.5" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (286 samples, 0.21%)</title><rect x="572.5" y="483.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (286 samples, 0.21%)</title><rect x="572.5" y="467.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (286 samples, 0.21%)</title><rect x="572.5" y="451.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (286 samples, 0.21%)</title><rect x="572.5" y="435.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (286 samples, 0.21%)</title><rect x="572.5" y="419.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.5" y="430.0"></text>
</g>
<g>
<title>byte[] (286 samples, 0.21%)</title><rect x="572.5" y="403.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="575.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (274 samples, 0.20%)</title><rect x="575.1" y="483.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.1" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.03%)</title><rect x="575.1" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="578.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.03%)</title><rect x="575.4" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.03%)</title><rect x="575.4" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.03%)</title><rect x="575.4" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.4" y="446.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.03%)</title><rect x="575.4" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="578.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (51 samples, 0.04%)</title><rect x="575.8" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (51 samples, 0.04%)</title><rect x="575.8" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.8" y="462.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.04%)</title><rect x="575.8" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="578.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (143 samples, 0.11%)</title><rect x="576.2" y="467.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="579.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (143 samples, 0.11%)</title><rect x="576.2" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.07%)</title><rect x="576.2" y="435.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="579.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.04%)</title><rect x="577.0" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.0" y="446.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.04%)</title><rect x="577.0" y="419.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="580.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (860 samples, 0.64%)</title><rect x="577.5" y="483.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (860 samples, 0.64%)</title><rect x="577.5" y="467.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (860 samples, 0.64%)</title><rect x="577.5" y="451.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.5" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.03%)</title><rect x="577.7" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="580.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (82 samples, 0.06%)</title><rect x="578.0" y="435.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="581.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (31 samples, 0.02%)</title><rect x="578.7" y="435.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="581.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.04%)</title><rect x="579.0" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.04%)</title><rect x="579.0" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.get$Lambda (52 samples, 0.04%)</title><rect x="579.0" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$142 (52 samples, 0.04%)</title><rect x="579.0" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="582.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (38 samples, 0.03%)</title><rect x="579.4" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.4" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (38 samples, 0.03%)</title><rect x="579.4" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="582.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (505 samples, 0.38%)</title><rect x="579.8" y="435.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (505 samples, 0.38%)</title><rect x="579.8" y="419.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (505 samples, 0.38%)</title><rect x="579.8" y="403.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (75 samples, 0.06%)</title><rect x="579.8" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (75 samples, 0.06%)</title><rect x="579.8" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (75 samples, 0.06%)</title><rect x="579.8" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (75 samples, 0.06%)</title><rect x="579.8" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (75 samples, 0.06%)</title><rect x="579.8" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (75 samples, 0.06%)</title><rect x="579.8" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (75 samples, 0.06%)</title><rect x="579.8" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (75 samples, 0.06%)</title><rect x="579.8" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.06%)</title><rect x="579.8" y="259.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="582.8" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (228 samples, 0.17%)</title><rect x="580.4" y="387.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.4" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (228 samples, 0.17%)</title><rect x="580.4" y="371.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (102 samples, 0.08%)</title><rect x="580.4" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (102 samples, 0.08%)</title><rect x="580.4" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (102 samples, 0.08%)</title><rect x="580.4" y="323.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="583.4" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (126 samples, 0.09%)</title><rect x="581.3" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (126 samples, 0.09%)</title><rect x="581.3" y="339.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="584.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (202 samples, 0.15%)</title><rect x="582.4" y="387.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.4" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (202 samples, 0.15%)</title><rect x="582.4" y="371.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="585.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (91 samples, 0.07%)</title><rect x="584.2" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (91 samples, 0.07%)</title><rect x="584.2" y="419.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="587.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2,368 samples, 1.76%)</title><rect x="585.0" y="483.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.0" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (105 samples, 0.08%)</title><rect x="585.0" y="467.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="588.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (138 samples, 0.10%)</title><rect x="585.9" y="467.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (138 samples, 0.10%)</title><rect x="585.9" y="451.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.9" y="462.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.10%)</title><rect x="585.9" y="435.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="588.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (295 samples, 0.22%)</title><rect x="587.1" y="467.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (295 samples, 0.22%)</title><rect x="587.1" y="451.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 0.08%)</title><rect x="587.1" y="435.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="590.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (192 samples, 0.14%)</title><rect x="588.0" y="435.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.0" y="446.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.14%)</title><rect x="588.0" y="419.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="591.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,830 samples, 1.36%)</title><rect x="589.7" y="467.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (543 samples, 0.40%)</title><rect x="589.7" y="451.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (543 samples, 0.40%)</title><rect x="589.7" y="435.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (239 samples, 0.18%)</title><rect x="589.7" y="419.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="592.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (304 samples, 0.23%)</title><rect x="591.8" y="419.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.8" y="430.0"></text>
</g>
<g>
<title>byte[] (304 samples, 0.23%)</title><rect x="591.8" y="403.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="594.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (287 samples, 0.21%)</title><rect x="594.5" y="451.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (287 samples, 0.21%)</title><rect x="594.5" y="435.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.5" y="446.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.12%)</title><rect x="594.5" y="419.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="597.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (125 samples, 0.09%)</title><rect x="595.9" y="419.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="598.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (283 samples, 0.21%)</title><rect x="597.0" y="451.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (283 samples, 0.21%)</title><rect x="597.0" y="435.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (283 samples, 0.21%)</title><rect x="597.0" y="419.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.10%)</title><rect x="597.0" y="403.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="600.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (154 samples, 0.11%)</title><rect x="598.1" y="403.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.1" y="414.0"></text>
</g>
<g>
<title>byte[] (154 samples, 0.11%)</title><rect x="598.1" y="387.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="601.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (285 samples, 0.21%)</title><rect x="599.5" y="451.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (285 samples, 0.21%)</title><rect x="599.5" y="435.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (285 samples, 0.21%)</title><rect x="599.5" y="419.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (285 samples, 0.21%)</title><rect x="599.5" y="403.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (285 samples, 0.21%)</title><rect x="599.5" y="387.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (285 samples, 0.21%)</title><rect x="599.5" y="371.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="602.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (432 samples, 0.32%)</title><rect x="602.0" y="451.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (164 samples, 0.12%)</title><rect x="602.0" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (164 samples, 0.12%)</title><rect x="602.0" y="419.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="605.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (135 samples, 0.10%)</title><rect x="603.4" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (135 samples, 0.10%)</title><rect x="603.4" y="419.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="606.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$434/1133747825.apply (133 samples, 0.10%)</title><rect x="604.6" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (133 samples, 0.10%)</title><rect x="604.6" y="419.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.6" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (133 samples, 0.10%)</title><rect x="604.6" y="403.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="607.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,428 samples, 1.06%)</title><rect x="605.8" y="611.0" width="12.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,428 samples, 1.06%)</title><rect x="605.8" y="595.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,428 samples, 1.06%)</title><rect x="605.8" y="579.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (1,428 samples, 1.06%)</title><rect x="605.8" y="563.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,428 samples, 1.06%)</title><rect x="605.8" y="547.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (198 samples, 0.15%)</title><rect x="605.8" y="531.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.05%)</title><rect x="605.8" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.05%)</title><rect x="605.8" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1039595485.get$Lambda (41 samples, 0.03%)</title><rect x="606.0" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$343 (41 samples, 0.03%)</title><rect x="606.0" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="609.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (56 samples, 0.04%)</title><rect x="606.4" y="515.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="609.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (74 samples, 0.06%)</title><rect x="606.9" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (74 samples, 0.06%)</title><rect x="606.9" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (32 samples, 0.02%)</title><rect x="606.9" y="483.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="609.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (42 samples, 0.03%)</title><rect x="607.1" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (42 samples, 0.03%)</title><rect x="607.1" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="610.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,230 samples, 0.91%)</title><rect x="607.5" y="531.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,230 samples, 0.91%)</title><rect x="607.5" y="515.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,230 samples, 0.91%)</title><rect x="607.5" y="499.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,230 samples, 0.91%)</title><rect x="607.5" y="483.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,230 samples, 0.91%)</title><rect x="607.5" y="467.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,230 samples, 0.91%)</title><rect x="607.5" y="451.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (92 samples, 0.07%)</title><rect x="607.5" y="435.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (92 samples, 0.07%)</title><rect x="607.5" y="419.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (92 samples, 0.07%)</title><rect x="607.5" y="403.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="610.5" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (46 samples, 0.03%)</title><rect x="608.3" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (46 samples, 0.03%)</title><rect x="608.3" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="611.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/358927442.run (693 samples, 0.52%)</title><rect x="608.7" y="435.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (693 samples, 0.52%)</title><rect x="608.7" y="419.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (693 samples, 0.52%)</title><rect x="608.7" y="403.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (231 samples, 0.17%)</title><rect x="608.7" y="387.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (164 samples, 0.12%)</title><rect x="608.7" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (71 samples, 0.05%)</title><rect x="608.7" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.7" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (71 samples, 0.05%)</title><rect x="608.7" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="611.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (93 samples, 0.07%)</title><rect x="609.3" y="355.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (93 samples, 0.07%)</title><rect x="609.3" y="339.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="612.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (67 samples, 0.05%)</title><rect x="610.2" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (67 samples, 0.05%)</title><rect x="610.2" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (67 samples, 0.05%)</title><rect x="610.2" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (37 samples, 0.03%)</title><rect x="610.2" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (37 samples, 0.03%)</title><rect x="610.2" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="613.2" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (30 samples, 0.02%)</title><rect x="610.5" y="323.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (30 samples, 0.02%)</title><rect x="610.5" y="307.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.5" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (30 samples, 0.02%)</title><rect x="610.5" y="291.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.5" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (30 samples, 0.02%)</title><rect x="610.5" y="275.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="613.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (439 samples, 0.33%)</title><rect x="611.0" y="387.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.0" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (40 samples, 0.03%)</title><rect x="611.0" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.0" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (40 samples, 0.03%)</title><rect x="611.0" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.0" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (40 samples, 0.03%)</title><rect x="611.0" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.0" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (40 samples, 0.03%)</title><rect x="611.0" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.0" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (40 samples, 0.03%)</title><rect x="611.0" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="614.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (399 samples, 0.30%)</title><rect x="611.3" y="371.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (149 samples, 0.11%)</title><rect x="611.3" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.3" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.03%)</title><rect x="611.3" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.3" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (39 samples, 0.03%)</title><rect x="611.3" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.3" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.03%)</title><rect x="611.3" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.3" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (39 samples, 0.03%)</title><rect x="611.3" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.3" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (39 samples, 0.03%)</title><rect x="611.3" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.3" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (39 samples, 0.03%)</title><rect x="611.3" y="259.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="614.3" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (40 samples, 0.03%)</title><rect x="611.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (40 samples, 0.03%)</title><rect x="611.6" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.6" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (40 samples, 0.03%)</title><rect x="611.6" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.6" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (40 samples, 0.03%)</title><rect x="611.6" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.6" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (40 samples, 0.03%)</title><rect x="611.6" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.6" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (40 samples, 0.03%)</title><rect x="611.6" y="259.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="614.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (43 samples, 0.03%)</title><rect x="612.2" y="339.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="615.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (68 samples, 0.05%)</title><rect x="612.6" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.6" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (32 samples, 0.02%)</title><rect x="612.6" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.6" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (32 samples, 0.02%)</title><rect x="612.6" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (32 samples, 0.02%)</title><rect x="612.6" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.02%)</title><rect x="612.6" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="615.6" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (36 samples, 0.03%)</title><rect x="612.9" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (36 samples, 0.03%)</title><rect x="612.9" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (36 samples, 0.03%)</title><rect x="612.9" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="615.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (182 samples, 0.14%)</title><rect x="613.2" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (39 samples, 0.03%)</title><rect x="613.2" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="616.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (143 samples, 0.11%)</title><rect x="613.5" y="339.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (38 samples, 0.03%)</title><rect x="613.5" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (38 samples, 0.03%)</title><rect x="613.5" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (38 samples, 0.03%)</title><rect x="613.5" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (38 samples, 0.03%)</title><rect x="613.5" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="616.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (105 samples, 0.08%)</title><rect x="613.9" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (105 samples, 0.08%)</title><rect x="613.9" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (78 samples, 0.06%)</title><rect x="613.9" y="291.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="616.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (184 samples, 0.14%)</title><rect x="614.8" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (184 samples, 0.14%)</title><rect x="614.8" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (184 samples, 0.14%)</title><rect x="614.8" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (115 samples, 0.09%)</title><rect x="614.8" y="387.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (115 samples, 0.09%)</title><rect x="614.8" y="371.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (115 samples, 0.09%)</title><rect x="614.8" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (115 samples, 0.09%)</title><rect x="614.8" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$458/9249739.accept (115 samples, 0.09%)</title><rect x="614.8" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (115 samples, 0.09%)</title><rect x="614.8" y="307.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (115 samples, 0.09%)</title><rect x="614.8" y="291.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (115 samples, 0.09%)</title><rect x="614.8" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (115 samples, 0.09%)</title><rect x="614.8" y="259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$467/1200215500.apply (115 samples, 0.09%)</title><rect x="614.8" y="243.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (115 samples, 0.09%)</title><rect x="614.8" y="227.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (115 samples, 0.09%)</title><rect x="614.8" y="211.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="617.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (69 samples, 0.05%)</title><rect x="615.8" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.8" y="398.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.05%)</title><rect x="615.8" y="371.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="618.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (215 samples, 0.16%)</title><rect x="616.4" y="435.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (215 samples, 0.16%)</title><rect x="616.4" y="419.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (215 samples, 0.16%)</title><rect x="616.4" y="403.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (215 samples, 0.16%)</title><rect x="616.4" y="387.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (215 samples, 0.16%)</title><rect x="616.4" y="371.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (117 samples, 0.09%)</title><rect x="616.4" y="355.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.04%)</title><rect x="616.4" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="619.4" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (68 samples, 0.05%)</title><rect x="616.8" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.8" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (68 samples, 0.05%)</title><rect x="616.8" y="323.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="619.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (98 samples, 0.07%)</title><rect x="617.4" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (98 samples, 0.07%)</title><rect x="617.4" y="339.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (98 samples, 0.07%)</title><rect x="617.4" y="323.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="620.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.run (718 samples, 0.53%)</title><rect x="618.3" y="643.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (718 samples, 0.53%)</title><rect x="618.3" y="627.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (718 samples, 0.53%)</title><rect x="618.3" y="611.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (56 samples, 0.04%)</title><rect x="618.3" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 0.04%)</title><rect x="618.3" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.04%)</title><rect x="618.3" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.03%)</title><rect x="618.3" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="621.3" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.MetaInfoRequest (48 samples, 0.04%)</title><rect x="618.8" y="595.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="621.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (172 samples, 0.13%)</title><rect x="619.2" y="595.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.03%)</title><rect x="619.2" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.03%)</title><rect x="619.2" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 0.03%)</title><rect x="619.9" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 0.03%)</title><rect x="619.9" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.9" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.03%)</title><rect x="619.9" y="547.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="622.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (59 samples, 0.04%)</title><rect x="620.2" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (59 samples, 0.04%)</title><rect x="620.2" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.04%)</title><rect x="620.2" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.02%)</title><rect x="620.5" y="531.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.5" y="542.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.02%)</title><rect x="620.5" y="515.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="623.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getting (442 samples, 0.33%)</title><rect x="620.7" y="595.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (32 samples, 0.02%)</title><rect x="621.5" y="579.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (32 samples, 0.02%)</title><rect x="621.5" y="563.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (144 samples, 0.11%)</title><rect x="621.9" y="579.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.9" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (33 samples, 0.02%)</title><rect x="622.0" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (68 samples, 0.05%)</title><rect x="622.6" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (47 samples, 0.03%)</title><rect x="622.6" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (36 samples, 0.03%)</title><rect x="622.6" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (36 samples, 0.03%)</title><rect x="622.6" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doGet (124 samples, 0.09%)</title><rect x="623.2" y="579.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (53 samples, 0.04%)</title><rect x="623.4" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (53 samples, 0.04%)</title><rect x="623.4" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (38 samples, 0.03%)</title><rect x="623.4" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="626.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (51 samples, 0.04%)</title><rect x="623.8" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (51 samples, 0.04%)</title><rect x="623.8" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (35 samples, 0.03%)</title><rect x="624.3" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (996 samples, 0.74%)</title><rect x="624.6" y="691.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (996 samples, 0.74%)</title><rect x="624.6" y="675.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (996 samples, 0.74%)</title><rect x="624.6" y="659.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (996 samples, 0.74%)</title><rect x="624.6" y="643.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (996 samples, 0.74%)</title><rect x="624.6" y="627.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (996 samples, 0.74%)</title><rect x="624.6" y="611.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (996 samples, 0.74%)</title><rect x="624.6" y="595.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (970 samples, 0.72%)</title><rect x="624.8" y="579.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$219/958209831.accept (970 samples, 0.72%)</title><rect x="624.8" y="563.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (970 samples, 0.72%)</title><rect x="624.8" y="547.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (354 samples, 0.26%)</title><rect x="624.8" y="531.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (354 samples, 0.26%)</title><rect x="624.8" y="515.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (354 samples, 0.26%)</title><rect x="624.8" y="499.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (354 samples, 0.26%)</title><rect x="624.8" y="483.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (354 samples, 0.26%)</title><rect x="624.8" y="467.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (354 samples, 0.26%)</title><rect x="624.8" y="451.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (354 samples, 0.26%)</title><rect x="624.8" y="435.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (352 samples, 0.26%)</title><rect x="624.8" y="419.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="627.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (616 samples, 0.46%)</title><rect x="627.9" y="531.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (616 samples, 0.46%)</title><rect x="627.9" y="515.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.9" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (616 samples, 0.46%)</title><rect x="627.9" y="499.0" width="5.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="630.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,238 samples, 1.66%)</title><rect x="633.3" y="691.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.04%)</title><rect x="633.3" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.04%)</title><rect x="633.3" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$378/1494430800.get$Lambda (31 samples, 0.02%)</title><rect x="633.3" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$378 (31 samples, 0.02%)</title><rect x="633.3" y="627.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="636.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (64 samples, 0.05%)</title><rect x="633.8" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.05%)</title><rect x="633.8" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$379/1036176339.get$Lambda (64 samples, 0.05%)</title><rect x="633.8" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$379 (64 samples, 0.05%)</title><rect x="633.8" y="627.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="636.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (605 samples, 0.45%)</title><rect x="634.3" y="675.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/874005815.accept (522 samples, 0.39%)</title><rect x="634.3" y="659.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (522 samples, 0.39%)</title><rect x="634.3" y="643.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (522 samples, 0.39%)</title><rect x="634.3" y="627.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (522 samples, 0.39%)</title><rect x="634.3" y="611.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (522 samples, 0.39%)</title><rect x="634.3" y="595.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (522 samples, 0.39%)</title><rect x="634.3" y="579.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (522 samples, 0.39%)</title><rect x="634.3" y="563.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (522 samples, 0.39%)</title><rect x="634.3" y="547.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (522 samples, 0.39%)</title><rect x="634.3" y="531.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (522 samples, 0.39%)</title><rect x="634.3" y="515.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (522 samples, 0.39%)</title><rect x="634.3" y="499.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (522 samples, 0.39%)</title><rect x="634.3" y="483.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (99 samples, 0.07%)</title><rect x="634.3" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (99 samples, 0.07%)</title><rect x="634.3" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (99 samples, 0.07%)</title><rect x="634.3" y="435.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (52 samples, 0.04%)</title><rect x="634.3" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (52 samples, 0.04%)</title><rect x="634.3" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (52 samples, 0.04%)</title><rect x="634.3" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (52 samples, 0.04%)</title><rect x="634.3" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (52 samples, 0.04%)</title><rect x="634.3" y="355.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="637.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (47 samples, 0.03%)</title><rect x="634.8" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (47 samples, 0.03%)</title><rect x="634.8" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (47 samples, 0.03%)</title><rect x="634.8" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (47 samples, 0.03%)</title><rect x="634.8" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (47 samples, 0.03%)</title><rect x="634.8" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (47 samples, 0.03%)</title><rect x="634.8" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="637.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (32 samples, 0.02%)</title><rect x="635.2" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (32 samples, 0.02%)</title><rect x="635.2" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (32 samples, 0.02%)</title><rect x="635.2" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (32 samples, 0.02%)</title><rect x="635.2" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (32 samples, 0.02%)</title><rect x="635.2" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (39 samples, 0.03%)</title><rect x="635.5" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.03%)</title><rect x="635.5" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.03%)</title><rect x="635.5" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398/1871476137.get$Lambda (39 samples, 0.03%)</title><rect x="635.5" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398 (39 samples, 0.03%)</title><rect x="635.5" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="638.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (352 samples, 0.26%)</title><rect x="635.8" y="467.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (146 samples, 0.11%)</title><rect x="635.8" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (98 samples, 0.07%)</title><rect x="635.8" y="435.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (98 samples, 0.07%)</title><rect x="635.8" y="419.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="638.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (48 samples, 0.04%)</title><rect x="636.7" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (48 samples, 0.04%)</title><rect x="636.7" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (48 samples, 0.04%)</title><rect x="636.7" y="403.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="639.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (206 samples, 0.15%)</title><rect x="637.1" y="451.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$251/888933062.get (206 samples, 0.15%)</title><rect x="637.1" y="435.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (206 samples, 0.15%)</title><rect x="637.1" y="419.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (206 samples, 0.15%)</title><rect x="637.1" y="403.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (206 samples, 0.15%)</title><rect x="637.1" y="387.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="640.1" y="398.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.15%)</title><rect x="637.2" y="371.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="640.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$384/1942835848.accept (83 samples, 0.06%)</title><rect x="638.9" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (83 samples, 0.06%)</title><rect x="638.9" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$379/1036176339.run (83 samples, 0.06%)</title><rect x="638.9" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (83 samples, 0.06%)</title><rect x="638.9" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (83 samples, 0.06%)</title><rect x="638.9" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (83 samples, 0.06%)</title><rect x="638.9" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (83 samples, 0.06%)</title><rect x="638.9" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (83 samples, 0.06%)</title><rect x="638.9" y="547.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="641.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (98 samples, 0.07%)</title><rect x="639.6" y="675.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (98 samples, 0.07%)</title><rect x="639.6" y="659.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="642.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (100 samples, 0.07%)</title><rect x="640.5" y="675.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (45 samples, 0.03%)</title><rect x="640.5" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (45 samples, 0.03%)</title><rect x="640.5" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (45 samples, 0.03%)</title><rect x="640.5" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (45 samples, 0.03%)</title><rect x="640.5" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (45 samples, 0.03%)</title><rect x="640.5" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (45 samples, 0.03%)</title><rect x="640.5" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.5" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (45 samples, 0.03%)</title><rect x="640.5" y="563.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="643.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (55 samples, 0.04%)</title><rect x="640.9" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (55 samples, 0.04%)</title><rect x="640.9" y="643.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="643.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (343 samples, 0.25%)</title><rect x="641.4" y="675.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$271/848948697.run (162 samples, 0.12%)</title><rect x="641.4" y="659.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (162 samples, 0.12%)</title><rect x="641.4" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.12%)</title><rect x="641.4" y="627.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.12%)</title><rect x="641.4" y="611.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (162 samples, 0.12%)</title><rect x="641.4" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (162 samples, 0.12%)</title><rect x="641.4" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (162 samples, 0.12%)</title><rect x="641.4" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (162 samples, 0.12%)</title><rect x="641.4" y="547.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (151 samples, 0.11%)</title><rect x="641.4" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (151 samples, 0.11%)</title><rect x="641.4" y="515.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (86 samples, 0.06%)</title><rect x="641.4" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (86 samples, 0.06%)</title><rect x="641.4" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (86 samples, 0.06%)</title><rect x="641.4" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (54 samples, 0.04%)</title><rect x="641.4" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (54 samples, 0.04%)</title><rect x="641.4" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.04%)</title><rect x="641.4" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (54 samples, 0.04%)</title><rect x="641.4" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (54 samples, 0.04%)</title><rect x="641.4" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.4" y="398.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.04%)</title><rect x="641.4" y="371.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="644.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (32 samples, 0.02%)</title><rect x="641.9" y="451.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.02%)</title><rect x="641.9" y="435.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.02%)</title><rect x="641.9" y="419.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398/1871476137.get$Lambda (32 samples, 0.02%)</title><rect x="641.9" y="403.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$398 (32 samples, 0.02%)</title><rect x="641.9" y="387.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="644.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (65 samples, 0.05%)</title><rect x="642.1" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.05%)</title><rect x="642.1" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.05%)</title><rect x="642.1" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (65 samples, 0.05%)</title><rect x="642.1" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 0.05%)</title><rect x="642.1" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (65 samples, 0.05%)</title><rect x="642.1" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (64 samples, 0.05%)</title><rect x="642.1" y="403.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="645.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/525677631.run (181 samples, 0.13%)</title><rect x="642.8" y="659.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (181 samples, 0.13%)</title><rect x="642.8" y="643.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.05%)</title><rect x="642.8" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.05%)</title><rect x="642.8" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$394/1798067653.get$Lambda (71 samples, 0.05%)</title><rect x="642.8" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$394 (71 samples, 0.05%)</title><rect x="642.8" y="579.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="645.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (110 samples, 0.08%)</title><rect x="643.4" y="627.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (110 samples, 0.08%)</title><rect x="643.4" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (110 samples, 0.08%)</title><rect x="643.4" y="595.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (110 samples, 0.08%)</title><rect x="643.4" y="579.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="646.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (387 samples, 0.29%)</title><rect x="644.4" y="675.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.4" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (60 samples, 0.04%)</title><rect x="644.4" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.4" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (60 samples, 0.04%)</title><rect x="644.4" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.4" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (60 samples, 0.04%)</title><rect x="644.4" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.4" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (60 samples, 0.04%)</title><rect x="644.4" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.4" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (60 samples, 0.04%)</title><rect x="644.4" y="595.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="647.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (327 samples, 0.24%)</title><rect x="644.9" y="659.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="644.9" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="644.9" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$482/1079468707.get$Lambda (44 samples, 0.03%)</title><rect x="644.9" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$482 (44 samples, 0.03%)</title><rect x="644.9" y="595.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="647.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (95 samples, 0.07%)</title><rect x="645.3" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (95 samples, 0.07%)</title><rect x="645.3" y="627.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="648.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (57 samples, 0.04%)</title><rect x="646.1" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.1" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (57 samples, 0.04%)</title><rect x="646.1" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.1" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (57 samples, 0.04%)</title><rect x="646.1" y="611.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="649.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (131 samples, 0.10%)</title><rect x="646.6" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.6" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (57 samples, 0.04%)</title><rect x="646.6" y="627.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="649.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (74 samples, 0.06%)</title><rect x="647.1" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.1" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (74 samples, 0.06%)</title><rect x="647.1" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.1" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (74 samples, 0.06%)</title><rect x="647.1" y="595.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="650.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (388 samples, 0.29%)</title><rect x="647.8" y="675.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.04%)</title><rect x="647.8" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.04%)</title><rect x="647.8" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$377/847739542.get$Lambda (49 samples, 0.04%)</title><rect x="647.8" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$377 (49 samples, 0.04%)</title><rect x="647.8" y="611.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="650.8" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (204 samples, 0.15%)</title><rect x="648.2" y="659.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (88 samples, 0.07%)</title><rect x="648.2" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (88 samples, 0.07%)</title><rect x="648.2" y="627.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="651.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (116 samples, 0.09%)</title><rect x="649.0" y="643.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.0" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (116 samples, 0.09%)</title><rect x="649.0" y="627.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="652.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (135 samples, 0.10%)</title><rect x="650.0" y="659.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (135 samples, 0.10%)</title><rect x="650.0" y="643.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="653.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (125 samples, 0.09%)</title><rect x="651.2" y="675.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (125 samples, 0.09%)</title><rect x="651.2" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (125 samples, 0.09%)</title><rect x="651.2" y="643.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (125 samples, 0.09%)</title><rect x="651.2" y="627.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (46 samples, 0.03%)</title><rect x="651.2" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (46 samples, 0.03%)</title><rect x="651.2" y="595.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="654.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (79 samples, 0.06%)</title><rect x="651.6" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (79 samples, 0.06%)</title><rect x="651.6" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (79 samples, 0.06%)</title><rect x="651.6" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (79 samples, 0.06%)</title><rect x="651.6" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (79 samples, 0.06%)</title><rect x="651.6" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (79 samples, 0.06%)</title><rect x="651.6" y="531.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="654.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (37 samples, 0.03%)</title><rect x="652.3" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (37 samples, 0.03%)</title><rect x="652.3" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (37 samples, 0.03%)</title><rect x="652.3" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (37 samples, 0.03%)</title><rect x="652.3" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (32 samples, 0.02%)</title><rect x="652.3" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (32 samples, 0.02%)</title><rect x="652.3" y="595.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="655.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (41 samples, 0.03%)</title><rect x="652.6" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (41 samples, 0.03%)</title><rect x="652.6" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (41 samples, 0.03%)</title><rect x="652.6" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (41 samples, 0.03%)</title><rect x="652.6" y="627.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="655.6" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (61,223 samples, 45.51%)</title><rect x="653.0" y="691.0" width="537.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.0" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,492 samples, 1.11%)</title><rect x="653.0" y="675.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.0" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,492 samples, 1.11%)</title><rect x="653.0" y="659.0" width="13.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="656.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (59,731 samples, 44.40%)</title><rect x="666.1" y="675.0" width="523.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.1" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (59,731 samples, 44.40%)</title><rect x="666.1" y="659.0" width="523.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.1" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (59,691 samples, 44.37%)</title><rect x="666.1" y="643.0" width="523.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28,852 samples, 21.45%)</title><rect x="666.1" y="627.0" width="253.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.1" y="638.0">one/nio/http/HttpSession.handlePar..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28,852 samples, 21.45%)</title><rect x="666.1" y="611.0" width="253.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.1" y="622.0">one/nio/http/HttpServer.handleRequ..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (26,088 samples, 19.39%)</title><rect x="666.1" y="595.0" width="228.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.1" y="606.0">RequestHandler1_entity.handleR..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,501 samples, 1.12%)</title><rect x="666.1" y="579.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,501 samples, 1.12%)</title><rect x="666.1" y="563.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,501 samples, 1.12%)</title><rect x="666.1" y="547.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (667 samples, 0.50%)</title><rect x="666.1" y="531.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="669.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (834 samples, 0.62%)</title><rect x="671.9" y="531.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.9" y="542.0"></text>
</g>
<g>
<title>byte[] (834 samples, 0.62%)</title><rect x="671.9" y="515.0" width="7.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="674.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (24,587 samples, 18.28%)</title><rect x="679.2" y="579.0" width="215.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.2" y="590.0">ru/mail/polis/service/borisk..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (2,227 samples, 1.66%)</title><rect x="679.2" y="563.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,499 samples, 1.11%)</title><rect x="679.2" y="547.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,499 samples, 1.11%)</title><rect x="679.2" y="531.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.get$Lambda (1,499 samples, 1.11%)</title><rect x="679.2" y="515.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$110 (1,499 samples, 1.11%)</title><rect x="679.2" y="499.0" width="13.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="682.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (728 samples, 0.54%)</title><rect x="692.4" y="547.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (728 samples, 0.54%)</title><rect x="692.4" y="531.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (722 samples, 0.54%)</title><rect x="692.4" y="515.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="695.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (22,360 samples, 16.62%)</title><rect x="698.8" y="563.0" width="196.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.8" y="574.0">ru/mail/polis/service/bori..</text>
</g>
<g>
<title>java/util/Set.copyOf (22,360 samples, 16.62%)</title><rect x="698.8" y="547.0" width="196.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.8" y="558.0">java/util/Set.copyOf</text>
</g>
<g>
<title>java.util.HashSet (567 samples, 0.42%)</title><rect x="698.8" y="531.0" width="4.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="701.8" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,671 samples, 2.73%)</title><rect x="703.7" y="531.0" width="32.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.7" y="542.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (1,026 samples, 0.76%)</title><rect x="703.7" y="515.0" width="9.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="706.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,645 samples, 1.97%)</title><rect x="712.7" y="515.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2,159 samples, 1.60%)</title><rect x="712.7" y="499.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.7" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2,159 samples, 1.60%)</title><rect x="712.7" y="483.0" width="19.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="715.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (486 samples, 0.36%)</title><rect x="731.7" y="499.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.7" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (486 samples, 0.36%)</title><rect x="731.7" y="483.0" width="4.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="734.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (15,878 samples, 11.80%)</title><rect x="735.9" y="531.0" width="139.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.9" y="542.0">java/util/HashSet..</text>
</g>
<g>
<title>java.util.HashMap (2,399 samples, 1.78%)</title><rect x="735.9" y="515.0" width="21.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="738.9" y="526.0">j..</text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (13,479 samples, 10.02%)</title><rect x="757.0" y="515.0" width="118.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.0" y="526.0">java/util/Abst..</text>
</g>
<g>
<title>java/util/HashSet.add (12,506 samples, 9.30%)</title><rect x="757.0" y="499.0" width="109.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.0" y="510.0">java/util/Has..</text>
</g>
<g>
<title>java/util/HashMap.put (12,506 samples, 9.30%)</title><rect x="757.0" y="483.0" width="109.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.0" y="494.0">java/util/Has..</text>
</g>
<g>
<title>java/util/HashMap.putVal (12,506 samples, 9.30%)</title><rect x="757.0" y="467.0" width="109.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.0" y="478.0">java/util/Has..</text>
</g>
<g>
<title>java/util/HashMap.newNode (6,066 samples, 4.51%)</title><rect x="757.0" y="451.0" width="53.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.0" y="462.0">java/..</text>
</g>
<g>
<title>java.util.HashMap$Node (6,066 samples, 4.51%)</title><rect x="757.0" y="435.0" width="53.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="760.0" y="446.0">java...</text>
</g>
<g>
<title>java/util/HashMap.resize (6,440 samples, 4.79%)</title><rect x="810.2" y="451.0" width="56.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.2" y="462.0">java/u..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (4,053 samples, 3.01%)</title><rect x="810.2" y="435.0" width="35.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="813.2" y="446.0">jav..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,387 samples, 1.77%)</title><rect x="845.7" y="435.0" width="21.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="848.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (973 samples, 0.72%)</title><rect x="866.7" y="499.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (973 samples, 0.72%)</title><rect x="866.7" y="483.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (973 samples, 0.72%)</title><rect x="866.7" y="467.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="869.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (973 samples, 0.72%)</title><rect x="866.7" y="451.0" width="8.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="869.7" y="462.0"></text>
</g>
<g>
<title>java/util/Set.of (2,244 samples, 1.67%)</title><rect x="875.2" y="531.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.2" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (870 samples, 0.65%)</title><rect x="875.2" y="515.0" width="7.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="878.2" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,374 samples, 1.02%)</title><rect x="882.8" y="515.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,374 samples, 1.02%)</title><rect x="882.8" y="499.0" width="12.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="885.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,764 samples, 2.05%)</title><rect x="894.9" y="595.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.9" y="606.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,764 samples, 2.05%)</title><rect x="894.9" y="579.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.9" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,764 samples, 2.05%)</title><rect x="894.9" y="563.0" width="24.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.9" y="574.0">j..</text>
</g>
<g>
<title>java.lang.String (627 samples, 0.47%)</title><rect x="894.9" y="547.0" width="5.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="897.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,137 samples, 1.59%)</title><rect x="900.4" y="547.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.4" y="558.0"></text>
</g>
<g>
<title>byte[] (2,137 samples, 1.59%)</title><rect x="900.4" y="531.0" width="18.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="903.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11,331 samples, 8.42%)</title><rect x="919.1" y="627.0" width="99.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.1" y="638.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Request (2,126 samples, 1.58%)</title><rect x="919.1" y="611.0" width="18.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="922.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,486 samples, 2.59%)</title><rect x="937.8" y="611.0" width="30.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="940.8" y="622.0">on..</text>
</g>
<g>
<title>java.lang.String[] (2,091 samples, 1.55%)</title><rect x="937.8" y="595.0" width="18.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="940.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (1,395 samples, 1.04%)</title><rect x="956.1" y="595.0" width="12.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="959.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,719 samples, 4.25%)</title><rect x="968.4" y="611.0" width="50.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.4" y="622.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,719 samples, 4.25%)</title><rect x="968.4" y="595.0" width="50.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.4" y="606.0">one/n..</text>
</g>
<g>
<title>char[] (2,966 samples, 2.20%)</title><rect x="968.4" y="579.0" width="26.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="971.4" y="590.0">c..</text>
</g>
<g>
<title>char[] (169 samples, 0.13%)</title><rect x="994.4" y="579.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="997.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (827 samples, 0.61%)</title><rect x="995.9" y="579.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="998.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,757 samples, 1.31%)</title><rect x="1003.1" y="579.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,757 samples, 1.31%)</title><rect x="1003.1" y="563.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,757 samples, 1.31%)</title><rect x="1003.1" y="547.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.1" y="558.0"></text>
</g>
<g>
<title>byte[] (1,757 samples, 1.31%)</title><rect x="1003.1" y="531.0" width="15.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1006.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (354 samples, 0.26%)</title><rect x="1018.5" y="627.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1021.5" y="638.0"></text>
</g>
<g>
<title>byte[] (354 samples, 0.26%)</title><rect x="1018.5" y="611.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1021.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (836 samples, 0.62%)</title><rect x="1021.6" y="627.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (836 samples, 0.62%)</title><rect x="1021.6" y="611.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (836 samples, 0.62%)</title><rect x="1021.6" y="595.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (489 samples, 0.36%)</title><rect x="1021.6" y="579.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1024.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (347 samples, 0.26%)</title><rect x="1025.9" y="579.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.9" y="590.0"></text>
</g>
<g>
<title>byte[] (347 samples, 0.26%)</title><rect x="1025.9" y="563.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1028.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18,318 samples, 13.62%)</title><rect x="1029.0" y="627.0" width="160.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.0" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (18,318 samples, 13.62%)</title><rect x="1029.0" y="611.0" width="160.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1032.0" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (5,896 samples, 4.38%)</title><rect x="1029.0" y="595.0" width="51.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1032.0" y="606.0">char[]</text>
</g>
<g>
<title>char[] (2,409 samples, 1.79%)</title><rect x="1080.7" y="595.0" width="21.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.7" y="606.0">c..</text>
</g>
<g>
<title>java.lang.String (3,771 samples, 2.80%)</title><rect x="1101.8" y="595.0" width="33.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1104.8" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,242 samples, 4.64%)</title><rect x="1134.9" y="595.0" width="54.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.9" y="606.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,242 samples, 4.64%)</title><rect x="1134.9" y="579.0" width="54.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.9" y="590.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,242 samples, 4.64%)</title><rect x="1134.9" y="563.0" width="54.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.9" y="574.0">java/..</text>
</g>
<g>
<title>byte[] (6,242 samples, 4.64%)</title><rect x="1134.9" y="547.0" width="54.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1137.9" y="558.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 0.03%)</title><rect x="1189.6" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (40 samples, 0.03%)</title><rect x="1189.6" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.7" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.7" y="622.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.7" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.7" y="606.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.7" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.7" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (34 samples, 0.03%)</title><rect x="1189.7" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (34 samples, 0.03%)</title><rect x="1189.7" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (34 samples, 0.03%)</title><rect x="1189.7" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.7" y="526.0"></text>
</g>
</g>
</svg>
