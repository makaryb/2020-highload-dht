<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (21,354 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (59 samples, 0.28%)</title><rect x="10.1" y="1139.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.1" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (59 samples, 0.28%)</title><rect x="10.1" y="1123.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.1" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (59 samples, 0.28%)</title><rect x="10.1" y="1107.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.1" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (56 samples, 0.26%)</title><rect x="10.2" y="1091.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.2" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (49 samples, 0.23%)</title><rect x="10.3" y="1075.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="1086.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.03%)</title><rect x="13.4" y="1139.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="16.4" y="1150.0"></text>
</g>
<g>
<title>[not_walkable_Java] (13 samples, 0.06%)</title><rect x="13.7" y="1139.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="16.7" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.02%)</title><rect x="13.8" y="1123.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.02%)</title><rect x="13.8" y="1107.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.8" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.03%)</title><rect x="14.0" y="1123.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.14%)</title><rect x="14.4" y="1139.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="17.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (25 samples, 0.12%)</title><rect x="14.7" y="1123.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="17.7" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.07%)</title><rect x="15.2" y="1107.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="18.2" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.07%)</title><rect x="15.2" y="1091.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="18.2" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.07%)</title><rect x="15.3" y="1075.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="18.3" y="1086.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.06%)</title><rect x="15.4" y="1059.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="18.4" y="1070.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.05%)</title><rect x="15.4" y="1043.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.4" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (53 samples, 0.25%)</title><rect x="16.1" y="1139.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="19.1" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (24 samples, 0.11%)</title><rect x="16.3" y="1123.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="19.3" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (24 samples, 0.11%)</title><rect x="16.3" y="1107.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.09%)</title><rect x="17.8" y="1123.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="20.8" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.07%)</title><rect x="18.1" y="1107.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="21.1" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.07%)</title><rect x="18.1" y="1091.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="21.1" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.07%)</title><rect x="18.1" y="1075.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="21.1" y="1086.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.07%)</title><rect x="18.1" y="1059.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="21.1" y="1070.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.07%)</title><rect x="18.1" y="1043.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="21.1" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="18.3" y="1027.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="21.3" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.05%)</title><rect x="18.3" y="1011.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="21.3" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.05%)</title><rect x="18.3" y="995.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19,617 samples, 91.87%)</title><rect x="19.2" y="1139.0" width="1084.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.2" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,617 samples, 91.87%)</title><rect x="19.2" y="1123.0" width="1084.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.2" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,617 samples, 91.87%)</title><rect x="19.2" y="1107.0" width="1084.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.2" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (12,022 samples, 56.30%)</title><rect x="19.2" y="1091.0" width="664.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.2" y="1102.0">java/util/concurrent/CompletableFuture$AsyncRun.run</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$512/1973649253.run (12,018 samples, 56.28%)</title><rect x="19.4" y="1075.0" width="664.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.4" y="1086.0">ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$512/1973649253.run</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5 (12,018 samples, 56.28%)</title><rect x="19.4" y="1059.0" width="664.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.4" y="1070.0">ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.03%)</title><rect x="19.7" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="19.7" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="19.7" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="19.7" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.7" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="19.7" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (264 samples, 1.24%)</title><rect x="20.0" y="1043.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (264 samples, 1.24%)</title><rect x="20.0" y="1027.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (248 samples, 1.16%)</title><rect x="20.4" y="1011.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.03%)</title><rect x="20.4" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.02%)</title><rect x="20.4" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (242 samples, 1.13%)</title><rect x="20.7" y="995.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (239 samples, 1.12%)</title><rect x="20.9" y="979.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.9" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (235 samples, 1.10%)</title><rect x="20.9" y="963.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.9" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (234 samples, 1.10%)</title><rect x="20.9" y="947.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.9" y="958.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.06%)</title><rect x="21.0" y="931.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.0" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.03%)</title><rect x="21.2" y="915.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="24.2" y="926.0"></text>
</g>
<g>
<title>__send (219 samples, 1.03%)</title><rect x="21.7" y="931.0" width="12.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="24.7" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (215 samples, 1.01%)</title><rect x="21.9" y="915.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="24.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (214 samples, 1.00%)</title><rect x="22.0" y="899.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="25.0" y="910.0"></text>
</g>
<g>
<title>__x64_sys_sendto (212 samples, 0.99%)</title><rect x="22.1" y="883.0" width="11.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="25.1" y="894.0"></text>
</g>
<g>
<title>__sys_sendto (212 samples, 0.99%)</title><rect x="22.1" y="867.0" width="11.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="25.1" y="878.0"></text>
</g>
<g>
<title>sock_sendmsg (211 samples, 0.99%)</title><rect x="22.2" y="851.0" width="11.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="25.2" y="862.0"></text>
</g>
<g>
<title>inet6_sendmsg (210 samples, 0.98%)</title><rect x="22.2" y="835.0" width="11.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="25.2" y="846.0"></text>
</g>
<g>
<title>tcp_sendmsg (210 samples, 0.98%)</title><rect x="22.2" y="819.0" width="11.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="25.2" y="830.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (204 samples, 0.96%)</title><rect x="22.5" y="803.0" width="11.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="25.5" y="814.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.04%)</title><rect x="23.0" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.0" y="798.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.04%)</title><rect x="23.0" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="26.0" y="782.0"></text>
</g>
<g>
<title>tcp_push (177 samples, 0.83%)</title><rect x="23.6" y="787.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.6" y="798.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (176 samples, 0.82%)</title><rect x="23.6" y="771.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="26.6" y="782.0"></text>
</g>
<g>
<title>tcp_write_xmit (173 samples, 0.81%)</title><rect x="23.8" y="755.0" width="9.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="26.8" y="766.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (157 samples, 0.74%)</title><rect x="23.9" y="739.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.9" y="750.0"></text>
</g>
<g>
<title>ip_queue_xmit (153 samples, 0.72%)</title><rect x="24.1" y="723.0" width="8.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="27.1" y="734.0"></text>
</g>
<g>
<title>__ip_queue_xmit (149 samples, 0.70%)</title><rect x="24.1" y="707.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.1" y="718.0"></text>
</g>
<g>
<title>ip_local_out (143 samples, 0.67%)</title><rect x="24.3" y="691.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.3" y="702.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.13%)</title><rect x="24.3" y="675.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.3" y="686.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 0.12%)</title><rect x="24.4" y="659.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.4" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (18 samples, 0.08%)</title><rect x="24.7" y="643.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.7" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (17 samples, 0.08%)</title><rect x="24.8" y="627.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="27.8" y="638.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (5 samples, 0.02%)</title><rect x="24.8" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.8" y="622.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (8 samples, 0.04%)</title><rect x="25.2" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="28.2" y="622.0"></text>
</g>
<g>
<title>ip_output (114 samples, 0.53%)</title><rect x="25.8" y="675.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.8" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (111 samples, 0.52%)</title><rect x="25.9" y="659.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="28.9" y="670.0"></text>
</g>
<g>
<title>__ip_finish_output (107 samples, 0.50%)</title><rect x="26.1" y="643.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="29.1" y="654.0"></text>
</g>
<g>
<title>ip_finish_output2 (106 samples, 0.50%)</title><rect x="26.1" y="627.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.1" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (86 samples, 0.40%)</title><rect x="26.4" y="611.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="29.4" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.0 (86 samples, 0.40%)</title><rect x="26.4" y="595.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="29.4" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (85 samples, 0.40%)</title><rect x="26.5" y="579.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="29.5" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 0.39%)</title><rect x="26.5" y="563.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.5" y="574.0"></text>
</g>
<g>
<title>net_rx_action (79 samples, 0.37%)</title><rect x="26.7" y="547.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.7" y="558.0"></text>
</g>
<g>
<title>process_backlog (76 samples, 0.36%)</title><rect x="26.9" y="531.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="29.9" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (75 samples, 0.35%)</title><rect x="26.9" y="515.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.9" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (74 samples, 0.35%)</title><rect x="26.9" y="499.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.9" y="510.0"></text>
</g>
<g>
<title>ip_rcv (71 samples, 0.33%)</title><rect x="27.1" y="483.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.1" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (63 samples, 0.30%)</title><rect x="27.1" y="467.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.1" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (63 samples, 0.30%)</title><rect x="27.1" y="451.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.1" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (60 samples, 0.28%)</title><rect x="27.1" y="435.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.1" y="446.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (60 samples, 0.28%)</title><rect x="27.1" y="419.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.1" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (60 samples, 0.28%)</title><rect x="27.1" y="403.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.1" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (51 samples, 0.24%)</title><rect x="27.6" y="387.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.6" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (47 samples, 0.22%)</title><rect x="27.8" y="371.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="30.8" y="382.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.02%)</title><rect x="28.0" y="355.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.0" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.02%)</title><rect x="28.0" y="339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.0" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.02%)</title><rect x="28.0" y="323.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="31.0" y="334.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.02%)</title><rect x="28.0" y="307.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="31.0" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.02%)</title><rect x="28.0" y="291.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="31.0" y="302.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.07%)</title><rect x="28.2" y="355.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="31.2" y="366.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (12 samples, 0.06%)</title><rect x="28.3" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.3" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.02%)</title><rect x="28.6" y="323.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.6" y="334.0"></text>
</g>
<g>
<title>tcp_data_ready (22 samples, 0.10%)</title><rect x="29.1" y="355.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.1" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (22 samples, 0.10%)</title><rect x="29.1" y="339.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.1" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (21 samples, 0.10%)</title><rect x="29.1" y="323.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.1" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.10%)</title><rect x="29.1" y="307.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="32.1" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.09%)</title><rect x="29.1" y="291.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="32.1" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.02%)</title><rect x="30.7" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.7" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (5 samples, 0.02%)</title><rect x="30.7" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="33.7" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.02%)</title><rect x="30.7" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="33.7" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.07%)</title><rect x="31.2" y="611.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.2" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.07%)</title><rect x="31.2" y="595.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="34.2" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.05%)</title><rect x="31.3" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="34.3" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.03%)</title><rect x="31.4" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.4" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.04%)</title><rect x="32.9" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="35.9" y="750.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.03%)</title><rect x="33.0" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="36.0" y="734.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.03%)</title><rect x="33.0" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="36.0" y="718.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.02%)</title><rect x="33.0" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="36.0" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.02%)</title><rect x="33.5" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.5" y="798.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.02%)</title><rect x="33.5" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.03%)</title><rect x="34.1" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (11,735 samples, 54.95%)</title><rect x="34.6" y="1043.0" width="648.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.6" y="1054.0">ru/mail/polis/service/boriskin/Value.from</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (304 samples, 1.42%)</title><rect x="34.9" y="1027.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.9" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (301 samples, 1.41%)</title><rect x="34.9" y="1011.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.9" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (20 samples, 0.09%)</title><rect x="34.9" y="995.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.9" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (20 samples, 0.09%)</title><rect x="34.9" y="979.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.9" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.09%)</title><rect x="35.0" y="963.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.0" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.07%)</title><rect x="35.1" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.1" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.07%)</title><rect x="35.1" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.1" y="942.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.07%)</title><rect x="35.3" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.3" y="926.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (13 samples, 0.06%)</title><rect x="35.3" y="899.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (13 samples, 0.06%)</title><rect x="35.3" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (13 samples, 0.06%)</title><rect x="35.3" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.3" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.05%)</title><rect x="35.3" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.3" y="862.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.04%)</title><rect x="35.4" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.4" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (281 samples, 1.32%)</title><rect x="36.0" y="995.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.0" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (281 samples, 1.32%)</title><rect x="36.0" y="979.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.0" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (278 samples, 1.30%)</title><rect x="36.2" y="963.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.2" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (278 samples, 1.30%)</title><rect x="36.2" y="947.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.2" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (278 samples, 1.30%)</title><rect x="36.2" y="931.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.2" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (278 samples, 1.30%)</title><rect x="36.2" y="915.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.2" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (275 samples, 1.29%)</title><rect x="36.2" y="899.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (273 samples, 1.28%)</title><rect x="36.3" y="883.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (273 samples, 1.28%)</title><rect x="36.3" y="867.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (273 samples, 1.28%)</title><rect x="36.3" y="851.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (93 samples, 0.44%)</title><rect x="36.4" y="835.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (92 samples, 0.43%)</title><rect x="36.4" y="819.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (89 samples, 0.42%)</title><rect x="36.6" y="803.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (76 samples, 0.36%)</title><rect x="36.9" y="787.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (71 samples, 0.33%)</title><rect x="36.9" y="771.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (71 samples, 0.33%)</title><rect x="36.9" y="755.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (71 samples, 0.33%)</title><rect x="36.9" y="739.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.9" y="750.0"></text>
</g>
<g>
<title>__libc_pread64 (67 samples, 0.31%)</title><rect x="37.0" y="723.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="40.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.18%)</title><rect x="38.6" y="707.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="41.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.18%)</title><rect x="38.6" y="691.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="41.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (28 samples, 0.13%)</title><rect x="39.2" y="675.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.2" y="686.0"></text>
</g>
<g>
<title>ksys_pread64 (28 samples, 0.13%)</title><rect x="39.2" y="659.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="42.2" y="670.0"></text>
</g>
<g>
<title>vfs_read (24 samples, 0.11%)</title><rect x="39.4" y="643.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.4" y="654.0"></text>
</g>
<g>
<title>__vfs_read (14 samples, 0.07%)</title><rect x="39.5" y="627.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="42.5" y="638.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.07%)</title><rect x="39.5" y="611.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="42.5" y="622.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.04%)</title><rect x="39.7" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="42.7" y="606.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.04%)</title><rect x="39.7" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="42.7" y="590.0"></text>
</g>
<g>
<title>generic_file_buffered_read (8 samples, 0.04%)</title><rect x="39.8" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.8" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.04%)</title><rect x="40.3" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="43.3" y="638.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.03%)</title><rect x="40.3" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="43.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.02%)</title><rect x="40.8" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.02%)</title><rect x="40.8" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (179 samples, 0.84%)</title><rect x="41.5" y="835.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (179 samples, 0.84%)</title><rect x="41.5" y="819.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (8 samples, 0.04%)</title><rect x="41.5" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.5" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.04%)</title><rect x="41.5" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (158 samples, 0.74%)</title><rect x="42.2" y="803.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (142 samples, 0.66%)</title><rect x="42.3" y="787.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (141 samples, 0.66%)</title><rect x="42.3" y="771.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (141 samples, 0.66%)</title><rect x="42.3" y="755.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.3" y="766.0"></text>
</g>
<g>
<title>__libc_pread64 (135 samples, 0.63%)</title><rect x="42.6" y="739.0" width="7.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="45.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 0.37%)</title><rect x="45.8" y="723.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="48.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 0.36%)</title><rect x="45.8" y="707.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="48.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (60 samples, 0.28%)</title><rect x="46.7" y="691.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="49.7" y="702.0"></text>
</g>
<g>
<title>ksys_pread64 (60 samples, 0.28%)</title><rect x="46.7" y="675.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="49.7" y="686.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.03%)</title><rect x="46.7" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="49.7" y="670.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.03%)</title><rect x="46.7" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="49.7" y="654.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.03%)</title><rect x="46.7" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.7" y="638.0"></text>
</g>
<g>
<title>vfs_read (50 samples, 0.23%)</title><rect x="47.2" y="659.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.2" y="670.0"></text>
</g>
<g>
<title>__vfs_read (31 samples, 0.15%)</title><rect x="47.5" y="643.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="50.5" y="654.0"></text>
</g>
<g>
<title>new_sync_read (28 samples, 0.13%)</title><rect x="47.6" y="627.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.6" y="638.0"></text>
</g>
<g>
<title>ext4_file_read_iter (25 samples, 0.12%)</title><rect x="47.8" y="611.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.8" y="622.0"></text>
</g>
<g>
<title>generic_file_read_iter (24 samples, 0.11%)</title><rect x="47.9" y="595.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.9" y="606.0"></text>
</g>
<g>
<title>generic_file_buffered_read (24 samples, 0.11%)</title><rect x="47.9" y="579.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.9" y="590.0"></text>
</g>
<g>
<title>copy_page_to_iter (8 samples, 0.04%)</title><rect x="48.3" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.3" y="574.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.03%)</title><rect x="48.8" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="51.8" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.05%)</title><rect x="49.5" y="643.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.5" y="654.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.03%)</title><rect x="49.6" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="52.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.07%)</title><rect x="50.1" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 0.05%)</title><rect x="50.3" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.03%)</title><rect x="50.9" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (11,422 samples, 53.49%)</title><rect x="51.9" y="1027.0" width="631.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.9" y="1038.0">ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,179 samples, 5.52%)</title><rect x="51.9" y="1011.0" width="65.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.9" y="1022.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,179 samples, 5.52%)</title><rect x="51.9" y="995.0" width="65.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.9" y="1006.0">com/goo..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,163 samples, 5.45%)</title><rect x="52.7" y="979.0" width="64.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.7" y="990.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,163 samples, 5.45%)</title><rect x="52.7" y="963.0" width="64.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.7" y="974.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,159 samples, 5.43%)</title><rect x="52.9" y="947.0" width="64.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.9" y="958.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,159 samples, 5.43%)</title><rect x="52.9" y="931.0" width="64.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.9" y="942.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,159 samples, 5.43%)</title><rect x="52.9" y="915.0" width="64.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.9" y="926.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,159 samples, 5.43%)</title><rect x="52.9" y="899.0" width="64.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.9" y="910.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,147 samples, 5.37%)</title><rect x="52.9" y="883.0" width="63.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.9" y="894.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.04%)</title><rect x="52.9" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.02%)</title><rect x="52.9" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable$$Lambda$483/217987288.apply (5 samples, 0.02%)</title><rect x="52.9" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.lambda$iterator$0 (5 samples, 0.02%)</title><rect x="52.9" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,139 samples, 5.33%)</title><rect x="53.3" y="867.0" width="63.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.3" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,139 samples, 5.33%)</title><rect x="53.3" y="851.0" width="63.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.3" y="862.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (1,139 samples, 5.33%)</title><rect x="53.3" y="835.0" width="63.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.3" y="846.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.05%)</title><rect x="53.4" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.4" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.05%)</title><rect x="53.4" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="53.4" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.4" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="53.6" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (396 samples, 1.85%)</title><rect x="54.3" y="819.0" width="21.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.3" y="830.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.03%)</title><rect x="54.3" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.3" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="54.3" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="54.3" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="54.3" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (387 samples, 1.81%)</title><rect x="54.8" y="803.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.8" y="814.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (385 samples, 1.80%)</title><rect x="54.9" y="787.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.9" y="798.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (17 samples, 0.08%)</title><rect x="55.0" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.0" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (17 samples, 0.08%)</title><rect x="55.0" y="755.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.0" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.03%)</title><rect x="55.6" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.6" y="750.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.03%)</title><rect x="55.6" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.03%)</title><rect x="55.6" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (9 samples, 0.04%)</title><rect x="55.9" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.9" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (8 samples, 0.04%)</title><rect x="56.0" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (328 samples, 1.54%)</title><rect x="56.4" y="771.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (298 samples, 1.40%)</title><rect x="56.6" y="755.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (298 samples, 1.40%)</title><rect x="56.6" y="739.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (298 samples, 1.40%)</title><rect x="56.6" y="723.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.6" y="734.0"></text>
</g>
<g>
<title>__libc_pread64 (280 samples, 1.31%)</title><rect x="57.1" y="707.0" width="15.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="60.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (174 samples, 0.81%)</title><rect x="62.9" y="691.0" width="9.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="65.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (171 samples, 0.80%)</title><rect x="63.1" y="675.0" width="9.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="66.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (141 samples, 0.66%)</title><rect x="64.8" y="659.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="67.8" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (141 samples, 0.66%)</title><rect x="64.8" y="643.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.8" y="654.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.07%)</title><rect x="64.9" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="67.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.07%)</title><rect x="64.9" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="67.9" y="622.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.07%)</title><rect x="64.9" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.9" y="606.0"></text>
</g>
<g>
<title>vfs_read (116 samples, 0.54%)</title><rect x="66.1" y="627.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="69.1" y="638.0"></text>
</g>
<g>
<title>__vfs_read (80 samples, 0.37%)</title><rect x="66.9" y="611.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.9" y="622.0"></text>
</g>
<g>
<title>new_sync_read (74 samples, 0.35%)</title><rect x="67.2" y="595.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.2" y="606.0"></text>
</g>
<g>
<title>ext4_file_read_iter (70 samples, 0.33%)</title><rect x="67.5" y="579.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="70.5" y="590.0"></text>
</g>
<g>
<title>generic_file_read_iter (67 samples, 0.31%)</title><rect x="67.6" y="563.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.6" y="574.0"></text>
</g>
<g>
<title>generic_file_buffered_read (63 samples, 0.30%)</title><rect x="67.7" y="547.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.7" y="558.0"></text>
</g>
<g>
<title>copy_page_to_iter (17 samples, 0.08%)</title><rect x="68.5" y="531.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="71.5" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (8 samples, 0.04%)</title><rect x="68.9" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.9" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (17 samples, 0.08%)</title><rect x="69.7" y="531.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="72.7" y="542.0"></text>
</g>
<g>
<title>find_get_entry (17 samples, 0.08%)</title><rect x="69.7" y="515.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="72.7" y="526.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.03%)</title><rect x="70.2" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.2" y="510.0"></text>
</g>
<g>
<title>touch_atime (9 samples, 0.04%)</title><rect x="70.7" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="73.7" y="542.0"></text>
</g>
<g>
<title>atime_needs_update (9 samples, 0.04%)</title><rect x="70.7" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.7" y="526.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.02%)</title><rect x="70.8" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="73.8" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (19 samples, 0.09%)</title><rect x="71.5" y="611.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="74.5" y="622.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.06%)</title><rect x="71.8" y="595.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="74.8" y="606.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.02%)</title><rect x="72.3" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="75.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (26 samples, 0.12%)</title><rect x="73.1" y="755.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title><rect x="73.2" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (17 samples, 0.08%)</title><rect x="73.6" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (23 samples, 0.11%)</title><rect x="74.5" y="771.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.5" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="75.1" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="78.1" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.03%)</title><rect x="75.1" y="739.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="78.1" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.03%)</title><rect x="75.1" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="78.1" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.02%)</title><rect x="75.1" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="78.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.03%)</title><rect x="75.4" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (6 samples, 0.03%)</title><rect x="75.8" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (726 samples, 3.40%)</title><rect x="76.1" y="819.0" width="40.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.1" y="830.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (726 samples, 3.40%)</title><rect x="76.1" y="803.0" width="40.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.1" y="814.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (27 samples, 0.13%)</title><rect x="76.6" y="787.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.6" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (27 samples, 0.13%)</title><rect x="76.6" y="771.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.6" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (11 samples, 0.05%)</title><rect x="77.5" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.5" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (11 samples, 0.05%)</title><rect x="77.5" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (11 samples, 0.05%)</title><rect x="77.5" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (14 samples, 0.07%)</title><rect x="78.1" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.1" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (14 samples, 0.07%)</title><rect x="78.1" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.1" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.03%)</title><rect x="78.6" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.6" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.03%)</title><rect x="78.6" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.03%)</title><rect x="78.6" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (631 samples, 2.95%)</title><rect x="78.9" y="787.0" width="34.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.9" y="798.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.03%)</title><rect x="79.0" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.0" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.03%)</title><rect x="79.0" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (567 samples, 2.66%)</title><rect x="79.4" y="771.0" width="31.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.4" y="782.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (566 samples, 2.65%)</title><rect x="79.4" y="755.0" width="31.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.4" y="766.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (565 samples, 2.65%)</title><rect x="79.5" y="739.0" width="31.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.5" y="750.0">su..</text>
</g>
<g>
<title>__libc_pread64 (529 samples, 2.48%)</title><rect x="80.7" y="723.0" width="29.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="83.7" y="734.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (325 samples, 1.52%)</title><rect x="91.9" y="707.0" width="18.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.05%)</title><rect x="91.9" y="691.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="94.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (315 samples, 1.48%)</title><rect x="92.5" y="691.0" width="17.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (256 samples, 1.20%)</title><rect x="95.5" y="675.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="98.5" y="686.0"></text>
</g>
<g>
<title>ksys_pread64 (255 samples, 1.19%)</title><rect x="95.6" y="659.0" width="14.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.6" y="670.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.07%)</title><rect x="96.0" y="643.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.07%)</title><rect x="96.0" y="627.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.0" y="638.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.07%)</title><rect x="96.0" y="611.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.03%)</title><rect x="96.9" y="643.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.9" y="654.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.03%)</title><rect x="97.4" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="100.4" y="654.0"></text>
</g>
<g>
<title>vfs_read (213 samples, 1.00%)</title><rect x="97.9" y="643.0" width="11.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.9" y="654.0"></text>
</g>
<g>
<title>__vfs_read (145 samples, 0.68%)</title><rect x="98.8" y="627.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="101.8" y="638.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.04%)</title><rect x="98.9" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.9" y="622.0"></text>
</g>
<g>
<title>new_sync_read (132 samples, 0.62%)</title><rect x="99.5" y="611.0" width="7.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="102.5" y="622.0"></text>
</g>
<g>
<title>ext4_file_read_iter (119 samples, 0.56%)</title><rect x="100.2" y="595.0" width="6.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.2" y="606.0"></text>
</g>
<g>
<title>generic_file_read_iter (104 samples, 0.49%)</title><rect x="101.1" y="579.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="104.1" y="590.0"></text>
</g>
<g>
<title>generic_file_buffered_read (100 samples, 0.47%)</title><rect x="101.1" y="563.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.1" y="574.0"></text>
</g>
<g>
<title>copy_page_to_iter (24 samples, 0.11%)</title><rect x="102.2" y="547.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.2" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (8 samples, 0.04%)</title><rect x="103.0" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.0" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (30 samples, 0.14%)</title><rect x="103.8" y="547.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.8" y="558.0"></text>
</g>
<g>
<title>find_get_entry (29 samples, 0.14%)</title><rect x="103.8" y="531.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.8" y="542.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.02%)</title><rect x="104.9" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="107.9" y="526.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.02%)</title><rect x="105.2" y="515.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="108.2" y="526.0"></text>
</g>
<g>
<title>touch_atime (19 samples, 0.09%)</title><rect x="105.6" y="547.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="108.6" y="558.0"></text>
</g>
<g>
<title>atime_needs_update (16 samples, 0.07%)</title><rect x="105.7" y="531.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.7" y="542.0"></text>
</g>
<g>
<title>current_time (6 samples, 0.03%)</title><rect x="106.3" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.3" y="526.0"></text>
</g>
<g>
<title>fsnotify (8 samples, 0.04%)</title><rect x="106.8" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="109.8" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (44 samples, 0.21%)</title><rect x="107.3" y="627.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.3" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.03%)</title><rect x="107.4" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="110.4" y="622.0"></text>
</g>
<g>
<title>security_file_permission (34 samples, 0.16%)</title><rect x="107.8" y="611.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.8" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (12 samples, 0.06%)</title><rect x="108.3" y="595.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.3" y="606.0"></text>
</g>
<g>
<title>common_file_perm (11 samples, 0.05%)</title><rect x="108.4" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="111.4" y="590.0"></text>
</g>
<g>
<title>fsnotify (13 samples, 0.06%)</title><rect x="109.0" y="595.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.0" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (11 samples, 0.05%)</title><rect x="109.9" y="723.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="112.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (56 samples, 0.26%)</title><rect x="110.7" y="771.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (19 samples, 0.09%)</title><rect x="111.1" y="755.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (10 samples, 0.05%)</title><rect x="111.4" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (29 samples, 0.14%)</title><rect x="112.2" y="755.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (32 samples, 0.15%)</title><rect x="113.8" y="787.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (14 samples, 0.07%)</title><rect x="114.8" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (13 samples, 0.06%)</title><rect x="115.5" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.5" y="798.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.06%)</title><rect x="116.3" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.3" y="894.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.06%)</title><rect x="116.3" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (12 samples, 0.06%)</title><rect x="116.3" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (12 samples, 0.06%)</title><rect x="116.3" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.3" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.06%)</title><rect x="116.3" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.3" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.04%)</title><rect x="116.4" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.4" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (10,061 samples, 47.12%)</title><rect x="117.1" y="1011.0" width="556.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.1" y="1022.0">java/util/Collections$UnmodifiableCollection.forEach</text>
</g>
<g>
<title>java/lang/Iterable.forEach (10,061 samples, 47.12%)</title><rect x="117.1" y="995.0" width="556.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.1" y="1006.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (34 samples, 0.16%)</title><rect x="117.3" y="979.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.3" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (34 samples, 0.16%)</title><rect x="117.3" y="963.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.3" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (7 samples, 0.03%)</title><rect x="117.4" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.4" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (16 samples, 0.07%)</title><rect x="117.8" y="947.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.8" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (12 samples, 0.06%)</title><rect x="118.0" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.0" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (11 samples, 0.05%)</title><rect x="118.0" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.entrySet (8 samples, 0.04%)</title><rect x="118.7" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.&lt;init&gt; (8 samples, 0.04%)</title><rect x="118.7" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.7" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.&lt;init&gt; (8 samples, 0.04%)</title><rect x="118.7" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$502/1244742828.accept (10,024 samples, 46.94%)</title><rect x="119.1" y="979.0" width="554.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.1" y="990.0">ru/mail/polis/service/boriskin/Value$$Lambda$502/1244742828.accept</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (10,024 samples, 46.94%)</title><rect x="119.1" y="963.0" width="554.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.1" y="974.0">ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (10,024 samples, 46.94%)</title><rect x="119.1" y="947.0" width="554.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.1" y="958.0">ru/mail/polis/dao/boriskin/SortedStringTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (10,024 samples, 46.94%)</title><rect x="119.1" y="931.0" width="554.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.1" y="942.0">ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (10,024 samples, 46.94%)</title><rect x="119.1" y="915.0" width="554.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.1" y="926.0">ru/mail/polis/dao/boriskin/SortedStringTable.findNext</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (108 samples, 0.51%)</title><rect x="119.2" y="899.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.2" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.02%)</title><rect x="119.7" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.7" y="894.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (85 samples, 0.40%)</title><rect x="120.0" y="883.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.0" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (35 samples, 0.16%)</title><rect x="122.8" y="867.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.8" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (10 samples, 0.05%)</title><rect x="123.7" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.7" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (9 samples, 0.04%)</title><rect x="124.2" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.2" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.03%)</title><rect x="124.8" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.8" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.02%)</title><rect x="124.9" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (9,914 samples, 46.43%)</title><rect x="125.2" y="899.0" width="547.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.2" y="910.0">ru/mail/polis/dao/boriskin/SortedStringTable.findK</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (222 samples, 1.04%)</title><rect x="128.5" y="883.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.5" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="129.8" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="132.8" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="129.8" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="132.8" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="129.8" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="132.8" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="129.8" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="132.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (192 samples, 0.90%)</title><rect x="130.2" y="867.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.2" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (107 samples, 0.50%)</title><rect x="134.9" y="851.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.9" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (94 samples, 0.44%)</title><rect x="135.6" y="835.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (72 samples, 0.34%)</title><rect x="136.1" y="819.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (48 samples, 0.22%)</title><rect x="137.4" y="803.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.4" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (48 samples, 0.22%)</title><rect x="137.4" y="787.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (13 samples, 0.06%)</title><rect x="140.1" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (13 samples, 0.06%)</title><rect x="140.1" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.1" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.03%)</title><rect x="140.4" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (51 samples, 0.24%)</title><rect x="140.8" y="883.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (28 samples, 0.13%)</title><rect x="142.1" y="867.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (3,409 samples, 15.96%)</title><rect x="143.6" y="883.0" width="188.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.6" y="894.0">ru/mail/polis/dao/borisk..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (101 samples, 0.47%)</title><rect x="144.4" y="867.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.4" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (92 samples, 0.43%)</title><rect x="144.9" y="851.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.9" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (89 samples, 0.42%)</title><rect x="145.1" y="835.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.1" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (31 samples, 0.15%)</title><rect x="148.1" y="819.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (14 samples, 0.07%)</title><rect x="148.6" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.02%)</title><rect x="149.1" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.04%)</title><rect x="149.4" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="149.5" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (10 samples, 0.05%)</title><rect x="150.2" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,280 samples, 15.36%)</title><rect x="150.7" y="867.0" width="181.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.7" y="878.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,273 samples, 15.33%)</title><rect x="151.0" y="851.0" width="180.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.0" y="862.0">sun/nio/ch/FileChannelI..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (247 samples, 1.16%)</title><rect x="151.8" y="835.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.8" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (239 samples, 1.12%)</title><rect x="152.2" y="819.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.2" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (11 samples, 0.05%)</title><rect x="162.1" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (7 samples, 0.03%)</title><rect x="162.3" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.3" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (39 samples, 0.18%)</title><rect x="162.7" y="803.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.7" y="814.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (39 samples, 0.18%)</title><rect x="162.7" y="787.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (39 samples, 0.18%)</title><rect x="162.7" y="771.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.02%)</title><rect x="164.8" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.03%)</title><rect x="165.1" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (15 samples, 0.07%)</title><rect x="165.4" y="835.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.4" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (12 samples, 0.06%)</title><rect x="165.6" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.6" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.04%)</title><rect x="165.8" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.8" y="814.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.03%)</title><rect x="165.9" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.02%)</title><rect x="165.9" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,884 samples, 13.51%)</title><rect x="166.3" y="835.0" width="159.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.3" y="846.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (21 samples, 0.10%)</title><rect x="166.4" y="819.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.4" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (19 samples, 0.09%)</title><rect x="166.5" y="803.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,633 samples, 12.33%)</title><rect x="167.8" y="819.0" width="145.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.8" y="830.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.05%)</title><rect x="168.1" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.1" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.03%)</title><rect x="168.3" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="168.3" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.03%)</title><rect x="168.3" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,615 samples, 12.25%)</title><rect x="168.7" y="803.0" width="144.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.7" y="814.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,611 samples, 12.23%)</title><rect x="168.9" y="787.0" width="144.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.9" y="798.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (18 samples, 0.08%)</title><rect x="172.2" y="771.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="175.2" y="782.0"></text>
</g>
<g>
<title>__libc_pread64 (2,454 samples, 11.49%)</title><rect x="173.2" y="771.0" width="135.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="176.2" y="782.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,489 samples, 6.97%)</title><rect x="226.4" y="755.0" width="82.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="229.4" y="766.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_pread64 (32 samples, 0.15%)</title><rect x="226.4" y="739.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="229.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1,454 samples, 6.81%)</title><rect x="228.3" y="739.0" width="80.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="231.3" y="750.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_pread64 (1,132 samples, 5.30%)</title><rect x="245.7" y="723.0" width="62.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="248.7" y="734.0">__x64_..</text>
</g>
<g>
<title>ksys_pread64 (1,127 samples, 5.28%)</title><rect x="246.0" y="707.0" width="62.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="249.0" y="718.0">ksys_p..</text>
</g>
<g>
<title>__fdget (93 samples, 0.44%)</title><rect x="247.1" y="691.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="250.1" y="702.0"></text>
</g>
<g>
<title>__fget_light (93 samples, 0.44%)</title><rect x="247.1" y="675.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="250.1" y="686.0"></text>
</g>
<g>
<title>__fget (92 samples, 0.43%)</title><rect x="247.1" y="659.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.11%)</title><rect x="252.2" y="691.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.2" y="702.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.03%)</title><rect x="253.7" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.7" y="702.0"></text>
</g>
<g>
<title>fput_many (36 samples, 0.17%)</title><rect x="254.1" y="691.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.1" y="702.0"></text>
</g>
<g>
<title>vfs_read (941 samples, 4.41%)</title><rect x="256.3" y="691.0" width="52.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="259.3" y="702.0">vfs_r..</text>
</g>
<g>
<title>__fsnotify_parent (24 samples, 0.11%)</title><rect x="258.7" y="675.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="261.7" y="686.0"></text>
</g>
<g>
<title>__vfs_read (626 samples, 2.93%)</title><rect x="260.0" y="675.0" width="34.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="263.0" y="686.0">__..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.02%)</title><rect x="260.3" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.3" y="670.0"></text>
</g>
<g>
<title>ext4_file_read_iter (26 samples, 0.12%)</title><rect x="260.6" y="659.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="263.6" y="670.0"></text>
</g>
<g>
<title>iov_iter_init (7 samples, 0.03%)</title><rect x="262.0" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="265.0" y="670.0"></text>
</g>
<g>
<title>new_sync_read (583 samples, 2.73%)</title><rect x="262.4" y="659.0" width="32.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.4" y="670.0">ne..</text>
</g>
<g>
<title>ext4_file_read_iter (538 samples, 2.52%)</title><rect x="264.7" y="643.0" width="29.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="267.7" y="654.0">ex..</text>
</g>
<g>
<title>generic_file_read_iter (507 samples, 2.37%)</title><rect x="266.5" y="627.0" width="28.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="269.5" y="638.0">ge..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.02%)</title><rect x="266.8" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="269.8" y="622.0"></text>
</g>
<g>
<title>generic_file_buffered_read (490 samples, 2.29%)</title><rect x="267.1" y="611.0" width="27.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.1" y="622.0">g..</text>
</g>
<g>
<title>_cond_resched (9 samples, 0.04%)</title><rect x="272.8" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="275.8" y="606.0"></text>
</g>
<g>
<title>copy_page_to_iter (153 samples, 0.72%)</title><rect x="273.4" y="595.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.4" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (16 samples, 0.07%)</title><rect x="275.7" y="579.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.7" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (79 samples, 0.37%)</title><rect x="276.6" y="579.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="279.6" y="590.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.05%)</title><rect x="281.0" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="284.0" y="590.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.02%)</title><rect x="281.5" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.5" y="590.0"></text>
</g>
<g>
<title>mark_page_accessed (12 samples, 0.06%)</title><rect x="282.2" y="595.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.2" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (125 samples, 0.59%)</title><rect x="282.8" y="595.0" width="6.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.8" y="606.0"></text>
</g>
<g>
<title>find_get_entry (112 samples, 0.52%)</title><rect x="283.5" y="579.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.5" y="590.0"></text>
</g>
<g>
<title>xas_load (13 samples, 0.06%)</title><rect x="287.6" y="563.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.6" y="574.0"></text>
</g>
<g>
<title>xas_start (25 samples, 0.12%)</title><rect x="288.3" y="563.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.3" y="574.0"></text>
</g>
<g>
<title>touch_atime (78 samples, 0.37%)</title><rect x="289.9" y="595.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="292.9" y="606.0"></text>
</g>
<g>
<title>atime_needs_update (63 samples, 0.30%)</title><rect x="290.5" y="579.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="293.5" y="590.0"></text>
</g>
<g>
<title>current_time (36 samples, 0.17%)</title><rect x="291.9" y="563.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="294.9" y="574.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (18 samples, 0.08%)</title><rect x="292.4" y="547.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.4" y="558.0"></text>
</g>
<g>
<title>timestamp_truncate (8 samples, 0.04%)</title><rect x="293.4" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="296.4" y="558.0"></text>
</g>
<g>
<title>fsnotify (34 samples, 0.16%)</title><rect x="294.6" y="675.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.6" y="686.0"></text>
</g>
<g>
<title>rw_verify_area (210 samples, 0.98%)</title><rect x="296.6" y="675.0" width="11.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.6" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (32 samples, 0.15%)</title><rect x="297.2" y="659.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="300.2" y="670.0"></text>
</g>
<g>
<title>security_file_permission (163 samples, 0.76%)</title><rect x="299.2" y="659.0" width="9.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="302.2" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (15 samples, 0.07%)</title><rect x="300.6" y="643.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="303.6" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (66 samples, 0.31%)</title><rect x="301.4" y="643.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="304.4" y="654.0"></text>
</g>
<g>
<title>common_file_perm (64 samples, 0.30%)</title><rect x="301.5" y="627.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.5" y="638.0"></text>
</g>
<g>
<title>aa_file_perm (14 samples, 0.07%)</title><rect x="304.3" y="611.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="307.3" y="622.0"></text>
</g>
<g>
<title>common_file_perm (18 samples, 0.08%)</title><rect x="305.0" y="643.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="308.0" y="654.0"></text>
</g>
<g>
<title>fsnotify (40 samples, 0.19%)</title><rect x="306.0" y="643.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="309.0" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.03%)</title><rect x="308.3" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="311.3" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (37 samples, 0.17%)</title><rect x="308.8" y="771.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="311.8" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (26 samples, 0.12%)</title><rect x="310.8" y="771.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="313.8" y="782.0"></text>
</g>
<g>
<title>fdval (15 samples, 0.07%)</title><rect x="312.3" y="771.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="315.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (224 samples, 1.05%)</title><rect x="313.3" y="819.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (57 samples, 0.27%)</title><rect x="314.0" y="803.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (25 samples, 0.12%)</title><rect x="315.0" y="787.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.0" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (14 samples, 0.07%)</title><rect x="316.4" y="787.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (6 samples, 0.03%)</title><rect x="316.6" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (153 samples, 0.72%)</title><rect x="317.2" y="803.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.2" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.03%)</title><rect x="325.0" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (102 samples, 0.48%)</title><rect x="325.6" y="835.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.6" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (16 samples, 0.07%)</title><rect x="328.6" y="819.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="331.6" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.07%)</title><rect x="328.6" y="803.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="331.6" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.07%)</title><rect x="328.6" y="787.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="331.6" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (16 samples, 0.07%)</title><rect x="328.6" y="771.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="331.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (32 samples, 0.15%)</title><rect x="329.5" y="819.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (11 samples, 0.05%)</title><rect x="331.3" y="835.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.3" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="331.6" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="334.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6,172 samples, 28.90%)</title><rect x="332.0" y="883.0" width="341.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.0" y="894.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6,140 samples, 28.75%)</title><rect x="333.8" y="867.0" width="339.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.8" y="878.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (126 samples, 0.59%)</title><rect x="337.9" y="851.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.9" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (91 samples, 0.43%)</title><rect x="339.8" y="835.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.8" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (56 samples, 0.26%)</title><rect x="341.8" y="819.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.8" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (45 samples, 0.21%)</title><rect x="342.4" y="803.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.03%)</title><rect x="344.5" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="347.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5,711 samples, 26.74%)</title><rect x="344.9" y="851.0" width="315.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="347.9" y="862.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (44 samples, 0.21%)</title><rect x="345.5" y="835.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.5" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (42 samples, 0.20%)</title><rect x="345.6" y="819.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.6" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (12 samples, 0.06%)</title><rect x="348.0" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.0" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (8 samples, 0.04%)</title><rect x="348.2" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5,151 samples, 24.12%)</title><rect x="348.6" y="835.0" width="284.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.6" y="846.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.05%)</title><rect x="348.8" y="819.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.8" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.03%)</title><rect x="349.0" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="349.0" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.03%)</title><rect x="349.0" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5,137 samples, 24.06%)</title><rect x="349.4" y="819.0" width="283.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.4" y="830.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5,132 samples, 24.03%)</title><rect x="349.7" y="803.0" width="283.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.7" y="814.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (23 samples, 0.11%)</title><rect x="357.1" y="787.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="360.1" y="798.0"></text>
</g>
<g>
<title>__libc_pread64 (4,843 samples, 22.68%)</title><rect x="358.4" y="787.0" width="267.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="361.4" y="798.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,936 samples, 13.75%)</title><rect x="463.7" y="771.0" width="162.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.7" y="782.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>__x64_sys_pread64 (63 samples, 0.30%)</title><rect x="463.7" y="755.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="466.7" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.04%)</title><rect x="467.2" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2,865 samples, 13.42%)</title><rect x="467.6" y="755.0" width="158.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="470.6" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (2,214 samples, 10.37%)</title><rect x="503.0" y="739.0" width="122.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="506.0" y="750.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (5 samples, 0.02%)</title><rect x="503.0" y="723.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="506.0" y="734.0"></text>
</g>
<g>
<title>fput (8 samples, 0.04%)</title><rect x="503.2" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.2" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (2,200 samples, 10.30%)</title><rect x="503.7" y="723.0" width="121.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="506.7" y="734.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (189 samples, 0.89%)</title><rect x="506.0" y="707.0" width="10.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (185 samples, 0.87%)</title><rect x="506.2" y="691.0" width="10.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="509.2" y="702.0"></text>
</g>
<g>
<title>__fget (180 samples, 0.84%)</title><rect x="506.5" y="675.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.5" y="686.0"></text>
</g>
<g>
<title>__fget_light (60 samples, 0.28%)</title><rect x="516.4" y="707.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="519.4" y="718.0"></text>
</g>
<g>
<title>__fsnotify_parent (14 samples, 0.07%)</title><rect x="519.8" y="707.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.8" y="718.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.03%)</title><rect x="520.5" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="523.5" y="718.0"></text>
</g>
<g>
<title>fput_many (54 samples, 0.25%)</title><rect x="520.9" y="707.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="523.9" y="718.0"></text>
</g>
<g>
<title>fsnotify (10 samples, 0.05%)</title><rect x="523.9" y="707.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.9" y="718.0"></text>
</g>
<g>
<title>vfs_read (1,820 samples, 8.52%)</title><rect x="524.7" y="707.0" width="100.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="527.7" y="718.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (31 samples, 0.15%)</title><rect x="531.5" y="691.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="534.5" y="702.0"></text>
</g>
<g>
<title>__vfs_read (1,242 samples, 5.82%)</title><rect x="533.2" y="691.0" width="68.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="536.2" y="702.0">__vfs_r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.04%)</title><rect x="534.1" y="675.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.1" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (70 samples, 0.33%)</title><rect x="534.6" y="675.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="537.6" y="686.0"></text>
</g>
<g>
<title>iov_iter_init (17 samples, 0.08%)</title><rect x="538.4" y="675.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="541.4" y="686.0"></text>
</g>
<g>
<title>new_sync_read (1,131 samples, 5.30%)</title><rect x="539.4" y="675.0" width="62.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.4" y="686.0">new_sy..</text>
</g>
<g>
<title>ext4_file_read_iter (1,019 samples, 4.77%)</title><rect x="545.5" y="659.0" width="56.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.5" y="670.0">ext4_f..</text>
</g>
<g>
<title>generic_file_read_iter (937 samples, 4.39%)</title><rect x="550.0" y="643.0" width="51.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="553.0" y="654.0">gener..</text>
</g>
<g>
<title>_cond_resched (7 samples, 0.03%)</title><rect x="551.0" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="554.0" y="638.0"></text>
</g>
<g>
<title>generic_file_buffered_read (901 samples, 4.22%)</title><rect x="551.6" y="627.0" width="49.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="554.6" y="638.0">gener..</text>
</g>
<g>
<title>_cond_resched (12 samples, 0.06%)</title><rect x="562.3" y="611.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="565.3" y="622.0"></text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.03%)</title><rect x="563.0" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="566.0" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (307 samples, 1.44%)</title><rect x="563.4" y="611.0" width="16.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="566.4" y="622.0"></text>
</g>
<g>
<title>_cond_resched (7 samples, 0.03%)</title><rect x="568.3" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="571.3" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (24 samples, 0.11%)</title><rect x="568.7" y="595.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.7" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (151 samples, 0.71%)</title><rect x="570.0" y="595.0" width="8.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="573.0" y="606.0"></text>
</g>
<g>
<title>copyout (26 samples, 0.12%)</title><rect x="578.3" y="595.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="581.3" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (10 samples, 0.05%)</title><rect x="579.8" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.8" y="606.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.03%)</title><rect x="580.3" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.3" y="622.0"></text>
</g>
<g>
<title>mark_page_accessed (10 samples, 0.05%)</title><rect x="580.7" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="583.7" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (214 samples, 1.00%)</title><rect x="581.2" y="611.0" width="11.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="584.2" y="622.0"></text>
</g>
<g>
<title>PageHuge (5 samples, 0.02%)</title><rect x="581.9" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.9" y="606.0"></text>
</g>
<g>
<title>find_get_entry (194 samples, 0.91%)</title><rect x="582.2" y="595.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.2" y="606.0"></text>
</g>
<g>
<title>xas_load (33 samples, 0.15%)</title><rect x="589.6" y="579.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.6" y="590.0"></text>
</g>
<g>
<title>xas_start (26 samples, 0.12%)</title><rect x="591.4" y="579.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="594.4" y="590.0"></text>
</g>
<g>
<title>rcu_all_qs (10 samples, 0.05%)</title><rect x="593.0" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="596.0" y="622.0"></text>
</g>
<g>
<title>touch_atime (141 samples, 0.66%)</title><rect x="593.6" y="611.0" width="7.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="596.6" y="622.0"></text>
</g>
<g>
<title>atime_needs_update (111 samples, 0.52%)</title><rect x="595.0" y="595.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.0" y="606.0"></text>
</g>
<g>
<title>current_time (69 samples, 0.32%)</title><rect x="597.0" y="579.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="600.0" y="590.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (27 samples, 0.13%)</title><rect x="598.3" y="563.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.3" y="574.0"></text>
</g>
<g>
<title>timestamp_truncate (18 samples, 0.08%)</title><rect x="599.8" y="563.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.8" y="574.0"></text>
</g>
<g>
<title>fsnotify (75 samples, 0.35%)</title><rect x="601.9" y="691.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="604.9" y="702.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.04%)</title><rect x="606.0" y="691.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="609.0" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (338 samples, 1.58%)</title><rect x="606.5" y="691.0" width="18.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.5" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.02%)</title><rect x="607.6" y="675.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.6" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (57 samples, 0.27%)</title><rect x="607.8" y="675.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="610.8" y="686.0"></text>
</g>
<g>
<title>security_file_permission (252 samples, 1.18%)</title><rect x="611.2" y="675.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="614.2" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (26 samples, 0.12%)</title><rect x="613.1" y="659.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="616.1" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (111 samples, 0.52%)</title><rect x="614.5" y="659.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="617.5" y="670.0"></text>
</g>
<g>
<title>common_file_perm (105 samples, 0.49%)</title><rect x="614.9" y="643.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="617.9" y="654.0"></text>
</g>
<g>
<title>aa_file_perm (18 samples, 0.08%)</title><rect x="619.7" y="627.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="622.7" y="638.0"></text>
</g>
<g>
<title>common_file_perm (23 samples, 0.11%)</title><rect x="620.7" y="659.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.7" y="670.0"></text>
</g>
<g>
<title>fsnotify (58 samples, 0.27%)</title><rect x="621.9" y="659.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="624.9" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.05%)</title><rect x="625.3" y="739.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.3" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (59 samples, 0.28%)</title><rect x="626.0" y="787.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="629.0" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (51 samples, 0.24%)</title><rect x="629.3" y="787.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="632.3" y="798.0"></text>
</g>
<g>
<title>fdval (19 samples, 0.09%)</title><rect x="632.2" y="787.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="635.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (492 samples, 2.30%)</title><rect x="633.3" y="835.0" width="27.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.3" y="846.0">s..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (149 samples, 0.70%)</title><rect x="635.5" y="819.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.5" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (79 samples, 0.37%)</title><rect x="637.7" y="803.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.03%)</title><rect x="641.8" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.8" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (30 samples, 0.14%)</title><rect x="642.1" y="803.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (14 samples, 0.07%)</title><rect x="642.5" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.04%)</title><rect x="643.3" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (302 samples, 1.41%)</title><rect x="643.8" y="819.0" width="16.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.8" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.03%)</title><rect x="659.5" y="803.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="662.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (6 samples, 0.03%)</title><rect x="660.0" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (199 samples, 0.93%)</title><rect x="660.5" y="851.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="667.4" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="670.4" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.03%)</title><rect x="667.4" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="670.4" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="667.5" y="803.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="670.5" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.02%)</title><rect x="667.5" y="787.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="670.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (67 samples, 0.31%)</title><rect x="667.7" y="835.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (29 samples, 0.14%)</title><rect x="671.4" y="851.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.4" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.03%)</title><rect x="672.7" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="675.7" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.03%)</title><rect x="672.7" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="675.7" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.03%)</title><rect x="672.7" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="675.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (144 samples, 0.67%)</title><rect x="673.3" y="1011.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (144 samples, 0.67%)</title><rect x="673.3" y="995.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (143 samples, 0.67%)</title><rect x="673.4" y="979.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.4" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.02%)</title><rect x="673.4" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.4" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.02%)</title><rect x="673.4" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.4" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.02%)</title><rect x="673.4" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.02%)</title><rect x="673.4" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.4" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.02%)</title><rect x="673.4" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.4" y="910.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="673.4" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.4" y="894.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="673.4" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="673.4" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="673.4" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.02%)</title><rect x="673.4" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.4" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (137 samples, 0.64%)</title><rect x="673.7" y="963.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.7" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (137 samples, 0.64%)</title><rect x="673.7" y="947.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.7" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (136 samples, 0.64%)</title><rect x="673.7" y="931.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.7" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (136 samples, 0.64%)</title><rect x="673.7" y="915.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.7" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (136 samples, 0.64%)</title><rect x="673.7" y="899.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.7" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (136 samples, 0.64%)</title><rect x="673.7" y="883.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.7" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (133 samples, 0.62%)</title><rect x="673.7" y="867.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (132 samples, 0.62%)</title><rect x="673.8" y="851.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (132 samples, 0.62%)</title><rect x="673.8" y="835.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (132 samples, 0.62%)</title><rect x="673.8" y="819.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (54 samples, 0.25%)</title><rect x="673.9" y="803.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (54 samples, 0.25%)</title><rect x="673.9" y="787.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (54 samples, 0.25%)</title><rect x="673.9" y="771.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (51 samples, 0.24%)</title><rect x="674.0" y="755.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (48 samples, 0.22%)</title><rect x="674.0" y="739.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (48 samples, 0.22%)</title><rect x="674.0" y="723.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (48 samples, 0.22%)</title><rect x="674.0" y="707.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.0" y="718.0"></text>
</g>
<g>
<title>__libc_pread64 (45 samples, 0.21%)</title><rect x="674.1" y="691.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="677.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.15%)</title><rect x="674.9" y="675.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="677.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.15%)</title><rect x="674.9" y="659.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="677.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (25 samples, 0.12%)</title><rect x="675.2" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="678.2" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (25 samples, 0.12%)</title><rect x="675.2" y="627.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="678.2" y="638.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.10%)</title><rect x="675.4" y="611.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="678.4" y="622.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.07%)</title><rect x="675.4" y="595.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.4" y="606.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.07%)</title><rect x="675.5" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="678.5" y="590.0"></text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.07%)</title><rect x="675.5" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="678.5" y="574.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.06%)</title><rect x="675.6" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="678.6" y="558.0"></text>
</g>
<g>
<title>generic_file_buffered_read (12 samples, 0.06%)</title><rect x="675.6" y="531.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="678.6" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (8 samples, 0.04%)</title><rect x="675.8" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="678.8" y="526.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.04%)</title><rect x="675.8" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="678.8" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.02%)</title><rect x="676.3" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.3" y="606.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.02%)</title><rect x="676.3" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="679.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (76 samples, 0.36%)</title><rect x="676.9" y="803.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (76 samples, 0.36%)</title><rect x="676.9" y="787.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (66 samples, 0.31%)</title><rect x="677.3" y="771.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (59 samples, 0.28%)</title><rect x="677.3" y="755.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (59 samples, 0.28%)</title><rect x="677.3" y="739.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (59 samples, 0.28%)</title><rect x="677.3" y="723.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.3" y="734.0"></text>
</g>
<g>
<title>__libc_pread64 (57 samples, 0.27%)</title><rect x="677.3" y="707.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="680.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.14%)</title><rect x="678.8" y="691.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="681.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.14%)</title><rect x="678.9" y="675.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.10%)</title><rect x="679.3" y="659.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.3" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (21 samples, 0.10%)</title><rect x="679.3" y="643.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="682.3" y="654.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.08%)</title><rect x="679.5" y="627.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="682.5" y="638.0"></text>
</g>
<g>
<title>__vfs_read (13 samples, 0.06%)</title><rect x="679.7" y="611.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="682.7" y="622.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.06%)</title><rect x="679.7" y="595.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.7" y="606.0"></text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.05%)</title><rect x="679.8" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="682.8" y="590.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.05%)</title><rect x="679.8" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.8" y="574.0"></text>
</g>
<g>
<title>generic_file_buffered_read (11 samples, 0.05%)</title><rect x="679.8" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="682.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.03%)</title><rect x="680.6" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (32 samples, 0.15%)</title><rect x="681.3" y="1011.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (30 samples, 0.14%)</title><rect x="681.3" y="995.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (29 samples, 0.14%)</title><rect x="681.3" y="979.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (29 samples, 0.14%)</title><rect x="681.3" y="963.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (28 samples, 0.13%)</title><rect x="681.4" y="947.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (27 samples, 0.13%)</title><rect x="681.5" y="931.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (24 samples, 0.11%)</title><rect x="681.6" y="915.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.06%)</title><rect x="682.2" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.2" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.06%)</title><rect x="682.3" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.3" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.06%)</title><rect x="682.3" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.3" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.04%)</title><rect x="682.4" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (9 samples, 0.04%)</title><rect x="683.1" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.02%)</title><rect x="683.3" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6,117 samples, 28.65%)</title><rect x="683.6" y="1091.0" width="338.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.6" y="1102.0">java/util/concurrent/CompletableFuture$AsyncSu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (220 samples, 1.03%)</title><rect x="683.7" y="1075.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (219 samples, 1.03%)</title><rect x="683.7" y="1059.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/1586761708.apply (212 samples, 0.99%)</title><rect x="684.1" y="1043.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (212 samples, 0.99%)</title><rect x="684.1" y="1027.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (212 samples, 0.99%)</title><rect x="684.1" y="1011.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (205 samples, 0.96%)</title><rect x="684.2" y="995.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (205 samples, 0.96%)</title><rect x="684.2" y="979.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (205 samples, 0.96%)</title><rect x="684.2" y="963.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (115 samples, 0.54%)</title><rect x="684.4" y="947.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (115 samples, 0.54%)</title><rect x="684.4" y="931.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (115 samples, 0.54%)</title><rect x="684.4" y="915.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1624614356.apply (115 samples, 0.54%)</title><rect x="684.4" y="899.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (115 samples, 0.54%)</title><rect x="684.4" y="883.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (115 samples, 0.54%)</title><rect x="684.4" y="867.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1690211041.apply (115 samples, 0.54%)</title><rect x="684.4" y="851.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (115 samples, 0.54%)</title><rect x="684.4" y="835.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (114 samples, 0.53%)</title><rect x="684.5" y="819.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (97 samples, 0.45%)</title><rect x="684.5" y="803.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (97 samples, 0.45%)</title><rect x="684.5" y="787.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/2119173243.apply (93 samples, 0.44%)</title><rect x="684.7" y="771.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (93 samples, 0.44%)</title><rect x="684.7" y="755.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (29 samples, 0.14%)</title><rect x="685.2" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (29 samples, 0.14%)</title><rect x="685.2" y="723.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (27 samples, 0.13%)</title><rect x="685.3" y="707.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (27 samples, 0.13%)</title><rect x="685.3" y="691.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (21 samples, 0.10%)</title><rect x="685.4" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (19 samples, 0.09%)</title><rect x="685.4" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (19 samples, 0.09%)</title><rect x="685.4" y="643.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.06%)</title><rect x="685.8" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.05%)</title><rect x="685.9" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.9" y="622.0"></text>
</g>
<g>
<title>__libc_write (11 samples, 0.05%)</title><rect x="685.9" y="595.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="688.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.05%)</title><rect x="685.9" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="688.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.05%)</title><rect x="685.9" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="688.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (11 samples, 0.05%)</title><rect x="685.9" y="547.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="688.9" y="558.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.05%)</title><rect x="685.9" y="531.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="688.9" y="542.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.04%)</title><rect x="686.0" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="689.0" y="526.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.04%)</title><rect x="686.0" y="499.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="689.0" y="510.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.04%)</title><rect x="686.0" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.0" y="494.0"></text>
</g>
<g>
<title>pipe_write (8 samples, 0.04%)</title><rect x="686.0" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="689.0" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.03%)</title><rect x="686.0" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="689.0" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.03%)</title><rect x="686.0" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="689.0" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="686.0" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="689.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.02%)</title><rect x="686.5" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.02%)</title><rect x="686.5" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.02%)</title><rect x="686.5" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.02%)</title><rect x="686.5" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (55 samples, 0.26%)</title><rect x="686.8" y="739.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (37 samples, 0.17%)</title><rect x="687.3" y="723.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (18 samples, 0.08%)</title><rect x="687.5" y="707.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.02%)</title><rect x="687.6" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.6" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.02%)</title><rect x="687.6" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.6" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (9 samples, 0.04%)</title><rect x="687.9" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.9" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (9 samples, 0.04%)</title><rect x="687.9" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (8 samples, 0.04%)</title><rect x="688.0" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="688.0" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (7 samples, 0.03%)</title><rect x="688.0" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (12 samples, 0.06%)</title><rect x="688.7" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.06%)</title><rect x="688.7" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.7" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.06%)</title><rect x="688.7" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (10 samples, 0.05%)</title><rect x="688.8" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.8" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (10 samples, 0.05%)</title><rect x="688.8" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.05%)</title><rect x="688.8" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.02%)</title><rect x="689.0" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.02%)</title><rect x="689.6" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (15 samples, 0.07%)</title><rect x="689.9" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (8 samples, 0.04%)</title><rect x="690.1" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.04%)</title><rect x="690.1" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.04%)</title><rect x="690.1" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.03%)</title><rect x="690.2" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.03%)</title><rect x="690.2" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5 samples, 0.02%)</title><rect x="690.3" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (84 samples, 0.39%)</title><rect x="690.9" y="947.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (82 samples, 0.38%)</title><rect x="691.0" y="931.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (80 samples, 0.37%)</title><rect x="691.1" y="915.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (79 samples, 0.37%)</title><rect x="691.2" y="899.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (5 samples, 0.02%)</title><rect x="691.5" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (26 samples, 0.12%)</title><rect x="692.0" y="883.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (25 samples, 0.12%)</title><rect x="692.0" y="867.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (23 samples, 0.11%)</title><rect x="692.1" y="851.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (19 samples, 0.09%)</title><rect x="692.3" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.3" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (11 samples, 0.05%)</title><rect x="692.8" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (36 samples, 0.17%)</title><rect x="693.4" y="883.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.17%)</title><rect x="693.4" y="867.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.4" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.13%)</title><rect x="693.4" y="851.0" width="1.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="696.4" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.04%)</title><rect x="693.7" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="696.7" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.02%)</title><rect x="694.3" y="835.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="697.3" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.02%)</title><rect x="694.3" y="819.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="697.3" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.04%)</title><rect x="694.5" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="697.5" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.02%)</title><rect x="694.7" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="697.7" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (5 samples, 0.02%)</title><rect x="694.7" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="697.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$239/1698958724.run (5 samples, 0.02%)</title><rect x="695.1" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.02%)</title><rect x="695.1" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.1" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.02%)</title><rect x="695.1" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.1" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (5 samples, 0.02%)</title><rect x="695.1" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.1" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.02%)</title><rect x="695.1" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.1" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.02%)</title><rect x="695.1" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.02%)</title><rect x="695.5" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$122/964985208.get (5,893 samples, 27.60%)</title><rect x="695.9" y="1075.0" width="325.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.9" y="1086.0">ru/mail/polis/service/boriskin/ReplicaWorker..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (5,893 samples, 27.60%)</title><rect x="695.9" y="1059.0" width="325.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.9" y="1070.0">ru/mail/polis/service/boriskin/ReplicaWorker..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$486/329204198.run (5,893 samples, 27.60%)</title><rect x="695.9" y="1043.0" width="325.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.9" y="1054.0">ru/mail/polis/service/boriskin/ReplicaWorker..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$0 (5,893 samples, 27.60%)</title><rect x="695.9" y="1027.0" width="325.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.9" y="1038.0">ru/mail/polis/service/boriskin/ReplicaWorker..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (5,887 samples, 27.57%)</title><rect x="696.3" y="1011.0" width="325.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.3" y="1022.0">ru/mail/polis/service/boriskin/Value.from</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (148 samples, 0.69%)</title><rect x="696.4" y="995.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.4" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (147 samples, 0.69%)</title><rect x="696.4" y="979.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.4" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.03%)</title><rect x="696.4" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.4" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.03%)</title><rect x="696.4" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.4" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.03%)</title><rect x="696.4" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="696.4" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.4" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="696.4" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.4" y="910.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="696.5" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.5" y="894.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="696.5" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (6 samples, 0.03%)</title><rect x="696.5" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (6 samples, 0.03%)</title><rect x="696.5" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.02%)</title><rect x="696.5" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.5" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (139 samples, 0.65%)</title><rect x="696.8" y="963.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.8" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (139 samples, 0.65%)</title><rect x="696.8" y="947.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.8" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (139 samples, 0.65%)</title><rect x="696.8" y="931.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.8" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (139 samples, 0.65%)</title><rect x="696.8" y="915.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.8" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (139 samples, 0.65%)</title><rect x="696.8" y="899.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.8" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (139 samples, 0.65%)</title><rect x="696.8" y="883.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.8" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (135 samples, 0.63%)</title><rect x="696.8" y="867.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (132 samples, 0.62%)</title><rect x="697.0" y="851.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (132 samples, 0.62%)</title><rect x="697.0" y="835.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (130 samples, 0.61%)</title><rect x="697.0" y="819.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (36 samples, 0.17%)</title><rect x="697.1" y="803.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (36 samples, 0.17%)</title><rect x="697.1" y="787.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (36 samples, 0.17%)</title><rect x="697.1" y="771.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 0.16%)</title><rect x="697.1" y="755.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (33 samples, 0.15%)</title><rect x="697.1" y="739.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 0.15%)</title><rect x="697.2" y="723.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 0.15%)</title><rect x="697.2" y="707.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.2" y="718.0"></text>
</g>
<g>
<title>__libc_pread64 (31 samples, 0.15%)</title><rect x="697.2" y="691.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="700.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.10%)</title><rect x="697.8" y="675.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="700.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.09%)</title><rect x="697.8" y="659.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="700.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.07%)</title><rect x="698.1" y="643.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.1" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.07%)</title><rect x="698.1" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="701.1" y="638.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.06%)</title><rect x="698.3" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.3" y="622.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.02%)</title><rect x="698.4" y="595.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="701.4" y="606.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.02%)</title><rect x="698.4" y="579.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="701.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (93 samples, 0.44%)</title><rect x="699.1" y="803.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (92 samples, 0.43%)</title><rect x="699.1" y="787.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (83 samples, 0.39%)</title><rect x="699.2" y="771.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (74 samples, 0.35%)</title><rect x="699.2" y="755.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (74 samples, 0.35%)</title><rect x="699.2" y="739.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (74 samples, 0.35%)</title><rect x="699.2" y="723.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.2" y="734.0"></text>
</g>
<g>
<title>__libc_pread64 (70 samples, 0.33%)</title><rect x="699.3" y="707.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="702.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.20%)</title><rect x="700.8" y="691.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.19%)</title><rect x="700.9" y="675.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="703.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (31 samples, 0.15%)</title><rect x="701.5" y="659.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="704.5" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (30 samples, 0.14%)</title><rect x="701.5" y="643.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.5" y="654.0"></text>
</g>
<g>
<title>vfs_read (26 samples, 0.12%)</title><rect x="701.7" y="627.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="704.7" y="638.0"></text>
</g>
<g>
<title>__vfs_read (21 samples, 0.10%)</title><rect x="701.8" y="611.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="704.8" y="622.0"></text>
</g>
<g>
<title>new_sync_read (21 samples, 0.10%)</title><rect x="701.8" y="595.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.8" y="606.0"></text>
</g>
<g>
<title>ext4_file_read_iter (19 samples, 0.09%)</title><rect x="702.0" y="579.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.0" y="590.0"></text>
</g>
<g>
<title>generic_file_read_iter (18 samples, 0.08%)</title><rect x="702.0" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="705.0" y="574.0"></text>
</g>
<g>
<title>generic_file_buffered_read (17 samples, 0.08%)</title><rect x="702.1" y="547.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="705.1" y="558.0"></text>
</g>
<g>
<title>copy_page_to_iter (8 samples, 0.04%)</title><rect x="702.1" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="705.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.04%)</title><rect x="703.3" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.3" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.02%)</title><rect x="703.3" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.02%)</title><rect x="703.8" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.02%)</title><rect x="703.8" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (5,737 samples, 26.87%)</title><rect x="704.5" y="995.0" width="317.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.5" y="1006.0">ru/mail/polis/service/boriskin/Value.getIte..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (613 samples, 2.87%)</title><rect x="704.6" y="979.0" width="33.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.6" y="990.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (613 samples, 2.87%)</title><rect x="704.6" y="963.0" width="33.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.6" y="974.0">co..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (605 samples, 2.83%)</title><rect x="705.0" y="947.0" width="33.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.0" y="958.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (605 samples, 2.83%)</title><rect x="705.0" y="931.0" width="33.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.0" y="942.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (604 samples, 2.83%)</title><rect x="705.0" y="915.0" width="33.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.0" y="926.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (604 samples, 2.83%)</title><rect x="705.0" y="899.0" width="33.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.0" y="910.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (604 samples, 2.83%)</title><rect x="705.0" y="883.0" width="33.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.0" y="894.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (604 samples, 2.83%)</title><rect x="705.0" y="867.0" width="33.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.0" y="878.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (599 samples, 2.81%)</title><rect x="705.0" y="851.0" width="33.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.0" y="862.0">co..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.03%)</title><rect x="705.1" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="705.2" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="705.2" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (5 samples, 0.02%)</title><rect x="705.2" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (591 samples, 2.77%)</title><rect x="705.5" y="835.0" width="32.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.5" y="846.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (591 samples, 2.77%)</title><rect x="705.5" y="819.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.5" y="830.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (591 samples, 2.77%)</title><rect x="705.5" y="803.0" width="32.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.5" y="814.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (218 samples, 1.02%)</title><rect x="705.6" y="787.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (214 samples, 1.00%)</title><rect x="705.8" y="771.0" width="11.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (213 samples, 1.00%)</title><rect x="705.9" y="755.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (13 samples, 0.06%)</title><rect x="706.0" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.0" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (13 samples, 0.06%)</title><rect x="706.0" y="723.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (188 samples, 0.88%)</title><rect x="706.9" y="739.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (176 samples, 0.82%)</title><rect x="707.0" y="723.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (175 samples, 0.82%)</title><rect x="707.0" y="707.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (175 samples, 0.82%)</title><rect x="707.0" y="691.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.0" y="702.0"></text>
</g>
<g>
<title>__libc_pread64 (165 samples, 0.77%)</title><rect x="707.3" y="675.0" width="9.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="710.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 0.49%)</title><rect x="710.6" y="659.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (101 samples, 0.47%)</title><rect x="710.8" y="643.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (77 samples, 0.36%)</title><rect x="712.1" y="627.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.1" y="638.0"></text>
</g>
<g>
<title>ksys_pread64 (76 samples, 0.36%)</title><rect x="712.2" y="611.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="715.2" y="622.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.04%)</title><rect x="712.3" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="715.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.04%)</title><rect x="712.3" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="715.3" y="590.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.04%)</title><rect x="712.3" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.3" y="574.0"></text>
</g>
<g>
<title>vfs_read (64 samples, 0.30%)</title><rect x="712.8" y="595.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="715.8" y="606.0"></text>
</g>
<g>
<title>__vfs_read (41 samples, 0.19%)</title><rect x="713.1" y="579.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.1" y="590.0"></text>
</g>
<g>
<title>new_sync_read (36 samples, 0.17%)</title><rect x="713.4" y="563.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="716.4" y="574.0"></text>
</g>
<g>
<title>ext4_file_read_iter (34 samples, 0.16%)</title><rect x="713.5" y="547.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="716.5" y="558.0"></text>
</g>
<g>
<title>generic_file_read_iter (33 samples, 0.15%)</title><rect x="713.6" y="531.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.6" y="542.0"></text>
</g>
<g>
<title>generic_file_buffered_read (32 samples, 0.15%)</title><rect x="713.6" y="515.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.6" y="526.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 0.05%)</title><rect x="713.8" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="716.8" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.03%)</title><rect x="713.9" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="716.9" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.05%)</title><rect x="714.7" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.7" y="510.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.04%)</title><rect x="714.7" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="717.7" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (18 samples, 0.08%)</title><rect x="715.4" y="579.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="718.4" y="590.0"></text>
</g>
<g>
<title>security_file_permission (17 samples, 0.08%)</title><rect x="715.4" y="563.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="718.4" y="574.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.02%)</title><rect x="715.5" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="718.5" y="558.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.04%)</title><rect x="715.8" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.8" y="558.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.03%)</title><rect x="715.9" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="718.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.05%)</title><rect x="716.7" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.02%)</title><rect x="717.0" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.02%)</title><rect x="717.3" y="739.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (371 samples, 1.74%)</title><rect x="717.6" y="787.0" width="20.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (371 samples, 1.74%)</title><rect x="717.6" y="771.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (16 samples, 0.07%)</title><rect x="717.9" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.9" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (16 samples, 0.07%)</title><rect x="717.9" y="739.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.9" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.03%)</title><rect x="718.4" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.4" y="734.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.03%)</title><rect x="718.4" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.03%)</title><rect x="718.4" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (10 samples, 0.05%)</title><rect x="718.8" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.8" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (10 samples, 0.05%)</title><rect x="718.8" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.8" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.04%)</title><rect x="718.9" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.9" y="734.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (9 samples, 0.04%)</title><rect x="718.9" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (9 samples, 0.04%)</title><rect x="718.9" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (323 samples, 1.51%)</title><rect x="719.4" y="755.0" width="17.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (293 samples, 1.37%)</title><rect x="719.5" y="739.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (292 samples, 1.37%)</title><rect x="719.6" y="723.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (292 samples, 1.37%)</title><rect x="719.6" y="707.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.6" y="718.0"></text>
</g>
<g>
<title>__libc_pread64 (279 samples, 1.31%)</title><rect x="720.0" y="691.0" width="15.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="723.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (177 samples, 0.83%)</title><rect x="725.6" y="675.0" width="9.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.03%)</title><rect x="725.6" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="728.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (171 samples, 0.80%)</title><rect x="725.9" y="659.0" width="9.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="728.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (137 samples, 0.64%)</title><rect x="727.8" y="643.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="730.8" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (137 samples, 0.64%)</title><rect x="727.8" y="627.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.8" y="638.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.07%)</title><rect x="727.9" y="611.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.07%)</title><rect x="727.9" y="595.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.9" y="606.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.07%)</title><rect x="727.9" y="579.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.9" y="590.0"></text>
</g>
<g>
<title>vfs_read (114 samples, 0.53%)</title><rect x="729.0" y="611.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="732.0" y="622.0"></text>
</g>
<g>
<title>__vfs_read (84 samples, 0.39%)</title><rect x="729.4" y="595.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.4" y="606.0"></text>
</g>
<g>
<title>new_sync_read (81 samples, 0.38%)</title><rect x="729.5" y="579.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="732.5" y="590.0"></text>
</g>
<g>
<title>ext4_file_read_iter (73 samples, 0.34%)</title><rect x="730.0" y="563.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="733.0" y="574.0"></text>
</g>
<g>
<title>generic_file_read_iter (64 samples, 0.30%)</title><rect x="730.5" y="547.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="733.5" y="558.0"></text>
</g>
<g>
<title>generic_file_buffered_read (63 samples, 0.30%)</title><rect x="730.5" y="531.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="733.5" y="542.0"></text>
</g>
<g>
<title>copy_page_to_iter (19 samples, 0.09%)</title><rect x="731.2" y="515.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="734.2" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.03%)</title><rect x="732.0" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.0" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (20 samples, 0.09%)</title><rect x="732.4" y="515.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="735.4" y="526.0"></text>
</g>
<g>
<title>find_get_entry (19 samples, 0.09%)</title><rect x="732.4" y="499.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="735.4" y="510.0"></text>
</g>
<g>
<title>touch_atime (8 samples, 0.04%)</title><rect x="733.6" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="736.6" y="526.0"></text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.03%)</title><rect x="733.6" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.6" y="510.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.02%)</title><rect x="733.7" y="483.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="736.7" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (20 samples, 0.09%)</title><rect x="734.2" y="595.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="737.2" y="606.0"></text>
</g>
<g>
<title>security_file_permission (15 samples, 0.07%)</title><rect x="734.5" y="579.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="737.5" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.04%)</title><rect x="734.6" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.6" y="574.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.04%)</title><rect x="734.6" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="737.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (27 samples, 0.13%)</title><rect x="735.7" y="739.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.03%)</title><rect x="735.8" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (19 samples, 0.09%)</title><rect x="736.2" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (14 samples, 0.07%)</title><rect x="737.2" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.04%)</title><rect x="737.5" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.5" y="750.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="738.1" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.1" y="862.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="738.1" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="738.1" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="738.1" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.02%)</title><rect x="738.1" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.1" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (5,031 samples, 23.56%)</title><rect x="738.6" y="979.0" width="278.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.6" y="990.0">java/util/Collections$UnmodifiableCol..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (5,031 samples, 23.56%)</title><rect x="738.6" y="963.0" width="278.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="741.6" y="974.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (15 samples, 0.07%)</title><rect x="738.6" y="947.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.6" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (14 samples, 0.07%)</title><rect x="738.7" y="931.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$502/1244742828.accept (5,015 samples, 23.49%)</title><rect x="739.5" y="947.0" width="277.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.5" y="958.0">ru/mail/polis/service/boriskin/Value$..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (5,015 samples, 23.49%)</title><rect x="739.5" y="931.0" width="277.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.5" y="942.0">ru/mail/polis/service/boriskin/Value...</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (5,015 samples, 23.49%)</title><rect x="739.5" y="915.0" width="277.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.5" y="926.0">ru/mail/polis/dao/boriskin/SortedStri..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (5,015 samples, 23.49%)</title><rect x="739.5" y="899.0" width="277.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.5" y="910.0">ru/mail/polis/dao/boriskin/SortedStri..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (5,015 samples, 23.49%)</title><rect x="739.5" y="883.0" width="277.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.5" y="894.0">ru/mail/polis/dao/boriskin/SortedStri..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (45 samples, 0.21%)</title><rect x="739.6" y="867.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.6" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (37 samples, 0.17%)</title><rect x="739.9" y="851.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.9" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.05%)</title><rect x="741.4" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.4" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.04%)</title><rect x="741.4" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (4,968 samples, 23.26%)</title><rect x="742.1" y="867.0" width="274.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.1" y="878.0">ru/mail/polis/dao/boriskin/SortedStri..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (104 samples, 0.49%)</title><rect x="743.2" y="851.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.2" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (89 samples, 0.42%)</title><rect x="744.1" y="835.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (52 samples, 0.24%)</title><rect x="746.1" y="819.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.1" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (48 samples, 0.22%)</title><rect x="746.3" y="803.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (35 samples, 0.16%)</title><rect x="746.6" y="787.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (21 samples, 0.10%)</title><rect x="747.4" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (21 samples, 0.10%)</title><rect x="747.4" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.04%)</title><rect x="748.5" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.04%)</title><rect x="748.5" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (30 samples, 0.14%)</title><rect x="749.0" y="851.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (22 samples, 0.10%)</title><rect x="749.4" y="835.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (1,743 samples, 8.16%)</title><rect x="750.6" y="851.0" width="96.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.6" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.25%)</title><rect x="751.1" y="835.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.1" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (48 samples, 0.22%)</title><rect x="751.4" y="819.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (46 samples, 0.22%)</title><rect x="751.5" y="803.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.5" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.09%)</title><rect x="752.9" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="753.7" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="753.7" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,678 samples, 7.86%)</title><rect x="754.2" y="835.0" width="92.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.2" y="846.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,673 samples, 7.83%)</title><rect x="754.4" y="819.0" width="92.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.4" y="830.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (128 samples, 0.60%)</title><rect x="754.8" y="803.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.8" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (127 samples, 0.59%)</title><rect x="754.8" y="787.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.8" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (10 samples, 0.05%)</title><rect x="759.5" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (9 samples, 0.04%)</title><rect x="759.6" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.6" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (28 samples, 0.13%)</title><rect x="760.1" y="771.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.1" y="782.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (28 samples, 0.13%)</title><rect x="760.1" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (28 samples, 0.13%)</title><rect x="760.1" y="739.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (6 samples, 0.03%)</title><rect x="761.9" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.9" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.02%)</title><rect x="761.9" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,465 samples, 6.86%)</title><rect x="762.2" y="803.0" width="80.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.2" y="814.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (17 samples, 0.08%)</title><rect x="762.5" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.5" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (17 samples, 0.08%)</title><rect x="762.5" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,325 samples, 6.20%)</title><rect x="763.5" y="787.0" width="73.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.5" y="798.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="763.6" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,317 samples, 6.17%)</title><rect x="763.9" y="771.0" width="72.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.9" y="782.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,315 samples, 6.16%)</title><rect x="764.0" y="755.0" width="72.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.0" y="766.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (5 samples, 0.02%)</title><rect x="765.7" y="739.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="768.7" y="750.0"></text>
</g>
<g>
<title>__libc_pread64 (1,248 samples, 5.84%)</title><rect x="765.9" y="739.0" width="69.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="768.9" y="750.0">__libc_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (773 samples, 3.62%)</title><rect x="792.1" y="723.0" width="42.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.1" y="734.0">entr..</text>
</g>
<g>
<title>__x64_sys_pread64 (22 samples, 0.10%)</title><rect x="792.1" y="707.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="795.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (751 samples, 3.52%)</title><rect x="793.3" y="707.0" width="41.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="796.3" y="718.0">do_..</text>
</g>
<g>
<title>__x64_sys_pread64 (569 samples, 2.66%)</title><rect x="803.3" y="691.0" width="31.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="806.3" y="702.0">__..</text>
</g>
<g>
<title>ksys_pread64 (566 samples, 2.65%)</title><rect x="803.4" y="675.0" width="31.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.4" y="686.0">ks..</text>
</g>
<g>
<title>__fdget (56 samples, 0.26%)</title><rect x="803.8" y="659.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="806.8" y="670.0"></text>
</g>
<g>
<title>__fget_light (55 samples, 0.26%)</title><rect x="803.9" y="643.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="806.9" y="654.0"></text>
</g>
<g>
<title>__fget (54 samples, 0.25%)</title><rect x="803.9" y="627.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="806.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.06%)</title><rect x="806.9" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="809.9" y="670.0"></text>
</g>
<g>
<title>fput_many (10 samples, 0.05%)</title><rect x="807.9" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="810.9" y="670.0"></text>
</g>
<g>
<title>vfs_read (471 samples, 2.21%)</title><rect x="808.7" y="659.0" width="26.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="811.7" y="670.0">v..</text>
</g>
<g>
<title>__fsnotify_parent (11 samples, 0.05%)</title><rect x="810.1" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="813.1" y="654.0"></text>
</g>
<g>
<title>__vfs_read (312 samples, 1.46%)</title><rect x="810.7" y="643.0" width="17.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="813.7" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.06%)</title><rect x="810.8" y="627.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="813.8" y="638.0"></text>
</g>
<g>
<title>new_sync_read (297 samples, 1.39%)</title><rect x="811.5" y="627.0" width="16.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="814.5" y="638.0"></text>
</g>
<g>
<title>ext4_file_read_iter (268 samples, 1.26%)</title><rect x="813.1" y="611.0" width="14.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="816.1" y="622.0"></text>
</g>
<g>
<title>generic_file_read_iter (254 samples, 1.19%)</title><rect x="813.9" y="595.0" width="14.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.9" y="606.0"></text>
</g>
<g>
<title>generic_file_buffered_read (243 samples, 1.14%)</title><rect x="814.5" y="579.0" width="13.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="817.5" y="590.0"></text>
</g>
<g>
<title>copy_page_to_iter (78 samples, 0.37%)</title><rect x="817.9" y="563.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="820.9" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.03%)</title><rect x="819.1" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="822.1" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (43 samples, 0.20%)</title><rect x="819.4" y="547.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="822.4" y="558.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.03%)</title><rect x="821.8" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="824.8" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (69 samples, 0.32%)</title><rect x="822.5" y="563.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="825.5" y="574.0"></text>
</g>
<g>
<title>find_get_entry (64 samples, 0.30%)</title><rect x="822.7" y="547.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="825.7" y="558.0"></text>
</g>
<g>
<title>xas_load (10 samples, 0.05%)</title><rect x="825.1" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.1" y="542.0"></text>
</g>
<g>
<title>xas_start (12 samples, 0.06%)</title><rect x="825.6" y="531.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.6" y="542.0"></text>
</g>
<g>
<title>touch_atime (28 samples, 0.13%)</title><rect x="826.3" y="563.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.3" y="574.0"></text>
</g>
<g>
<title>atime_needs_update (22 samples, 0.10%)</title><rect x="826.6" y="547.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="829.6" y="558.0"></text>
</g>
<g>
<title>current_time (13 samples, 0.06%)</title><rect x="827.1" y="531.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="830.1" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (8 samples, 0.04%)</title><rect x="827.2" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="830.2" y="526.0"></text>
</g>
<g>
<title>fsnotify (22 samples, 0.10%)</title><rect x="827.9" y="643.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.9" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (99 samples, 0.46%)</title><rect x="829.2" y="643.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="832.2" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (13 samples, 0.06%)</title><rect x="829.5" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.5" y="638.0"></text>
</g>
<g>
<title>security_file_permission (80 samples, 0.37%)</title><rect x="830.3" y="627.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.3" y="638.0"></text>
</g>
<g>
<title>__fsnotify_parent (10 samples, 0.05%)</title><rect x="830.9" y="611.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="833.9" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (37 samples, 0.17%)</title><rect x="831.5" y="611.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="834.5" y="622.0"></text>
</g>
<g>
<title>common_file_perm (35 samples, 0.16%)</title><rect x="831.6" y="595.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="834.6" y="606.0"></text>
</g>
<g>
<title>aa_file_perm (10 samples, 0.05%)</title><rect x="833.0" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="836.0" y="590.0"></text>
</g>
<g>
<title>common_file_perm (9 samples, 0.04%)</title><rect x="833.5" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="836.5" y="622.0"></text>
</g>
<g>
<title>fsnotify (12 samples, 0.06%)</title><rect x="834.0" y="611.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.0" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (12 samples, 0.06%)</title><rect x="834.9" y="739.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="837.9" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (17 samples, 0.08%)</title><rect x="835.6" y="739.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="838.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (117 samples, 0.55%)</title><rect x="836.7" y="787.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (31 samples, 0.15%)</title><rect x="837.1" y="771.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.1" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (19 samples, 0.09%)</title><rect x="837.4" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (79 samples, 0.37%)</title><rect x="838.8" y="771.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (59 samples, 0.28%)</title><rect x="843.1" y="803.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.1" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.05%)</title><rect x="844.7" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="847.7" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.05%)</title><rect x="844.7" y="771.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="847.7" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.04%)</title><rect x="844.8" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="847.8" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.04%)</title><rect x="844.9" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="847.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (20 samples, 0.09%)</title><rect x="845.3" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.04%)</title><rect x="846.4" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,069 samples, 14.37%)</title><rect x="847.0" y="851.0" width="169.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.0" y="862.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,054 samples, 14.30%)</title><rect x="847.8" y="835.0" width="168.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.8" y="846.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (60 samples, 0.28%)</title><rect x="850.0" y="819.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.0" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (41 samples, 0.19%)</title><rect x="851.0" y="803.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.0" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (27 samples, 0.13%)</title><rect x="851.8" y="787.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.8" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (23 samples, 0.11%)</title><rect x="852.0" y="771.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.04%)</title><rect x="852.8" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,833 samples, 13.27%)</title><rect x="853.3" y="819.0" width="156.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.3" y="830.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (24 samples, 0.11%)</title><rect x="853.7" y="803.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.7" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (18 samples, 0.08%)</title><rect x="854.0" y="787.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,563 samples, 12.00%)</title><rect x="855.1" y="803.0" width="141.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.1" y="814.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.04%)</title><rect x="855.4" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.4" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.03%)</title><rect x="855.5" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="855.5" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.5" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.03%)</title><rect x="855.5" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,549 samples, 11.94%)</title><rect x="855.8" y="787.0" width="140.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.8" y="798.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,543 samples, 11.91%)</title><rect x="856.2" y="771.0" width="140.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.2" y="782.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (8 samples, 0.04%)</title><rect x="859.2" y="755.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="862.2" y="766.0"></text>
</g>
<g>
<title>__libc_pread64 (2,406 samples, 11.27%)</title><rect x="859.6" y="755.0" width="133.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="862.6" y="766.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,473 samples, 6.90%)</title><rect x="911.2" y="739.0" width="81.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="914.2" y="750.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_pread64 (34 samples, 0.16%)</title><rect x="911.2" y="723.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="914.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1,435 samples, 6.72%)</title><rect x="913.3" y="723.0" width="79.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="916.3" y="734.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_pread64 (1,092 samples, 5.11%)</title><rect x="932.1" y="707.0" width="60.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.1" y="718.0">__x64_..</text>
</g>
<g>
<title>__fdget (5 samples, 0.02%)</title><rect x="932.1" y="691.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="935.1" y="702.0"></text>
</g>
<g>
<title>fput (5 samples, 0.02%)</title><rect x="932.3" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.3" y="702.0"></text>
</g>
<g>
<title>ksys_pread64 (1,082 samples, 5.07%)</title><rect x="932.6" y="691.0" width="59.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="935.6" y="702.0">ksys_p..</text>
</g>
<g>
<title>__fdget (95 samples, 0.44%)</title><rect x="933.6" y="675.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="936.6" y="686.0"></text>
</g>
<g>
<title>__fget_light (95 samples, 0.44%)</title><rect x="933.6" y="659.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.6" y="670.0"></text>
</g>
<g>
<title>__fget (94 samples, 0.44%)</title><rect x="933.7" y="643.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (30 samples, 0.14%)</title><rect x="938.8" y="675.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="941.8" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.03%)</title><rect x="940.5" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="943.5" y="686.0"></text>
</g>
<g>
<title>fput_many (18 samples, 0.08%)</title><rect x="941.2" y="675.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="944.2" y="686.0"></text>
</g>
<g>
<title>vfs_read (906 samples, 4.24%)</title><rect x="942.3" y="675.0" width="50.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="945.3" y="686.0">vfs_r..</text>
</g>
<g>
<title>__fsnotify_parent (19 samples, 0.09%)</title><rect x="945.5" y="659.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.5" y="670.0"></text>
</g>
<g>
<title>__vfs_read (618 samples, 2.89%)</title><rect x="946.6" y="659.0" width="34.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="949.6" y="670.0">__..</text>
</g>
<g>
<title>ext4_file_read_iter (37 samples, 0.17%)</title><rect x="946.9" y="643.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="949.9" y="654.0"></text>
</g>
<g>
<title>iov_iter_init (6 samples, 0.03%)</title><rect x="948.9" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="951.9" y="654.0"></text>
</g>
<g>
<title>new_sync_read (570 samples, 2.67%)</title><rect x="949.2" y="643.0" width="31.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="952.2" y="654.0">ne..</text>
</g>
<g>
<title>ext4_file_read_iter (515 samples, 2.41%)</title><rect x="952.3" y="627.0" width="28.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="955.3" y="638.0">ex..</text>
</g>
<g>
<title>generic_file_read_iter (481 samples, 2.25%)</title><rect x="954.2" y="611.0" width="26.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="957.2" y="622.0">g..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.02%)</title><rect x="954.7" y="595.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="957.7" y="606.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.03%)</title><rect x="954.9" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.9" y="606.0"></text>
</g>
<g>
<title>generic_file_buffered_read (458 samples, 2.14%)</title><rect x="955.3" y="595.0" width="25.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.3" y="606.0">g..</text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.02%)</title><rect x="961.1" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="964.1" y="590.0"></text>
</g>
<g>
<title>copy_page_to_iter (160 samples, 0.75%)</title><rect x="961.4" y="579.0" width="8.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="964.4" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.06%)</title><rect x="964.9" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="967.9" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (71 samples, 0.33%)</title><rect x="965.6" y="563.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.6" y="574.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.05%)</title><rect x="969.5" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="972.5" y="574.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.02%)</title><rect x="970.2" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="973.2" y="590.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.02%)</title><rect x="970.6" y="579.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="973.6" y="590.0"></text>
</g>
<g>
<title>pagecache_get_page (103 samples, 0.48%)</title><rect x="970.8" y="579.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="973.8" y="590.0"></text>
</g>
<g>
<title>find_get_entry (96 samples, 0.45%)</title><rect x="971.2" y="563.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="974.2" y="574.0"></text>
</g>
<g>
<title>xas_load (24 samples, 0.11%)</title><rect x="974.1" y="547.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="977.1" y="558.0"></text>
</g>
<g>
<title>xas_start (19 samples, 0.09%)</title><rect x="975.4" y="547.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="978.4" y="558.0"></text>
</g>
<g>
<title>touch_atime (70 samples, 0.33%)</title><rect x="976.7" y="579.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="979.7" y="590.0"></text>
</g>
<g>
<title>atime_needs_update (50 samples, 0.23%)</title><rect x="977.6" y="563.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.6" y="574.0"></text>
</g>
<g>
<title>current_time (32 samples, 0.15%)</title><rect x="978.5" y="547.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="981.5" y="558.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (13 samples, 0.06%)</title><rect x="979.2" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.2" y="542.0"></text>
</g>
<g>
<title>timestamp_truncate (6 samples, 0.03%)</title><rect x="980.0" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="983.0" y="542.0"></text>
</g>
<g>
<title>fsnotify (27 samples, 0.13%)</title><rect x="980.7" y="659.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="983.7" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (181 samples, 0.85%)</title><rect x="982.3" y="659.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="985.3" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.03%)</title><rect x="982.8" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="985.8" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (27 samples, 0.13%)</title><rect x="983.4" y="643.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="986.4" y="654.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.03%)</title><rect x="984.9" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="987.9" y="654.0"></text>
</g>
<g>
<title>security_file_permission (128 samples, 0.60%)</title><rect x="985.3" y="643.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="988.3" y="654.0"></text>
</g>
<g>
<title>__fsnotify_parent (13 samples, 0.06%)</title><rect x="986.3" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="989.3" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (52 samples, 0.24%)</title><rect x="987.0" y="627.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="990.0" y="638.0"></text>
</g>
<g>
<title>common_file_perm (52 samples, 0.24%)</title><rect x="987.0" y="611.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="990.0" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (10 samples, 0.05%)</title><rect x="989.3" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="992.3" y="606.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.05%)</title><rect x="989.9" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.9" y="638.0"></text>
</g>
<g>
<title>fsnotify (35 samples, 0.16%)</title><rect x="990.4" y="627.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="993.4" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (29 samples, 0.14%)</title><rect x="992.6" y="755.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="995.6" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (32 samples, 0.15%)</title><rect x="994.2" y="755.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="997.2" y="766.0"></text>
</g>
<g>
<title>fdval (13 samples, 0.06%)</title><rect x="996.0" y="755.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="999.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (237 samples, 1.11%)</title><rect x="996.8" y="803.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="999.8" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (66 samples, 0.31%)</title><rect x="998.2" y="787.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.2" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (38 samples, 0.18%)</title><rect x="999.3" y="771.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.3" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.04%)</title><rect x="1001.4" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (145 samples, 0.68%)</title><rect x="1001.8" y="787.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1004.8" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.04%)</title><rect x="1009.1" y="771.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1012.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (98 samples, 0.46%)</title><rect x="1009.9" y="819.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (35 samples, 0.16%)</title><rect x="1013.3" y="803.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (23 samples, 0.11%)</title><rect x="1015.3" y="819.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.3" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="1016.3" y="803.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1019.3" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.02%)</title><rect x="1016.3" y="787.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (81 samples, 0.38%)</title><rect x="1016.9" y="979.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (81 samples, 0.38%)</title><rect x="1016.9" y="963.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1019.9" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (81 samples, 0.38%)</title><rect x="1016.9" y="947.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.9" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.03%)</title><rect x="1016.9" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.9" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.03%)</title><rect x="1016.9" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.9" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.03%)</title><rect x="1016.9" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.9" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="1016.9" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.9" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="1016.9" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.9" y="878.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="1016.9" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1019.9" y="862.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="1016.9" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1019.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="1016.9" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1019.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="1016.9" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.9" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (75 samples, 0.35%)</title><rect x="1017.2" y="931.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.2" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (75 samples, 0.35%)</title><rect x="1017.2" y="915.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.2" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (75 samples, 0.35%)</title><rect x="1017.2" y="899.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.2" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (75 samples, 0.35%)</title><rect x="1017.2" y="883.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.35%)</title><rect x="1017.2" y="867.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.2" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.35%)</title><rect x="1017.2" y="851.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.2" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (74 samples, 0.35%)</title><rect x="1017.2" y="835.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (74 samples, 0.35%)</title><rect x="1017.2" y="819.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (74 samples, 0.35%)</title><rect x="1017.2" y="803.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (74 samples, 0.35%)</title><rect x="1017.2" y="787.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (23 samples, 0.11%)</title><rect x="1017.2" y="771.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1020.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.11%)</title><rect x="1017.2" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1020.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.11%)</title><rect x="1017.2" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 0.09%)</title><rect x="1017.3" y="723.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.08%)</title><rect x="1017.3" y="707.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.08%)</title><rect x="1017.3" y="691.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.08%)</title><rect x="1017.3" y="675.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.3" y="686.0"></text>
</g>
<g>
<title>__libc_pread64 (17 samples, 0.08%)</title><rect x="1017.3" y="659.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1020.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.05%)</title><rect x="1017.6" y="643.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.05%)</title><rect x="1017.6" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1020.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.02%)</title><rect x="1018.0" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1021.0" y="622.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.02%)</title><rect x="1018.0" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1021.0" y="606.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.02%)</title><rect x="1018.0" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1021.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (51 samples, 0.24%)</title><rect x="1018.5" y="771.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (51 samples, 0.24%)</title><rect x="1018.5" y="755.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (43 samples, 0.20%)</title><rect x="1018.8" y="739.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (36 samples, 0.17%)</title><rect x="1018.8" y="723.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (35 samples, 0.16%)</title><rect x="1018.9" y="707.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (35 samples, 0.16%)</title><rect x="1018.9" y="691.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.9" y="702.0"></text>
</g>
<g>
<title>__libc_pread64 (34 samples, 0.16%)</title><rect x="1018.9" y="675.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1021.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.10%)</title><rect x="1019.6" y="659.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1022.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.10%)</title><rect x="1019.6" y="643.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1022.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.08%)</title><rect x="1019.9" y="627.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1022.9" y="638.0"></text>
</g>
<g>
<title>ksys_pread64 (17 samples, 0.08%)</title><rect x="1019.9" y="611.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.9" y="622.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.06%)</title><rect x="1020.1" y="595.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1023.1" y="606.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.03%)</title><rect x="1020.1" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1023.1" y="590.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.02%)</title><rect x="1020.2" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1023.2" y="574.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.02%)</title><rect x="1020.2" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.03%)</title><rect x="1020.8" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (354 samples, 1.66%)</title><rect x="1021.6" y="1091.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (177 samples, 0.83%)</title><rect x="1021.6" y="1075.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$492/81898337.apply (174 samples, 0.81%)</title><rect x="1021.7" y="1059.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1024.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$1 (174 samples, 0.81%)</title><rect x="1021.7" y="1043.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (174 samples, 0.81%)</title><rect x="1021.7" y="1027.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.7" y="1038.0"></text>
</g>
<g>
<title>java/net/URI.create (25 samples, 0.12%)</title><rect x="1021.8" y="1011.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (25 samples, 0.12%)</title><rect x="1021.8" y="995.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (25 samples, 0.12%)</title><rect x="1021.8" y="979.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (17 samples, 0.08%)</title><rect x="1022.2" y="963.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1025.2" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (11 samples, 0.05%)</title><rect x="1022.5" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1025.5" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.03%)</title><rect x="1022.5" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1025.5" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.02%)</title><rect x="1022.8" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1025.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (5 samples, 0.02%)</title><rect x="1023.2" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1023.2" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (104 samples, 0.49%)</title><rect x="1023.7" y="1011.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (104 samples, 0.49%)</title><rect x="1023.7" y="995.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (104 samples, 0.49%)</title><rect x="1023.7" y="979.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (104 samples, 0.49%)</title><rect x="1023.7" y="963.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (66 samples, 0.31%)</title><rect x="1024.3" y="947.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.3" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.03%)</title><rect x="1024.3" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.3" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.03%)</title><rect x="1024.6" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.03%)</title><rect x="1024.6" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (49 samples, 0.23%)</title><rect x="1025.1" y="931.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.1" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (48 samples, 0.22%)</title><rect x="1025.1" y="915.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1028.1" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (46 samples, 0.22%)</title><rect x="1025.2" y="899.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1028.2" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (26 samples, 0.12%)</title><rect x="1025.2" y="883.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1028.2" y="894.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.03%)</title><rect x="1026.3" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1029.3" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (17 samples, 0.08%)</title><rect x="1026.8" y="883.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.8" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (17 samples, 0.08%)</title><rect x="1026.8" y="867.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1029.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.04%)</title><rect x="1027.0" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.04%)</title><rect x="1027.0" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.03%)</title><rect x="1027.1" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1027.9" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5 samples, 0.02%)</title><rect x="1028.1" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.02%)</title><rect x="1028.1" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (19 samples, 0.09%)</title><rect x="1028.4" y="947.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (17 samples, 0.08%)</title><rect x="1028.4" y="931.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.08%)</title><rect x="1028.4" y="915.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.07%)</title><rect x="1028.5" y="899.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.07%)</title><rect x="1028.5" y="883.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.07%)</title><rect x="1028.5" y="867.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.07%)</title><rect x="1028.5" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.07%)</title><rect x="1028.5" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.07%)</title><rect x="1028.5" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.07%)</title><rect x="1028.5" y="803.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.06%)</title><rect x="1028.6" y="787.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1031.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="1028.8" y="771.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1031.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="1028.8" y="755.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1031.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.03%)</title><rect x="1028.9" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.9" y="750.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.03%)</title><rect x="1028.9" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1031.9" y="734.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.03%)</title><rect x="1028.9" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1031.9" y="718.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="1029.0" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.0" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="1029.0" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1032.0" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="1029.0" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1032.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (11 samples, 0.05%)</title><rect x="1029.7" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (11 samples, 0.05%)</title><rect x="1029.7" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.7" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.05%)</title><rect x="1029.7" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.7" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.05%)</title><rect x="1029.7" y="963.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.04%)</title><rect x="1029.9" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1032.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (6 samples, 0.03%)</title><rect x="1030.0" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.0" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.03%)</title><rect x="1030.0" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (10 samples, 0.05%)</title><rect x="1030.6" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.6" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.04%)</title><rect x="1030.6" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$223/558130116.accept (8 samples, 0.04%)</title><rect x="1030.6" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (8 samples, 0.04%)</title><rect x="1030.6" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (8 samples, 0.04%)</title><rect x="1030.6" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (7 samples, 0.03%)</title><rect x="1030.6" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (7 samples, 0.03%)</title><rect x="1030.6" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (7 samples, 0.03%)</title><rect x="1030.6" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (7 samples, 0.03%)</title><rect x="1030.6" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (7 samples, 0.03%)</title><rect x="1030.6" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (7 samples, 0.03%)</title><rect x="1030.6" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (177 samples, 0.83%)</title><rect x="1031.4" y="1075.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (175 samples, 0.82%)</title><rect x="1031.5" y="1059.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1034.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$494/1939492317.accept (175 samples, 0.82%)</title><rect x="1031.5" y="1043.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$3 (175 samples, 0.82%)</title><rect x="1031.5" y="1027.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.5" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getNumberOfSuccessfulResponses (18 samples, 0.08%)</title><rect x="1031.5" y="1011.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$522/1440614441.test (14 samples, 0.07%)</title><rect x="1031.7" y="995.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1034.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$2 (14 samples, 0.07%)</title><rect x="1031.7" y="979.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (10 samples, 0.05%)</title><rect x="1032.0" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.0" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.03%)</title><rect x="1032.1" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getStartAcks (5 samples, 0.02%)</title><rect x="1032.5" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1035.5" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (5 samples, 0.02%)</title><rect x="1032.5" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1035.5" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (5 samples, 0.02%)</title><rect x="1032.5" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.5" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (5 samples, 0.02%)</title><rect x="1032.5" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (138 samples, 0.65%)</title><rect x="1032.8" y="1011.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (138 samples, 0.65%)</title><rect x="1032.8" y="995.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (138 samples, 0.65%)</title><rect x="1032.8" y="979.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.8" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (135 samples, 0.63%)</title><rect x="1032.9" y="963.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.03%)</title><rect x="1032.9" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1035.9" y="958.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.03%)</title><rect x="1032.9" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.9" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.02%)</title><rect x="1033.0" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.02%)</title><rect x="1033.0" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.02%)</title><rect x="1033.0" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (128 samples, 0.60%)</title><rect x="1033.3" y="947.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (128 samples, 0.60%)</title><rect x="1033.3" y="931.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.3" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="1033.3" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1036.3" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (122 samples, 0.57%)</title><rect x="1033.6" y="915.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (121 samples, 0.57%)</title><rect x="1033.7" y="899.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.7" y="910.0"></text>
</g>
<g>
<title>__send (119 samples, 0.56%)</title><rect x="1033.8" y="883.0" width="6.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1036.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (110 samples, 0.52%)</title><rect x="1034.3" y="867.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1037.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (110 samples, 0.52%)</title><rect x="1034.3" y="851.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1037.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_sendto (107 samples, 0.50%)</title><rect x="1034.3" y="835.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1037.3" y="846.0"></text>
</g>
<g>
<title>__sys_sendto (107 samples, 0.50%)</title><rect x="1034.3" y="819.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.3" y="830.0"></text>
</g>
<g>
<title>sock_sendmsg (105 samples, 0.49%)</title><rect x="1034.3" y="803.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.3" y="814.0"></text>
</g>
<g>
<title>inet6_sendmsg (104 samples, 0.49%)</title><rect x="1034.3" y="787.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.3" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg (104 samples, 0.49%)</title><rect x="1034.3" y="771.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.3" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (98 samples, 0.46%)</title><rect x="1034.6" y="755.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1037.6" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="1034.8" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1037.8" y="750.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="1034.8" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.8" y="734.0"></text>
</g>
<g>
<title>tcp_push (85 samples, 0.40%)</title><rect x="1035.2" y="739.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1038.2" y="750.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (85 samples, 0.40%)</title><rect x="1035.2" y="723.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.2" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (85 samples, 0.40%)</title><rect x="1035.2" y="707.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1038.2" y="718.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (78 samples, 0.37%)</title><rect x="1035.3" y="691.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.3" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (76 samples, 0.36%)</title><rect x="1035.4" y="675.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1038.4" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (76 samples, 0.36%)</title><rect x="1035.4" y="659.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.4" y="670.0"></text>
</g>
<g>
<title>ip_local_out (75 samples, 0.35%)</title><rect x="1035.4" y="643.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1038.4" y="654.0"></text>
</g>
<g>
<title>__ip_local_out (20 samples, 0.09%)</title><rect x="1035.4" y="627.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.4" y="638.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.08%)</title><rect x="1035.6" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1038.6" y="622.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (12 samples, 0.06%)</title><rect x="1035.7" y="595.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1038.7" y="606.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (11 samples, 0.05%)</title><rect x="1035.8" y="579.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1038.8" y="590.0"></text>
</g>
<g>
<title>ip_output (53 samples, 0.25%)</title><rect x="1036.6" y="627.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1039.6" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (51 samples, 0.24%)</title><rect x="1036.6" y="611.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1039.6" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (50 samples, 0.23%)</title><rect x="1036.7" y="595.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1039.7" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (50 samples, 0.23%)</title><rect x="1036.7" y="579.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1039.7" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 0.22%)</title><rect x="1036.7" y="563.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1039.7" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 0.22%)</title><rect x="1036.7" y="547.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1039.7" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (45 samples, 0.21%)</title><rect x="1036.7" y="531.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1039.7" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (45 samples, 0.21%)</title><rect x="1036.7" y="515.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1039.7" y="526.0"></text>
</g>
<g>
<title>net_rx_action (44 samples, 0.21%)</title><rect x="1036.8" y="499.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1039.8" y="510.0"></text>
</g>
<g>
<title>process_backlog (44 samples, 0.21%)</title><rect x="1036.8" y="483.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1039.8" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (43 samples, 0.20%)</title><rect x="1036.8" y="467.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1039.8" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 0.20%)</title><rect x="1036.8" y="451.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1039.8" y="462.0"></text>
</g>
<g>
<title>ip_rcv (41 samples, 0.19%)</title><rect x="1036.9" y="435.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1039.9" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (40 samples, 0.19%)</title><rect x="1036.9" y="419.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1039.9" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (40 samples, 0.19%)</title><rect x="1036.9" y="403.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1039.9" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (40 samples, 0.19%)</title><rect x="1036.9" y="387.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1039.9" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (40 samples, 0.19%)</title><rect x="1036.9" y="371.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1039.9" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (40 samples, 0.19%)</title><rect x="1036.9" y="355.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1039.9" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 0.17%)</title><rect x="1037.1" y="339.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.1" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (35 samples, 0.16%)</title><rect x="1037.2" y="323.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1040.2" y="334.0"></text>
</g>
<g>
<title>tcp_data_ready (31 samples, 0.15%)</title><rect x="1037.4" y="307.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1040.4" y="318.0"></text>
</g>
<g>
<title>sock_def_readable (30 samples, 0.14%)</title><rect x="1037.5" y="291.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1040.5" y="302.0"></text>
</g>
<g>
<title>__wake_up_sync_key (30 samples, 0.14%)</title><rect x="1037.5" y="275.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1040.5" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 0.14%)</title><rect x="1037.5" y="259.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1040.5" y="270.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 0.14%)</title><rect x="1037.5" y="243.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1040.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.merge (9 samples, 0.04%)</title><rect x="1040.4" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (7 samples, 0.03%)</title><rect x="1040.5" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.5" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (7 samples, 0.03%)</title><rect x="1040.5" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.5" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.03%)</title><rect x="1040.5" y="963.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.5" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (6 samples, 0.03%)</title><rect x="1040.5" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.02%)</title><rect x="1040.6" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.02%)</title><rect x="1041.2" y="1091.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.02%)</title><rect x="1041.2" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (289 samples, 1.35%)</title><rect x="1041.5" y="1091.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (268 samples, 1.26%)</title><rect x="1042.3" y="1075.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (5 samples, 0.02%)</title><rect x="1042.7" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (210 samples, 0.98%)</title><rect x="1043.2" y="1059.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.04%)</title><rect x="1043.3" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (7 samples, 0.03%)</title><rect x="1043.4" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (5 samples, 0.02%)</title><rect x="1043.4" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (33 samples, 0.15%)</title><rect x="1043.8" y="1043.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 0.15%)</title><rect x="1043.8" y="1027.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1046.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.14%)</title><rect x="1043.8" y="1011.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.13%)</title><rect x="1044.0" y="995.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.13%)</title><rect x="1044.0" y="979.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1047.0" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.02%)</title><rect x="1044.0" y="963.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1047.0" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.10%)</title><rect x="1044.3" y="963.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1047.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.09%)</title><rect x="1044.3" y="947.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1047.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.09%)</title><rect x="1044.4" y="931.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1047.4" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.08%)</title><rect x="1044.5" y="915.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.5" y="926.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.08%)</title><rect x="1044.5" y="899.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.5" y="910.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.07%)</title><rect x="1044.5" y="883.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.5" y="894.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.07%)</title><rect x="1044.6" y="867.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1047.6" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.07%)</title><rect x="1044.6" y="851.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1047.6" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.07%)</title><rect x="1044.6" y="835.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1047.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (164 samples, 0.77%)</title><rect x="1045.7" y="1043.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (164 samples, 0.77%)</title><rect x="1045.7" y="1027.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.7" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (59 samples, 0.28%)</title><rect x="1046.0" y="1011.0" width="3.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1049.0" y="1022.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.03%)</title><rect x="1046.3" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1049.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (31 samples, 0.15%)</title><rect x="1047.2" y="995.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1050.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.07%)</title><rect x="1048.2" y="979.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1051.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.06%)</title><rect x="1048.2" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1051.2" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.03%)</title><rect x="1048.5" y="947.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1051.5" y="958.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.03%)</title><rect x="1048.5" y="931.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1051.5" y="942.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="1048.5" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1051.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 0.46%)</title><rect x="1049.3" y="1011.0" width="5.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1052.3" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (90 samples, 0.42%)</title><rect x="1049.4" y="995.0" width="5.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1052.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.13%)</title><rect x="1052.8" y="979.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.8" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.13%)</title><rect x="1052.8" y="963.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.8" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.11%)</title><rect x="1053.1" y="947.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1056.1" y="958.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.10%)</title><rect x="1053.2" y="931.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1056.2" y="942.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.09%)</title><rect x="1053.3" y="915.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1056.3" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.03%)</title><rect x="1053.8" y="899.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1056.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.03%)</title><rect x="1054.8" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.03%)</title><rect x="1054.8" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1057.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.02%)</title><rect x="1054.8" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (35 samples, 0.16%)</title><rect x="1055.2" y="1059.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.16%)</title><rect x="1055.2" y="1043.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (30 samples, 0.14%)</title><rect x="1055.4" y="1027.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 0.14%)</title><rect x="1055.4" y="1011.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 0.14%)</title><rect x="1055.4" y="995.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.4" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.02%)</title><rect x="1055.4" y="979.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1058.4" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.12%)</title><rect x="1055.7" y="979.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1058.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.10%)</title><rect x="1055.9" y="963.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1058.9" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.10%)</title><rect x="1055.9" y="947.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1058.9" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.09%)</title><rect x="1056.0" y="931.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1059.0" y="942.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.09%)</title><rect x="1056.1" y="915.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1059.1" y="926.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.09%)</title><rect x="1056.1" y="899.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1059.1" y="910.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.09%)</title><rect x="1056.1" y="883.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.1" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.09%)</title><rect x="1056.1" y="867.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1059.1" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.09%)</title><rect x="1056.1" y="851.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1059.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$394/1798067653.run (273 samples, 1.28%)</title><rect x="1057.4" y="1091.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (273 samples, 1.28%)</title><rect x="1057.4" y="1075.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (271 samples, 1.27%)</title><rect x="1057.5" y="1059.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (263 samples, 1.23%)</title><rect x="1057.9" y="1043.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (263 samples, 1.23%)</title><rect x="1057.9" y="1027.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (263 samples, 1.23%)</title><rect x="1057.9" y="1011.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (262 samples, 1.23%)</title><rect x="1057.9" y="995.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (262 samples, 1.23%)</title><rect x="1057.9" y="979.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (262 samples, 1.23%)</title><rect x="1057.9" y="963.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1060.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (262 samples, 1.23%)</title><rect x="1057.9" y="947.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (261 samples, 1.22%)</title><rect x="1057.9" y="931.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (34 samples, 0.16%)</title><rect x="1058.0" y="915.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (29 samples, 0.14%)</title><rect x="1058.0" y="899.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.06%)</title><rect x="1058.0" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.06%)</title><rect x="1058.0" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.04%)</title><rect x="1058.2" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.03%)</title><rect x="1058.3" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.03%)</title><rect x="1058.4" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1061.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (6 samples, 0.03%)</title><rect x="1058.4" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.08%)</title><rect x="1058.7" y="883.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (16 samples, 0.07%)</title><rect x="1058.7" y="867.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.07%)</title><rect x="1058.7" y="851.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1061.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.03%)</title><rect x="1058.7" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.04%)</title><rect x="1059.0" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.04%)</title><rect x="1059.0" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$370/1725152409.apply (7 samples, 0.03%)</title><rect x="1059.1" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.03%)</title><rect x="1059.1" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.03%)</title><rect x="1059.1" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/1264514825.apply (5 samples, 0.02%)</title><rect x="1059.3" y="755.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (5 samples, 0.02%)</title><rect x="1059.3" y="739.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (223 samples, 1.04%)</title><rect x="1060.0" y="915.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (223 samples, 1.04%)</title><rect x="1060.0" y="899.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (222 samples, 1.04%)</title><rect x="1060.1" y="883.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (222 samples, 1.04%)</title><rect x="1060.1" y="867.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1063.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (218 samples, 1.02%)</title><rect x="1060.3" y="851.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.3" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (215 samples, 1.01%)</title><rect x="1060.3" y="835.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (215 samples, 1.01%)</title><rect x="1060.3" y="819.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (210 samples, 0.98%)</title><rect x="1060.6" y="803.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (210 samples, 0.98%)</title><rect x="1060.6" y="787.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1063.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (206 samples, 0.96%)</title><rect x="1060.7" y="771.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (206 samples, 0.96%)</title><rect x="1060.7" y="755.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1063.7" y="766.0"></text>
</g>
<g>
<title>writev (204 samples, 0.96%)</title><rect x="1060.8" y="739.0" width="11.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1063.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (193 samples, 0.90%)</title><rect x="1061.4" y="723.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (193 samples, 0.90%)</title><rect x="1061.4" y="707.0" width="10.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1064.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_writev (189 samples, 0.89%)</title><rect x="1061.6" y="691.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1064.6" y="702.0"></text>
</g>
<g>
<title>do_writev (189 samples, 0.89%)</title><rect x="1061.6" y="675.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1064.6" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.02%)</title><rect x="1061.6" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1064.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.02%)</title><rect x="1061.6" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1064.6" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.02%)</title><rect x="1061.6" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1064.6" y="638.0"></text>
</g>
<g>
<title>vfs_writev (182 samples, 0.85%)</title><rect x="1062.0" y="659.0" width="10.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1065.0" y="670.0"></text>
</g>
<g>
<title>do_iter_write (179 samples, 0.84%)</title><rect x="1062.0" y="643.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1065.0" y="654.0"></text>
</g>
<g>
<title>do_iter_readv_writev (173 samples, 0.81%)</title><rect x="1062.3" y="627.0" width="9.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1065.3" y="638.0"></text>
</g>
<g>
<title>sock_write_iter (173 samples, 0.81%)</title><rect x="1062.3" y="611.0" width="9.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1065.3" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (169 samples, 0.79%)</title><rect x="1062.5" y="595.0" width="9.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1065.5" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (167 samples, 0.78%)</title><rect x="1062.6" y="579.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1065.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (167 samples, 0.78%)</title><rect x="1062.6" y="563.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1065.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (166 samples, 0.78%)</title><rect x="1062.6" y="547.0" width="9.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1065.6" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.05%)</title><rect x="1063.0" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1066.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.04%)</title><rect x="1063.1" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1066.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (145 samples, 0.68%)</title><rect x="1063.7" y="531.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.7" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (145 samples, 0.68%)</title><rect x="1063.7" y="515.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.7" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (144 samples, 0.67%)</title><rect x="1063.8" y="499.0" width="7.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1066.8" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (132 samples, 0.62%)</title><rect x="1064.0" y="483.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1067.0" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (125 samples, 0.59%)</title><rect x="1064.2" y="467.0" width="6.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1067.2" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (125 samples, 0.59%)</title><rect x="1064.2" y="451.0" width="6.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1067.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (121 samples, 0.57%)</title><rect x="1064.3" y="435.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.3" y="446.0"></text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.09%)</title><rect x="1064.3" y="419.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.3" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.09%)</title><rect x="1064.3" y="403.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1067.3" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (17 samples, 0.08%)</title><rect x="1064.4" y="387.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1067.4" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (15 samples, 0.07%)</title><rect x="1064.5" y="371.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.5" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.03%)</title><rect x="1064.5" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.5" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (6 samples, 0.03%)</title><rect x="1064.9" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1067.9" y="366.0"></text>
</g>
<g>
<title>ip_output (102 samples, 0.48%)</title><rect x="1065.4" y="419.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1068.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (95 samples, 0.44%)</title><rect x="1065.5" y="403.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1068.5" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (94 samples, 0.44%)</title><rect x="1065.5" y="387.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.5" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (94 samples, 0.44%)</title><rect x="1065.5" y="371.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1068.5" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (83 samples, 0.39%)</title><rect x="1065.7" y="355.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1068.7" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (83 samples, 0.39%)</title><rect x="1065.7" y="339.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.7" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (83 samples, 0.39%)</title><rect x="1065.7" y="323.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1068.7" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 0.39%)</title><rect x="1065.7" y="307.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1068.7" y="318.0"></text>
</g>
<g>
<title>net_rx_action (81 samples, 0.38%)</title><rect x="1065.8" y="291.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.8" y="302.0"></text>
</g>
<g>
<title>process_backlog (81 samples, 0.38%)</title><rect x="1065.8" y="275.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1068.8" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (80 samples, 0.37%)</title><rect x="1065.8" y="259.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.8" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (79 samples, 0.37%)</title><rect x="1065.8" y="243.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1068.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv (78 samples, 0.37%)</title><rect x="1065.9" y="227.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1068.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (73 samples, 0.34%)</title><rect x="1066.1" y="211.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.1" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (72 samples, 0.34%)</title><rect x="1066.1" y="195.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1069.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (70 samples, 0.33%)</title><rect x="1066.1" y="179.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.1" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (70 samples, 0.33%)</title><rect x="1066.1" y="163.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1069.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (69 samples, 0.32%)</title><rect x="1066.2" y="147.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1069.2" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.02%)</title><rect x="1066.3" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1069.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (59 samples, 0.28%)</title><rect x="1066.7" y="131.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (58 samples, 0.27%)</title><rect x="1066.8" y="115.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1069.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (52 samples, 0.24%)</title><rect x="1066.9" y="99.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1069.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (52 samples, 0.24%)</title><rect x="1066.9" y="83.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1069.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (50 samples, 0.23%)</title><rect x="1067.0" y="67.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1070.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (50 samples, 0.23%)</title><rect x="1067.0" y="51.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1070.0" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 0.23%)</title><rect x="1067.0" y="35.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1070.0" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.04%)</title><rect x="1070.3" y="355.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1073.3" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.03%)</title><rect x="1070.3" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1073.3" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.03%)</title><rect x="1071.4" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1074.4" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.03%)</title><rect x="1071.4" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1074.4" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.03%)</title><rect x="1071.4" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1074.4" y="462.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.03%)</title><rect x="1071.4" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.4" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="1071.4" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1074.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (532 samples, 2.49%)</title><rect x="1072.5" y="1091.0" width="29.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.5" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (531 samples, 2.49%)</title><rect x="1072.6" y="1075.0" width="29.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.6" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (206 samples, 0.96%)</title><rect x="1072.7" y="1059.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (204 samples, 0.96%)</title><rect x="1072.9" y="1043.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (202 samples, 0.95%)</title><rect x="1073.0" y="1027.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (27 samples, 0.13%)</title><rect x="1073.1" y="1011.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (25 samples, 0.12%)</title><rect x="1073.1" y="995.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (25 samples, 0.12%)</title><rect x="1073.1" y="979.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (25 samples, 0.12%)</title><rect x="1073.1" y="963.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (24 samples, 0.11%)</title><rect x="1073.2" y="947.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (24 samples, 0.11%)</title><rect x="1073.2" y="931.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (24 samples, 0.11%)</title><rect x="1073.2" y="915.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (24 samples, 0.11%)</title><rect x="1073.2" y="899.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.11%)</title><rect x="1073.2" y="883.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (22 samples, 0.10%)</title><rect x="1073.3" y="867.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (22 samples, 0.10%)</title><rect x="1073.3" y="851.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.3" y="862.0"></text>
</g>
<g>
<title>__libc_write (22 samples, 0.10%)</title><rect x="1073.3" y="835.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1076.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.08%)</title><rect x="1073.5" y="819.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1076.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.08%)</title><rect x="1073.5" y="803.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1076.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_write (17 samples, 0.08%)</title><rect x="1073.6" y="787.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1076.6" y="798.0"></text>
</g>
<g>
<title>ksys_write (17 samples, 0.08%)</title><rect x="1073.6" y="771.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1076.6" y="782.0"></text>
</g>
<g>
<title>vfs_write (16 samples, 0.07%)</title><rect x="1073.6" y="755.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1076.6" y="766.0"></text>
</g>
<g>
<title>__vfs_write (15 samples, 0.07%)</title><rect x="1073.6" y="739.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1076.6" y="750.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.07%)</title><rect x="1073.6" y="723.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1076.6" y="734.0"></text>
</g>
<g>
<title>pipe_write (14 samples, 0.07%)</title><rect x="1073.7" y="707.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1076.7" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 0.05%)</title><rect x="1073.7" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1076.7" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.05%)</title><rect x="1073.7" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1076.7" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.05%)</title><rect x="1073.7" y="659.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1076.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (171 samples, 0.80%)</title><rect x="1074.7" y="1011.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1077.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (168 samples, 0.79%)</title><rect x="1074.7" y="995.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (168 samples, 0.79%)</title><rect x="1074.7" y="979.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (168 samples, 0.79%)</title><rect x="1074.7" y="963.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (72 samples, 0.34%)</title><rect x="1074.7" y="947.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1077.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (72 samples, 0.34%)</title><rect x="1074.7" y="931.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (71 samples, 0.33%)</title><rect x="1074.8" y="915.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (68 samples, 0.32%)</title><rect x="1075.0" y="899.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1078.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 0.32%)</title><rect x="1075.0" y="883.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (66 samples, 0.31%)</title><rect x="1075.1" y="867.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1078.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (65 samples, 0.30%)</title><rect x="1075.1" y="851.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (58 samples, 0.27%)</title><rect x="1075.2" y="835.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1078.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (58 samples, 0.27%)</title><rect x="1075.2" y="819.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1078.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (52 samples, 0.24%)</title><rect x="1075.2" y="803.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1182132911.apply (44 samples, 0.21%)</title><rect x="1075.3" y="787.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1078.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (44 samples, 0.21%)</title><rect x="1075.3" y="771.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1078.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (38 samples, 0.18%)</title><rect x="1075.6" y="755.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (36 samples, 0.17%)</title><rect x="1075.7" y="739.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (33 samples, 0.15%)</title><rect x="1075.9" y="723.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.9" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (11 samples, 0.05%)</title><rect x="1075.9" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1078.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (9 samples, 0.04%)</title><rect x="1076.0" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.04%)</title><rect x="1076.0" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.03%)</title><rect x="1076.1" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.03%)</title><rect x="1076.2" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.09%)</title><rect x="1076.6" y="707.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$440/1852712216.run (18 samples, 0.08%)</title><rect x="1076.7" y="691.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (18 samples, 0.08%)</title><rect x="1076.7" y="675.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (13 samples, 0.06%)</title><rect x="1076.9" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (13 samples, 0.06%)</title><rect x="1076.9" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.9" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (10 samples, 0.05%)</title><rect x="1077.1" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.1" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (6 samples, 0.03%)</title><rect x="1077.3" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$371/526674589.apply (6 samples, 0.03%)</title><rect x="1077.7" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (6 samples, 0.03%)</title><rect x="1077.7" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1080.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (6 samples, 0.03%)</title><rect x="1077.7" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$430/1304203282.apply (6 samples, 0.03%)</title><rect x="1078.4" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.02%)</title><rect x="1078.4" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (94 samples, 0.44%)</title><rect x="1078.7" y="947.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (21 samples, 0.10%)</title><rect x="1079.0" y="931.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.03%)</title><rect x="1079.4" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.4" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.03%)</title><rect x="1079.4" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.4" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="1079.8" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (5 samples, 0.02%)</title><rect x="1080.1" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (6 samples, 0.03%)</title><rect x="1080.4" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (25 samples, 0.12%)</title><rect x="1080.8" y="931.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (25 samples, 0.12%)</title><rect x="1080.8" y="915.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (25 samples, 0.12%)</title><rect x="1080.8" y="899.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.8" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (5 samples, 0.02%)</title><rect x="1080.8" y="883.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.8" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (5 samples, 0.02%)</title><rect x="1080.8" y="867.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (19 samples, 0.09%)</title><rect x="1081.0" y="883.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1084.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$142/1418407794.accept (19 samples, 0.09%)</title><rect x="1081.0" y="867.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.09%)</title><rect x="1081.0" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.0" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.02%)</title><rect x="1081.1" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1084.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.03%)</title><rect x="1081.4" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$149/1761374923.accept (5 samples, 0.02%)</title><rect x="1081.5" y="819.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.5" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.02%)</title><rect x="1081.5" y="803.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.02%)</title><rect x="1081.8" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (32 samples, 0.15%)</title><rect x="1082.1" y="931.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1085.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (20 samples, 0.09%)</title><rect x="1082.8" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="1082.8" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="1082.8" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.03%)</title><rect x="1082.8" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (5 samples, 0.02%)</title><rect x="1083.4" y="899.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.02%)</title><rect x="1083.4" y="883.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (322 samples, 1.51%)</title><rect x="1084.1" y="1059.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (321 samples, 1.50%)</title><rect x="1084.2" y="1043.0" width="17.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (320 samples, 1.50%)</title><rect x="1084.2" y="1027.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$291/496558176.run (320 samples, 1.50%)</title><rect x="1084.2" y="1011.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (320 samples, 1.50%)</title><rect x="1084.2" y="995.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (312 samples, 1.46%)</title><rect x="1084.6" y="979.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (312 samples, 1.46%)</title><rect x="1084.6" y="963.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (311 samples, 1.46%)</title><rect x="1084.7" y="947.0" width="17.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (311 samples, 1.46%)</title><rect x="1084.7" y="931.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1087.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (311 samples, 1.46%)</title><rect x="1084.7" y="915.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (311 samples, 1.46%)</title><rect x="1084.7" y="899.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/358927442.run (205 samples, 0.96%)</title><rect x="1084.8" y="883.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (205 samples, 0.96%)</title><rect x="1084.8" y="867.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (205 samples, 0.96%)</title><rect x="1084.8" y="851.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.8" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9 samples, 0.04%)</title><rect x="1084.9" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (195 samples, 0.91%)</title><rect x="1085.4" y="835.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.4" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.02%)</title><rect x="1085.4" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.4" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.02%)</title><rect x="1085.4" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.02%)</title><rect x="1085.4" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (190 samples, 0.89%)</title><rect x="1085.7" y="819.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1088.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (136 samples, 0.64%)</title><rect x="1085.9" y="803.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1088.9" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (56 samples, 0.26%)</title><rect x="1087.3" y="787.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.3" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (56 samples, 0.26%)</title><rect x="1087.3" y="771.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.3" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.plus (56 samples, 0.26%)</title><rect x="1087.3" y="755.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.3" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (12 samples, 0.06%)</title><rect x="1089.8" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1092.8" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (12 samples, 0.06%)</title><rect x="1089.8" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.8" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (6 samples, 0.03%)</title><rect x="1090.5" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.5" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (6 samples, 0.03%)</title><rect x="1090.5" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.5" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (5 samples, 0.02%)</title><rect x="1090.9" y="787.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.9" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (23 samples, 0.11%)</title><rect x="1091.4" y="787.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (15 samples, 0.07%)</title><rect x="1092.6" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (46 samples, 0.22%)</title><rect x="1093.6" y="803.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (46 samples, 0.22%)</title><rect x="1093.6" y="787.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (9 samples, 0.04%)</title><rect x="1093.6" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.04%)</title><rect x="1093.6" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.04%)</title><rect x="1093.6" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (37 samples, 0.17%)</title><rect x="1094.1" y="771.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (37 samples, 0.17%)</title><rect x="1094.1" y="755.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (31 samples, 0.15%)</title><rect x="1094.1" y="739.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (30 samples, 0.14%)</title><rect x="1094.1" y="723.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (30 samples, 0.14%)</title><rect x="1094.1" y="707.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.11%)</title><rect x="1094.5" y="691.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (23 samples, 0.11%)</title><rect x="1094.5" y="675.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.5" y="686.0"></text>
</g>
<g>
<title>__libc_write (22 samples, 0.10%)</title><rect x="1094.5" y="659.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1097.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.09%)</title><rect x="1094.7" y="643.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1097.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.09%)</title><rect x="1094.7" y="627.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1097.7" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (18 samples, 0.08%)</title><rect x="1094.7" y="611.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1097.7" y="622.0"></text>
</g>
<g>
<title>ksys_write (18 samples, 0.08%)</title><rect x="1094.7" y="595.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1097.7" y="606.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 0.07%)</title><rect x="1095.0" y="579.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1098.0" y="590.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.06%)</title><rect x="1095.0" y="563.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1098.0" y="574.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.06%)</title><rect x="1095.0" y="547.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.0" y="558.0"></text>
</g>
<g>
<title>pipe_write (13 samples, 0.06%)</title><rect x="1095.0" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1098.0" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.06%)</title><rect x="1095.0" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1098.0" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.06%)</title><rect x="1095.0" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1098.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.06%)</title><rect x="1095.0" y="483.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (6 samples, 0.03%)</title><rect x="1095.8" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.02%)</title><rect x="1095.9" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$443/527689736.accept (7 samples, 0.03%)</title><rect x="1096.2" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (7 samples, 0.03%)</title><rect x="1096.2" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (7 samples, 0.03%)</title><rect x="1096.2" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (88 samples, 0.41%)</title><rect x="1096.6" y="883.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (88 samples, 0.41%)</title><rect x="1096.6" y="867.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (88 samples, 0.41%)</title><rect x="1096.6" y="851.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (85 samples, 0.40%)</title><rect x="1096.6" y="835.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (84 samples, 0.39%)</title><rect x="1096.7" y="819.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1099.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (84 samples, 0.39%)</title><rect x="1096.7" y="803.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (83 samples, 0.39%)</title><rect x="1096.7" y="787.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$458/9249739.accept (81 samples, 0.38%)</title><rect x="1096.8" y="771.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (81 samples, 0.38%)</title><rect x="1096.8" y="755.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (81 samples, 0.38%)</title><rect x="1096.8" y="739.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (80 samples, 0.37%)</title><rect x="1096.9" y="723.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (76 samples, 0.36%)</title><rect x="1097.1" y="707.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (76 samples, 0.36%)</title><rect x="1097.1" y="691.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1100.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (73 samples, 0.34%)</title><rect x="1097.2" y="675.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (67 samples, 0.31%)</title><rect x="1097.2" y="659.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (67 samples, 0.31%)</title><rect x="1097.2" y="643.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (64 samples, 0.30%)</title><rect x="1097.4" y="627.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (59 samples, 0.28%)</title><rect x="1097.7" y="611.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.28%)</title><rect x="1097.7" y="595.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 0.28%)</title><rect x="1097.7" y="579.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.7" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="1097.8" y="563.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1100.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (50 samples, 0.23%)</title><rect x="1098.1" y="563.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1101.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.20%)</title><rect x="1098.5" y="547.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1101.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.20%)</title><rect x="1098.5" y="531.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 0.19%)</title><rect x="1098.7" y="515.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1101.7" y="526.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.17%)</title><rect x="1098.8" y="499.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1101.8" y="510.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 0.17%)</title><rect x="1098.8" y="483.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1101.8" y="494.0"></text>
</g>
<g>
<title>wake_up_q (33 samples, 0.15%)</title><rect x="1098.9" y="467.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1101.9" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (33 samples, 0.15%)</title><rect x="1098.9" y="451.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1101.9" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (33 samples, 0.15%)</title><rect x="1098.9" y="435.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1101.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.03%)</title><rect x="1100.9" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1103.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (5 samples, 0.02%)</title><rect x="1101.4" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (5 samples, 0.02%)</title><rect x="1101.4" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (5 samples, 0.02%)</title><rect x="1101.4" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (5 samples, 0.02%)</title><rect x="1101.4" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (5 samples, 0.02%)</title><rect x="1101.4" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/1205557708.run (24 samples, 0.11%)</title><rect x="1101.9" y="1091.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (24 samples, 0.11%)</title><rect x="1101.9" y="1075.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (24 samples, 0.11%)</title><rect x="1101.9" y="1059.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1102.1" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getting (15 samples, 0.07%)</title><rect x="1102.4" y="1043.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (6 samples, 0.03%)</title><rect x="1102.6" y="1027.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1105.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (5 samples, 0.02%)</title><rect x="1102.6" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (5 samples, 0.02%)</title><rect x="1102.6" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1105.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doGet (6 samples, 0.03%)</title><rect x="1102.9" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (223 samples, 1.04%)</title><rect x="1103.2" y="1139.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (223 samples, 1.04%)</title><rect x="1103.2" y="1123.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (117 samples, 0.55%)</title><rect x="1103.4" y="1107.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (101 samples, 0.47%)</title><rect x="1104.1" y="1091.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (100 samples, 0.47%)</title><rect x="1104.2" y="1075.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (99 samples, 0.46%)</title><rect x="1104.2" y="1059.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (99 samples, 0.46%)</title><rect x="1104.2" y="1043.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (91 samples, 0.43%)</title><rect x="1104.2" y="1027.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (91 samples, 0.43%)</title><rect x="1104.2" y="1011.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (84 samples, 0.39%)</title><rect x="1104.6" y="995.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (84 samples, 0.39%)</title><rect x="1104.6" y="979.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (21 samples, 0.10%)</title><rect x="1104.7" y="963.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1107.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (20 samples, 0.09%)</title><rect x="1104.7" y="947.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (20 samples, 0.09%)</title><rect x="1104.7" y="931.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (18 samples, 0.08%)</title><rect x="1104.8" y="915.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (17 samples, 0.08%)</title><rect x="1104.8" y="899.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (9 samples, 0.04%)</title><rect x="1104.9" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.02%)</title><rect x="1105.5" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1108.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.02%)</title><rect x="1105.5" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.02%)</title><rect x="1105.5" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (60 samples, 0.28%)</title><rect x="1105.8" y="963.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (55 samples, 0.26%)</title><rect x="1105.8" y="947.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (55 samples, 0.26%)</title><rect x="1105.8" y="931.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (54 samples, 0.25%)</title><rect x="1105.9" y="915.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (54 samples, 0.25%)</title><rect x="1105.9" y="899.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 0.25%)</title><rect x="1105.9" y="883.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (54 samples, 0.25%)</title><rect x="1105.9" y="867.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.9" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="1105.9" y="851.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1108.9" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (48 samples, 0.22%)</title><rect x="1106.2" y="851.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1109.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.18%)</title><rect x="1106.8" y="835.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1109.8" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.17%)</title><rect x="1106.9" y="819.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.15%)</title><rect x="1107.1" y="803.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1110.1" y="814.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.15%)</title><rect x="1107.1" y="787.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1110.1" y="798.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.15%)</title><rect x="1107.1" y="771.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1110.1" y="782.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.14%)</title><rect x="1107.2" y="755.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1110.2" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.14%)</title><rect x="1107.2" y="739.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1110.2" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 0.14%)</title><rect x="1107.2" y="723.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1110.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.02%)</title><rect x="1108.9" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.04%)</title><rect x="1109.3" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (65 samples, 0.30%)</title><rect x="1109.9" y="1107.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1112.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (63 samples, 0.30%)</title><rect x="1110.0" y="1091.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.0" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.10%)</title><rect x="1110.0" y="1075.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1113.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (10 samples, 0.05%)</title><rect x="1110.6" y="1059.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1113.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.19%)</title><rect x="1111.2" y="1075.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1114.2" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (35 samples, 0.16%)</title><rect x="1111.3" y="1059.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1114.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.07%)</title><rect x="1112.4" y="1043.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1115.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.07%)</title><rect x="1112.4" y="1027.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.06%)</title><rect x="1112.5" y="1011.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.05%)</title><rect x="1112.6" y="995.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1115.6" y="1006.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.05%)</title><rect x="1112.6" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1115.6" y="990.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.02%)</title><rect x="1112.9" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (38 samples, 0.18%)</title><rect x="1113.5" y="1107.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1116.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.18%)</title><rect x="1113.5" y="1091.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.5" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.04%)</title><rect x="1113.5" y="1075.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1116.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.14%)</title><rect x="1114.0" y="1075.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1117.0" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (29 samples, 0.14%)</title><rect x="1114.0" y="1059.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1117.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="1114.8" y="1043.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1117.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="1114.9" y="1027.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.9" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.05%)</title><rect x="1115.0" y="1011.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1118.0" y="1022.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.05%)</title><rect x="1115.0" y="995.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.0" y="1006.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.04%)</title><rect x="1115.1" y="979.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1118.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (540 samples, 2.53%)</title><rect x="1115.6" y="1139.0" width="29.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.6" y="1150.0">jd..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (262 samples, 1.23%)</title><rect x="1116.4" y="1123.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$380/874005815.accept (260 samples, 1.22%)</title><rect x="1116.4" y="1107.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (260 samples, 1.22%)</title><rect x="1116.4" y="1091.0" width="14.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (259 samples, 1.21%)</title><rect x="1116.5" y="1075.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (259 samples, 1.21%)</title><rect x="1116.5" y="1059.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (259 samples, 1.21%)</title><rect x="1116.5" y="1043.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.03%)</title><rect x="1116.5" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.03%)</title><rect x="1116.5" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (252 samples, 1.18%)</title><rect x="1116.8" y="1027.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (252 samples, 1.18%)</title><rect x="1116.8" y="1011.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (252 samples, 1.18%)</title><rect x="1116.8" y="995.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (252 samples, 1.18%)</title><rect x="1116.8" y="979.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (252 samples, 1.18%)</title><rect x="1116.8" y="963.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (250 samples, 1.17%)</title><rect x="1116.9" y="947.0" width="13.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (249 samples, 1.17%)</title><rect x="1116.9" y="931.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (49 samples, 0.23%)</title><rect x="1117.0" y="915.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (49 samples, 0.23%)</title><rect x="1117.0" y="899.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (45 samples, 0.21%)</title><rect x="1117.2" y="883.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 0.21%)</title><rect x="1117.2" y="867.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 0.21%)</title><rect x="1117.2" y="851.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 0.21%)</title><rect x="1117.2" y="835.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (45 samples, 0.21%)</title><rect x="1117.2" y="819.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (45 samples, 0.21%)</title><rect x="1117.2" y="803.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (38 samples, 0.18%)</title><rect x="1117.4" y="787.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (38 samples, 0.18%)</title><rect x="1117.4" y="771.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (38 samples, 0.18%)</title><rect x="1117.4" y="755.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 0.18%)</title><rect x="1117.4" y="739.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.18%)</title><rect x="1117.4" y="723.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 0.18%)</title><rect x="1117.4" y="707.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.4" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="1117.4" y="691.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1120.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (30 samples, 0.14%)</title><rect x="1117.8" y="691.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1120.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.12%)</title><rect x="1118.1" y="675.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1121.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.12%)</title><rect x="1118.1" y="659.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1121.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.11%)</title><rect x="1118.1" y="643.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1121.1" y="654.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.10%)</title><rect x="1118.2" y="627.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1121.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.09%)</title><rect x="1118.2" y="611.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1121.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.07%)</title><rect x="1118.4" y="595.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1121.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.07%)</title><rect x="1118.4" y="579.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1121.4" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.07%)</title><rect x="1118.4" y="563.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1121.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.03%)</title><rect x="1119.9" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (182 samples, 0.85%)</title><rect x="1120.3" y="915.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (177 samples, 0.83%)</title><rect x="1120.5" y="899.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (177 samples, 0.83%)</title><rect x="1120.5" y="883.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (177 samples, 0.83%)</title><rect x="1120.5" y="867.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (166 samples, 0.78%)</title><rect x="1120.9" y="851.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (166 samples, 0.78%)</title><rect x="1120.9" y="835.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (166 samples, 0.78%)</title><rect x="1120.9" y="819.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.9" y="830.0"></text>
</g>
<g>
<title>__read (162 samples, 0.76%)</title><rect x="1121.0" y="803.0" width="9.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1124.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (149 samples, 0.70%)</title><rect x="1121.8" y="787.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1124.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (148 samples, 0.69%)</title><rect x="1121.8" y="771.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1124.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_read (143 samples, 0.67%)</title><rect x="1122.1" y="755.0" width="7.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.1" y="766.0"></text>
</g>
<g>
<title>ksys_read (143 samples, 0.67%)</title><rect x="1122.1" y="739.0" width="7.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1125.1" y="750.0"></text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.02%)</title><rect x="1122.1" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.1" y="734.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.02%)</title><rect x="1122.1" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.1" y="718.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.02%)</title><rect x="1122.1" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.1" y="702.0"></text>
</g>
<g>
<title>vfs_read (136 samples, 0.64%)</title><rect x="1122.5" y="723.0" width="7.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1125.5" y="734.0"></text>
</g>
<g>
<title>__vfs_read (125 samples, 0.59%)</title><rect x="1122.6" y="707.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.6" y="718.0"></text>
</g>
<g>
<title>new_sync_read (124 samples, 0.58%)</title><rect x="1122.6" y="691.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.6" y="702.0"></text>
</g>
<g>
<title>sock_read_iter (124 samples, 0.58%)</title><rect x="1122.6" y="675.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1125.6" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (124 samples, 0.58%)</title><rect x="1122.6" y="659.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1125.6" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (119 samples, 0.56%)</title><rect x="1122.8" y="643.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.8" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (119 samples, 0.56%)</title><rect x="1122.8" y="627.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1125.8" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (101 samples, 0.47%)</title><rect x="1123.7" y="611.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.7" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (100 samples, 0.47%)</title><rect x="1123.7" y="595.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1126.7" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (98 samples, 0.46%)</title><rect x="1123.8" y="579.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1126.8" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.02%)</title><rect x="1123.8" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1126.8" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (90 samples, 0.42%)</title><rect x="1124.1" y="563.0" width="5.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.1" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (86 samples, 0.40%)</title><rect x="1124.4" y="547.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1127.4" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (86 samples, 0.40%)</title><rect x="1124.4" y="531.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1127.4" y="542.0"></text>
</g>
<g>
<title>ip_local_out (85 samples, 0.40%)</title><rect x="1124.4" y="515.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1127.4" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (25 samples, 0.12%)</title><rect x="1124.5" y="499.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1127.5" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.09%)</title><rect x="1124.6" y="483.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1127.6" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (15 samples, 0.07%)</title><rect x="1124.8" y="467.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1127.8" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 0.06%)</title><rect x="1124.8" y="451.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.8" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (7 samples, 0.03%)</title><rect x="1125.0" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1128.0" y="446.0"></text>
</g>
<g>
<title>ip_output (57 samples, 0.27%)</title><rect x="1125.8" y="499.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.8" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (54 samples, 0.25%)</title><rect x="1125.8" y="483.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1128.8" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (53 samples, 0.25%)</title><rect x="1125.8" y="467.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1128.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (53 samples, 0.25%)</title><rect x="1125.8" y="451.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1128.8" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 0.22%)</title><rect x="1126.0" y="435.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1129.0" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 0.22%)</title><rect x="1126.0" y="419.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1129.0" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (45 samples, 0.21%)</title><rect x="1126.0" y="403.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1129.0" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (44 samples, 0.21%)</title><rect x="1126.0" y="387.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.0" y="398.0"></text>
</g>
<g>
<title>net_rx_action (44 samples, 0.21%)</title><rect x="1126.0" y="371.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1129.0" y="382.0"></text>
</g>
<g>
<title>process_backlog (43 samples, 0.20%)</title><rect x="1126.1" y="355.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.1" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (43 samples, 0.20%)</title><rect x="1126.1" y="339.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1129.1" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (42 samples, 0.20%)</title><rect x="1126.1" y="323.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1129.1" y="334.0"></text>
</g>
<g>
<title>ip_rcv (42 samples, 0.20%)</title><rect x="1126.1" y="307.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1129.1" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (40 samples, 0.19%)</title><rect x="1126.1" y="291.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1129.1" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (39 samples, 0.18%)</title><rect x="1126.1" y="275.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.1" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (36 samples, 0.17%)</title><rect x="1126.1" y="259.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1129.1" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (36 samples, 0.17%)</title><rect x="1126.1" y="243.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 0.16%)</title><rect x="1126.2" y="227.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1129.2" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.02%)</title><rect x="1126.7" y="211.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1129.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.09%)</title><rect x="1127.0" y="211.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1130.0" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 0.09%)</title><rect x="1127.0" y="195.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1130.0" y="206.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.07%)</title><rect x="1127.2" y="179.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1130.2" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.02%)</title><rect x="1127.6" y="163.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1130.6" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.02%)</title><rect x="1128.5" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1131.5" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.02%)</title><rect x="1128.5" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1131.5" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.04%)</title><rect x="1129.5" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.5" y="718.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.04%)</title><rect x="1129.5" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1132.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.02%)</title><rect x="1130.0" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (13 samples, 0.06%)</title><rect x="1131.0" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.06%)</title><rect x="1131.0" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.05%)</title><rect x="1131.2" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.05%)</title><rect x="1131.2" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.05%)</title><rect x="1131.2" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.04%)</title><rect x="1131.2" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1134.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.03%)</title><rect x="1131.2" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (79 samples, 0.37%)</title><rect x="1131.8" y="1123.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$271/848948697.run (42 samples, 0.20%)</title><rect x="1131.8" y="1107.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (42 samples, 0.20%)</title><rect x="1131.8" y="1091.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.20%)</title><rect x="1131.8" y="1075.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.20%)</title><rect x="1131.8" y="1059.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (40 samples, 0.19%)</title><rect x="1131.9" y="1043.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.19%)</title><rect x="1131.9" y="1027.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$262/1016868830.run (37 samples, 0.17%)</title><rect x="1132.0" y="1011.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (36 samples, 0.17%)</title><rect x="1132.0" y="995.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1135.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (25 samples, 0.12%)</title><rect x="1132.0" y="979.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (20 samples, 0.09%)</title><rect x="1132.3" y="963.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (15 samples, 0.07%)</title><rect x="1132.5" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.07%)</title><rect x="1132.5" y="931.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.07%)</title><rect x="1132.5" y="915.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.07%)</title><rect x="1132.5" y="899.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.07%)</title><rect x="1132.5" y="883.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.07%)</title><rect x="1132.5" y="867.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.07%)</title><rect x="1132.5" y="851.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.07%)</title><rect x="1132.5" y="835.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.07%)</title><rect x="1132.5" y="819.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.07%)</title><rect x="1132.5" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.07%)</title><rect x="1132.5" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.07%)</title><rect x="1132.5" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.06%)</title><rect x="1132.6" y="755.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1135.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="1132.8" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="1132.8" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1135.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.04%)</title><rect x="1132.8" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.8" y="718.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.04%)</title><rect x="1132.8" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1135.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.04%)</title><rect x="1132.8" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1135.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.03%)</title><rect x="1132.9" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.9" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.03%)</title><rect x="1132.9" y="643.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1135.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="1133.0" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (10 samples, 0.05%)</title><rect x="1133.4" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.4" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (10 samples, 0.05%)</title><rect x="1133.4" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.05%)</title><rect x="1133.4" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.05%)</title><rect x="1133.4" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.05%)</title><rect x="1133.4" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (10 samples, 0.05%)</title><rect x="1133.4" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (10 samples, 0.05%)</title><rect x="1133.4" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.4" y="894.0"></text>
</g>
<g>
<title>__read (9 samples, 0.04%)</title><rect x="1133.5" y="867.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1136.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="1133.5" y="851.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="1133.5" y="835.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.5" y="846.0"></text>
</g>
<g>
<title>__x64_sys_read (7 samples, 0.03%)</title><rect x="1133.5" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1136.5" y="830.0"></text>
</g>
<g>
<title>ksys_read (7 samples, 0.03%)</title><rect x="1133.5" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1136.5" y="814.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.03%)</title><rect x="1133.5" y="787.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.5" y="798.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.02%)</title><rect x="1133.5" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.5" y="782.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.02%)</title><rect x="1133.5" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1136.5" y="766.0"></text>
</g>
<g>
<title>sock_read_iter (5 samples, 0.02%)</title><rect x="1133.5" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1136.5" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.02%)</title><rect x="1133.5" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1136.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/525677631.run (37 samples, 0.17%)</title><rect x="1134.1" y="1107.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (37 samples, 0.17%)</title><rect x="1134.1" y="1091.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (36 samples, 0.17%)</title><rect x="1134.1" y="1075.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.17%)</title><rect x="1134.1" y="1059.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.17%)</title><rect x="1134.1" y="1043.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (29 samples, 0.14%)</title><rect x="1134.2" y="1027.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1137.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (29 samples, 0.14%)</title><rect x="1134.2" y="1011.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.14%)</title><rect x="1134.2" y="995.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.14%)</title><rect x="1134.2" y="979.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.14%)</title><rect x="1134.2" y="963.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.14%)</title><rect x="1134.2" y="947.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.2" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.02%)</title><rect x="1134.2" y="931.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1137.2" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.11%)</title><rect x="1134.5" y="931.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1137.5" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.09%)</title><rect x="1134.7" y="915.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.09%)</title><rect x="1134.7" y="899.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1137.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.09%)</title><rect x="1134.7" y="883.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1137.7" y="894.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.09%)</title><rect x="1134.7" y="867.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1137.7" y="878.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.09%)</title><rect x="1134.7" y="851.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1137.7" y="862.0"></text>
</g>
<g>
<title>wake_up_q (19 samples, 0.09%)</title><rect x="1134.7" y="835.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1137.7" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (19 samples, 0.09%)</title><rect x="1134.7" y="819.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1137.7" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.09%)</title><rect x="1134.7" y="803.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1137.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (27 samples, 0.13%)</title><rect x="1136.1" y="1123.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (21 samples, 0.10%)</title><rect x="1136.5" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.5" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="1136.8" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1139.8" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.02%)</title><rect x="1136.8" y="1075.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.8" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="1136.8" y="1059.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.8" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.02%)</title><rect x="1136.8" y="1043.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (10 samples, 0.05%)</title><rect x="1137.7" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.7" y="1134.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.02%)</title><rect x="1137.7" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.7" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.02%)</title><rect x="1137.7" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1137.7" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.7" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1137.7" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.7" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1137.7" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.7" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (5 samples, 0.02%)</title><rect x="1138.0" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1138.0" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1138.0" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.0" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1138.0" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.0" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1138.0" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (100 samples, 0.47%)</title><rect x="1138.4" y="1123.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.4" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (100 samples, 0.47%)</title><rect x="1138.4" y="1107.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.4" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (97 samples, 0.45%)</title><rect x="1138.6" y="1091.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (58 samples, 0.27%)</title><rect x="1138.6" y="1075.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.6" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (52 samples, 0.24%)</title><rect x="1138.9" y="1059.0" width="2.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1141.9" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.19%)</title><rect x="1139.5" y="1043.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.18%)</title><rect x="1139.6" y="1027.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1142.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (36 samples, 0.17%)</title><rect x="1139.8" y="1011.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1142.8" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (36 samples, 0.17%)</title><rect x="1139.8" y="995.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1142.8" y="1006.0"></text>
</g>
<g>
<title>ep_poll (32 samples, 0.15%)</title><rect x="1139.9" y="979.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1142.9" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.11%)</title><rect x="1139.9" y="963.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.9" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (21 samples, 0.10%)</title><rect x="1140.0" y="947.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1143.0" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (13 samples, 0.06%)</title><rect x="1140.3" y="931.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1143.3" y="942.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.03%)</title><rect x="1140.7" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1143.7" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.03%)</title><rect x="1141.3" y="963.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1144.3" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.03%)</title><rect x="1141.3" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1144.3" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (34 samples, 0.16%)</title><rect x="1141.8" y="1075.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (22 samples, 0.10%)</title><rect x="1142.0" y="1059.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (22 samples, 0.10%)</title><rect x="1142.0" y="1043.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.0" y="1054.0"></text>
</g>
<g>
<title>__read (20 samples, 0.09%)</title><rect x="1142.1" y="1027.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1145.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.05%)</title><rect x="1142.6" y="1011.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1145.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.05%)</title><rect x="1142.6" y="995.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1145.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (10 samples, 0.05%)</title><rect x="1142.7" y="979.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1145.7" y="990.0"></text>
</g>
<g>
<title>ksys_read (10 samples, 0.05%)</title><rect x="1142.7" y="963.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1145.7" y="974.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.05%)</title><rect x="1142.7" y="947.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1145.7" y="958.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.02%)</title><rect x="1142.8" y="931.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1145.8" y="942.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.02%)</title><rect x="1142.8" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1145.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.03%)</title><rect x="1143.3" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (21 samples, 0.10%)</title><rect x="1143.9" y="1123.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (21 samples, 0.10%)</title><rect x="1143.9" y="1107.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.9" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (21 samples, 0.10%)</title><rect x="1143.9" y="1091.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.9" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (16 samples, 0.07%)</title><rect x="1143.9" y="1075.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.9" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 0.07%)</title><rect x="1144.0" y="1059.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1147.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="1144.3" y="1043.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1147.3" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="1144.3" y="1027.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1147.3" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.04%)</title><rect x="1144.3" y="1011.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1147.3" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.04%)</title><rect x="1144.3" y="995.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1147.3" y="1006.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.04%)</title><rect x="1144.3" y="979.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1147.3" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.04%)</title><rect x="1144.4" y="963.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1147.4" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.04%)</title><rect x="1144.4" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1147.4" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.03%)</title><rect x="1144.4" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1147.4" y="942.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.03%)</title><rect x="1144.4" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1147.4" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (351 samples, 1.64%)</title><rect x="1145.5" y="1139.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.03%)</title><rect x="1145.5" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.03%)</title><rect x="1145.5" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (94 samples, 0.44%)</title><rect x="1145.9" y="1123.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (90 samples, 0.42%)</title><rect x="1146.1" y="1107.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.1" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.03%)</title><rect x="1146.8" y="1091.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1149.8" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (71 samples, 0.33%)</title><rect x="1147.1" y="1091.0" width="3.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1150.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.28%)</title><rect x="1147.7" y="1075.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1150.7" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 0.28%)</title><rect x="1147.7" y="1059.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.7" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (52 samples, 0.24%)</title><rect x="1148.2" y="1043.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1151.2" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (52 samples, 0.24%)</title><rect x="1148.2" y="1027.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1151.2" y="1038.0"></text>
</g>
<g>
<title>ep_poll (44 samples, 0.21%)</title><rect x="1148.4" y="1011.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1151.4" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (30 samples, 0.14%)</title><rect x="1148.4" y="995.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1151.4" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.11%)</title><rect x="1148.6" y="979.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.6" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.08%)</title><rect x="1148.9" y="963.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1151.9" y="974.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.05%)</title><rect x="1149.3" y="947.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1152.3" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (13 samples, 0.06%)</title><rect x="1150.1" y="995.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1153.1" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.06%)</title><rect x="1150.2" y="979.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.2" y="990.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.04%)</title><rect x="1150.3" y="963.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1153.3" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.04%)</title><rect x="1150.4" y="947.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1153.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (249 samples, 1.17%)</title><rect x="1151.1" y="1123.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.1" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="1151.3" y="1107.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.3" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.02%)</title><rect x="1151.3" y="1091.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (239 samples, 1.12%)</title><rect x="1151.5" y="1107.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (136 samples, 0.64%)</title><rect x="1151.6" y="1091.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (94 samples, 0.44%)</title><rect x="1151.7" y="1075.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (94 samples, 0.44%)</title><rect x="1151.7" y="1059.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.7" y="1070.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (69 samples, 0.32%)</title><rect x="1151.7" y="1043.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.07%)</title><rect x="1151.7" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (54 samples, 0.25%)</title><rect x="1152.5" y="1027.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.5" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (9 samples, 0.04%)</title><rect x="1152.5" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.04%)</title><rect x="1152.6" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.03%)</title><rect x="1152.6" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1155.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (44 samples, 0.21%)</title><rect x="1153.0" y="1011.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (44 samples, 0.21%)</title><rect x="1153.0" y="995.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.0" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (12 samples, 0.06%)</title><rect x="1153.1" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.02%)</title><rect x="1153.3" y="963.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (25 samples, 0.12%)</title><rect x="1153.8" y="979.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.8" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (25 samples, 0.12%)</title><rect x="1153.8" y="963.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1156.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.add (15 samples, 0.07%)</title><rect x="1154.0" y="947.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1157.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.07%)</title><rect x="1154.0" y="931.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.07%)</title><rect x="1154.0" y="915.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (10 samples, 0.05%)</title><rect x="1154.2" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.2" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.02%)</title><rect x="1154.4" y="883.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (5 samples, 0.02%)</title><rect x="1154.4" y="867.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.4" y="878.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.02%)</title><rect x="1154.9" y="947.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.9" y="958.0"></text>
</g>
<g>
<title>java/util/Set.of (6 samples, 0.03%)</title><rect x="1155.1" y="979.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.1" y="990.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (18 samples, 0.08%)</title><rect x="1155.6" y="1043.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.08%)</title><rect x="1155.6" y="1027.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1158.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (15 samples, 0.07%)</title><rect x="1155.6" y="1011.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.equals (12 samples, 0.06%)</title><rect x="1155.8" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.02%)</title><rect x="1156.6" y="1043.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.07%)</title><rect x="1156.8" y="1075.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.03%)</title><rect x="1157.0" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.02%)</title><rect x="1157.3" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.02%)</title><rect x="1157.3" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.04%)</title><rect x="1157.7" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.03%)</title><rect x="1157.8" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.03%)</title><rect x="1157.8" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.08%)</title><rect x="1158.2" y="1075.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.08%)</title><rect x="1158.2" y="1059.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (102 samples, 0.48%)</title><rect x="1159.1" y="1091.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (102 samples, 0.48%)</title><rect x="1159.1" y="1075.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.1" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.05%)</title><rect x="1159.1" y="1059.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1162.1" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.02%)</title><rect x="1159.3" y="1043.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1162.3" y="1054.0"></text>
</g>
<g>
<title>recv (92 samples, 0.43%)</title><rect x="1159.7" y="1059.0" width="5.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1162.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 0.39%)</title><rect x="1160.1" y="1043.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 0.39%)</title><rect x="1160.1" y="1027.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (82 samples, 0.38%)</title><rect x="1160.2" y="1011.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.2" y="1022.0"></text>
</g>
<g>
<title>__sys_recvfrom (82 samples, 0.38%)</title><rect x="1160.2" y="995.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1163.2" y="1006.0"></text>
</g>
<g>
<title>sock_recvmsg (78 samples, 0.37%)</title><rect x="1160.4" y="979.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.4" y="990.0"></text>
</g>
<g>
<title>inet6_recvmsg (73 samples, 0.34%)</title><rect x="1160.4" y="963.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.4" y="974.0"></text>
</g>
<g>
<title>tcp_recvmsg (71 samples, 0.33%)</title><rect x="1160.5" y="947.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.5" y="958.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.03%)</title><rect x="1160.7" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1163.7" y="942.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.03%)</title><rect x="1160.7" y="915.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.7" y="926.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.03%)</title><rect x="1161.3" y="931.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1164.3" y="942.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.03%)</title><rect x="1161.3" y="915.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1164.3" y="926.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.02%)</title><rect x="1161.4" y="899.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.4" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (50 samples, 0.23%)</title><rect x="1161.7" y="931.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1164.7" y="942.0"></text>
</g>
<g>
<title>tcp_send_ack (47 samples, 0.22%)</title><rect x="1161.8" y="915.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.8" y="926.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (47 samples, 0.22%)</title><rect x="1161.8" y="899.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1164.8" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.02%)</title><rect x="1161.8" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1164.8" y="894.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (41 samples, 0.19%)</title><rect x="1162.1" y="883.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.1" y="894.0"></text>
</g>
<g>
<title>ip_queue_xmit (41 samples, 0.19%)</title><rect x="1162.1" y="867.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1165.1" y="878.0"></text>
</g>
<g>
<title>__ip_queue_xmit (41 samples, 0.19%)</title><rect x="1162.1" y="851.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1165.1" y="862.0"></text>
</g>
<g>
<title>ip_local_out (40 samples, 0.19%)</title><rect x="1162.1" y="835.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1165.1" y="846.0"></text>
</g>
<g>
<title>__ip_local_out (12 samples, 0.06%)</title><rect x="1162.1" y="819.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.1" y="830.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.06%)</title><rect x="1162.1" y="803.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.1" y="814.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (9 samples, 0.04%)</title><rect x="1162.3" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.3" y="798.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (8 samples, 0.04%)</title><rect x="1162.3" y="771.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1165.3" y="782.0"></text>
</g>
<g>
<title>ip_output (28 samples, 0.13%)</title><rect x="1162.8" y="819.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.8" y="830.0"></text>
</g>
<g>
<title>ip_finish_output (25 samples, 0.12%)</title><rect x="1162.8" y="803.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1165.8" y="814.0"></text>
</g>
<g>
<title>__ip_finish_output (25 samples, 0.12%)</title><rect x="1162.8" y="787.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1165.8" y="798.0"></text>
</g>
<g>
<title>ip_finish_output2 (25 samples, 0.12%)</title><rect x="1162.8" y="771.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.8" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 0.08%)</title><rect x="1162.9" y="755.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.9" y="766.0"></text>
</g>
<g>
<title>do_softirq.part.0 (18 samples, 0.08%)</title><rect x="1162.9" y="739.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1165.9" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (18 samples, 0.08%)</title><rect x="1162.9" y="723.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1165.9" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (18 samples, 0.08%)</title><rect x="1162.9" y="707.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.9" y="718.0"></text>
</g>
<g>
<title>net_rx_action (17 samples, 0.08%)</title><rect x="1162.9" y="691.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1165.9" y="702.0"></text>
</g>
<g>
<title>process_backlog (16 samples, 0.07%)</title><rect x="1163.0" y="675.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1166.0" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (16 samples, 0.07%)</title><rect x="1163.0" y="659.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.0" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (16 samples, 0.07%)</title><rect x="1163.0" y="643.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.0" y="654.0"></text>
</g>
<g>
<title>ip_rcv (15 samples, 0.07%)</title><rect x="1163.0" y="627.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1166.0" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (13 samples, 0.06%)</title><rect x="1163.0" y="611.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1166.0" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (13 samples, 0.06%)</title><rect x="1163.0" y="595.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1166.0" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 0.06%)</title><rect x="1163.0" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1166.0" y="590.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 0.06%)</title><rect x="1163.0" y="563.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.0" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 0.06%)</title><rect x="1163.0" y="547.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.0" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 0.04%)</title><rect x="1163.2" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1166.2" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.03%)</title><rect x="1163.4" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1166.4" y="526.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.02%)</title><rect x="1163.9" y="755.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.9" y="766.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.02%)</title><rect x="1163.9" y="739.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1166.9" y="750.0"></text>
</g>
<g>
<title>start_thread (454 samples, 2.13%)</title><rect x="1164.9" y="1139.0" width="25.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1167.9" y="1150.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (454 samples, 2.13%)</title><rect x="1164.9" y="1123.0" width="25.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1167.9" y="1134.0">t..</text>
</g>
<g>
<title>Thread::call_run() (454 samples, 2.13%)</title><rect x="1164.9" y="1107.0" width="25.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.9" y="1118.0">T..</text>
</g>
<g>
<title>GangWorker::loop() (116 samples, 0.54%)</title><rect x="1164.9" y="1091.0" width="6.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.9" y="1102.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (116 samples, 0.54%)</title><rect x="1164.9" y="1075.0" width="6.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.9" y="1086.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (55 samples, 0.26%)</title><rect x="1164.9" y="1059.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.9" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (16 samples, 0.07%)</title><rect x="1165.1" y="1043.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.1" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.03%)</title><rect x="1165.2" y="1027.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1168.2" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.03%)</title><rect x="1165.6" y="1027.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.6" y="1038.0"></text>
</g>
<g>
<title>SpinPause (35 samples, 0.16%)</title><rect x="1166.0" y="1043.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1169.0" y="1054.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (51 samples, 0.24%)</title><rect x="1168.0" y="1059.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.0" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (51 samples, 0.24%)</title><rect x="1168.0" y="1043.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.0" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (51 samples, 0.24%)</title><rect x="1168.0" y="1027.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.0" y="1038.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (51 samples, 0.24%)</title><rect x="1168.0" y="1011.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.0" y="1022.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (49 samples, 0.23%)</title><rect x="1168.1" y="995.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.1" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (26 samples, 0.12%)</title><rect x="1168.1" y="979.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.1" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.05%)</title><rect x="1168.2" y="963.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1171.2" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (13 samples, 0.06%)</title><rect x="1168.8" y="963.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.8" y="974.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (23 samples, 0.11%)</title><rect x="1169.5" y="979.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.5" y="990.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (21 samples, 0.10%)</title><rect x="1169.6" y="963.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.6" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (11 samples, 0.05%)</title><rect x="1170.0" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.0" y="958.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (7 samples, 0.03%)</title><rect x="1170.9" y="1059.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.9" y="1070.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (7 samples, 0.03%)</title><rect x="1170.9" y="1043.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.9" y="1054.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (7 samples, 0.03%)</title><rect x="1170.9" y="1027.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.9" y="1038.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (7 samples, 0.03%)</title><rect x="1170.9" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.9" y="1022.0"></text>
</g>
<g>
<title>JavaThread::run() (333 samples, 1.56%)</title><rect x="1171.3" y="1091.0" width="18.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.3" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (331 samples, 1.55%)</title><rect x="1171.3" y="1075.0" width="18.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.3" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (331 samples, 1.55%)</title><rect x="1171.3" y="1059.0" width="18.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.3" y="1070.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (325 samples, 1.52%)</title><rect x="1171.3" y="1043.0" width="18.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.3" y="1054.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (325 samples, 1.52%)</title><rect x="1171.3" y="1027.0" width="18.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.3" y="1038.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (201 samples, 0.94%)</title><rect x="1171.4" y="1011.0" width="11.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.4" y="1022.0"></text>
</g>
<g>
<title>Compile::Output() (7 samples, 0.03%)</title><rect x="1171.4" y="995.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.4" y="1006.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (8 samples, 0.04%)</title><rect x="1171.8" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.8" y="1006.0"></text>
</g>
<g>
<title>Matcher::match() (13 samples, 0.06%)</title><rect x="1172.3" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.3" y="1006.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (12 samples, 0.06%)</title><rect x="1172.3" y="979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="990.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (6 samples, 0.03%)</title><rect x="1172.6" y="963.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.6" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (19 samples, 0.09%)</title><rect x="1173.0" y="995.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.0" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (18 samples, 0.08%)</title><rect x="1173.1" y="979.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.1" y="990.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (6 samples, 0.03%)</title><rect x="1173.8" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.8" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (151 samples, 0.71%)</title><rect x="1174.1" y="995.0" width="8.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.1" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (19 samples, 0.09%)</title><rect x="1174.6" y="979.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.6" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (5 samples, 0.02%)</title><rect x="1175.0" y="963.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.0" y="974.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (5 samples, 0.02%)</title><rect x="1175.2" y="963.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.2" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (7 samples, 0.03%)</title><rect x="1175.6" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.6" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 0.05%)</title><rect x="1176.0" y="979.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.0" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (34 samples, 0.16%)</title><rect x="1176.6" y="979.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.6" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (5 samples, 0.02%)</title><rect x="1177.1" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.1" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (9 samples, 0.04%)</title><rect x="1177.4" y="963.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.4" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (9 samples, 0.04%)</title><rect x="1177.9" y="963.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.9" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (12 samples, 0.06%)</title><rect x="1178.7" y="979.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (5 samples, 0.02%)</title><rect x="1179.3" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.3" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (21 samples, 0.10%)</title><rect x="1179.7" y="979.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.7" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (12 samples, 0.06%)</title><rect x="1180.2" y="963.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.2" y="974.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (17 samples, 0.08%)</title><rect x="1181.5" y="979.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.5" y="990.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (7 samples, 0.03%)</title><rect x="1182.0" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.0" y="974.0"></text>
</g>
<g>
<title>Compile::Optimize() (90 samples, 0.42%)</title><rect x="1182.5" y="1011.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.5" y="1022.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (23 samples, 0.11%)</title><rect x="1182.5" y="995.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.5" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (23 samples, 0.11%)</title><rect x="1182.5" y="979.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.5" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.03%)</title><rect x="1182.8" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.8" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.02%)</title><rect x="1183.4" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.4" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (5 samples, 0.02%)</title><rect x="1183.9" y="995.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (5 samples, 0.02%)</title><rect x="1183.9" y="979.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.9" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (27 samples, 0.13%)</title><rect x="1184.4" y="995.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.4" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (6 samples, 0.03%)</title><rect x="1184.5" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.5" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.02%)</title><rect x="1184.9" y="979.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.9" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (7 samples, 0.03%)</title><rect x="1185.1" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (20 samples, 0.09%)</title><rect x="1185.9" y="995.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (20 samples, 0.09%)</title><rect x="1185.9" y="979.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="990.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (6 samples, 0.03%)</title><rect x="1187.1" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.02%)</title><rect x="1187.1" y="979.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.02%)</title><rect x="1187.1" y="963.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (25 samples, 0.12%)</title><rect x="1187.7" y="1011.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (25 samples, 0.12%)</title><rect x="1187.7" y="995.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (25 samples, 0.12%)</title><rect x="1187.7" y="979.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (25 samples, 0.12%)</title><rect x="1187.7" y="963.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (25 samples, 0.12%)</title><rect x="1187.7" y="947.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (22 samples, 0.10%)</title><rect x="1187.7" y="931.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.7" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.05%)</title><rect x="1187.8" y="915.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.05%)</title><rect x="1187.8" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.05%)</title><rect x="1187.8" y="883.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.05%)</title><rect x="1187.8" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.05%)</title><rect x="1187.8" y="851.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.05%)</title><rect x="1187.8" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.03%)</title><rect x="1187.9" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.03%)</title><rect x="1187.9" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="1187.9" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="1187.9" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="1187.9" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.02%)</title><rect x="1187.9" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.9" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.02%)</title><rect x="1187.9" y="723.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.9" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.02%)</title><rect x="1187.9" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.02%)</title><rect x="1187.9" y="691.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.02%)</title><rect x="1187.9" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.02%)</title><rect x="1187.9" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.02%)</title><rect x="1187.9" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (10 samples, 0.05%)</title><rect x="1188.3" y="915.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.03%)</title><rect x="1188.3" y="899.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.3" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.03%)</title><rect x="1188.3" y="883.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.03%)</title><rect x="1188.3" y="867.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.03%)</title><rect x="1188.3" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.03%)</title><rect x="1188.3" y="835.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.03%)</title><rect x="1188.3" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.3" y="830.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.02%)</title><rect x="1189.3" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.3" y="1054.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (5 samples, 0.02%)</title><rect x="1189.3" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.3" y="1038.0"></text>
</g>
<g>
<title>Compilation::compile_method() (5 samples, 0.02%)</title><rect x="1189.3" y="1011.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.3" y="1022.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (5 samples, 0.02%)</title><rect x="1189.3" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="1006.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.02%)</title><rect x="1189.7" y="1091.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="1102.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.02%)</title><rect x="1189.7" y="1075.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="1086.0"></text>
</g>
</g>
</svg>
