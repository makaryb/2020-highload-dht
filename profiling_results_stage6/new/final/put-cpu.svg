<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1221"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1221"> </text>
<g id="frames">
<g>
<title>all (14,803 samples, 100.00%)</title><rect x="10.0" y="1187.0" width="1180.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="13.0" y="1198.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (203 samples, 1.37%)</title><rect x="10.0" y="1171.0" width="16.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (202 samples, 1.36%)</title><rect x="10.1" y="1155.0" width="16.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.1" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (196 samples, 1.32%)</title><rect x="10.6" y="1139.0" width="15.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.6" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (182 samples, 1.23%)</title><rect x="11.4" y="1123.0" width="14.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.4" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (130 samples, 0.88%)</title><rect x="11.7" y="1107.0" width="10.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.7" y="1118.0"></text>
</g>
<g>
<title>SpinPause (22 samples, 0.15%)</title><rect x="22.0" y="1107.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="25.0" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (21 samples, 0.14%)</title><rect x="23.8" y="1107.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="26.8" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.08%)</title><rect x="24.5" y="1091.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.5" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.08%)</title><rect x="24.5" y="1075.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="27.5" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.05%)</title><rect x="24.9" y="1059.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.9" y="1070.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.04%)</title><rect x="24.9" y="1043.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.9" y="1054.0"></text>
</g>
<g>
<title>[no_Java_frame] (33 samples, 0.22%)</title><rect x="26.2" y="1171.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="29.2" y="1182.0"></text>
</g>
<g>
<title>[not_walkable_Java] (38 samples, 0.26%)</title><rect x="28.8" y="1171.0" width="3.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="31.8" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (26 samples, 0.18%)</title><rect x="29.0" y="1155.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.0" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (26 samples, 0.18%)</title><rect x="29.0" y="1139.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.0" y="1150.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.07%)</title><rect x="29.1" y="1123.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="32.1" y="1134.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (8 samples, 0.05%)</title><rect x="29.1" y="1107.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.1" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (15 samples, 0.10%)</title><rect x="29.8" y="1123.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.8" y="1134.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (7 samples, 0.05%)</title><rect x="30.5" y="1107.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="33.5" y="1118.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (4 samples, 0.03%)</title><rect x="30.7" y="1091.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="33.7" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="31.0" y="1155.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.0" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.03%)</title><rect x="31.4" y="1155.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="34.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.46%)</title><rect x="31.8" y="1171.0" width="5.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="34.8" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_wait (31 samples, 0.21%)</title><rect x="32.2" y="1155.0" width="2.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="35.2" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.07%)</title><rect x="33.9" y="1139.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="36.9" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.07%)</title><rect x="33.9" y="1123.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.9" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.05%)</title><rect x="34.0" y="1107.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.0" y="1118.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="34.0" y="1091.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="37.0" y="1102.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.05%)</title><rect x="34.0" y="1075.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.0" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (26 samples, 0.18%)</title><rect x="35.2" y="1155.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="38.2" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.06%)</title><rect x="36.5" y="1139.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="39.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.06%)</title><rect x="36.5" y="1123.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="39.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.06%)</title><rect x="36.5" y="1107.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="39.5" y="1118.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="36.6" y="1091.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="39.6" y="1102.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.05%)</title><rect x="36.6" y="1075.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="39.6" y="1086.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (4 samples, 0.03%)</title><rect x="36.9" y="1059.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="39.9" y="1070.0"></text>
</g>
<g>
<title>__hrtimer_init (4 samples, 0.03%)</title><rect x="36.9" y="1043.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="39.9" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (133 samples, 0.90%)</title><rect x="37.3" y="1171.0" width="10.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="40.3" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="37.8" y="1155.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="40.8" y="1166.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (4 samples, 0.03%)</title><rect x="37.9" y="1139.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="40.9" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="38.2" y="1155.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="41.2" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (4 samples, 0.03%)</title><rect x="38.2" y="1139.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.2" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (13 samples, 0.09%)</title><rect x="38.5" y="1155.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="41.5" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_signal (92 samples, 0.62%)</title><rect x="39.7" y="1155.0" width="7.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="42.7" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.50%)</title><rect x="41.1" y="1139.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="44.1" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 0.50%)</title><rect x="41.1" y="1123.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.1" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (70 samples, 0.47%)</title><rect x="41.4" y="1107.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="44.4" y="1118.0"></text>
</g>
<g>
<title>do_futex (68 samples, 0.46%)</title><rect x="41.5" y="1091.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="44.5" y="1102.0"></text>
</g>
<g>
<title>futex_wake (64 samples, 0.43%)</title><rect x="41.5" y="1075.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="44.5" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (58 samples, 0.39%)</title><rect x="42.0" y="1059.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="45.0" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (58 samples, 0.39%)</title><rect x="42.0" y="1043.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.0" y="1054.0"></text>
</g>
<g>
<title>__lock_text_start (58 samples, 0.39%)</title><rect x="42.0" y="1027.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="45.0" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (11 samples, 0.07%)</title><rect x="47.0" y="1155.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="50.0" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.04%)</title><rect x="47.4" y="1139.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="50.4" y="1150.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.03%)</title><rect x="47.5" y="1123.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="50.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9,007 samples, 60.85%)</title><rect x="48.1" y="1171.0" width="718.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.1" y="1182.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,007 samples, 60.85%)</title><rect x="48.1" y="1155.0" width="718.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.1" y="1166.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,006 samples, 60.84%)</title><rect x="48.1" y="1139.0" width="717.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.1" y="1150.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="50.2" y="1123.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="53.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (892 samples, 6.03%)</title><rect x="50.6" y="1123.0" width="71.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.6" y="1134.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.05%)</title><rect x="50.9" y="1107.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (5 samples, 0.03%)</title><rect x="51.1" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$438/2076361235.run (880 samples, 5.94%)</title><rect x="51.5" y="1107.0" width="70.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.5" y="1118.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$11 (880 samples, 5.94%)</title><rect x="51.5" y="1091.0" width="70.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.5" y="1102.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.03%)</title><rect x="52.0" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.03%)</title><rect x="52.0" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.03%)</title><rect x="52.0" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.0" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="52.0" y="1027.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.0" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="52.0" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="55.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.05%)</title><rect x="52.4" y="1075.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.4" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="52.5" y="1059.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="55.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (152 samples, 1.03%)</title><rect x="53.0" y="1075.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.06%)</title><rect x="53.2" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.04%)</title><rect x="53.4" y="1043.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.04%)</title><rect x="53.4" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (120 samples, 0.81%)</title><rect x="54.1" y="1059.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.1" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.03%)</title><rect x="54.3" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (112 samples, 0.76%)</title><rect x="54.7" y="1043.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (104 samples, 0.70%)</title><rect x="55.3" y="1027.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (26 samples, 0.18%)</title><rect x="56.9" y="1011.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (53 samples, 0.36%)</title><rect x="59.3" y="1011.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.28%)</title><rect x="60.2" y="995.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (38 samples, 0.26%)</title><rect x="60.5" y="979.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.5" y="990.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (22 samples, 0.15%)</title><rect x="61.0" y="963.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.0" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.07%)</title><rect x="62.0" y="947.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.0" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (7 samples, 0.05%)</title><rect x="62.2" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.05%)</title><rect x="63.0" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (19 samples, 0.13%)</title><rect x="63.6" y="1059.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (17 samples, 0.11%)</title><rect x="63.8" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (13 samples, 0.09%)</title><rect x="64.1" y="1027.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.09%)</title><rect x="64.1" y="1011.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (13 samples, 0.09%)</title><rect x="64.1" y="995.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (13 samples, 0.09%)</title><rect x="64.1" y="979.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.1" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (13 samples, 0.09%)</title><rect x="64.1" y="963.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.1" y="974.0"></text>
</g>
<g>
<title>__libc_write (12 samples, 0.08%)</title><rect x="64.2" y="947.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="67.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.07%)</title><rect x="64.4" y="931.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.07%)</title><rect x="64.4" y="915.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="67.4" y="926.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.07%)</title><rect x="64.4" y="899.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="67.4" y="910.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.07%)</title><rect x="64.4" y="883.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.4" y="894.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.05%)</title><rect x="64.5" y="867.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.5" y="878.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.05%)</title><rect x="64.5" y="851.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.5" y="862.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.05%)</title><rect x="64.5" y="835.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="67.5" y="846.0"></text>
</g>
<g>
<title>ext4_file_write_iter (8 samples, 0.05%)</title><rect x="64.5" y="819.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="67.5" y="830.0"></text>
</g>
<g>
<title>__generic_file_write_iter (8 samples, 0.05%)</title><rect x="64.5" y="803.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.5" y="814.0"></text>
</g>
<g>
<title>generic_perform_write (8 samples, 0.05%)</title><rect x="64.5" y="787.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="67.5" y="798.0"></text>
</g>
<g>
<title>ext4_da_write_end (5 samples, 0.03%)</title><rect x="64.6" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.6" y="782.0"></text>
</g>
<g>
<title>generic_write_end (5 samples, 0.03%)</title><rect x="64.6" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.6" y="766.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.03%)</title><rect x="64.6" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="67.6" y="750.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.03%)</title><rect x="64.6" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.6" y="734.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.03%)</title><rect x="64.6" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="67.6" y="718.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.03%)</title><rect x="64.6" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (709 samples, 4.79%)</title><rect x="65.2" y="1075.0" width="56.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.2" y="1086.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (703 samples, 4.75%)</title><rect x="65.5" y="1059.0" width="56.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.5" y="1070.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.05%)</title><rect x="66.2" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.05%)</title><rect x="66.2" y="1027.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.05%)</title><rect x="66.2" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (678 samples, 4.58%)</title><rect x="66.8" y="1043.0" width="54.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.8" y="1054.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (34 samples, 0.23%)</title><rect x="66.8" y="1027.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (23 samples, 0.16%)</title><rect x="67.6" y="1011.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.6" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.04%)</title><rect x="68.9" y="995.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="71.9" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.04%)</title><rect x="68.9" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="71.9" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.04%)</title><rect x="68.9" y="963.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="71.9" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="69.0" y="947.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="72.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (644 samples, 4.35%)</title><rect x="69.5" y="1027.0" width="51.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.5" y="1038.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (643 samples, 4.34%)</title><rect x="69.5" y="1011.0" width="51.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.5" y="1022.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="69.7" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.03%)</title><rect x="70.1" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (632 samples, 4.27%)</title><rect x="70.4" y="995.0" width="50.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.4" y="1006.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (632 samples, 4.27%)</title><rect x="70.4" y="979.0" width="50.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.4" y="990.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (31 samples, 0.21%)</title><rect x="70.6" y="963.0" width="2.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="73.6" y="974.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.08%)</title><rect x="72.0" y="947.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="75.0" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.03%)</title><rect x="72.7" y="931.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="75.7" y="942.0"></text>
</g>
<g>
<title>__send (593 samples, 4.01%)</title><rect x="73.3" y="963.0" width="47.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="76.3" y="974.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (550 samples, 3.72%)</title><rect x="76.7" y="947.0" width="43.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.7" y="958.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (548 samples, 3.70%)</title><rect x="76.9" y="931.0" width="43.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="79.9" y="942.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (534 samples, 3.61%)</title><rect x="78.0" y="915.0" width="42.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.0" y="926.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (530 samples, 3.58%)</title><rect x="78.0" y="899.0" width="42.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.0" y="910.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (508 samples, 3.43%)</title><rect x="78.5" y="883.0" width="40.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="81.5" y="894.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (501 samples, 3.38%)</title><rect x="78.8" y="867.0" width="39.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="81.8" y="878.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (501 samples, 3.38%)</title><rect x="78.8" y="851.0" width="39.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.8" y="862.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (484 samples, 3.27%)</title><rect x="80.1" y="835.0" width="38.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.1" y="846.0">tcp..</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.05%)</title><rect x="80.7" y="819.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="83.7" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.04%)</title><rect x="80.8" y="803.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="83.8" y="814.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.03%)</title><rect x="81.3" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="84.3" y="830.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7 samples, 0.05%)</title><rect x="81.7" y="819.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.7" y="830.0"></text>
</g>
<g>
<title>skb_page_frag_refill (7 samples, 0.05%)</title><rect x="81.7" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="84.7" y="814.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.23%)</title><rect x="82.2" y="819.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.2" y="830.0"></text>
</g>
<g>
<title>__alloc_skb (31 samples, 0.21%)</title><rect x="82.4" y="803.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.4" y="814.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (15 samples, 0.10%)</title><rect x="82.6" y="787.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.6" y="798.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.06%)</title><rect x="82.7" y="771.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.7" y="782.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.03%)</title><rect x="83.5" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="86.5" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.05%)</title><rect x="83.8" y="787.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="86.8" y="798.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.03%)</title><rect x="84.4" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.4" y="798.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.03%)</title><rect x="84.4" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.4" y="782.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.03%)</title><rect x="84.9" y="819.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="87.9" y="830.0"></text>
</g>
<g>
<title>tcp_push (410 samples, 2.77%)</title><rect x="85.3" y="819.0" width="32.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="88.3" y="830.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (409 samples, 2.76%)</title><rect x="85.3" y="803.0" width="32.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.3" y="814.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (402 samples, 2.72%)</title><rect x="85.9" y="787.0" width="32.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="88.9" y="798.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (362 samples, 2.45%)</title><rect x="86.7" y="771.0" width="28.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.7" y="782.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (335 samples, 2.26%)</title><rect x="88.2" y="755.0" width="26.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.2" y="766.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (332 samples, 2.24%)</title><rect x="88.2" y="739.0" width="26.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="91.2" y="750.0">_..</text>
</g>
<g>
<title>ip_local_out (323 samples, 2.18%)</title><rect x="88.8" y="723.0" width="25.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="91.8" y="734.0">i..</text>
</g>
<g>
<title>__ip_local_out (79 samples, 0.53%)</title><rect x="88.8" y="707.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.8" y="718.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.03%)</title><rect x="89.2" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.2" y="702.0"></text>
</g>
<g>
<title>nf_hook_slow (64 samples, 0.43%)</title><rect x="89.6" y="691.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.6" y="702.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.03%)</title><rect x="89.9" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="92.9" y="686.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="89.9" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.9" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (50 samples, 0.34%)</title><rect x="90.4" y="675.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="93.4" y="686.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (46 samples, 0.31%)</title><rect x="90.5" y="659.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="93.5" y="670.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (14 samples, 0.09%)</title><rect x="91.1" y="643.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.1" y="654.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.03%)</title><rect x="92.5" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="95.5" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (12 samples, 0.08%)</title><rect x="92.8" y="643.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.8" y="654.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (10 samples, 0.07%)</title><rect x="93.0" y="627.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="96.0" y="638.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.03%)</title><rect x="93.8" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.8" y="654.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (4 samples, 0.03%)</title><rect x="94.3" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="97.3" y="686.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (6 samples, 0.04%)</title><rect x="94.7" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="97.7" y="702.0"></text>
</g>
<g>
<title>ip_output (240 samples, 1.62%)</title><rect x="95.2" y="707.0" width="19.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="98.2" y="718.0"></text>
</g>
<g>
<title>ip_finish_output (224 samples, 1.51%)</title><rect x="95.8" y="691.0" width="17.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.8" y="702.0"></text>
</g>
<g>
<title>__ip_finish_output (219 samples, 1.48%)</title><rect x="95.9" y="675.0" width="17.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.9" y="686.0"></text>
</g>
<g>
<title>ip_finish_output2 (216 samples, 1.46%)</title><rect x="96.0" y="659.0" width="17.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="99.0" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (191 samples, 1.29%)</title><rect x="96.3" y="643.0" width="15.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.3" y="654.0"></text>
</g>
<g>
<title>do_softirq.part.0 (191 samples, 1.29%)</title><rect x="96.3" y="627.0" width="15.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.3" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (190 samples, 1.28%)</title><rect x="96.4" y="611.0" width="15.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.4" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (187 samples, 1.26%)</title><rect x="96.4" y="595.0" width="14.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.4" y="606.0"></text>
</g>
<g>
<title>net_rx_action (182 samples, 1.23%)</title><rect x="96.8" y="579.0" width="14.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="99.8" y="590.0"></text>
</g>
<g>
<title>process_backlog (179 samples, 1.21%)</title><rect x="97.0" y="563.0" width="14.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.0" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb (177 samples, 1.20%)</title><rect x="97.2" y="547.0" width="14.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.2" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (177 samples, 1.20%)</title><rect x="97.2" y="531.0" width="14.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="100.2" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.04%)</title><rect x="97.3" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="100.3" y="526.0"></text>
</g>
<g>
<title>ip_rcv (169 samples, 1.14%)</title><rect x="97.8" y="515.0" width="13.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="100.8" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (147 samples, 0.99%)</title><rect x="98.2" y="499.0" width="11.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.2" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver (145 samples, 0.98%)</title><rect x="98.2" y="483.0" width="11.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="101.2" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (132 samples, 0.89%)</title><rect x="98.4" y="467.0" width="10.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.4" y="478.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (130 samples, 0.88%)</title><rect x="98.4" y="451.0" width="10.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.4" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="98.5" y="435.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.5" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (123 samples, 0.83%)</title><rect x="99.0" y="435.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="102.0" y="446.0"></text>
</g>
<g>
<title>__inet_lookup_established (16 samples, 0.11%)</title><rect x="99.4" y="419.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="102.4" y="430.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.04%)</title><rect x="100.7" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.03%)</title><rect x="100.7" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.7" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (88 samples, 0.59%)</title><rect x="101.2" y="419.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="104.2" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (81 samples, 0.55%)</title><rect x="101.8" y="403.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.8" y="414.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (20 samples, 0.14%)</title><rect x="102.1" y="387.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="105.1" y="398.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.11%)</title><rect x="102.3" y="371.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="105.3" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.10%)</title><rect x="102.5" y="355.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.5" y="366.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.09%)</title><rect x="102.5" y="339.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.5" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="102.6" y="323.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.6" y="334.0"></text>
</g>
<g>
<title>tcp_data_ready (50 samples, 0.34%)</title><rect x="103.8" y="387.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.8" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (50 samples, 0.34%)</title><rect x="103.8" y="371.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.8" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (47 samples, 0.32%)</title><rect x="104.1" y="355.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="107.1" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (47 samples, 0.32%)</title><rect x="104.1" y="339.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.1" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (47 samples, 0.32%)</title><rect x="104.1" y="323.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="107.1" y="334.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (4 samples, 0.03%)</title><rect x="108.4" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.4" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.06%)</title><rect x="109.1" y="467.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="112.1" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.04%)</title><rect x="109.1" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="112.1" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.03%)</title><rect x="109.2" y="435.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="112.2" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="110.4" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.4" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.05%)</title><rect x="110.7" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="113.7" y="510.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="110.8" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.8" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="110.8" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.8" y="478.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.12%)</title><rect x="111.6" y="643.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="114.6" y="654.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.12%)</title><rect x="111.6" y="627.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="114.6" y="638.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.07%)</title><rect x="111.8" y="611.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="114.8" y="622.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.06%)</title><rect x="111.9" y="595.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="114.9" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.06%)</title><rect x="113.6" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.6" y="702.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.03%)</title><rect x="113.8" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.8" y="686.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.03%)</title><rect x="114.9" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.9" y="766.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (19 samples, 0.13%)</title><rect x="115.9" y="771.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.9" y="782.0"></text>
</g>
<g>
<title>tcp_rearm_rto (16 samples, 0.11%)</title><rect x="116.2" y="755.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.2" y="766.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.10%)</title><rect x="116.3" y="739.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.3" y="750.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.10%)</title><rect x="116.3" y="723.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="119.3" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.07%)</title><rect x="116.7" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="119.7" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.05%)</title><rect x="118.0" y="819.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="121.0" y="830.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.03%)</title><rect x="118.3" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="121.3" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.11%)</title><rect x="119.0" y="883.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="122.0" y="894.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.09%)</title><rect x="119.0" y="867.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="122.0" y="878.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.09%)</title><rect x="119.0" y="851.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.0" y="862.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.09%)</title><rect x="119.0" y="835.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="122.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.06%)</title><rect x="120.8" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.03%)</title><rect x="121.2" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.03%)</title><rect x="121.2" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,745 samples, 11.79%)</title><rect x="121.7" y="1123.0" width="139.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="1134.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,655 samples, 11.18%)</title><rect x="122.8" y="1107.0" width="131.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.8" y="1118.0">java/util/concur..</text>
</g>
<g>
<title>itable stub (12 samples, 0.08%)</title><rect x="123.4" y="1091.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="126.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,631 samples, 11.02%)</title><rect x="124.4" y="1091.0" width="130.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.4" y="1102.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (7 samples, 0.05%)</title><rect x="125.5" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (6 samples, 0.04%)</title><rect x="125.6" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/63339538.apply (1,069 samples, 7.22%)</title><rect x="126.3" y="1075.0" width="85.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.3" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,069 samples, 7.22%)</title><rect x="126.3" y="1059.0" width="85.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.3" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,069 samples, 7.22%)</title><rect x="126.3" y="1043.0" width="85.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.3" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (8 samples, 0.05%)</title><rect x="126.4" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (8 samples, 0.05%)</title><rect x="126.4" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="127.0" y="1027.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.05%)</title><rect x="127.0" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,009 samples, 6.82%)</title><rect x="127.7" y="1027.0" width="80.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.7" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,009 samples, 6.82%)</title><rect x="127.7" y="1011.0" width="80.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.7" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,009 samples, 6.82%)</title><rect x="127.7" y="995.0" width="80.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.7" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (540 samples, 3.65%)</title><rect x="127.7" y="979.0" width="43.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.7" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (540 samples, 3.65%)</title><rect x="127.7" y="963.0" width="43.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.7" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (540 samples, 3.65%)</title><rect x="127.7" y="947.0" width="43.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.7" y="958.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$323/1204452569.apply (540 samples, 3.65%)</title><rect x="127.7" y="931.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.7" y="942.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (540 samples, 3.65%)</title><rect x="127.7" y="915.0" width="43.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.7" y="926.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (540 samples, 3.65%)</title><rect x="127.7" y="899.0" width="43.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.7" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.apply (539 samples, 3.64%)</title><rect x="127.8" y="883.0" width="43.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.8" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (539 samples, 3.64%)</title><rect x="127.8" y="867.0" width="43.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.8" y="878.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 0.07%)</title><rect x="127.8" y="851.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11 samples, 0.07%)</title><rect x="127.8" y="835.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.04%)</title><rect x="128.1" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$371/1785628412.apply (6 samples, 0.04%)</title><rect x="128.1" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6 samples, 0.04%)</title><rect x="128.1" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6 samples, 0.04%)</title><rect x="128.1" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/885000023.apply (6 samples, 0.04%)</title><rect x="128.1" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6 samples, 0.04%)</title><rect x="128.1" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (6 samples, 0.04%)</title><rect x="128.1" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4 samples, 0.03%)</title><rect x="128.2" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (523 samples, 3.53%)</title><rect x="129.1" y="851.0" width="41.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.1" y="862.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (473 samples, 3.20%)</title><rect x="129.1" y="835.0" width="37.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.1" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (459 samples, 3.10%)</title><rect x="130.2" y="819.0" width="36.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.2" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (9 samples, 0.06%)</title><rect x="130.8" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$368/1963220307.apply (443 samples, 2.99%)</title><rect x="131.5" y="803.0" width="35.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.5" y="814.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (443 samples, 2.99%)</title><rect x="131.5" y="787.0" width="35.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.5" y="798.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.03%)</title><rect x="132.1" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.03%)</title><rect x="132.1" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (14 samples, 0.09%)</title><rect x="132.6" y="771.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (14 samples, 0.09%)</title><rect x="132.6" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.09%)</title><rect x="132.6" y="739.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.09%)</title><rect x="132.7" y="723.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.09%)</title><rect x="132.7" y="707.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12 samples, 0.08%)</title><rect x="132.8" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.05%)</title><rect x="132.8" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (5 samples, 0.03%)</title><rect x="133.0" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.03%)</title><rect x="133.0" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.03%)</title><rect x="133.0" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (5 samples, 0.03%)</title><rect x="133.0" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (5 samples, 0.03%)</title><rect x="133.0" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (5 samples, 0.03%)</title><rect x="133.0" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.0" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (5 samples, 0.03%)</title><rect x="133.0" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (5 samples, 0.03%)</title><rect x="133.0" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.03%)</title><rect x="133.0" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.03%)</title><rect x="133.0" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (5 samples, 0.03%)</title><rect x="133.0" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (5 samples, 0.03%)</title><rect x="133.0" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.0" y="494.0"></text>
</g>
<g>
<title>writev (5 samples, 0.03%)</title><rect x="133.0" y="467.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="136.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="133.0" y="451.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="136.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="133.0" y="435.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="136.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_writev (5 samples, 0.03%)</title><rect x="133.0" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="136.0" y="430.0"></text>
</g>
<g>
<title>do_writev (5 samples, 0.03%)</title><rect x="133.0" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="136.0" y="414.0"></text>
</g>
<g>
<title>vfs_writev (5 samples, 0.03%)</title><rect x="133.0" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.0" y="398.0"></text>
</g>
<g>
<title>do_iter_write (5 samples, 0.03%)</title><rect x="133.0" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.0" y="382.0"></text>
</g>
<g>
<title>do_iter_readv_writev (5 samples, 0.03%)</title><rect x="133.0" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="136.0" y="366.0"></text>
</g>
<g>
<title>sock_write_iter (5 samples, 0.03%)</title><rect x="133.0" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="136.0" y="350.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 0.03%)</title><rect x="133.0" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="136.0" y="334.0"></text>
</g>
<g>
<title>inet6_sendmsg (5 samples, 0.03%)</title><rect x="133.0" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="136.0" y="318.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 0.03%)</title><rect x="133.0" y="291.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="136.0" y="302.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.03%)</title><rect x="133.1" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.1" y="286.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.03%)</title><rect x="133.1" y="259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="136.1" y="270.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.03%)</title><rect x="133.1" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="136.1" y="254.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.03%)</title><rect x="133.1" y="227.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="136.1" y="238.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.03%)</title><rect x="133.1" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="136.1" y="222.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.03%)</title><rect x="133.1" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="136.1" y="206.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.03%)</title><rect x="133.1" y="179.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.1" y="190.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.03%)</title><rect x="133.1" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="136.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.03%)</title><rect x="133.4" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (151 samples, 1.02%)</title><rect x="133.7" y="771.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (151 samples, 1.02%)</title><rect x="133.7" y="755.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (35 samples, 0.24%)</title><rect x="133.7" y="739.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (29 samples, 0.20%)</title><rect x="134.2" y="723.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (29 samples, 0.20%)</title><rect x="134.2" y="707.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (28 samples, 0.19%)</title><rect x="134.2" y="691.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (28 samples, 0.19%)</title><rect x="134.2" y="675.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="134.6" y="659.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="137.6" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.04%)</title><rect x="134.7" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="137.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.03%)</title><rect x="134.8" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="137.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.11%)</title><rect x="135.2" y="659.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (116 samples, 0.78%)</title><rect x="136.5" y="739.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (115 samples, 0.78%)</title><rect x="136.5" y="723.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (108 samples, 0.73%)</title><rect x="136.5" y="707.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (103 samples, 0.70%)</title><rect x="136.5" y="691.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (103 samples, 0.70%)</title><rect x="136.5" y="675.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.5" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (26 samples, 0.18%)</title><rect x="136.7" y="659.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="139.7" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (26 samples, 0.18%)</title><rect x="136.7" y="643.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="139.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (24 samples, 0.16%)</title><rect x="136.8" y="627.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="139.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (17 samples, 0.11%)</title><rect x="137.0" y="611.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="140.0" y="622.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="138.3" y="611.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="141.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (74 samples, 0.50%)</title><rect x="138.8" y="659.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (62 samples, 0.42%)</title><rect x="139.8" y="643.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.8" y="654.0"></text>
</g>
<g>
<title>__libc_write (61 samples, 0.41%)</title><rect x="139.9" y="627.0" width="4.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="142.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.31%)</title><rect x="141.0" y="611.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="144.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.31%)</title><rect x="141.0" y="595.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.0" y="606.0"></text>
</g>
<g>
<title>__x64_sys_write (46 samples, 0.31%)</title><rect x="141.0" y="579.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="144.0" y="590.0"></text>
</g>
<g>
<title>ksys_write (46 samples, 0.31%)</title><rect x="141.0" y="563.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="144.0" y="574.0"></text>
</g>
<g>
<title>vfs_write (44 samples, 0.30%)</title><rect x="141.2" y="547.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.2" y="558.0"></text>
</g>
<g>
<title>__vfs_write (40 samples, 0.27%)</title><rect x="141.4" y="531.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="144.4" y="542.0"></text>
</g>
<g>
<title>new_sync_write (40 samples, 0.27%)</title><rect x="141.4" y="515.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="144.4" y="526.0"></text>
</g>
<g>
<title>pipe_write (35 samples, 0.24%)</title><rect x="141.8" y="499.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="144.8" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (22 samples, 0.15%)</title><rect x="142.1" y="483.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.1" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (22 samples, 0.15%)</title><rect x="142.1" y="467.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="145.1" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.14%)</title><rect x="142.2" y="451.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="145.2" y="462.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.03%)</title><rect x="144.2" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="147.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (5 samples, 0.03%)</title><rect x="144.7" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.7" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="144.7" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="147.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (7 samples, 0.05%)</title><rect x="145.1" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (7 samples, 0.05%)</title><rect x="145.1" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.05%)</title><rect x="145.1" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (263 samples, 1.78%)</title><rect x="145.8" y="771.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.09%)</title><rect x="146.2" y="755.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.2" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 0.09%)</title><rect x="146.2" y="739.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.2" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.06%)</title><rect x="146.2" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (172 samples, 1.16%)</title><rect x="147.7" y="755.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (15 samples, 0.10%)</title><rect x="147.7" y="739.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.7" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (15 samples, 0.10%)</title><rect x="147.7" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.7" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (15 samples, 0.10%)</title><rect x="147.7" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (15 samples, 0.10%)</title><rect x="147.7" y="691.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (13 samples, 0.09%)</title><rect x="147.7" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (11 samples, 0.07%)</title><rect x="147.9" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="148.3" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.04%)</title><rect x="148.3" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.04%)</title><rect x="148.3" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (81 samples, 0.55%)</title><rect x="148.9" y="739.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.9" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (11 samples, 0.07%)</title><rect x="151.1" y="723.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.1" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (11 samples, 0.07%)</title><rect x="151.1" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.1" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (11 samples, 0.07%)</title><rect x="151.1" y="691.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (11 samples, 0.07%)</title><rect x="151.1" y="675.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.1" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1862624918.test (30 samples, 0.20%)</title><rect x="152.0" y="723.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.0" y="734.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (30 samples, 0.20%)</title><rect x="152.0" y="707.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$296/1196817824.test (4 samples, 0.03%)</title><rect x="153.7" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (4 samples, 0.03%)</title><rect x="153.7" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (5 samples, 0.03%)</title><rect x="154.0" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.03%)</title><rect x="154.0" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.0" y="686.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (5 samples, 0.03%)</title><rect x="154.0" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.0" y="670.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.03%)</title><rect x="154.0" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (5 samples, 0.03%)</title><rect x="154.0" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.03%)</title><rect x="154.0" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="154.0" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="154.0" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="154.0" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.0" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.05%)</title><rect x="154.6" y="723.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="157.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (73 samples, 0.49%)</title><rect x="155.6" y="739.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.6" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (73 samples, 0.49%)</title><rect x="155.6" y="723.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (72 samples, 0.49%)</title><rect x="155.6" y="707.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.6" y="718.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.05%)</title><rect x="156.3" y="691.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="159.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (56 samples, 0.38%)</title><rect x="156.9" y="691.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.9" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (47 samples, 0.32%)</title><rect x="157.4" y="675.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (47 samples, 0.32%)</title><rect x="157.4" y="659.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (12 samples, 0.08%)</title><rect x="157.9" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.9" y="654.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="158.0" y="627.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="161.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/875917495.test (5 samples, 0.03%)</title><rect x="158.5" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (13 samples, 0.09%)</title><rect x="158.9" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (9 samples, 0.06%)</title><rect x="159.1" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.1" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.06%)</title><rect x="159.1" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.09%)</title><rect x="159.9" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="160.4" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="160.4" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="160.4" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (9 samples, 0.06%)</title><rect x="161.4" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (8 samples, 0.05%)</title><rect x="161.4" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (22 samples, 0.15%)</title><rect x="162.1" y="755.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (22 samples, 0.15%)</title><rect x="162.1" y="739.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (22 samples, 0.15%)</title><rect x="162.1" y="723.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.03%)</title><rect x="163.3" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.03%)</title><rect x="163.3" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (36 samples, 0.24%)</title><rect x="163.8" y="755.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.8" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.03%)</title><rect x="163.9" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.08%)</title><rect x="164.2" y="739.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.08%)</title><rect x="164.2" y="723.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.2" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.07%)</title><rect x="164.2" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.2" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.07%)</title><rect x="164.2" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.2" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (4 samples, 0.03%)</title><rect x="164.4" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="164.7" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.13%)</title><rect x="165.2" y="739.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="165.7" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.05%)</title><rect x="165.7" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.05%)</title><rect x="165.7" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.03%)</title><rect x="166.3" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (48 samples, 0.32%)</title><rect x="167.0" y="835.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (48 samples, 0.32%)</title><rect x="167.0" y="819.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (22 samples, 0.15%)</title><rect x="167.3" y="803.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (22 samples, 0.15%)</title><rect x="167.3" y="787.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.15%)</title><rect x="169.0" y="803.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.15%)</title><rect x="169.0" y="787.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.03%)</title><rect x="169.0" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.03%)</title><rect x="169.0" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (18 samples, 0.12%)</title><rect x="169.3" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (18 samples, 0.12%)</title><rect x="169.3" y="755.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.07%)</title><rect x="169.7" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (9 samples, 0.06%)</title><rect x="169.8" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (9 samples, 0.06%)</title><rect x="169.8" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.04%)</title><rect x="170.1" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (5 samples, 0.03%)</title><rect x="170.1" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (5 samples, 0.03%)</title><rect x="170.1" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.03%)</title><rect x="170.1" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.07%)</title><rect x="170.8" y="979.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.07%)</title><rect x="170.8" y="963.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (9 samples, 0.06%)</title><rect x="170.9" y="947.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.9" y="958.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="170.9" y="931.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="173.9" y="942.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/63001505.apply (4 samples, 0.03%)</title><rect x="171.3" y="931.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (457 samples, 3.09%)</title><rect x="171.7" y="979.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.7" y="990.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.06%)</title><rect x="171.9" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.06%)</title><rect x="171.9" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.03%)</title><rect x="172.1" y="931.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (14 samples, 0.09%)</title><rect x="172.6" y="963.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (14 samples, 0.09%)</title><rect x="172.6" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.05%)</title><rect x="172.8" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.05%)</title><rect x="172.8" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.05%)</title><rect x="172.8" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.05%)</title><rect x="172.8" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.05%)</title><rect x="172.8" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.05%)</title><rect x="172.8" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.05%)</title><rect x="172.8" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (431 samples, 2.91%)</title><rect x="173.7" y="963.0" width="34.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.7" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (431 samples, 2.91%)</title><rect x="173.7" y="947.0" width="34.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.7" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (431 samples, 2.91%)</title><rect x="173.7" y="931.0" width="34.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.7" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (17 samples, 0.11%)</title><rect x="176.2" y="915.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (21 samples, 0.14%)</title><rect x="177.6" y="915.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (21 samples, 0.14%)</title><rect x="177.6" y="899.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (21 samples, 0.14%)</title><rect x="177.6" y="883.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (21 samples, 0.14%)</title><rect x="177.6" y="867.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (21 samples, 0.14%)</title><rect x="177.6" y="851.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (21 samples, 0.14%)</title><rect x="177.6" y="835.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.6" y="846.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (21 samples, 0.14%)</title><rect x="177.6" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (162 samples, 1.09%)</title><rect x="179.2" y="915.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (160 samples, 1.08%)</title><rect x="179.3" y="899.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.3" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (84 samples, 0.57%)</title><rect x="181.6" y="883.0" width="6.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="184.6" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (82 samples, 0.55%)</title><rect x="181.8" y="867.0" width="6.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="184.8" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (81 samples, 0.55%)</title><rect x="181.9" y="851.0" width="6.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="184.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (75 samples, 0.51%)</title><rect x="181.9" y="835.0" width="6.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="184.9" y="846.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="187.9" y="835.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="190.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (47 samples, 0.32%)</title><rect x="188.3" y="883.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.08%)</title><rect x="189.3" y="867.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.3" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.07%)</title><rect x="189.3" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (23 samples, 0.16%)</title><rect x="190.2" y="867.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.2" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (23 samples, 0.16%)</title><rect x="190.2" y="851.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.2" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (23 samples, 0.16%)</title><rect x="190.2" y="835.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.2" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (23 samples, 0.16%)</title><rect x="190.2" y="819.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.2" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (23 samples, 0.16%)</title><rect x="190.2" y="803.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (200 samples, 1.35%)</title><rect x="192.1" y="915.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.1" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (177 samples, 1.20%)</title><rect x="193.9" y="899.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.9" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (120 samples, 0.81%)</title><rect x="194.8" y="883.0" width="9.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="197.8" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.03%)</title><rect x="196.4" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="199.4" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (4 samples, 0.03%)</title><rect x="196.4" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="199.4" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (17 samples, 0.11%)</title><rect x="196.9" y="867.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="199.9" y="878.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (6 samples, 0.04%)</title><rect x="197.5" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="200.5" y="862.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (6 samples, 0.04%)</title><rect x="198.5" y="867.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="201.5" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (24 samples, 0.16%)</title><rect x="199.5" y="867.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="202.5" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (14 samples, 0.09%)</title><rect x="200.0" y="851.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="203.0" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (9 samples, 0.06%)</title><rect x="200.0" y="835.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="203.0" y="846.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (4 samples, 0.03%)</title><rect x="201.1" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="204.1" y="862.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (37 samples, 0.25%)</title><rect x="201.4" y="867.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="204.4" y="878.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (16 samples, 0.11%)</title><rect x="202.0" y="851.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="205.0" y="862.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (11 samples, 0.07%)</title><rect x="202.4" y="835.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="205.4" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.07%)</title><rect x="203.5" y="851.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="206.5" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (10 samples, 0.07%)</title><rect x="203.5" y="835.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="206.5" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.05%)</title><rect x="203.5" y="819.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="206.5" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (7 samples, 0.05%)</title><rect x="203.5" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="206.5" y="814.0"></text>
</g>
<g>
<title>JVM_DoPrivileged@plt (4 samples, 0.03%)</title><rect x="204.3" y="883.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="207.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$233/1238270558.run (28 samples, 0.19%)</title><rect x="205.4" y="883.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (24 samples, 0.16%)</title><rect x="205.7" y="867.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.7" y="878.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (20 samples, 0.14%)</title><rect x="206.0" y="851.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.0" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (20 samples, 0.14%)</title><rect x="206.0" y="835.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.0" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (20 samples, 0.14%)</title><rect x="206.0" y="819.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.0" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (19 samples, 0.13%)</title><rect x="206.1" y="803.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.1" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (19 samples, 0.13%)</title><rect x="206.1" y="787.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.03%)</title><rect x="207.3" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (40 samples, 0.27%)</title><rect x="208.3" y="1027.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (37 samples, 0.25%)</title><rect x="208.6" y="1011.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (6 samples, 0.04%)</title><rect x="208.9" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (27 samples, 0.18%)</title><rect x="209.4" y="995.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.4" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="210.2" y="979.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="213.2" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.05%)</title><rect x="210.2" y="963.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="213.2" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.05%)</title><rect x="210.2" y="947.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="213.2" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.05%)</title><rect x="210.2" y="931.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="213.2" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (10 samples, 0.07%)</title><rect x="210.7" y="979.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.7" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.03%)</title><rect x="210.7" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.7" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (5 samples, 0.03%)</title><rect x="210.7" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.7" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (5 samples, 0.03%)</title><rect x="210.7" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.7" y="942.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (5 samples, 0.03%)</title><rect x="210.7" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.7" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.03%)</title><rect x="211.1" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.1" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.03%)</title><rect x="211.1" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/28457964.apply (538 samples, 3.63%)</title><rect x="211.5" y="1075.0" width="42.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.5" y="1086.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (538 samples, 3.63%)</title><rect x="211.5" y="1059.0" width="42.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.5" y="1070.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (538 samples, 3.63%)</title><rect x="211.5" y="1043.0" width="42.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.5" y="1054.0">ru/m..</text>
</g>
<g>
<title>java/net/URI.create (82 samples, 0.55%)</title><rect x="212.2" y="1027.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.2" y="1038.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (82 samples, 0.55%)</title><rect x="212.2" y="1011.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.2" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (82 samples, 0.55%)</title><rect x="212.2" y="995.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.2" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (15 samples, 0.10%)</title><rect x="212.2" y="979.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.2" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (15 samples, 0.10%)</title><rect x="212.2" y="963.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.2" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (13 samples, 0.09%)</title><rect x="212.4" y="947.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.4" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="213.0" y="931.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="216.0" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (65 samples, 0.44%)</title><rect x="213.4" y="979.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.4" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (12 samples, 0.08%)</title><rect x="213.4" y="963.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.4" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (12 samples, 0.08%)</title><rect x="213.4" y="947.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.4" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (53 samples, 0.36%)</title><rect x="214.4" y="963.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.4" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (28 samples, 0.19%)</title><rect x="215.0" y="947.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.0" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.04%)</title><rect x="215.0" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.0" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.04%)</title><rect x="215.0" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.0" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (16 samples, 0.11%)</title><rect x="215.5" y="931.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.06%)</title><rect x="215.5" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.06%)</title><rect x="215.5" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.5" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.05%)</title><rect x="216.2" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.2" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.03%)</title><rect x="216.9" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.03%)</title><rect x="216.9" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.9" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (17 samples, 0.11%)</title><rect x="217.3" y="947.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.3" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (10 samples, 0.07%)</title><rect x="219.0" y="1027.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (10 samples, 0.07%)</title><rect x="219.0" y="1011.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (10 samples, 0.07%)</title><rect x="219.0" y="995.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (10 samples, 0.07%)</title><rect x="219.0" y="979.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (331 samples, 2.24%)</title><rect x="220.0" y="1027.0" width="26.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.0" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (328 samples, 2.22%)</title><rect x="220.3" y="1011.0" width="26.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.3" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (328 samples, 2.22%)</title><rect x="220.3" y="995.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.3" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (327 samples, 2.21%)</title><rect x="220.4" y="979.0" width="26.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.4" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.03%)</title><rect x="221.2" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.03%)</title><rect x="221.2" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (231 samples, 1.56%)</title><rect x="221.6" y="963.0" width="18.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.03%)</title><rect x="221.6" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.6" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (26 samples, 0.18%)</title><rect x="221.9" y="947.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.04%)</title><rect x="221.9" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.9" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.04%)</title><rect x="221.9" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.9" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.04%)</title><rect x="221.9" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (19 samples, 0.13%)</title><rect x="222.4" y="931.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.11%)</title><rect x="222.7" y="915.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.06%)</title><rect x="222.7" y="899.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.05%)</title><rect x="222.7" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.03%)</title><rect x="222.7" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.03%)</title><rect x="222.7" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.7" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.05%)</title><rect x="223.4" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.05%)</title><rect x="223.4" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.05%)</title><rect x="223.4" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.03%)</title><rect x="223.6" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (43 samples, 0.29%)</title><rect x="224.0" y="947.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.0" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (42 samples, 0.28%)</title><rect x="224.0" y="931.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.0" y="942.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="224.5" y="915.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="227.5" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (31 samples, 0.21%)</title><rect x="224.8" y="915.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (29 samples, 0.20%)</title><rect x="225.0" y="899.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (27 samples, 0.18%)</title><rect x="225.0" y="883.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (27 samples, 0.18%)</title><rect x="225.0" y="867.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.14%)</title><rect x="225.1" y="851.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (20 samples, 0.14%)</title><rect x="225.1" y="835.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.1" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (20 samples, 0.14%)</title><rect x="225.1" y="819.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.04%)</title><rect x="225.2" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.04%)</title><rect x="225.2" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/119290689.test (13 samples, 0.09%)</title><rect x="225.7" y="803.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (13 samples, 0.09%)</title><rect x="225.7" y="787.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (8 samples, 0.05%)</title><rect x="225.7" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (8 samples, 0.05%)</title><rect x="225.7" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.7" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (8 samples, 0.05%)</title><rect x="225.7" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (7 samples, 0.05%)</title><rect x="225.8" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (7 samples, 0.05%)</title><rect x="225.8" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.8" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.05%)</title><rect x="225.8" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.8" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.05%)</title><rect x="225.8" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (144 samples, 0.97%)</title><rect x="227.5" y="947.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.5" y="958.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (144 samples, 0.97%)</title><rect x="227.5" y="931.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.03%)</title><rect x="228.0" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.03%)</title><rect x="228.0" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.03%)</title><rect x="228.0" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.0" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (130 samples, 0.88%)</title><rect x="228.6" y="915.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.6" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (81 samples, 0.55%)</title><rect x="229.3" y="899.0" width="6.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="232.3" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.03%)</title><rect x="230.3" y="883.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="233.3" y="894.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (18 samples, 0.12%)</title><rect x="230.9" y="883.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="233.9" y="894.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (4 samples, 0.03%)</title><rect x="231.8" y="867.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="234.8" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (19 samples, 0.13%)</title><rect x="232.8" y="883.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="235.8" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (12 samples, 0.08%)</title><rect x="233.4" y="867.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="236.4" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.03%)</title><rect x="233.8" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="236.8" y="862.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (18 samples, 0.12%)</title><rect x="234.3" y="883.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="237.3" y="894.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.03%)</title><rect x="234.9" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="237.9" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.03%)</title><rect x="235.4" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="238.4" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (30 samples, 0.20%)</title><rect x="236.4" y="899.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.4" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (27 samples, 0.18%)</title><rect x="236.6" y="883.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.09%)</title><rect x="237.0" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.09%)</title><rect x="237.0" y="851.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.09%)</title><rect x="237.0" y="835.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.0" y="846.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (7 samples, 0.05%)</title><rect x="238.2" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.2" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.03%)</title><rect x="238.4" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.03%)</title><rect x="238.4" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.03%)</title><rect x="238.5" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.03%)</title><rect x="238.5" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (12 samples, 0.08%)</title><rect x="238.9" y="947.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.9" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.05%)</title><rect x="239.3" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.3" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.05%)</title><rect x="239.3" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.3" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.05%)</title><rect x="239.3" y="899.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.3" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.05%)</title><rect x="239.3" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.3" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.05%)</title><rect x="239.3" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (34 samples, 0.23%)</title><rect x="240.0" y="963.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.0" y="974.0"></text>
</g>
<g>
<title>java/util/Optional.map (7 samples, 0.05%)</title><rect x="240.1" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (26 samples, 0.18%)</title><rect x="240.6" y="947.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (23 samples, 0.16%)</title><rect x="240.9" y="931.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.03%)</title><rect x="241.2" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.2" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (11 samples, 0.07%)</title><rect x="241.5" y="915.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (47 samples, 0.32%)</title><rect x="242.7" y="963.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (38 samples, 0.26%)</title><rect x="242.8" y="947.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (38 samples, 0.26%)</title><rect x="242.8" y="931.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (34 samples, 0.23%)</title><rect x="243.1" y="915.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (27 samples, 0.18%)</title><rect x="243.1" y="899.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.14%)</title><rect x="243.6" y="883.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.14%)</title><rect x="243.6" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.14%)</title><rect x="243.6" y="851.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.14%)</title><rect x="243.6" y="835.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.14%)</title><rect x="243.6" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.6" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.12%)</title><rect x="243.8" y="803.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="246.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.11%)</title><rect x="244.0" y="787.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.11%)</title><rect x="244.0" y="771.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.11%)</title><rect x="244.0" y="755.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="247.0" y="766.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.11%)</title><rect x="244.0" y="739.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="247.0" y="750.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.11%)</title><rect x="244.0" y="723.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.0" y="734.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.10%)</title><rect x="244.0" y="707.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.0" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.10%)</title><rect x="244.0" y="691.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.0" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.10%)</title><rect x="244.0" y="675.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="247.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.04%)</title><rect x="245.2" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.04%)</title><rect x="245.2" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (8 samples, 0.05%)</title><rect x="245.8" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.05%)</title><rect x="245.8" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.04%)</title><rect x="246.0" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (42 samples, 0.28%)</title><rect x="246.5" y="1027.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (34 samples, 0.23%)</title><rect x="247.1" y="1011.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.1" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (33 samples, 0.22%)</title><rect x="247.1" y="995.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.1" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (32 samples, 0.22%)</title><rect x="247.2" y="979.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.2" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (26 samples, 0.18%)</title><rect x="247.7" y="963.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.7" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (23 samples, 0.16%)</title><rect x="247.9" y="947.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (23 samples, 0.16%)</title><rect x="247.9" y="931.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.9" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (10 samples, 0.07%)</title><rect x="248.3" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (5 samples, 0.03%)</title><rect x="248.7" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.7" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.03%)</title><rect x="249.1" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (28 samples, 0.19%)</title><rect x="249.9" y="1027.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (28 samples, 0.19%)</title><rect x="249.9" y="1011.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (25 samples, 0.17%)</title><rect x="249.9" y="995.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/360207322.test (14 samples, 0.09%)</title><rect x="249.9" y="979.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (14 samples, 0.09%)</title><rect x="249.9" y="963.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.9" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (14 samples, 0.09%)</title><rect x="249.9" y="947.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (13 samples, 0.09%)</title><rect x="249.9" y="931.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (13 samples, 0.09%)</title><rect x="249.9" y="915.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.9" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.04%)</title><rect x="250.5" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.5" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.03%)</title><rect x="250.6" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (11 samples, 0.07%)</title><rect x="251.0" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.04%)</title><rect x="251.3" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (29 samples, 0.20%)</title><rect x="252.1" y="1027.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (29 samples, 0.20%)</title><rect x="252.1" y="1011.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$214/2080116879.accept (27 samples, 0.18%)</title><rect x="252.2" y="995.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (27 samples, 0.18%)</title><rect x="252.2" y="979.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (24 samples, 0.16%)</title><rect x="252.4" y="963.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (21 samples, 0.14%)</title><rect x="252.5" y="947.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (21 samples, 0.14%)</title><rect x="252.5" y="931.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (21 samples, 0.14%)</title><rect x="252.5" y="915.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (13 samples, 0.09%)</title><rect x="253.1" y="899.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (13 samples, 0.09%)</title><rect x="253.1" y="883.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (13 samples, 0.09%)</title><rect x="253.1" y="867.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.04%)</title><rect x="253.1" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.04%)</title><rect x="253.1" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.05%)</title><rect x="253.6" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.05%)</title><rect x="253.6" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.05%)</title><rect x="253.6" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="253.8" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="253.8" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.03%)</title><rect x="253.8" y="771.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="256.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="253.8" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="253.8" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="256.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$126/245683815.get (76 samples, 0.51%)</title><rect x="254.7" y="1107.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (76 samples, 0.51%)</title><rect x="254.7" y="1091.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$118/533758526.run (76 samples, 0.51%)</title><rect x="254.7" y="1075.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$7 (76 samples, 0.51%)</title><rect x="254.7" y="1059.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (75 samples, 0.51%)</title><rect x="254.8" y="1043.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.03%)</title><rect x="254.8" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.03%)</title><rect x="254.8" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.03%)</title><rect x="254.9" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (62 samples, 0.42%)</title><rect x="255.2" y="1027.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (61 samples, 0.41%)</title><rect x="255.3" y="1011.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (50 samples, 0.34%)</title><rect x="255.7" y="995.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (12 samples, 0.08%)</title><rect x="256.6" y="979.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (24 samples, 0.16%)</title><rect x="257.7" y="979.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.7" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (21 samples, 0.14%)</title><rect x="258.0" y="963.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.13%)</title><rect x="258.1" y="947.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.1" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.08%)</title><rect x="258.2" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.04%)</title><rect x="258.7" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.7" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.04%)</title><rect x="259.2" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.2" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.03%)</title><rect x="259.3" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.3" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.04%)</title><rect x="259.7" y="995.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="262.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (8 samples, 0.05%)</title><rect x="260.1" y="1027.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (8 samples, 0.05%)</title><rect x="260.1" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (7 samples, 0.05%)</title><rect x="260.2" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.2" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 0.05%)</title><rect x="260.2" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.2" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 0.05%)</title><rect x="260.2" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.2" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (7 samples, 0.05%)</title><rect x="260.2" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 0.05%)</title><rect x="260.2" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.2" y="942.0"></text>
</g>
<g>
<title>__libc_write (7 samples, 0.05%)</title><rect x="260.2" y="915.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="263.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="260.5" y="899.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="263.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="260.5" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="263.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,922 samples, 12.98%)</title><rect x="260.8" y="1123.0" width="153.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.8" y="1134.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,882 samples, 12.71%)</title><rect x="262.9" y="1107.0" width="150.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.9" y="1118.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,434 samples, 9.69%)</title><rect x="265.2" y="1091.0" width="114.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.2" y="1102.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.06%)</title><rect x="265.7" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.06%)</title><rect x="265.7" y="1059.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.06%)</title><rect x="265.7" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.04%)</title><rect x="266.0" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (369 samples, 2.49%)</title><rect x="266.4" y="1075.0" width="29.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.4" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (369 samples, 2.49%)</title><rect x="266.4" y="1059.0" width="29.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.4" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (328 samples, 2.22%)</title><rect x="269.1" y="1043.0" width="26.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.1" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (328 samples, 2.22%)</title><rect x="269.1" y="1027.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.1" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (312 samples, 2.11%)</title><rect x="270.4" y="1011.0" width="24.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.4" y="1022.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (7 samples, 0.05%)</title><rect x="270.8" y="995.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="273.8" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (31 samples, 0.21%)</title><rect x="271.4" y="995.0" width="2.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="274.4" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.06%)</title><rect x="272.3" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="275.3" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.03%)</title><rect x="273.5" y="979.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="276.5" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (267 samples, 1.80%)</title><rect x="273.9" y="995.0" width="21.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="276.9" y="1006.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (216 samples, 1.46%)</title><rect x="278.0" y="979.0" width="17.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="281.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (216 samples, 1.46%)</title><rect x="278.0" y="963.0" width="17.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.0" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (202 samples, 1.36%)</title><rect x="279.1" y="947.0" width="16.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="282.1" y="958.0"></text>
</g>
<g>
<title>do_futex (200 samples, 1.35%)</title><rect x="279.3" y="931.0" width="15.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="282.3" y="942.0"></text>
</g>
<g>
<title>futex_wake (198 samples, 1.34%)</title><rect x="279.3" y="915.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="282.3" y="926.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.03%)</title><rect x="280.1" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="283.1" y="910.0"></text>
</g>
<g>
<title>wake_up_q (182 samples, 1.23%)</title><rect x="280.5" y="899.0" width="14.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="283.5" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (181 samples, 1.22%)</title><rect x="280.6" y="883.0" width="14.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="283.6" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (181 samples, 1.22%)</title><rect x="280.6" y="867.0" width="14.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="283.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (7 samples, 0.05%)</title><rect x="295.3" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (5 samples, 0.03%)</title><rect x="295.9" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (5 samples, 0.03%)</title><rect x="295.9" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.03%)</title><rect x="295.9" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,041 samples, 7.03%)</title><rect x="296.3" y="1075.0" width="82.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.3" y="1086.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,001 samples, 6.76%)</title><rect x="299.4" y="1059.0" width="79.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.4" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.05%)</title><rect x="300.2" y="1043.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="303.2" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (328 samples, 2.22%)</title><rect x="300.9" y="1043.0" width="26.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="303.9" y="1054.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.03%)</title><rect x="302.2" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="305.2" y="1038.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (12 samples, 0.08%)</title><rect x="302.5" y="1027.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="305.5" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (59 samples, 0.40%)</title><rect x="303.6" y="1027.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="306.6" y="1038.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (16 samples, 0.11%)</title><rect x="306.2" y="1011.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="309.2" y="1022.0"></text>
</g>
<g>
<title>Monitor::unlock() (8 samples, 0.05%)</title><rect x="307.5" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="310.5" y="1022.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (5 samples, 0.03%)</title><rect x="308.3" y="1027.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="311.3" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (10 samples, 0.07%)</title><rect x="308.7" y="1027.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="311.7" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.03%)</title><rect x="309.5" y="1027.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="312.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.03%)</title><rect x="310.1" y="1027.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="313.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (189 samples, 1.28%)</title><rect x="310.5" y="1027.0" width="15.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="313.5" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 0.59%)</title><rect x="318.7" y="1011.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.7" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (83 samples, 0.56%)</title><rect x="319.0" y="995.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 0.30%)</title><rect x="321.8" y="979.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="324.8" y="990.0"></text>
</g>
<g>
<title>do_futex (45 samples, 0.30%)</title><rect x="321.8" y="963.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.8" y="974.0"></text>
</g>
<g>
<title>futex_wake (35 samples, 0.24%)</title><rect x="322.2" y="947.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="325.2" y="958.0"></text>
</g>
<g>
<title>get_futex_key (15 samples, 0.10%)</title><rect x="323.7" y="931.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="326.7" y="942.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (11 samples, 0.07%)</title><rect x="324.0" y="915.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="327.0" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (8 samples, 0.05%)</title><rect x="325.9" y="1027.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="328.9" y="1038.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (5 samples, 0.03%)</title><rect x="326.5" y="1027.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="329.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (652 samples, 4.40%)</title><rect x="327.0" y="1043.0" width="52.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="330.0" y="1054.0">[unkn..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (7 samples, 0.05%)</title><rect x="327.3" y="1027.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="330.3" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (571 samples, 3.86%)</title><rect x="328.0" y="1027.0" width="45.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="331.0" y="1038.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (148 samples, 1.00%)</title><rect x="361.7" y="1011.0" width="11.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.7" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (148 samples, 1.00%)</title><rect x="361.7" y="995.0" width="11.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.7" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (112 samples, 0.76%)</title><rect x="364.6" y="979.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="367.6" y="990.0"></text>
</g>
<g>
<title>do_futex (102 samples, 0.69%)</title><rect x="365.1" y="963.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="368.1" y="974.0"></text>
</g>
<g>
<title>futex_wait (99 samples, 0.67%)</title><rect x="365.3" y="947.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="368.3" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (44 samples, 0.30%)</title><rect x="366.4" y="931.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.4" y="942.0"></text>
</g>
<g>
<title>schedule (40 samples, 0.27%)</title><rect x="366.7" y="915.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.7" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (36 samples, 0.24%)</title><rect x="367.0" y="899.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="370.0" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.09%)</title><rect x="368.8" y="883.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="371.8" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (28 samples, 0.19%)</title><rect x="369.9" y="931.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="372.9" y="942.0"></text>
</g>
<g>
<title>get_futex_key (10 samples, 0.07%)</title><rect x="370.6" y="915.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="373.6" y="926.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (4 samples, 0.03%)</title><rect x="371.1" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="374.1" y="910.0"></text>
</g>
<g>
<title>get_futex_value_locked (8 samples, 0.05%)</title><rect x="371.5" y="915.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="374.5" y="926.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.03%)</title><rect x="372.2" y="931.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.2" y="942.0"></text>
</g>
<g>
<title>plist_add (8 samples, 0.05%)</title><rect x="372.5" y="931.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="375.5" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (49 samples, 0.33%)</title><rect x="373.5" y="1027.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="376.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (7 samples, 0.05%)</title><rect x="377.4" y="1027.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="380.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (5 samples, 0.03%)</title><rect x="378.2" y="1027.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="381.2" y="1038.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (5 samples, 0.03%)</title><rect x="378.6" y="1027.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="381.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (43 samples, 0.29%)</title><rect x="379.5" y="1091.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (43 samples, 0.29%)</title><rect x="379.5" y="1075.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (43 samples, 0.29%)</title><rect x="379.5" y="1059.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (43 samples, 0.29%)</title><rect x="379.5" y="1043.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 0.29%)</title><rect x="379.5" y="1027.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.26%)</title><rect x="379.8" y="1011.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.8" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.09%)</title><rect x="379.8" y="995.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="382.8" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.05%)</title><rect x="380.3" y="979.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="383.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="380.4" y="963.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="383.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="380.5" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="383.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.17%)</title><rect x="380.9" y="995.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="383.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.14%)</title><rect x="381.2" y="979.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="384.2" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.06%)</title><rect x="382.1" y="963.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.1" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.06%)</title><rect x="382.1" y="947.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.1" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.05%)</title><rect x="382.2" y="931.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="385.2" y="942.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="382.2" y="915.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="385.2" y="926.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.05%)</title><rect x="382.2" y="899.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="385.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (375 samples, 2.53%)</title><rect x="382.9" y="1091.0" width="29.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.9" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (375 samples, 2.53%)</title><rect x="382.9" y="1075.0" width="29.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.9" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (375 samples, 2.53%)</title><rect x="382.9" y="1059.0" width="29.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.9" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (356 samples, 2.40%)</title><rect x="384.4" y="1043.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.4" y="1054.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (356 samples, 2.40%)</title><rect x="384.4" y="1027.0" width="28.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.4" y="1038.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (41 samples, 0.28%)</title><rect x="384.9" y="1011.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="387.9" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (13 samples, 0.09%)</title><rect x="385.8" y="995.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="388.8" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.07%)</title><rect x="387.3" y="995.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="390.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (307 samples, 2.07%)</title><rect x="388.2" y="1011.0" width="24.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="391.2" y="1022.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (243 samples, 1.64%)</title><rect x="393.3" y="995.0" width="19.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="396.3" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (242 samples, 1.63%)</title><rect x="393.3" y="979.0" width="19.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="396.3" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (230 samples, 1.55%)</title><rect x="394.2" y="963.0" width="18.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="397.2" y="974.0"></text>
</g>
<g>
<title>do_futex (229 samples, 1.55%)</title><rect x="394.3" y="947.0" width="18.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.3" y="958.0"></text>
</g>
<g>
<title>futex_wake (227 samples, 1.53%)</title><rect x="394.5" y="931.0" width="18.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="397.5" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.07%)</title><rect x="395.3" y="915.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="398.3" y="926.0"></text>
</g>
<g>
<title>wake_up_q (205 samples, 1.38%)</title><rect x="396.2" y="915.0" width="16.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.2" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (199 samples, 1.34%)</title><rect x="396.7" y="899.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="399.7" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (199 samples, 1.34%)</title><rect x="396.7" y="883.0" width="15.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="399.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (14 samples, 0.09%)</title><rect x="412.9" y="1107.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (14 samples, 0.09%)</title><rect x="412.9" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (9 samples, 0.06%)</title><rect x="413.3" y="1075.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (7 samples, 0.05%)</title><rect x="413.4" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.05%)</title><rect x="413.4" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.4" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.03%)</title><rect x="413.4" y="1027.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="416.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1765573268.run (1,888 samples, 12.75%)</title><rect x="414.0" y="1123.0" width="150.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.0" y="1134.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,884 samples, 12.73%)</title><rect x="414.3" y="1107.0" width="150.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.3" y="1118.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,881 samples, 12.71%)</title><rect x="414.5" y="1091.0" width="150.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.5" y="1102.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,872 samples, 12.65%)</title><rect x="415.1" y="1075.0" width="149.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.1" y="1086.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,872 samples, 12.65%)</title><rect x="415.1" y="1059.0" width="149.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.1" y="1070.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,861 samples, 12.57%)</title><rect x="416.0" y="1043.0" width="148.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.0" y="1054.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,859 samples, 12.56%)</title><rect x="416.0" y="1027.0" width="148.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.0" y="1038.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,859 samples, 12.56%)</title><rect x="416.0" y="1011.0" width="148.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.0" y="1022.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,859 samples, 12.56%)</title><rect x="416.0" y="995.0" width="148.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.0" y="1006.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,857 samples, 12.54%)</title><rect x="416.1" y="979.0" width="148.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.1" y="990.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,853 samples, 12.52%)</title><rect x="416.5" y="963.0" width="147.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.5" y="974.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (229 samples, 1.55%)</title><rect x="417.0" y="947.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (183 samples, 1.24%)</title><rect x="418.9" y="931.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.04%)</title><rect x="418.9" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (177 samples, 1.20%)</title><rect x="419.3" y="915.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (177 samples, 1.20%)</title><rect x="419.3" y="899.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (175 samples, 1.18%)</title><rect x="419.5" y="883.0" width="13.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.5" y="894.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.07%)</title><rect x="419.8" y="867.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="422.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (52 samples, 0.35%)</title><rect x="420.6" y="867.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (9 samples, 0.06%)</title><rect x="421.4" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (9 samples, 0.06%)</title><rect x="421.4" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$428/2006974621.apply (17 samples, 0.11%)</title><rect x="422.2" y="851.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (17 samples, 0.11%)</title><rect x="422.2" y="835.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (17 samples, 0.11%)</title><rect x="422.2" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (15 samples, 0.10%)</title><rect x="422.3" y="803.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (12 samples, 0.08%)</title><rect x="422.5" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (12 samples, 0.08%)</title><rect x="422.5" y="771.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.03%)</title><rect x="423.1" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$188/1227969850.apply (15 samples, 0.10%)</title><rect x="423.6" y="851.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (15 samples, 0.10%)</title><rect x="423.6" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (14 samples, 0.09%)</title><rect x="423.6" y="819.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (13 samples, 0.09%)</title><rect x="423.7" y="803.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="426.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (13 samples, 0.09%)</title><rect x="423.7" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.09%)</title><rect x="423.7" y="771.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/611855769.run (12 samples, 0.08%)</title><rect x="423.8" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (12 samples, 0.08%)</title><rect x="423.8" y="739.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (10 samples, 0.07%)</title><rect x="424.0" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (10 samples, 0.07%)</title><rect x="424.0" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.07%)</title><rect x="424.0" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.07%)</title><rect x="424.0" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.07%)</title><rect x="424.0" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.07%)</title><rect x="424.0" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (8 samples, 0.05%)</title><rect x="424.1" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (8 samples, 0.05%)</title><rect x="424.1" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (8 samples, 0.05%)</title><rect x="424.1" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.1" y="606.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (8 samples, 0.05%)</title><rect x="424.1" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 0.05%)</title><rect x="424.1" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 0.05%)</title><rect x="424.1" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.05%)</title><rect x="424.1" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.05%)</title><rect x="424.1" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.1" y="526.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (7 samples, 0.05%)</title><rect x="424.2" y="499.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="427.2" y="510.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (7 samples, 0.05%)</title><rect x="424.2" y="483.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="427.2" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (7 samples, 0.05%)</title><rect x="424.2" y="467.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="427.2" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (7 samples, 0.05%)</title><rect x="424.2" y="451.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="427.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (96 samples, 0.65%)</title><rect x="424.7" y="867.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (93 samples, 0.63%)</title><rect x="425.0" y="851.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.03%)</title><rect x="425.0" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.03%)</title><rect x="425.3" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$371/1785628412.apply (85 samples, 0.57%)</title><rect x="425.6" y="835.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="428.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (82 samples, 0.55%)</title><rect x="425.9" y="819.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (82 samples, 0.55%)</title><rect x="425.9" y="803.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/885000023.apply (70 samples, 0.47%)</title><rect x="425.9" y="787.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (70 samples, 0.47%)</title><rect x="425.9" y="771.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.03%)</title><rect x="425.9" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (65 samples, 0.44%)</title><rect x="426.3" y="755.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (43 samples, 0.29%)</title><rect x="426.3" y="739.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (43 samples, 0.29%)</title><rect x="426.3" y="723.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (39 samples, 0.26%)</title><rect x="426.6" y="707.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$410/313701495.accept (11 samples, 0.07%)</title><rect x="426.6" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (11 samples, 0.07%)</title><rect x="426.6" y="675.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (11 samples, 0.07%)</title><rect x="426.6" y="659.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (11 samples, 0.07%)</title><rect x="426.6" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.07%)</title><rect x="426.6" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$423/249141808.accept (28 samples, 0.19%)</title><rect x="427.5" y="691.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (28 samples, 0.19%)</title><rect x="427.5" y="675.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (28 samples, 0.19%)</title><rect x="427.5" y="659.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (28 samples, 0.19%)</title><rect x="427.5" y="643.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (28 samples, 0.19%)</title><rect x="427.5" y="627.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.19%)</title><rect x="427.5" y="611.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.17%)</title><rect x="427.7" y="595.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.03%)</title><rect x="427.7" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.03%)</title><rect x="427.7" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (21 samples, 0.14%)</title><rect x="428.0" y="579.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (21 samples, 0.14%)</title><rect x="428.0" y="563.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (21 samples, 0.14%)</title><rect x="428.0" y="547.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (11 samples, 0.07%)</title><rect x="428.0" y="531.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.07%)</title><rect x="428.0" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.07%)</title><rect x="428.0" y="499.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.07%)</title><rect x="428.0" y="483.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (10 samples, 0.07%)</title><rect x="428.9" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (10 samples, 0.07%)</title><rect x="428.9" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.9" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.05%)</title><rect x="428.9" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (22 samples, 0.15%)</title><rect x="429.7" y="739.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (22 samples, 0.15%)</title><rect x="429.7" y="723.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (12 samples, 0.08%)</title><rect x="430.5" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.5" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.08%)</title><rect x="430.5" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.08%)</title><rect x="430.5" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.5" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.08%)</title><rect x="430.5" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.08%)</title><rect x="430.5" y="643.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.07%)</title><rect x="430.6" y="627.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.6" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="431.1" y="611.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="434.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.apply (12 samples, 0.08%)</title><rect x="431.4" y="787.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (12 samples, 0.08%)</title><rect x="431.4" y="771.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (11 samples, 0.07%)</title><rect x="431.5" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (11 samples, 0.07%)</title><rect x="431.5" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (11 samples, 0.07%)</title><rect x="431.5" y="723.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (11 samples, 0.07%)</title><rect x="431.5" y="707.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (11 samples, 0.07%)</title><rect x="431.5" y="691.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.03%)</title><rect x="432.4" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (9 samples, 0.06%)</title><rect x="433.4" y="931.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (7 samples, 0.05%)</title><rect x="433.6" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (4 samples, 0.03%)</title><rect x="433.7" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.07%)</title><rect x="434.3" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.03%)</title><rect x="434.3" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$435/1807893648.run (7 samples, 0.05%)</title><rect x="434.6" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (7 samples, 0.05%)</title><rect x="434.6" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (7 samples, 0.05%)</title><rect x="434.6" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (7 samples, 0.05%)</title><rect x="434.6" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.05%)</title><rect x="434.6" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (7 samples, 0.05%)</title><rect x="435.3" y="947.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (7 samples, 0.05%)</title><rect x="435.3" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (7 samples, 0.05%)</title><rect x="435.3" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,610 samples, 10.88%)</title><rect x="435.8" y="947.0" width="128.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.8" y="958.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,610 samples, 10.88%)</title><rect x="435.8" y="931.0" width="128.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.8" y="942.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,610 samples, 10.88%)</title><rect x="435.8" y="915.0" width="128.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.8" y="926.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,602 samples, 10.82%)</title><rect x="436.5" y="899.0" width="127.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.5" y="910.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$434/122392481.run (23 samples, 0.16%)</title><rect x="437.3" y="883.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (23 samples, 0.16%)</title><rect x="437.3" y="867.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (18 samples, 0.12%)</title><rect x="437.6" y="851.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (7 samples, 0.05%)</title><rect x="437.9" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.05%)</title><rect x="437.9" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.03%)</title><rect x="438.7" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,568 samples, 10.59%)</title><rect x="439.1" y="883.0" width="125.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.1" y="894.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1,551 samples, 10.48%)</title><rect x="439.5" y="867.0" width="123.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.5" y="878.0">java/nio/channe..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1,551 samples, 10.48%)</title><rect x="439.5" y="851.0" width="123.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.5" y="862.0">sun/nio/ch/Sock..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="439.7" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="439.7" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,543 samples, 10.42%)</title><rect x="440.1" y="835.0" width="123.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.1" y="846.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,542 samples, 10.42%)</title><rect x="440.2" y="819.0" width="122.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.2" y="830.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (33 samples, 0.22%)</title><rect x="440.2" y="803.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.2" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (33 samples, 0.22%)</title><rect x="440.2" y="787.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (33 samples, 0.22%)</title><rect x="440.2" y="771.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1,509 samples, 10.19%)</title><rect x="442.8" y="803.0" width="120.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.8" y="814.0">sun/nio/ch/Sock..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1,491 samples, 10.07%)</title><rect x="444.1" y="787.0" width="118.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.1" y="798.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.06%)</title><rect x="445.1" y="771.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="448.1" y="782.0"></text>
</g>
<g>
<title>fdval (5 samples, 0.03%)</title><rect x="446.1" y="771.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="449.1" y="782.0"></text>
</g>
<g>
<title>writev (1,461 samples, 9.87%)</title><rect x="446.5" y="771.0" width="116.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="449.5" y="782.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,391 samples, 9.40%)</title><rect x="452.1" y="755.0" width="110.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.1" y="766.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (1,389 samples, 9.38%)</title><rect x="452.3" y="739.0" width="110.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="455.3" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_writev (1,361 samples, 9.19%)</title><rect x="454.0" y="723.0" width="108.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="457.0" y="734.0">__x64_sys_wri..</text>
</g>
<g>
<title>do_writev (1,358 samples, 9.17%)</title><rect x="454.1" y="707.0" width="108.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.1" y="718.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (16 samples, 0.11%)</title><rect x="454.2" y="691.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="457.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.11%)</title><rect x="454.2" y="675.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.2" y="686.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.11%)</title><rect x="454.2" y="659.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="455.4" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.4" y="702.0"></text>
</g>
<g>
<title>vfs_writev (1,336 samples, 9.03%)</title><rect x="455.8" y="691.0" width="106.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="458.8" y="702.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (1,307 samples, 8.83%)</title><rect x="457.0" y="675.0" width="104.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.0" y="686.0">do_iter_write</text>
</g>
<g>
<title>__fsnotify_parent (12 samples, 0.08%)</title><rect x="458.0" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="461.0" y="670.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1,261 samples, 8.52%)</title><rect x="458.9" y="659.0" width="100.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="461.9" y="670.0">do_iter_read..</text>
</g>
<g>
<title>sock_write_iter (1,249 samples, 8.44%)</title><rect x="459.9" y="643.0" width="99.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="462.9" y="654.0">sock_write_i..</text>
</g>
<g>
<title>sock_sendmsg (1,241 samples, 8.38%)</title><rect x="460.5" y="627.0" width="99.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="463.5" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (11 samples, 0.07%)</title><rect x="460.7" y="611.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="463.7" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,223 samples, 8.26%)</title><rect x="461.6" y="611.0" width="97.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.6" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,216 samples, 8.21%)</title><rect x="462.1" y="595.0" width="97.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="465.1" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.06%)</title><rect x="462.1" y="579.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,196 samples, 8.08%)</title><rect x="463.4" y="579.0" width="95.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="466.4" y="590.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.05%)</title><rect x="465.4" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="468.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="465.6" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.6" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.05%)</title><rect x="466.0" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="469.0" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="466.0" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.0" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.03%)</title><rect x="466.7" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (76 samples, 0.51%)</title><rect x="467.0" y="563.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.0" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (70 samples, 0.47%)</title><rect x="467.5" y="547.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (34 samples, 0.23%)</title><rect x="467.9" y="531.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="470.9" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (21 samples, 0.14%)</title><rect x="467.9" y="515.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.9" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.03%)</title><rect x="468.8" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="471.8" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (4 samples, 0.03%)</title><rect x="469.2" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.2" y="510.0"></text>
</g>
<g>
<title>memset_erms (6 samples, 0.04%)</title><rect x="470.1" y="515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (21 samples, 0.14%)</title><rect x="470.7" y="531.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="473.7" y="542.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.03%)</title><rect x="472.3" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="475.3" y="542.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.03%)</title><rect x="472.3" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.3" y="526.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.05%)</title><rect x="473.1" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.1" y="574.0"></text>
</g>
<g>
<title>tcp_push (1,041 samples, 7.03%)</title><rect x="473.9" y="563.0" width="83.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.9" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,040 samples, 7.03%)</title><rect x="474.0" y="547.0" width="82.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="477.0" y="558.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (1,033 samples, 6.98%)</title><rect x="474.6" y="531.0" width="82.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.6" y="542.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (956 samples, 6.46%)</title><rect x="475.8" y="515.0" width="76.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="478.8" y="526.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (917 samples, 6.19%)</title><rect x="478.1" y="499.0" width="73.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="481.1" y="510.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (912 samples, 6.16%)</title><rect x="478.2" y="483.0" width="72.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="481.2" y="494.0">__ip_que..</text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.04%)</title><rect x="478.8" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.8" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.03%)</title><rect x="478.9" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.9" y="462.0"></text>
</g>
<g>
<title>ip_local_out (891 samples, 6.02%)</title><rect x="479.4" y="467.0" width="71.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.4" y="478.0">ip_local..</text>
</g>
<g>
<title>__ip_local_out (148 samples, 1.00%)</title><rect x="479.5" y="451.0" width="11.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.5" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (7 samples, 0.05%)</title><rect x="480.1" y="435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.1" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (5 samples, 0.03%)</title><rect x="480.6" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="483.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (128 samples, 0.86%)</title><rect x="481.0" y="435.0" width="10.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="484.0" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (17 samples, 0.11%)</title><rect x="481.3" y="419.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="484.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (17 samples, 0.11%)</title><rect x="481.3" y="403.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="484.3" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (97 samples, 0.66%)</title><rect x="482.8" y="419.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.8" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.03%)</title><rect x="483.0" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (86 samples, 0.58%)</title><rect x="483.6" y="403.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.6" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (22 samples, 0.15%)</title><rect x="484.3" y="387.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.3" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (40 samples, 0.27%)</title><rect x="486.6" y="387.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="489.6" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (26 samples, 0.18%)</title><rect x="487.7" y="371.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="490.7" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (9 samples, 0.06%)</title><rect x="489.1" y="355.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.1" y="366.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (8 samples, 0.05%)</title><rect x="489.8" y="387.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="492.8" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="490.5" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="493.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (5 samples, 0.03%)</title><rect x="490.8" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.03%)</title><rect x="490.9" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.03%)</title><rect x="491.3" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.3" y="462.0"></text>
</g>
<g>
<title>ip_output (732 samples, 4.94%)</title><rect x="491.6" y="451.0" width="58.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.6" y="462.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (695 samples, 4.69%)</title><rect x="492.7" y="435.0" width="55.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="495.7" y="446.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (9 samples, 0.06%)</title><rect x="492.7" y="419.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.7" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (679 samples, 4.59%)</title><rect x="493.5" y="419.0" width="54.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="496.5" y="430.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (675 samples, 4.56%)</title><rect x="493.7" y="403.0" width="53.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="496.7" y="414.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (611 samples, 4.13%)</title><rect x="495.0" y="387.0" width="48.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="498.0" y="398.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (610 samples, 4.12%)</title><rect x="495.1" y="371.0" width="48.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.1" y="382.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (606 samples, 4.09%)</title><rect x="495.4" y="355.0" width="48.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.4" y="366.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (604 samples, 4.08%)</title><rect x="495.4" y="339.0" width="48.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.4" y="350.0">__so..</text>
</g>
<g>
<title>net_rx_action (592 samples, 4.00%)</title><rect x="496.3" y="323.0" width="47.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="499.3" y="334.0">net_..</text>
</g>
<g>
<title>process_backlog (584 samples, 3.95%)</title><rect x="496.9" y="307.0" width="46.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.9" y="318.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (580 samples, 3.92%)</title><rect x="497.2" y="291.0" width="46.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="500.2" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (578 samples, 3.90%)</title><rect x="497.4" y="275.0" width="46.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="500.4" y="286.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 0.07%)</title><rect x="497.5" y="259.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="500.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv (565 samples, 3.82%)</title><rect x="498.3" y="259.0" width="45.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="501.3" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.03%)</title><rect x="498.7" y="243.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (535 samples, 3.61%)</title><rect x="499.1" y="243.0" width="42.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.1" y="254.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (527 samples, 3.56%)</title><rect x="499.4" y="227.0" width="42.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="502.4" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (501 samples, 3.38%)</title><rect x="499.9" y="211.0" width="40.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="502.9" y="222.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (496 samples, 3.35%)</title><rect x="499.9" y="195.0" width="39.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="502.9" y="206.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (487 samples, 3.29%)</title><rect x="500.6" y="179.0" width="38.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.6" y="190.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (37 samples, 0.25%)</title><rect x="502.1" y="163.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="505.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (14 samples, 0.09%)</title><rect x="505.3" y="163.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="508.3" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.05%)</title><rect x="505.4" y="147.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="508.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (412 samples, 2.78%)</title><rect x="506.5" y="163.0" width="32.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.5" y="174.0">tc..</text>
</g>
<g>
<title>tcp_check_space (13 samples, 0.09%)</title><rect x="506.7" y="147.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="509.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (394 samples, 2.66%)</title><rect x="507.9" y="147.0" width="31.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.9" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (27 samples, 0.18%)</title><rect x="509.4" y="131.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="512.4" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (24 samples, 0.16%)</title><rect x="509.6" y="115.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="512.6" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (24 samples, 0.16%)</title><rect x="509.6" y="99.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.6" y="110.0"></text>
</g>
<g>
<title>mod_timer (21 samples, 0.14%)</title><rect x="509.9" y="83.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="512.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.13%)</title><rect x="510.0" y="67.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="513.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.03%)</title><rect x="511.6" y="131.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack (78 samples, 0.53%)</title><rect x="512.0" y="131.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="515.0" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (54 samples, 0.36%)</title><rect x="513.3" y="115.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.3" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (39 samples, 0.26%)</title><rect x="513.9" y="99.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.9" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (8 samples, 0.05%)</title><rect x="513.9" y="83.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="516.9" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.03%)</title><rect x="514.1" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="517.1" y="78.0"></text>
</g>
<g>
<title>skb_release_all (29 samples, 0.20%)</title><rect x="514.6" y="83.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (28 samples, 0.19%)</title><rect x="514.6" y="67.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.6" y="78.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.07%)</title><rect x="516.0" y="51.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="519.0" y="62.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.07%)</title><rect x="516.0" y="35.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="519.0" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.03%)</title><rect x="517.2" y="99.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="520.2" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (239 samples, 1.61%)</title><rect x="518.3" y="131.0" width="19.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.3" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (239 samples, 1.61%)</title><rect x="518.3" y="115.0" width="19.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="521.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (232 samples, 1.57%)</title><rect x="518.8" y="99.0" width="18.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="521.8" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (231 samples, 1.56%)</title><rect x="518.9" y="83.0" width="18.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="521.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (228 samples, 1.54%)</title><rect x="519.0" y="67.0" width="18.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.0" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.04%)</title><rect x="537.5" y="131.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.5" y="142.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.03%)</title><rect x="537.7" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="540.7" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (10 samples, 0.07%)</title><rect x="538.0" y="131.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="541.0" y="142.0"></text>
</g>
<g>
<title>tcp_try_coalesce (5 samples, 0.03%)</title><rect x="538.4" y="115.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="541.4" y="126.0"></text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.03%)</title><rect x="539.5" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="542.5" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.03%)</title><rect x="540.0" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.08%)</title><rect x="540.3" y="211.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="543.3" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.06%)</title><rect x="540.4" y="195.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="543.4" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.06%)</title><rect x="540.4" y="179.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.4" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (5 samples, 0.03%)</title><rect x="541.8" y="243.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="544.8" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.07%)</title><rect x="542.5" y="243.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="545.5" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (6 samples, 0.04%)</title><rect x="542.6" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="545.6" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.04%)</title><rect x="542.6" y="211.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="545.6" y="222.0"></text>
</g>
<g>
<title>dev_queue_xmit (46 samples, 0.31%)</title><rect x="543.7" y="387.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="546.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (45 samples, 0.30%)</title><rect x="543.7" y="371.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (23 samples, 0.16%)</title><rect x="544.5" y="355.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="547.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.11%)</title><rect x="544.8" y="339.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="547.8" y="350.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.05%)</title><rect x="545.2" y="323.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="548.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.03%)</title><rect x="545.4" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.4" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.03%)</title><rect x="545.4" y="291.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="548.4" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.05%)</title><rect x="546.6" y="355.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="549.6" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.03%)</title><rect x="546.9" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="549.9" y="350.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.04%)</title><rect x="547.7" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="550.7" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (7 samples, 0.05%)</title><rect x="548.1" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="551.1" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.09%)</title><rect x="548.7" y="435.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="551.7" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.03%)</title><rect x="548.7" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.7" y="430.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (4 samples, 0.03%)</title><rect x="548.8" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.8" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (6 samples, 0.04%)</title><rect x="549.3" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="552.3" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="550.0" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="553.0" y="462.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.03%)</title><rect x="550.4" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="553.4" y="478.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.05%)</title><rect x="551.2" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="554.2" y="510.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.03%)</title><rect x="551.3" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.3" y="494.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.03%)</title><rect x="552.5" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="555.5" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (23 samples, 0.16%)</title><rect x="552.8" y="515.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="555.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (20 samples, 0.14%)</title><rect x="553.1" y="499.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.1" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (19 samples, 0.13%)</title><rect x="553.2" y="483.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="556.2" y="494.0"></text>
</g>
<g>
<title>mod_timer (18 samples, 0.12%)</title><rect x="553.2" y="467.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.2" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="553.6" y="451.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.6" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (18 samples, 0.12%)</title><rect x="554.8" y="515.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="557.8" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.07%)</title><rect x="555.4" y="499.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.4" y="510.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.07%)</title><rect x="555.4" y="483.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.4" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.07%)</title><rect x="555.4" y="467.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="558.4" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (7 samples, 0.05%)</title><rect x="556.4" y="515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="559.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (23 samples, 0.16%)</title><rect x="556.9" y="563.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="559.9" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (18 samples, 0.12%)</title><rect x="557.3" y="547.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.03%)</title><rect x="558.3" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="561.3" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.03%)</title><rect x="559.1" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="562.1" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (18 samples, 0.12%)</title><rect x="559.7" y="659.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="562.7" y="670.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.07%)</title><rect x="560.3" y="643.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.3" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.05%)</title><rect x="560.3" y="627.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.3" y="638.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.05%)</title><rect x="560.3" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="563.3" y="622.0"></text>
</g>
<g>
<title>import_iovec (12 samples, 0.08%)</title><rect x="561.1" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="564.1" y="686.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (10 samples, 0.07%)</title><rect x="561.3" y="659.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.3" y="670.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.03%)</title><rect x="561.4" y="643.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.4" y="654.0"></text>
</g>
<g>
<title>do_writev (4 samples, 0.03%)</title><rect x="562.5" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="565.5" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (12 samples, 0.08%)</title><rect x="563.1" y="867.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,158 samples, 14.58%)</title><rect x="564.5" y="1123.0" width="172.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.5" y="1134.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="565.2" y="1107.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="568.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,145 samples, 14.49%)</title><rect x="565.5" y="1107.0" width="171.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.5" y="1118.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (804 samples, 5.43%)</title><rect x="565.8" y="1091.0" width="64.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.8" y="1102.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (799 samples, 5.40%)</title><rect x="566.2" y="1075.0" width="63.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.2" y="1086.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (798 samples, 5.39%)</title><rect x="566.3" y="1059.0" width="63.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.3" y="1070.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (136 samples, 0.92%)</title><rect x="566.8" y="1043.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (136 samples, 0.92%)</title><rect x="566.8" y="1027.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (136 samples, 0.92%)</title><rect x="566.8" y="1011.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (136 samples, 0.92%)</title><rect x="566.8" y="995.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (131 samples, 0.88%)</title><rect x="566.8" y="979.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (113 samples, 0.76%)</title><rect x="568.2" y="963.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (110 samples, 0.74%)</title><rect x="568.3" y="947.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (110 samples, 0.74%)</title><rect x="568.3" y="931.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (12 samples, 0.08%)</title><rect x="568.4" y="915.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (97 samples, 0.66%)</title><rect x="569.4" y="915.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.4" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.11%)</title><rect x="570.0" y="899.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="573.0" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.09%)</title><rect x="570.2" y="883.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="573.2" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.07%)</title><rect x="570.5" y="867.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="573.5" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (10 samples, 0.07%)</title><rect x="570.5" y="851.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="573.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (72 samples, 0.49%)</title><rect x="571.3" y="899.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (68 samples, 0.46%)</title><rect x="571.7" y="883.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.7" y="894.0"></text>
</g>
<g>
<title>__libc_write (65 samples, 0.44%)</title><rect x="571.8" y="867.0" width="5.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="574.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.39%)</title><rect x="572.4" y="851.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.4" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 0.39%)</title><rect x="572.4" y="835.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.4" y="846.0"></text>
</g>
<g>
<title>__x64_sys_write (54 samples, 0.36%)</title><rect x="572.7" y="819.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="575.7" y="830.0"></text>
</g>
<g>
<title>ksys_write (54 samples, 0.36%)</title><rect x="572.7" y="803.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.7" y="814.0"></text>
</g>
<g>
<title>vfs_write (51 samples, 0.34%)</title><rect x="572.9" y="787.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="575.9" y="798.0"></text>
</g>
<g>
<title>__vfs_write (45 samples, 0.30%)</title><rect x="573.3" y="771.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.3" y="782.0"></text>
</g>
<g>
<title>new_sync_write (45 samples, 0.30%)</title><rect x="573.3" y="755.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.3" y="766.0"></text>
</g>
<g>
<title>pipe_write (37 samples, 0.25%)</title><rect x="573.9" y="739.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="576.9" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 0.20%)</title><rect x="574.0" y="723.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="577.0" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.19%)</title><rect x="574.1" y="707.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="577.1" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (28 samples, 0.19%)</title><rect x="574.1" y="691.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.1" y="702.0"></text>
</g>
<g>
<title>copy_page_from_iter (5 samples, 0.03%)</title><rect x="576.3" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (5 samples, 0.03%)</title><rect x="577.2" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.05%)</title><rect x="577.6" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.04%)</title><rect x="577.6" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6 samples, 0.04%)</title><rect x="577.6" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/287410361.run (4 samples, 0.03%)</title><rect x="577.6" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.03%)</title><rect x="577.6" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.03%)</title><rect x="577.6" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.03%)</title><rect x="577.6" y="947.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4 samples, 0.03%)</title><rect x="577.6" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (4 samples, 0.03%)</title><rect x="577.6" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.03%)</title><rect x="577.6" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 0.03%)</title><rect x="577.6" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.03%)</title><rect x="577.6" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (647 samples, 4.37%)</title><rect x="578.4" y="1043.0" width="51.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.4" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (643 samples, 4.34%)</title><rect x="578.4" y="1027.0" width="51.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.4" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (643 samples, 4.34%)</title><rect x="578.4" y="1011.0" width="51.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.4" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (643 samples, 4.34%)</title><rect x="578.4" y="995.0" width="51.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.4" y="1006.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (327 samples, 2.21%)</title><rect x="578.8" y="979.0" width="26.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.8" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (327 samples, 2.21%)</title><rect x="578.8" y="963.0" width="26.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.8" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (323 samples, 2.18%)</title><rect x="579.1" y="947.0" width="25.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.1" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (322 samples, 2.18%)</title><rect x="579.2" y="931.0" width="25.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.2" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (317 samples, 2.14%)</title><rect x="579.6" y="915.0" width="25.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.6" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (317 samples, 2.14%)</title><rect x="579.6" y="899.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.6" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (317 samples, 2.14%)</title><rect x="579.6" y="883.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.6" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (293 samples, 1.98%)</title><rect x="580.4" y="867.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.4" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (293 samples, 1.98%)</title><rect x="580.4" y="851.0" width="23.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.4" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (260 samples, 1.76%)</title><rect x="580.6" y="835.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (15 samples, 0.10%)</title><rect x="581.1" y="819.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (15 samples, 0.10%)</title><rect x="581.1" y="803.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.1" y="814.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="581.1" y="787.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="584.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$188/1227969850.apply (4 samples, 0.03%)</title><rect x="581.8" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$188/1227969850.apply (199 samples, 1.34%)</title><rect x="582.7" y="819.0" width="15.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (199 samples, 1.34%)</title><rect x="582.7" y="803.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (189 samples, 1.28%)</title><rect x="583.3" y="787.0" width="15.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (187 samples, 1.26%)</title><rect x="583.5" y="771.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (187 samples, 1.26%)</title><rect x="583.5" y="755.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.5" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (51 samples, 0.34%)</title><rect x="583.5" y="739.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (20 samples, 0.14%)</title><rect x="583.5" y="723.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.5" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (20 samples, 0.14%)</title><rect x="583.5" y="707.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (20 samples, 0.14%)</title><rect x="583.5" y="691.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.07%)</title><rect x="584.3" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (8 samples, 0.05%)</title><rect x="584.5" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="584.7" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.03%)</title><rect x="584.7" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.03%)</title><rect x="584.7" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (31 samples, 0.21%)</title><rect x="585.1" y="723.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (25 samples, 0.17%)</title><rect x="585.6" y="707.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (20 samples, 0.14%)</title><rect x="585.6" y="691.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (17 samples, 0.11%)</title><rect x="585.9" y="675.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.04%)</title><rect x="585.9" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.03%)</title><rect x="585.9" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (11 samples, 0.07%)</title><rect x="586.3" y="659.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (4 samples, 0.03%)</title><rect x="586.9" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (4 samples, 0.03%)</title><rect x="586.9" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (4 samples, 0.03%)</title><rect x="586.9" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.03%)</title><rect x="587.2" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (5 samples, 0.03%)</title><rect x="587.2" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.03%)</title><rect x="587.2" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.09%)</title><rect x="587.6" y="739.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.03%)</title><rect x="587.8" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (121 samples, 0.82%)</title><rect x="588.7" y="739.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.07%)</title><rect x="588.7" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/611855769.run (111 samples, 0.75%)</title><rect x="589.5" y="723.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (111 samples, 0.75%)</title><rect x="589.5" y="707.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (38 samples, 0.26%)</title><rect x="589.8" y="691.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.03%)</title><rect x="589.9" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.03%)</title><rect x="589.9" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.21%)</title><rect x="590.3" y="675.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.3" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.05%)</title><rect x="592.1" y="659.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="595.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (68 samples, 0.46%)</title><rect x="592.9" y="691.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (68 samples, 0.46%)</title><rect x="592.9" y="675.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.9" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (49 samples, 0.33%)</title><rect x="592.9" y="659.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.9" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (33 samples, 0.22%)</title><rect x="594.0" y="643.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.0" y="654.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (33 samples, 0.22%)</title><rect x="594.0" y="627.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.0" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (21 samples, 0.14%)</title><rect x="594.1" y="611.0" width="1.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="597.1" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (7 samples, 0.05%)</title><rect x="594.7" y="595.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="597.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.12%)</title><rect x="596.9" y="659.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.12%)</title><rect x="596.9" y="643.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.12%)</title><rect x="596.9" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/137991968.apply (34 samples, 0.23%)</title><rect x="598.6" y="819.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (34 samples, 0.23%)</title><rect x="598.6" y="803.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (23 samples, 0.16%)</title><rect x="598.6" y="787.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (14 samples, 0.09%)</title><rect x="599.3" y="771.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (12 samples, 0.08%)</title><rect x="599.5" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.5" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.03%)</title><rect x="600.0" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.07%)</title><rect x="600.4" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.07%)</title><rect x="600.5" y="771.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.07%)</title><rect x="600.5" y="755.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (14 samples, 0.09%)</title><rect x="601.3" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.07%)</title><rect x="601.6" y="819.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/905457088.apply (7 samples, 0.05%)</title><rect x="601.9" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.05%)</title><rect x="601.9" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (7 samples, 0.05%)</title><rect x="601.9" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.04%)</title><rect x="602.0" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.04%)</title><rect x="602.0" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (15 samples, 0.10%)</title><rect x="602.4" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (8 samples, 0.05%)</title><rect x="602.9" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (6 samples, 0.04%)</title><rect x="603.1" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$437/109749654.apply (14 samples, 0.09%)</title><rect x="603.7" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (14 samples, 0.09%)</title><rect x="603.7" y="851.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (11 samples, 0.07%)</title><rect x="603.9" y="835.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.06%)</title><rect x="603.9" y="819.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.06%)</title><rect x="603.9" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.06%)</title><rect x="603.9" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (301 samples, 2.03%)</title><rect x="604.9" y="979.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.9" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (15 samples, 0.10%)</title><rect x="607.2" y="963.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (48 samples, 0.32%)</title><rect x="608.4" y="963.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (28 samples, 0.19%)</title><rect x="610.0" y="947.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.0" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (28 samples, 0.19%)</title><rect x="610.0" y="931.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (37 samples, 0.25%)</title><rect x="612.2" y="963.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (33 samples, 0.22%)</title><rect x="612.6" y="947.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.6" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (33 samples, 0.22%)</title><rect x="612.6" y="931.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.6" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.05%)</title><rect x="614.6" y="915.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="617.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (46 samples, 0.31%)</title><rect x="615.3" y="963.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.3" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (46 samples, 0.31%)</title><rect x="615.3" y="947.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.3" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (46 samples, 0.31%)</title><rect x="615.3" y="931.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.3" y="942.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="615.6" y="915.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="618.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (35 samples, 0.24%)</title><rect x="616.1" y="915.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (28 samples, 0.19%)</title><rect x="616.6" y="899.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.6" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.18%)</title><rect x="616.8" y="883.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (8 samples, 0.05%)</title><rect x="616.9" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.9" y="878.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.03%)</title><rect x="617.1" y="851.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="620.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.05%)</title><rect x="617.5" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.5" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (4 samples, 0.03%)</title><rect x="617.8" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.8" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.03%)</title><rect x="617.8" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.04%)</title><rect x="618.2" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (123 samples, 0.83%)</title><rect x="618.9" y="963.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.05%)</title><rect x="618.9" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.9" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.05%)</title><rect x="618.9" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.9" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.05%)</title><rect x="618.9" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.9" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.05%)</title><rect x="618.9" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (115 samples, 0.78%)</title><rect x="619.6" y="947.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.14%)</title><rect x="619.6" y="931.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.14%)</title><rect x="619.6" y="915.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (20 samples, 0.14%)</title><rect x="619.6" y="899.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (60 samples, 0.41%)</title><rect x="621.3" y="931.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (22 samples, 0.15%)</title><rect x="623.9" y="915.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.9" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="625.6" y="915.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="628.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (28 samples, 0.19%)</title><rect x="626.5" y="931.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.07%)</title><rect x="627.0" y="915.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="627.5" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.5" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.03%)</title><rect x="627.5" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.04%)</title><rect x="627.9" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$440/1537378334.apply (5 samples, 0.03%)</title><rect x="628.3" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (5 samples, 0.03%)</title><rect x="628.3" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="628.3" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$331/827520910.accept (9 samples, 0.06%)</title><rect x="628.9" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (9 samples, 0.06%)</title><rect x="628.9" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (4 samples, 0.03%)</title><rect x="629.6" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (4 samples, 0.03%)</title><rect x="629.6" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,337 samples, 9.03%)</title><rect x="629.9" y="1091.0" width="106.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.9" y="1102.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,329 samples, 8.98%)</title><rect x="630.6" y="1075.0" width="105.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.6" y="1086.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,327 samples, 8.96%)</title><rect x="630.6" y="1059.0" width="105.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.6" y="1070.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (1,324 samples, 8.94%)</title><rect x="630.9" y="1043.0" width="105.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.9" y="1054.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,316 samples, 8.89%)</title><rect x="631.5" y="1027.0" width="104.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.5" y="1038.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,301 samples, 8.79%)</title><rect x="632.4" y="1011.0" width="103.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.4" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,299 samples, 8.78%)</title><rect x="632.4" y="995.0" width="103.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.4" y="1006.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,299 samples, 8.78%)</title><rect x="632.4" y="979.0" width="103.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.4" y="990.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/287410361.run (842 samples, 5.69%)</title><rect x="632.8" y="963.0" width="67.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.8" y="974.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (842 samples, 5.69%)</title><rect x="632.8" y="947.0" width="67.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.8" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (842 samples, 5.69%)</title><rect x="632.8" y="931.0" width="67.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.8" y="942.0">jdk/int..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (21 samples, 0.14%)</title><rect x="632.8" y="915.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (13 samples, 0.09%)</title><rect x="632.8" y="899.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.8" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (13 samples, 0.09%)</title><rect x="632.8" y="883.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.8" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (13 samples, 0.09%)</title><rect x="632.8" y="867.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.8" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.07%)</title><rect x="633.0" y="851.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.0" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (9 samples, 0.06%)</title><rect x="633.0" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.05%)</title><rect x="633.2" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.05%)</title><rect x="633.2" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (7 samples, 0.05%)</title><rect x="633.2" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (8 samples, 0.05%)</title><rect x="633.8" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.05%)</title><rect x="633.9" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.05%)</title><rect x="633.9" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.05%)</title><rect x="633.9" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.03%)</title><rect x="634.2" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (820 samples, 5.54%)</title><rect x="634.5" y="915.0" width="65.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.5" y="926.0">jdk/int..</text>
</g>
<g>
<title>java/time/Instant.now (15 samples, 0.10%)</title><rect x="634.5" y="899.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.5" y="910.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (15 samples, 0.10%)</title><rect x="634.5" y="883.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (10 samples, 0.07%)</title><rect x="634.9" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.9" y="878.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (10 samples, 0.07%)</title><rect x="634.9" y="851.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="637.9" y="862.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (5 samples, 0.03%)</title><rect x="635.3" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="638.3" y="846.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="635.4" y="819.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="638.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (805 samples, 5.44%)</title><rect x="635.7" y="899.0" width="64.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.7" y="910.0">jdk/int..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (173 samples, 1.17%)</title><rect x="639.7" y="883.0" width="13.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="642.7" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (173 samples, 1.17%)</title><rect x="639.7" y="867.0" width="13.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="642.7" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (168 samples, 1.13%)</title><rect x="640.1" y="851.0" width="13.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="643.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (143 samples, 0.97%)</title><rect x="640.2" y="835.0" width="11.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="643.2" y="846.0"></text>
</g>
<g>
<title>SpinPause (23 samples, 0.16%)</title><rect x="651.6" y="835.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="654.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (393 samples, 2.65%)</title><rect x="653.8" y="883.0" width="31.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.8" y="894.0">jd..</text>
</g>
<g>
<title>java/time/Instant.plus (165 samples, 1.11%)</title><rect x="659.8" y="867.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (165 samples, 1.11%)</title><rect x="659.8" y="851.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.8" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.plus (165 samples, 1.11%)</title><rect x="659.8" y="835.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.8" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (39 samples, 0.26%)</title><rect x="669.8" y="819.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.8" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.create (38 samples, 0.26%)</title><rect x="669.9" y="803.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.9" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (4 samples, 0.03%)</title><rect x="673.0" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.0" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (14 samples, 0.09%)</title><rect x="673.3" y="867.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.3" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (14 samples, 0.09%)</title><rect x="673.3" y="851.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.3" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (10 samples, 0.07%)</title><rect x="673.3" y="835.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.3" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (4 samples, 0.03%)</title><rect x="673.8" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (4 samples, 0.03%)</title><rect x="674.1" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.1" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (10 samples, 0.07%)</title><rect x="674.6" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.6" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (8 samples, 0.05%)</title><rect x="674.7" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.7" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (5 samples, 0.03%)</title><rect x="675.4" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.4" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (91 samples, 0.61%)</title><rect x="675.8" y="867.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (25 samples, 0.17%)</title><rect x="683.0" y="867.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (8 samples, 0.05%)</title><rect x="685.1" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.05%)</title><rect x="685.2" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.05%)</title><rect x="685.2" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (6 samples, 0.04%)</title><rect x="685.3" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.3" y="846.0"></text>
</g>
<g>
<title>java/util/Objects.equals (6 samples, 0.04%)</title><rect x="685.3" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.3" y="830.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (6 samples, 0.04%)</title><rect x="685.3" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.3" y="814.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (6 samples, 0.04%)</title><rect x="685.3" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (176 samples, 1.19%)</title><rect x="685.7" y="883.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (176 samples, 1.19%)</title><rect x="685.7" y="867.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (28 samples, 0.19%)</title><rect x="685.7" y="851.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (28 samples, 0.19%)</title><rect x="685.7" y="835.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (28 samples, 0.19%)</title><rect x="685.7" y="819.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (20 samples, 0.14%)</title><rect x="685.7" y="803.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (20 samples, 0.14%)</title><rect x="685.7" y="787.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.7" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="685.8" y="771.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="688.8" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.03%)</title><rect x="685.8" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="688.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.09%)</title><rect x="686.2" y="771.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.03%)</title><rect x="687.0" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.0" y="766.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.03%)</title><rect x="687.0" y="739.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="690.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (8 samples, 0.05%)</title><rect x="687.3" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (147 samples, 0.99%)</title><rect x="688.0" y="851.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (147 samples, 0.99%)</title><rect x="688.0" y="835.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (137 samples, 0.93%)</title><rect x="688.2" y="819.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (125 samples, 0.84%)</title><rect x="688.3" y="803.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (125 samples, 0.84%)</title><rect x="688.3" y="787.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.3" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.14%)</title><rect x="689.2" y="771.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="692.2" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21 samples, 0.14%)</title><rect x="689.2" y="755.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="692.2" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (18 samples, 0.12%)</title><rect x="689.4" y="739.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="692.4" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (12 samples, 0.08%)</title><rect x="689.4" y="723.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="692.4" y="734.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="690.4" y="723.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="693.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (90 samples, 0.61%)</title><rect x="691.1" y="771.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (80 samples, 0.54%)</title><rect x="691.9" y="755.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.9" y="766.0"></text>
</g>
<g>
<title>__libc_write (77 samples, 0.52%)</title><rect x="691.9" y="739.0" width="6.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="694.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 0.42%)</title><rect x="693.1" y="723.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="696.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.03%)</title><rect x="693.1" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="696.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 0.39%)</title><rect x="693.5" y="707.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="696.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (55 samples, 0.37%)</title><rect x="693.7" y="691.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="696.7" y="702.0"></text>
</g>
<g>
<title>ksys_write (55 samples, 0.37%)</title><rect x="693.7" y="675.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.7" y="686.0"></text>
</g>
<g>
<title>vfs_write (48 samples, 0.32%)</title><rect x="694.3" y="659.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.3" y="670.0"></text>
</g>
<g>
<title>__vfs_write (39 samples, 0.26%)</title><rect x="694.6" y="643.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.6" y="654.0"></text>
</g>
<g>
<title>new_sync_write (38 samples, 0.26%)</title><rect x="694.7" y="627.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.7" y="638.0"></text>
</g>
<g>
<title>pipe_write (32 samples, 0.22%)</title><rect x="695.1" y="611.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.1" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (24 samples, 0.16%)</title><rect x="695.5" y="595.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="698.5" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 0.16%)</title><rect x="695.5" y="579.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.16%)</title><rect x="695.5" y="563.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="698.5" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="697.7" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="700.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (11 samples, 0.07%)</title><rect x="698.2" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.2" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.05%)</title><rect x="698.5" y="787.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="701.5" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (7 samples, 0.05%)</title><rect x="698.6" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="701.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.04%)</title><rect x="699.1" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/1806290182.accept (46 samples, 0.31%)</title><rect x="699.9" y="963.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (46 samples, 0.31%)</title><rect x="699.9" y="947.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (45 samples, 0.30%)</title><rect x="700.0" y="931.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 0.28%)</title><rect x="700.1" y="915.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.28%)</title><rect x="700.1" y="899.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (38 samples, 0.26%)</title><rect x="700.4" y="883.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35 samples, 0.24%)</title><rect x="700.6" y="867.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.06%)</title><rect x="700.9" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.06%)</title><rect x="700.9" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.06%)</title><rect x="700.9" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (9 samples, 0.06%)</title><rect x="700.9" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.06%)</title><rect x="700.9" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.06%)</title><rect x="700.9" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$467/260729516.accept (5 samples, 0.03%)</title><rect x="701.6" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (5 samples, 0.03%)</title><rect x="701.6" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (5 samples, 0.03%)</title><rect x="701.6" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (5 samples, 0.03%)</title><rect x="701.6" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$471/1154418669.accept (18 samples, 0.12%)</title><rect x="702.0" y="851.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (18 samples, 0.12%)</title><rect x="702.0" y="835.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (18 samples, 0.12%)</title><rect x="702.0" y="819.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.0" y="830.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (17 samples, 0.11%)</title><rect x="702.1" y="803.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.1" y="814.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (7 samples, 0.05%)</title><rect x="702.8" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (394 samples, 2.66%)</title><rect x="703.7" y="963.0" width="31.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.7" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (394 samples, 2.66%)</title><rect x="703.7" y="947.0" width="31.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.7" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (389 samples, 2.63%)</title><rect x="704.1" y="931.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.1" y="942.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (384 samples, 2.59%)</title><rect x="704.1" y="915.0" width="30.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.1" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (384 samples, 2.59%)</title><rect x="704.1" y="899.0" width="30.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.1" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (381 samples, 2.57%)</title><rect x="704.3" y="883.0" width="30.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.3" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (375 samples, 2.53%)</title><rect x="704.8" y="867.0" width="29.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.8" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.03%)</title><rect x="705.0" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.03%)</title><rect x="705.0" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.03%)</title><rect x="705.0" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.03%)</title><rect x="705.0" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.03%)</title><rect x="705.0" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="705.0" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$476/955279240.accept (367 samples, 2.48%)</title><rect x="705.4" y="851.0" width="29.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.4" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (356 samples, 2.40%)</title><rect x="706.3" y="835.0" width="28.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.3" y="846.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (356 samples, 2.40%)</title><rect x="706.3" y="819.0" width="28.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.3" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (356 samples, 2.40%)</title><rect x="706.3" y="803.0" width="28.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.3" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (18 samples, 0.12%)</title><rect x="706.3" y="787.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.03%)</title><rect x="706.7" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.03%)</title><rect x="706.7" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$488/398166842.apply (4 samples, 0.03%)</title><rect x="706.7" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$488/398166842.apply (9 samples, 0.06%)</title><rect x="707.0" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (9 samples, 0.06%)</title><rect x="707.0" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (332 samples, 2.24%)</title><rect x="708.0" y="787.0" width="26.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.0" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (331 samples, 2.24%)</title><rect x="708.1" y="771.0" width="26.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.1" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (321 samples, 2.17%)</title><rect x="708.4" y="755.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.4" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (321 samples, 2.17%)</title><rect x="708.4" y="739.0" width="25.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.4" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (321 samples, 2.17%)</title><rect x="708.4" y="723.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.4" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (22 samples, 0.15%)</title><rect x="708.4" y="707.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (22 samples, 0.15%)</title><rect x="708.4" y="691.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.15%)</title><rect x="708.4" y="675.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.4" y="686.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.04%)</title><rect x="708.8" y="659.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="711.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$199/469762584.accept (6 samples, 0.04%)</title><rect x="709.6" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (299 samples, 2.02%)</title><rect x="710.1" y="707.0" width="23.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.1" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (299 samples, 2.02%)</title><rect x="710.1" y="691.0" width="23.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.1" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (299 samples, 2.02%)</title><rect x="710.1" y="675.0" width="23.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.1" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (289 samples, 1.95%)</title><rect x="710.9" y="659.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.9" y="670.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.26%)</title><rect x="711.7" y="643.0" width="3.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="714.7" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.06%)</title><rect x="712.9" y="627.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="715.9" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (9 samples, 0.06%)</title><rect x="714.1" y="627.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="717.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (236 samples, 1.59%)</title><rect x="715.1" y="643.0" width="18.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="718.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (189 samples, 1.28%)</title><rect x="718.8" y="627.0" width="15.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (187 samples, 1.26%)</title><rect x="719.0" y="611.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (174 samples, 1.18%)</title><rect x="719.8" y="595.0" width="13.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="722.8" y="606.0"></text>
</g>
<g>
<title>do_futex (170 samples, 1.15%)</title><rect x="720.0" y="579.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="723.0" y="590.0"></text>
</g>
<g>
<title>futex_wake (164 samples, 1.11%)</title><rect x="720.2" y="563.0" width="13.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.2" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.04%)</title><rect x="720.8" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="723.8" y="558.0"></text>
</g>
<g>
<title>wake_up_q (148 samples, 1.00%)</title><rect x="721.4" y="547.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="724.4" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (147 samples, 0.99%)</title><rect x="721.5" y="531.0" width="11.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="724.5" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (145 samples, 0.98%)</title><rect x="721.6" y="515.0" width="11.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$199/469762584.accept (4 samples, 0.03%)</title><rect x="734.1" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (4 samples, 0.03%)</title><rect x="734.1" y="739.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (4 samples, 0.03%)</title><rect x="734.1" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (5 samples, 0.03%)</title><rect x="734.7" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (11 samples, 0.07%)</title><rect x="735.1" y="963.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (11 samples, 0.07%)</title><rect x="735.1" y="947.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (11 samples, 0.07%)</title><rect x="735.1" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.07%)</title><rect x="735.1" y="915.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4 samples, 0.03%)</title><rect x="736.1" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4 samples, 0.03%)</title><rect x="736.1" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.03%)</title><rect x="736.1" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.03%)</title><rect x="736.1" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/972466412.run (369 samples, 2.49%)</title><rect x="736.6" y="1123.0" width="29.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.6" y="1134.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (362 samples, 2.45%)</title><rect x="737.1" y="1107.0" width="28.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.1" y="1118.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (360 samples, 2.43%)</title><rect x="737.2" y="1091.0" width="28.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.2" y="1102.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (22 samples, 0.15%)</title><rect x="737.4" y="1075.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.09%)</title><rect x="737.9" y="1059.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.09%)</title><rect x="737.9" y="1043.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (44 samples, 0.30%)</title><rect x="739.1" y="1075.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (32 samples, 0.22%)</title><rect x="740.1" y="1059.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="740.7" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="740.7" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.05%)</title><rect x="741.1" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.05%)</title><rect x="741.1" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.03%)</title><rect x="741.4" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.4" y="1022.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.03%)</title><rect x="741.7" y="1043.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="744.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.04%)</title><rect x="742.2" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.upserting (292 samples, 1.97%)</title><rect x="742.6" y="1075.0" width="23.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.6" y="1086.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (12 samples, 0.08%)</title><rect x="743.8" y="1059.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (12 samples, 0.08%)</title><rect x="743.8" y="1043.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/28457964.apply (7 samples, 0.05%)</title><rect x="744.2" y="1027.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (7 samples, 0.05%)</title><rect x="744.2" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.04%)</title><rect x="744.7" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.04%)</title><rect x="744.7" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (41 samples, 0.28%)</title><rect x="745.4" y="1059.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.4" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.06%)</title><rect x="746.1" y="1043.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.1" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (9 samples, 0.06%)</title><rect x="746.1" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.1" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (5 samples, 0.03%)</title><rect x="746.2" y="1011.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (21 samples, 0.14%)</title><rect x="747.0" y="1043.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.0" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (10 samples, 0.07%)</title><rect x="747.3" y="1027.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.3" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (7 samples, 0.05%)</title><rect x="747.4" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.4" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.munch (6 samples, 0.04%)</title><rect x="747.4" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (7 samples, 0.05%)</title><rect x="748.1" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.1" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (4 samples, 0.03%)</title><rect x="748.1" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doUpsert (140 samples, 0.95%)</title><rect x="748.6" y="1059.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (134 samples, 0.91%)</title><rect x="749.1" y="1043.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (134 samples, 0.91%)</title><rect x="749.1" y="1027.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (132 samples, 0.89%)</title><rect x="749.3" y="1011.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (124 samples, 0.84%)</title><rect x="749.9" y="995.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (118 samples, 0.80%)</title><rect x="750.1" y="979.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.03%)</title><rect x="750.3" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.03%)</title><rect x="750.3" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.03%)</title><rect x="750.3" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.03%)</title><rect x="750.3" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (111 samples, 0.75%)</title><rect x="750.7" y="963.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (111 samples, 0.75%)</title><rect x="750.7" y="947.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (111 samples, 0.75%)</title><rect x="750.7" y="931.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (110 samples, 0.74%)</title><rect x="750.8" y="915.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (110 samples, 0.74%)</title><rect x="750.8" y="899.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.8" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.09%)</title><rect x="750.9" y="883.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="753.9" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.03%)</title><rect x="751.7" y="867.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="754.7" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (93 samples, 0.63%)</title><rect x="752.1" y="883.0" width="7.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="755.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.49%)</title><rect x="753.6" y="867.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 0.49%)</title><rect x="753.6" y="851.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (71 samples, 0.48%)</title><rect x="753.8" y="835.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.8" y="846.0"></text>
</g>
<g>
<title>do_futex (71 samples, 0.48%)</title><rect x="753.8" y="819.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.8" y="830.0"></text>
</g>
<g>
<title>futex_wake (71 samples, 0.48%)</title><rect x="753.8" y="803.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.8" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.03%)</title><rect x="754.4" y="787.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="757.4" y="798.0"></text>
</g>
<g>
<title>wake_up_q (58 samples, 0.39%)</title><rect x="754.8" y="787.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="757.8" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (57 samples, 0.39%)</title><rect x="754.9" y="771.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="757.9" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (57 samples, 0.39%)</title><rect x="754.9" y="755.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="757.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (77 samples, 0.52%)</title><rect x="759.8" y="1059.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (77 samples, 0.52%)</title><rect x="759.8" y="1043.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (74 samples, 0.50%)</title><rect x="759.9" y="1027.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (74 samples, 0.50%)</title><rect x="759.9" y="1011.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (70 samples, 0.47%)</title><rect x="760.3" y="995.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (66 samples, 0.45%)</title><rect x="760.3" y="979.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (61 samples, 0.41%)</title><rect x="760.7" y="963.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (61 samples, 0.41%)</title><rect x="760.7" y="947.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (61 samples, 0.41%)</title><rect x="760.7" y="931.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (60 samples, 0.41%)</title><rect x="760.7" y="915.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (60 samples, 0.41%)</title><rect x="760.7" y="899.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.7" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.10%)</title><rect x="760.7" y="883.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="763.7" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 0.30%)</title><rect x="761.9" y="883.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="764.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.25%)</title><rect x="762.5" y="867.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="765.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.25%)</title><rect x="762.5" y="851.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="765.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (35 samples, 0.24%)</title><rect x="762.7" y="835.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="765.7" y="846.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.23%)</title><rect x="762.7" y="819.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="765.7" y="830.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.23%)</title><rect x="762.7" y="803.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="765.7" y="814.0"></text>
</g>
<g>
<title>wake_up_q (31 samples, 0.21%)</title><rect x="763.0" y="787.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="766.0" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (31 samples, 0.21%)</title><rect x="763.0" y="771.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="766.0" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (31 samples, 0.21%)</title><rect x="763.0" y="755.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="766.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.03%)</title><rect x="765.5" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.03%)</title><rect x="765.5" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,554 samples, 10.50%)</title><rect x="766.1" y="1171.0" width="123.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.1" y="1182.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,554 samples, 10.50%)</title><rect x="766.1" y="1155.0" width="123.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.1" y="1166.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,003 samples, 6.78%)</title><rect x="766.5" y="1139.0" width="79.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.5" y="1150.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,001 samples, 6.76%)</title><rect x="766.5" y="1123.0" width="79.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.5" y="1134.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (6 samples, 0.04%)</title><rect x="768.8" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (964 samples, 6.51%)</title><rect x="769.4" y="1107.0" width="76.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.4" y="1118.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (964 samples, 6.51%)</title><rect x="769.4" y="1091.0" width="76.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.4" y="1102.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (964 samples, 6.51%)</title><rect x="769.4" y="1075.0" width="76.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.4" y="1086.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (294 samples, 1.99%)</title><rect x="769.7" y="1059.0" width="23.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.7" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (286 samples, 1.93%)</title><rect x="770.3" y="1043.0" width="22.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.3" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (6 samples, 0.04%)</title><rect x="770.9" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.03%)</title><rect x="771.0" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.03%)</title><rect x="771.0" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (271 samples, 1.83%)</title><rect x="771.4" y="1027.0" width="21.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.4" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (270 samples, 1.82%)</title><rect x="771.5" y="1011.0" width="21.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.5" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (21 samples, 0.14%)</title><rect x="771.9" y="995.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (21 samples, 0.14%)</title><rect x="771.9" y="979.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (21 samples, 0.14%)</title><rect x="771.9" y="963.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (21 samples, 0.14%)</title><rect x="771.9" y="947.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (21 samples, 0.14%)</title><rect x="771.9" y="931.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.03%)</title><rect x="773.3" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.03%)</title><rect x="773.3" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.03%)</title><rect x="773.3" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (244 samples, 1.65%)</title><rect x="773.6" y="995.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (244 samples, 1.65%)</title><rect x="773.6" y="979.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (244 samples, 1.65%)</title><rect x="773.6" y="963.0" width="19.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (244 samples, 1.65%)</title><rect x="773.6" y="947.0" width="19.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (244 samples, 1.65%)</title><rect x="773.6" y="931.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (244 samples, 1.65%)</title><rect x="773.6" y="915.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (235 samples, 1.59%)</title><rect x="774.3" y="899.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.3" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (35 samples, 0.24%)</title><rect x="774.6" y="883.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="777.6" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.07%)</title><rect x="775.3" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="778.3" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.05%)</title><rect x="776.8" y="867.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="779.8" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (195 samples, 1.32%)</title><rect x="777.5" y="883.0" width="15.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="780.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (151 samples, 1.02%)</title><rect x="781.0" y="867.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="784.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (150 samples, 1.01%)</title><rect x="781.1" y="851.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="784.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (141 samples, 0.95%)</title><rect x="781.8" y="835.0" width="11.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="784.8" y="846.0"></text>
</g>
<g>
<title>do_futex (140 samples, 0.95%)</title><rect x="781.9" y="819.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.9" y="830.0"></text>
</g>
<g>
<title>futex_wake (138 samples, 0.93%)</title><rect x="781.9" y="803.0" width="11.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="784.9" y="814.0"></text>
</g>
<g>
<title>wake_up_q (124 samples, 0.84%)</title><rect x="783.1" y="787.0" width="9.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.1" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (123 samples, 0.83%)</title><rect x="783.1" y="771.0" width="9.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="786.1" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (123 samples, 0.83%)</title><rect x="783.1" y="755.0" width="9.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="786.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (667 samples, 4.51%)</title><rect x="793.1" y="1059.0" width="53.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.1" y="1070.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (19 samples, 0.13%)</title><rect x="793.6" y="1043.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (19 samples, 0.13%)</title><rect x="793.6" y="1027.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (19 samples, 0.13%)</title><rect x="793.6" y="1011.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (19 samples, 0.13%)</title><rect x="793.6" y="995.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (19 samples, 0.13%)</title><rect x="793.6" y="979.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.13%)</title><rect x="793.6" y="963.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.6" y="974.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.06%)</title><rect x="793.9" y="947.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="796.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$204/1435990821.accept (642 samples, 4.34%)</title><rect x="795.1" y="1043.0" width="51.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.1" y="1054.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (642 samples, 4.34%)</title><rect x="795.1" y="1027.0" width="51.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.1" y="1038.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (638 samples, 4.31%)</title><rect x="795.3" y="1011.0" width="50.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.3" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (638 samples, 4.31%)</title><rect x="795.3" y="995.0" width="50.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.3" y="1006.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (4 samples, 0.03%)</title><rect x="795.7" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (5 samples, 0.03%)</title><rect x="796.0" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (623 samples, 4.21%)</title><rect x="796.4" y="979.0" width="49.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.4" y="990.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (622 samples, 4.20%)</title><rect x="796.5" y="963.0" width="49.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.5" y="974.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$137/1878611042.accept (616 samples, 4.16%)</title><rect x="796.9" y="947.0" width="49.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.9" y="958.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$9 (615 samples, 4.15%)</title><rect x="797.0" y="931.0" width="49.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.0" y="942.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getSuccessAndSendIfReachedExpected (615 samples, 4.15%)</title><rect x="797.0" y="915.0" width="49.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.0" y="926.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.03%)</title><rect x="797.3" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.3" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="797.3" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="800.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getStartAcks (9 samples, 0.06%)</title><rect x="797.6" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.6" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (9 samples, 0.06%)</title><rect x="797.6" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (9 samples, 0.06%)</title><rect x="797.6" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (9 samples, 0.06%)</title><rect x="797.6" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (599 samples, 4.05%)</title><rect x="798.3" y="899.0" width="47.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.3" y="910.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (599 samples, 4.05%)</title><rect x="798.3" y="883.0" width="47.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.3" y="894.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (591 samples, 3.99%)</title><rect x="798.9" y="867.0" width="47.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.9" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (575 samples, 3.88%)</title><rect x="799.5" y="851.0" width="45.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.5" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.15%)</title><rect x="799.9" y="835.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.11%)</title><rect x="800.4" y="819.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (548 samples, 3.70%)</title><rect x="801.6" y="835.0" width="43.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.6" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (545 samples, 3.68%)</title><rect x="801.9" y="819.0" width="43.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.9" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (544 samples, 3.67%)</title><rect x="802.0" y="803.0" width="43.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.0" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (543 samples, 3.67%)</title><rect x="802.0" y="787.0" width="43.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.0" y="798.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 0.12%)</title><rect x="802.5" y="771.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="805.5" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.07%)</title><rect x="803.0" y="755.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="806.0" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.04%)</title><rect x="803.4" y="739.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="806.4" y="750.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.03%)</title><rect x="803.5" y="723.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="806.5" y="734.0"></text>
</g>
<g>
<title>__send (518 samples, 3.50%)</title><rect x="804.0" y="771.0" width="41.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="807.0" y="782.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (502 samples, 3.39%)</title><rect x="805.3" y="755.0" width="40.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="808.3" y="766.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (501 samples, 3.38%)</title><rect x="805.4" y="739.0" width="39.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="808.4" y="750.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (491 samples, 3.32%)</title><rect x="806.2" y="723.0" width="39.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="809.2" y="734.0">__x..</text>
</g>
<g>
<title>__sys_sendto (489 samples, 3.30%)</title><rect x="806.2" y="707.0" width="39.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="809.2" y="718.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (471 samples, 3.18%)</title><rect x="807.1" y="691.0" width="37.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="810.1" y="702.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (9 samples, 0.06%)</title><rect x="807.1" y="675.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="810.1" y="686.0"></text>
</g>
<g>
<title>inet6_sendmsg (459 samples, 3.10%)</title><rect x="807.9" y="675.0" width="36.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.9" y="686.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (455 samples, 3.07%)</title><rect x="808.2" y="659.0" width="36.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="811.2" y="670.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (445 samples, 3.01%)</title><rect x="808.7" y="643.0" width="35.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.7" y="654.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.03%)</title><rect x="809.4" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.4" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (26 samples, 0.18%)</title><rect x="809.8" y="627.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="812.8" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (25 samples, 0.17%)</title><rect x="809.8" y="611.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="812.8" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.07%)</title><rect x="810.3" y="595.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="813.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.04%)</title><rect x="810.4" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.4" y="590.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.03%)</title><rect x="811.4" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="814.4" y="606.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.03%)</title><rect x="811.4" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="814.4" y="590.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.04%)</title><rect x="811.9" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="814.9" y="638.0"></text>
</g>
<g>
<title>tcp_push (384 samples, 2.59%)</title><rect x="812.4" y="627.0" width="30.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="815.4" y="638.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (383 samples, 2.59%)</title><rect x="812.4" y="611.0" width="30.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="815.4" y="622.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (379 samples, 2.56%)</title><rect x="812.7" y="595.0" width="30.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="815.7" y="606.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (349 samples, 2.36%)</title><rect x="813.2" y="579.0" width="27.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="816.2" y="590.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (340 samples, 2.30%)</title><rect x="813.9" y="563.0" width="27.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="816.9" y="574.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (337 samples, 2.28%)</title><rect x="813.9" y="547.0" width="26.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.9" y="558.0">_..</text>
</g>
<g>
<title>ip_local_out (334 samples, 2.26%)</title><rect x="814.1" y="531.0" width="26.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="817.1" y="542.0">i..</text>
</g>
<g>
<title>__ip_local_out (59 samples, 0.40%)</title><rect x="814.1" y="515.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.1" y="526.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.03%)</title><rect x="814.5" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="817.5" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (47 samples, 0.32%)</title><rect x="814.8" y="499.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="817.8" y="510.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.07%)</title><rect x="814.9" y="483.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="817.9" y="494.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.07%)</title><rect x="814.9" y="467.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.9" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (33 samples, 0.22%)</title><rect x="815.7" y="483.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.7" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (30 samples, 0.20%)</title><rect x="815.9" y="467.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="818.9" y="478.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (17 samples, 0.11%)</title><rect x="815.9" y="451.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="818.9" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (12 samples, 0.08%)</title><rect x="817.3" y="451.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="820.3" y="462.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (8 samples, 0.05%)</title><rect x="817.7" y="435.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="820.7" y="446.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.03%)</title><rect x="818.0" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="821.0" y="430.0"></text>
</g>
<g>
<title>ip_output (272 samples, 1.84%)</title><rect x="818.8" y="515.0" width="21.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="821.8" y="526.0">i..</text>
</g>
<g>
<title>ip_finish_output (260 samples, 1.76%)</title><rect x="819.0" y="499.0" width="20.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="822.0" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (258 samples, 1.74%)</title><rect x="819.2" y="483.0" width="20.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="822.2" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (258 samples, 1.74%)</title><rect x="819.2" y="467.0" width="20.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.2" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (233 samples, 1.57%)</title><rect x="819.5" y="451.0" width="18.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="822.5" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (233 samples, 1.57%)</title><rect x="819.5" y="435.0" width="18.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="822.5" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (233 samples, 1.57%)</title><rect x="819.5" y="419.0" width="18.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="822.5" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (230 samples, 1.55%)</title><rect x="819.5" y="403.0" width="18.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="822.5" y="414.0"></text>
</g>
<g>
<title>net_rx_action (222 samples, 1.50%)</title><rect x="820.0" y="387.0" width="17.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="823.0" y="398.0"></text>
</g>
<g>
<title>process_backlog (219 samples, 1.48%)</title><rect x="820.2" y="371.0" width="17.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="823.2" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (216 samples, 1.46%)</title><rect x="820.4" y="355.0" width="17.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="823.4" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (216 samples, 1.46%)</title><rect x="820.4" y="339.0" width="17.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="823.4" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.03%)</title><rect x="820.5" y="323.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="823.5" y="334.0"></text>
</g>
<g>
<title>ip_rcv (210 samples, 1.42%)</title><rect x="820.9" y="323.0" width="16.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="823.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (200 samples, 1.35%)</title><rect x="821.2" y="307.0" width="15.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="824.2" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (200 samples, 1.35%)</title><rect x="821.2" y="291.0" width="15.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="824.2" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (197 samples, 1.33%)</title><rect x="821.2" y="275.0" width="15.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="824.2" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (196 samples, 1.32%)</title><rect x="821.2" y="259.0" width="15.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="824.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (189 samples, 1.28%)</title><rect x="821.7" y="243.0" width="15.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="824.7" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.05%)</title><rect x="821.8" y="227.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="824.8" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.03%)</title><rect x="822.4" y="227.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="825.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (175 samples, 1.18%)</title><rect x="822.8" y="227.0" width="13.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="825.8" y="238.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.03%)</title><rect x="823.0" y="211.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="826.0" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (166 samples, 1.12%)</title><rect x="823.5" y="211.0" width="13.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="826.5" y="222.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.05%)</title><rect x="824.0" y="195.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="827.0" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.05%)</title><rect x="824.0" y="179.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="827.0" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.05%)</title><rect x="824.0" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="827.0" y="174.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.04%)</title><rect x="824.1" y="147.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="827.1" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="824.1" y="131.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="827.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack (36 samples, 0.24%)</title><rect x="824.7" y="195.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="827.7" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.14%)</title><rect x="825.6" y="179.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.6" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.10%)</title><rect x="825.7" y="163.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.7" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.03%)</title><rect x="825.7" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="828.7" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.03%)</title><rect x="825.8" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="828.8" y="142.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.05%)</title><rect x="826.1" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="829.1" y="158.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.05%)</title><rect x="826.1" y="131.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (111 samples, 0.75%)</title><rect x="827.5" y="195.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="830.5" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (110 samples, 0.74%)</title><rect x="827.6" y="179.0" width="8.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="830.6" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (107 samples, 0.72%)</title><rect x="827.9" y="163.0" width="8.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.9" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (107 samples, 0.72%)</title><rect x="827.9" y="147.0" width="8.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.9" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (107 samples, 0.72%)</title><rect x="827.9" y="131.0" width="8.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="830.9" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="837.3" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.3" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="837.3" y="291.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.3" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="837.3" y="275.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="840.3" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (21 samples, 0.14%)</title><rect x="838.1" y="451.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.1" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.13%)</title><rect x="838.1" y="435.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="841.1" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.06%)</title><rect x="838.5" y="419.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="841.5" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.04%)</title><rect x="838.5" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="841.5" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="839.8" y="499.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="842.8" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.08%)</title><rect x="841.5" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="844.5" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.06%)</title><rect x="841.7" y="563.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="844.7" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.05%)</title><rect x="841.8" y="547.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="844.8" y="558.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.05%)</title><rect x="841.8" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.8" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.05%)</title><rect x="841.9" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="844.9" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (12 samples, 0.08%)</title><rect x="843.1" y="627.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="846.1" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.07%)</title><rect x="843.2" y="611.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="846.2" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.03%)</title><rect x="843.6" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="846.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.05%)</title><rect x="844.6" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.6" y="702.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.03%)</title><rect x="844.8" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="847.8" y="686.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="844.8" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="847.8" y="670.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="844.8" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="847.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.06%)</title><rect x="845.3" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="845.6" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="845.6" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (409 samples, 2.76%)</title><rect x="846.5" y="1139.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.5" y="1150.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (401 samples, 2.71%)</title><rect x="847.2" y="1123.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.2" y="1134.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (144 samples, 0.97%)</title><rect x="847.6" y="1107.0" width="11.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="850.6" y="1118.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.03%)</title><rect x="847.7" y="1091.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="850.7" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (31 samples, 0.21%)</title><rect x="848.3" y="1091.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="851.3" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.05%)</title><rect x="849.9" y="1075.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="852.9" y="1086.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.04%)</title><rect x="850.7" y="1091.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="853.7" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (4 samples, 0.03%)</title><rect x="851.2" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="854.2" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (84 samples, 0.57%)</title><rect x="851.9" y="1091.0" width="6.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="854.9" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.29%)</title><rect x="855.1" y="1075.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="858.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.29%)</title><rect x="855.1" y="1059.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="858.1" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 0.18%)</title><rect x="856.4" y="1043.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="859.4" y="1054.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.17%)</title><rect x="856.4" y="1027.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="859.4" y="1038.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.13%)</title><rect x="856.6" y="1011.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="859.6" y="1022.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.04%)</title><rect x="857.6" y="995.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="860.6" y="1006.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.03%)</title><rect x="858.7" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="861.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (250 samples, 1.69%)</title><rect x="859.0" y="1107.0" width="20.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="862.0" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (220 samples, 1.49%)</title><rect x="859.2" y="1091.0" width="17.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="862.2" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.45%)</title><rect x="871.5" y="1075.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.5" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 0.43%)</title><rect x="871.7" y="1059.0" width="5.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="874.7" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (49 samples, 0.33%)</title><rect x="872.8" y="1043.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="875.8" y="1054.0"></text>
</g>
<g>
<title>do_futex (47 samples, 0.32%)</title><rect x="873.0" y="1027.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="876.0" y="1038.0"></text>
</g>
<g>
<title>futex_wait (47 samples, 0.32%)</title><rect x="873.0" y="1011.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="876.0" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.12%)</title><rect x="873.5" y="995.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="876.5" y="1006.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.09%)</title><rect x="873.9" y="979.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="876.9" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.07%)</title><rect x="874.1" y="963.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.1" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.05%)</title><rect x="874.4" y="947.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="877.4" y="958.0"></text>
</g>
<g>
<title>futex_wait_setup (18 samples, 0.12%)</title><rect x="875.0" y="995.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.0" y="1006.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.03%)</title><rect x="875.6" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="878.6" y="990.0"></text>
</g>
<g>
<title>get_futex_value_locked (6 samples, 0.04%)</title><rect x="875.9" y="979.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="878.9" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (16 samples, 0.11%)</title><rect x="876.7" y="1091.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="879.7" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (6 samples, 0.04%)</title><rect x="878.2" y="1091.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="881.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (136 samples, 0.92%)</title><rect x="879.1" y="1139.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (116 samples, 0.78%)</title><rect x="880.6" y="1123.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.6" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (25 samples, 0.17%)</title><rect x="880.9" y="1107.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="883.9" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.04%)</title><rect x="881.0" y="1091.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="884.0" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (16 samples, 0.11%)</title><rect x="881.4" y="1091.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="884.4" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="882.2" y="1075.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="885.2" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="882.2" y="1059.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="885.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 0.59%)</title><rect x="882.9" y="1107.0" width="7.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="885.9" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (83 samples, 0.56%)</title><rect x="883.3" y="1091.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="886.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.27%)</title><rect x="886.7" y="1075.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="889.7" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.26%)</title><rect x="886.8" y="1059.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.8" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 0.23%)</title><rect x="887.2" y="1043.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="890.2" y="1054.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.20%)</title><rect x="887.2" y="1027.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="890.2" y="1038.0"></text>
</g>
<g>
<title>futex_wait (26 samples, 0.18%)</title><rect x="887.3" y="1011.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="890.3" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.07%)</title><rect x="887.4" y="995.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="890.4" y="1006.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (8 samples, 0.05%)</title><rect x="887.4" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.4" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (8 samples, 0.05%)</title><rect x="887.4" y="963.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="890.4" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.05%)</title><rect x="887.5" y="947.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="890.5" y="958.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.06%)</title><rect x="888.2" y="995.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="891.2" y="1006.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.03%)</title><rect x="888.6" y="979.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,247 samples, 8.42%)</title><rect x="890.0" y="1171.0" width="99.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.0" y="1182.0">jdk/internal..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.11%)</title><rect x="893.6" y="1155.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="896.6" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.11%)</title><rect x="893.6" y="1139.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="896.6" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.11%)</title><rect x="893.7" y="1123.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="896.7" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (9 samples, 0.06%)</title><rect x="893.8" y="1107.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="896.8" y="1118.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="894.5" y="1107.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="897.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (12 samples, 0.08%)</title><rect x="895.1" y="1155.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (6 samples, 0.04%)</title><rect x="895.5" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.5" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (5 samples, 0.03%)</title><rect x="896.3" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.3" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (18 samples, 0.12%)</title><rect x="896.9" y="1155.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.9" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (353 samples, 2.38%)</title><rect x="898.3" y="1155.0" width="28.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.3" y="1166.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/2075659030.accept (338 samples, 2.28%)</title><rect x="898.4" y="1139.0" width="27.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.4" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (338 samples, 2.28%)</title><rect x="898.4" y="1123.0" width="27.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.4" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (338 samples, 2.28%)</title><rect x="898.4" y="1107.0" width="27.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.4" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (337 samples, 2.28%)</title><rect x="898.5" y="1091.0" width="26.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.5" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (337 samples, 2.28%)</title><rect x="898.5" y="1075.0" width="26.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.5" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.05%)</title><rect x="898.5" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.04%)</title><rect x="898.6" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.03%)</title><rect x="898.8" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (329 samples, 2.22%)</title><rect x="899.1" y="1059.0" width="26.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.1" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (329 samples, 2.22%)</title><rect x="899.1" y="1043.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.1" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (329 samples, 2.22%)</title><rect x="899.1" y="1027.0" width="26.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.1" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (326 samples, 2.20%)</title><rect x="899.4" y="1011.0" width="26.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.4" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (326 samples, 2.20%)</title><rect x="899.4" y="995.0" width="26.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.4" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (320 samples, 2.16%)</title><rect x="899.7" y="979.0" width="25.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.7" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (320 samples, 2.16%)</title><rect x="899.7" y="963.0" width="25.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.7" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (39 samples, 0.26%)</title><rect x="899.9" y="947.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (39 samples, 0.26%)</title><rect x="899.9" y="931.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (39 samples, 0.26%)</title><rect x="899.9" y="915.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.26%)</title><rect x="899.9" y="899.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.16%)</title><rect x="901.2" y="883.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.16%)</title><rect x="901.2" y="867.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.16%)</title><rect x="901.2" y="851.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.14%)</title><rect x="901.4" y="835.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.13%)</title><rect x="901.4" y="819.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.11%)</title><rect x="901.7" y="803.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.11%)</title><rect x="901.7" y="787.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.11%)</title><rect x="901.7" y="771.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.10%)</title><rect x="901.8" y="755.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.10%)</title><rect x="901.8" y="739.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.8" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="901.8" y="723.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="904.8" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.06%)</title><rect x="902.2" y="723.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="905.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="902.6" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="905.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="902.6" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="905.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="902.6" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.6" y="686.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="902.6" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="905.6" y="670.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="902.6" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="905.6" y="654.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.03%)</title><rect x="902.6" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.03%)</title><rect x="902.6" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="905.6" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.03%)</title><rect x="902.6" y="595.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.04%)</title><rect x="903.3" y="947.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.03%)</title><rect x="903.3" y="931.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (268 samples, 1.81%)</title><rect x="903.7" y="947.0" width="21.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.7" y="958.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (263 samples, 1.78%)</title><rect x="904.1" y="931.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (249 samples, 1.68%)</title><rect x="905.3" y="915.0" width="19.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (248 samples, 1.68%)</title><rect x="905.3" y="899.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.3" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (21 samples, 0.14%)</title><rect x="905.4" y="883.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.4" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (21 samples, 0.14%)</title><rect x="905.4" y="867.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.4" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (21 samples, 0.14%)</title><rect x="905.4" y="851.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (213 samples, 1.44%)</title><rect x="907.1" y="883.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="910.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (212 samples, 1.43%)</title><rect x="907.2" y="867.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (202 samples, 1.36%)</title><rect x="908.0" y="851.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.0" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.04%)</title><rect x="908.2" y="835.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="911.2" y="846.0"></text>
</g>
<g>
<title>__read (189 samples, 1.28%)</title><rect x="908.9" y="835.0" width="15.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="911.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (139 samples, 0.94%)</title><rect x="912.8" y="819.0" width="11.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="915.8" y="830.0"></text>
</g>
<g>
<title>__x64_sys_read (4 samples, 0.03%)</title><rect x="912.8" y="803.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (135 samples, 0.91%)</title><rect x="913.2" y="803.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="916.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_read (117 samples, 0.79%)</title><rect x="914.4" y="787.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.4" y="798.0"></text>
</g>
<g>
<title>ksys_read (117 samples, 0.79%)</title><rect x="914.4" y="771.0" width="9.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="917.4" y="782.0"></text>
</g>
<g>
<title>__fdget_pos (12 samples, 0.08%)</title><rect x="914.5" y="755.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="917.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.08%)</title><rect x="914.5" y="739.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="917.5" y="750.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.07%)</title><rect x="914.6" y="723.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="917.6" y="734.0"></text>
</g>
<g>
<title>vfs_read (100 samples, 0.68%)</title><rect x="915.8" y="755.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="918.8" y="766.0"></text>
</g>
<g>
<title>__vfs_read (73 samples, 0.49%)</title><rect x="916.0" y="739.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="919.0" y="750.0"></text>
</g>
<g>
<title>new_sync_read (70 samples, 0.47%)</title><rect x="916.0" y="723.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="919.0" y="734.0"></text>
</g>
<g>
<title>sock_read_iter (70 samples, 0.47%)</title><rect x="916.0" y="707.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.0" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (65 samples, 0.44%)</title><rect x="916.4" y="691.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="919.4" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.03%)</title><rect x="916.4" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.4" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (54 samples, 0.36%)</title><rect x="916.8" y="675.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.8" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 0.36%)</title><rect x="916.9" y="659.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.9" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.07%)</title><rect x="917.5" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="920.5" y="654.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.05%)</title><rect x="917.8" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="920.8" y="638.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.03%)</title><rect x="918.0" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="921.0" y="622.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.03%)</title><rect x="918.0" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.05%)</title><rect x="918.3" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="921.3" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (17 samples, 0.11%)</title><rect x="919.1" y="643.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="922.1" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (17 samples, 0.11%)</title><rect x="919.1" y="627.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="922.1" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (10 samples, 0.07%)</title><rect x="919.7" y="611.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.7" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.05%)</title><rect x="919.9" y="595.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.9" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="920.0" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="923.0" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.04%)</title><rect x="920.6" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.6" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.03%)</title><rect x="920.8" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="923.8" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.04%)</title><rect x="921.1" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="924.1" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.03%)</title><rect x="921.3" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="924.3" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (24 samples, 0.16%)</title><rect x="921.8" y="739.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.8" y="750.0"></text>
</g>
<g>
<title>security_file_permission (15 samples, 0.10%)</title><rect x="922.6" y="723.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="925.6" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.05%)</title><rect x="922.8" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="925.8" y="718.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.05%)</title><rect x="922.8" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="925.8" y="702.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.03%)</title><rect x="923.0" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="926.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (13 samples, 0.09%)</title><rect x="924.1" y="883.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.09%)</title><rect x="924.1" y="867.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (13 samples, 0.09%)</title><rect x="924.1" y="851.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (13 samples, 0.09%)</title><rect x="924.1" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$391/625058377.accept (14 samples, 0.09%)</title><rect x="925.4" y="1139.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (14 samples, 0.09%)</title><rect x="925.4" y="1123.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$387/771141945.run (14 samples, 0.09%)</title><rect x="925.4" y="1107.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (14 samples, 0.09%)</title><rect x="925.4" y="1091.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (14 samples, 0.09%)</title><rect x="925.4" y="1075.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (6 samples, 0.04%)</title><rect x="925.5" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (6 samples, 0.04%)</title><rect x="925.5" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.5" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.04%)</title><rect x="926.0" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.04%)</title><rect x="926.0" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="926.0" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="926.0" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.0" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (34 samples, 0.23%)</title><rect x="926.6" y="1155.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.6" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.15%)</title><rect x="927.6" y="1139.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.6" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (21 samples, 0.14%)</title><rect x="927.7" y="1123.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.7" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (21 samples, 0.14%)</title><rect x="927.7" y="1107.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.7" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (21 samples, 0.14%)</title><rect x="927.7" y="1091.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.11%)</title><rect x="927.7" y="1075.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="930.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (14 samples, 0.09%)</title><rect x="927.7" y="1059.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.7" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (9 samples, 0.06%)</title><rect x="928.1" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$385/1587615542.test (5 samples, 0.03%)</title><rect x="928.4" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.4" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.03%)</title><rect x="928.9" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="931.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (121 samples, 0.82%)</title><rect x="929.3" y="1155.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$276/960955001.run (89 samples, 0.60%)</title><rect x="929.5" y="1139.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="932.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (89 samples, 0.60%)</title><rect x="929.5" y="1123.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (10 samples, 0.07%)</title><rect x="929.5" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (10 samples, 0.07%)</title><rect x="929.5" y="1091.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 0.53%)</title><rect x="930.3" y="1107.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (77 samples, 0.52%)</title><rect x="930.5" y="1091.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.03%)</title><rect x="930.5" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.03%)</title><rect x="930.5" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (72 samples, 0.49%)</title><rect x="930.9" y="1075.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (71 samples, 0.48%)</title><rect x="930.9" y="1059.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (65 samples, 0.44%)</title><rect x="931.4" y="1043.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (64 samples, 0.43%)</title><rect x="931.4" y="1027.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (63 samples, 0.43%)</title><rect x="931.5" y="1011.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="934.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (45 samples, 0.30%)</title><rect x="932.8" y="995.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="935.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (7 samples, 0.05%)</title><rect x="932.8" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (7 samples, 0.05%)</title><rect x="932.8" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (7 samples, 0.05%)</title><rect x="932.8" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.05%)</title><rect x="932.8" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.05%)</title><rect x="932.8" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.05%)</title><rect x="932.8" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.05%)</title><rect x="932.8" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.04%)</title><rect x="932.9" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (38 samples, 0.26%)</title><rect x="933.4" y="979.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.26%)</title><rect x="933.4" y="963.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.11%)</title><rect x="935.2" y="947.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.10%)</title><rect x="935.2" y="931.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="938.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.10%)</title><rect x="935.2" y="915.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.08%)</title><rect x="935.5" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="938.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.07%)</title><rect x="935.5" y="883.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="936.0" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="936.0" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="936.0" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="939.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.03%)</title><rect x="936.0" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.03%)</title><rect x="936.0" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="939.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$289/1211432.run (30 samples, 0.20%)</title><rect x="936.6" y="1139.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (30 samples, 0.20%)</title><rect x="936.6" y="1123.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.16%)</title><rect x="936.9" y="1107.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="939.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.14%)</title><rect x="936.9" y="1091.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="939.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.13%)</title><rect x="937.1" y="1075.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (17 samples, 0.11%)</title><rect x="937.1" y="1059.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.07%)</title><rect x="937.5" y="1043.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.07%)</title><rect x="937.5" y="1027.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.07%)</title><rect x="937.5" y="1011.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.07%)</title><rect x="937.5" y="995.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.07%)</title><rect x="937.5" y="979.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.5" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.06%)</title><rect x="937.7" y="963.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="940.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.05%)</title><rect x="937.9" y="947.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.05%)</title><rect x="937.9" y="931.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.9" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="937.9" y="915.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.9" y="926.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.04%)</title><rect x="937.9" y="899.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="940.9" y="910.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.04%)</title><rect x="937.9" y="883.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.9" y="894.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="938.0" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="941.0" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="938.0" y="851.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="941.0" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="938.0" y="835.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (138 samples, 0.93%)</title><rect x="939.0" y="1155.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.0" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.now (13 samples, 0.09%)</title><rect x="939.0" y="1139.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.0" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (13 samples, 0.09%)</title><rect x="939.0" y="1123.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (12 samples, 0.08%)</title><rect x="939.1" y="1107.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.1" y="1118.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.05%)</title><rect x="939.4" y="1091.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="942.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (125 samples, 0.84%)</title><rect x="940.0" y="1139.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.0" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (75 samples, 0.51%)</title><rect x="943.4" y="1123.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="946.4" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (75 samples, 0.51%)</title><rect x="943.4" y="1107.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="946.4" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (73 samples, 0.49%)</title><rect x="943.6" y="1091.0" width="5.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="946.6" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (67 samples, 0.45%)</title><rect x="943.6" y="1075.0" width="5.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="946.6" y="1086.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="948.9" y="1075.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="951.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (4 samples, 0.03%)</title><rect x="949.6" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.04%)</title><rect x="950.1" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (14 samples, 0.09%)</title><rect x="950.5" y="1155.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.5" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (5 samples, 0.03%)</title><rect x="951.3" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.3" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (367 samples, 2.48%)</title><rect x="951.7" y="1155.0" width="29.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.7" y="1166.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (366 samples, 2.47%)</title><rect x="951.7" y="1139.0" width="29.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.7" y="1150.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (359 samples, 2.43%)</title><rect x="952.3" y="1123.0" width="28.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.3" y="1134.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (174 samples, 1.18%)</title><rect x="952.9" y="1107.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.9" y="1118.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (4 samples, 0.03%)</title><rect x="953.4" y="1091.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="956.4" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (161 samples, 1.09%)</title><rect x="953.7" y="1091.0" width="12.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="956.7" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 0.78%)</title><rect x="957.2" y="1075.0" width="9.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="960.2" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (115 samples, 0.78%)</title><rect x="957.3" y="1059.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="960.3" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (103 samples, 0.70%)</title><rect x="958.3" y="1043.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="961.3" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (102 samples, 0.69%)</title><rect x="958.3" y="1027.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="961.3" y="1038.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.04%)</title><rect x="958.4" y="1011.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.4" y="1022.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="958.4" y="995.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="961.4" y="1006.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.04%)</title><rect x="958.4" y="979.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.4" y="990.0"></text>
</g>
<g>
<title>ep_poll (88 samples, 0.59%)</title><rect x="959.0" y="1011.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.0" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (58 samples, 0.39%)</title><rect x="959.4" y="995.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.4" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (51 samples, 0.34%)</title><rect x="959.6" y="979.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="962.6" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (33 samples, 0.22%)</title><rect x="960.4" y="963.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="963.4" y="974.0"></text>
</g>
<g>
<title>sock_poll (23 samples, 0.16%)</title><rect x="961.2" y="947.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.2" y="958.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.05%)</title><rect x="962.2" y="931.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="965.2" y="942.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.03%)</title><rect x="962.7" y="931.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="965.7" y="942.0"></text>
</g>
<g>
<title>pipe_poll (4 samples, 0.03%)</title><rect x="963.1" y="963.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.1" y="974.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.03%)</title><rect x="963.4" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="966.4" y="974.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.03%)</title><rect x="963.7" y="979.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="966.7" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 0.10%)</title><rect x="964.4" y="995.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.4" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.09%)</title><rect x="964.6" y="979.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="967.6" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (10 samples, 0.07%)</title><rect x="964.7" y="963.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="967.7" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.06%)</title><rect x="964.7" y="947.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="967.7" y="958.0"></text>
</g>
<g>
<title>select_estimate_accuracy (5 samples, 0.03%)</title><rect x="965.6" y="995.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (157 samples, 1.06%)</title><rect x="966.7" y="1107.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.11%)</title><rect x="966.7" y="1091.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (16 samples, 0.11%)</title><rect x="966.7" y="1075.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (128 samples, 0.86%)</title><rect x="968.0" y="1091.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (120 samples, 0.81%)</title><rect x="968.6" y="1075.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.6" y="1086.0"></text>
</g>
<g>
<title>__read (118 samples, 0.80%)</title><rect x="968.8" y="1059.0" width="9.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="971.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 0.55%)</title><rect x="971.7" y="1043.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="974.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (80 samples, 0.54%)</title><rect x="971.8" y="1027.0" width="6.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="974.8" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (72 samples, 0.49%)</title><rect x="972.4" y="1011.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.4" y="1022.0"></text>
</g>
<g>
<title>ksys_read (72 samples, 0.49%)</title><rect x="972.4" y="995.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.4" y="1006.0"></text>
</g>
<g>
<title>vfs_read (65 samples, 0.44%)</title><rect x="972.9" y="979.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="975.9" y="990.0"></text>
</g>
<g>
<title>__vfs_read (49 samples, 0.33%)</title><rect x="973.1" y="963.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.1" y="974.0"></text>
</g>
<g>
<title>new_sync_read (48 samples, 0.32%)</title><rect x="973.1" y="947.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="976.1" y="958.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (5 samples, 0.03%)</title><rect x="973.2" y="931.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.2" y="942.0"></text>
</g>
<g>
<title>pipe_read (36 samples, 0.24%)</title><rect x="973.9" y="931.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="976.9" y="942.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.07%)</title><rect x="974.4" y="915.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="977.4" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.05%)</title><rect x="974.4" y="899.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="977.4" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.04%)</title><rect x="974.4" y="883.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="977.4" y="894.0"></text>
</g>
<g>
<title>copy_page_to_iter (8 samples, 0.05%)</title><rect x="975.2" y="915.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="978.2" y="926.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.04%)</title><rect x="975.3" y="899.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="978.3" y="910.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.03%)</title><rect x="975.8" y="915.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.8" y="926.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.05%)</title><rect x="976.2" y="915.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="979.2" y="926.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.04%)</title><rect x="976.3" y="899.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="979.3" y="910.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.09%)</title><rect x="977.0" y="963.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="980.0" y="974.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.03%)</title><rect x="977.1" y="947.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.1" y="958.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.05%)</title><rect x="977.5" y="947.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="980.5" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (13 samples, 0.09%)</title><rect x="978.2" y="1091.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.2" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (7 samples, 0.05%)</title><rect x="978.7" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (7 samples, 0.05%)</title><rect x="978.7" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (7 samples, 0.05%)</title><rect x="978.7" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.7" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="978.9" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="981.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (10 samples, 0.07%)</title><rect x="979.2" y="1107.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (5 samples, 0.03%)</title><rect x="979.6" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="982.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.03%)</title><rect x="979.6" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (6 samples, 0.04%)</title><rect x="980.0" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (6 samples, 0.04%)</title><rect x="980.0" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.03%)</title><rect x="980.2" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.03%)</title><rect x="980.2" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.03%)</title><rect x="980.2" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.03%)</title><rect x="980.5" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.03%)</title><rect x="980.5" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.03%)</title><rect x="980.5" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (82 samples, 0.55%)</title><rect x="980.9" y="1155.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.9" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (82 samples, 0.55%)</title><rect x="980.9" y="1139.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.9" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (82 samples, 0.55%)</title><rect x="980.9" y="1123.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (57 samples, 0.39%)</title><rect x="981.0" y="1107.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.0" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (52 samples, 0.35%)</title><rect x="981.2" y="1091.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="984.2" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.24%)</title><rect x="982.5" y="1075.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="985.5" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.24%)</title><rect x="982.6" y="1059.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="985.6" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (32 samples, 0.22%)</title><rect x="982.7" y="1043.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="985.7" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (31 samples, 0.21%)</title><rect x="982.7" y="1027.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="985.7" y="1038.0"></text>
</g>
<g>
<title>ep_poll (29 samples, 0.20%)</title><rect x="982.9" y="1011.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="985.9" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (27 samples, 0.18%)</title><rect x="983.0" y="995.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="986.0" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (26 samples, 0.18%)</title><rect x="983.1" y="979.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="986.1" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.09%)</title><rect x="983.5" y="963.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="986.5" y="974.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.07%)</title><rect x="983.6" y="947.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="986.6" y="958.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.04%)</title><rect x="984.7" y="963.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (23 samples, 0.16%)</title><rect x="985.5" y="1107.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.03%)</title><rect x="985.5" y="1091.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.5" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="985.5" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (17 samples, 0.11%)</title><rect x="985.9" y="1091.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.9" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (12 samples, 0.08%)</title><rect x="986.3" y="1075.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.3" y="1086.0"></text>
</g>
<g>
<title>__read (11 samples, 0.07%)</title><rect x="986.3" y="1059.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="989.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="986.6" y="1043.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="989.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="986.6" y="1027.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (6 samples, 0.04%)</title><rect x="986.7" y="1011.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="989.7" y="1022.0"></text>
</g>
<g>
<title>ksys_read (6 samples, 0.04%)</title><rect x="986.7" y="995.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="989.7" y="1006.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.03%)</title><rect x="986.9" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (9 samples, 0.06%)</title><rect x="987.4" y="1155.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.4" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (8 samples, 0.05%)</title><rect x="987.4" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="990.4" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (7 samples, 0.05%)</title><rect x="987.5" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (15 samples, 0.10%)</title><rect x="988.2" y="1155.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.2" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (15 samples, 0.10%)</title><rect x="988.2" y="1139.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.2" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.09%)</title><rect x="988.2" y="1123.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (13 samples, 0.09%)</title><rect x="988.2" y="1107.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (13 samples, 0.09%)</title><rect x="988.2" y="1091.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,112 samples, 14.27%)</title><rect x="989.4" y="1171.0" width="168.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.4" y="1182.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (16 samples, 0.11%)</title><rect x="991.4" y="1155.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (16 samples, 0.11%)</title><rect x="991.4" y="1139.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (16 samples, 0.11%)</title><rect x="991.4" y="1123.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (447 samples, 3.02%)</title><rect x="992.6" y="1155.0" width="35.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.6" y="1166.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="993.6" y="1139.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.6" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.03%)</title><rect x="993.6" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="996.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (431 samples, 2.91%)</title><rect x="993.9" y="1139.0" width="34.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="996.9" y="1150.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.07%)</title><rect x="994.9" y="1123.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="997.9" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.03%)</title><rect x="995.7" y="1123.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="998.7" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 0.08%)</title><rect x="996.1" y="1123.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="999.1" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (387 samples, 2.61%)</title><rect x="997.3" y="1123.0" width="30.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1000.3" y="1134.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (292 samples, 1.97%)</title><rect x="1004.8" y="1107.0" width="23.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1007.8" y="1118.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.03%)</title><rect x="1004.8" y="1091.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1007.8" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (288 samples, 1.95%)</title><rect x="1005.1" y="1091.0" width="23.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1008.1" y="1102.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (264 samples, 1.78%)</title><rect x="1007.1" y="1075.0" width="21.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1010.1" y="1086.0">_..</text>
</g>
<g>
<title>do_epoll_wait (263 samples, 1.78%)</title><rect x="1007.1" y="1059.0" width="20.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1010.1" y="1070.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.09%)</title><rect x="1007.5" y="1043.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1010.5" y="1054.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.09%)</title><rect x="1007.5" y="1027.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1010.5" y="1038.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.09%)</title><rect x="1007.5" y="1011.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.5" y="1022.0"></text>
</g>
<g>
<title>ep_poll (229 samples, 1.55%)</title><rect x="1008.7" y="1043.0" width="18.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1011.7" y="1054.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (172 samples, 1.16%)</title><rect x="1009.6" y="1027.0" width="13.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.6" y="1038.0"></text>
</g>
<g>
<title>ep_send_events_proc (144 samples, 0.97%)</title><rect x="1011.4" y="1011.0" width="11.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.4" y="1022.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (119 samples, 0.80%)</title><rect x="1013.0" y="995.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1016.0" y="1006.0"></text>
</g>
<g>
<title>sock_poll (83 samples, 0.56%)</title><rect x="1015.7" y="979.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.7" y="990.0"></text>
</g>
<g>
<title>tcp_poll (26 samples, 0.18%)</title><rect x="1019.7" y="963.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.7" y="974.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (8 samples, 0.05%)</title><rect x="1021.7" y="963.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1024.7" y="974.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.03%)</title><rect x="1022.5" y="995.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1025.5" y="1006.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.04%)</title><rect x="1022.8" y="1011.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1025.8" y="1022.0"></text>
</g>
<g>
<title>mutex_unlock (6 samples, 0.04%)</title><rect x="1023.6" y="1027.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1026.6" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (33 samples, 0.22%)</title><rect x="1024.1" y="1027.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1027.1" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (32 samples, 0.22%)</title><rect x="1024.2" y="1011.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.2" y="1022.0"></text>
</g>
<g>
<title>schedule (27 samples, 0.18%)</title><rect x="1024.6" y="995.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1027.6" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (24 samples, 0.16%)</title><rect x="1024.8" y="979.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.8" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.06%)</title><rect x="1026.0" y="963.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1029.0" y="974.0"></text>
</g>
<g>
<title>fput_many (11 samples, 0.07%)</title><rect x="1027.0" y="1043.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1030.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,612 samples, 10.89%)</title><rect x="1028.3" y="1155.0" width="128.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.3" y="1166.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,609 samples, 10.87%)</title><rect x="1028.5" y="1139.0" width="128.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.5" y="1150.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (762 samples, 5.15%)</title><rect x="1028.5" y="1123.0" width="60.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.5" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (524 samples, 3.54%)</title><rect x="1031.0" y="1107.0" width="41.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1034.0" y="1118.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (524 samples, 3.54%)</title><rect x="1031.0" y="1091.0" width="41.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.0" y="1102.0">one..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (491 samples, 3.32%)</title><rect x="1031.1" y="1075.0" width="39.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.1" y="1086.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 0.22%)</title><rect x="1031.1" y="1059.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1034.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.06%)</title><rect x="1031.7" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.06%)</title><rect x="1031.7" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1034.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (11 samples, 0.07%)</title><rect x="1032.8" y="1043.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1033.2" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1036.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1033.2" y="1011.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.04%)</title><rect x="1033.2" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (458 samples, 3.09%)</title><rect x="1033.7" y="1059.0" width="36.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.7" y="1070.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (285 samples, 1.93%)</title><rect x="1033.8" y="1043.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.8" y="1054.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (285 samples, 1.93%)</title><rect x="1033.8" y="1027.0" width="22.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.8" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (276 samples, 1.86%)</title><rect x="1034.5" y="1011.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1037.5" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (262 samples, 1.77%)</title><rect x="1034.8" y="995.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.08%)</title><rect x="1035.3" y="979.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1038.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (12 samples, 0.08%)</title><rect x="1035.3" y="963.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (12 samples, 0.08%)</title><rect x="1035.3" y="947.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1038.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.08%)</title><rect x="1035.3" y="931.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (241 samples, 1.63%)</title><rect x="1036.5" y="979.0" width="19.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (241 samples, 1.63%)</title><rect x="1036.5" y="963.0" width="19.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (241 samples, 1.63%)</title><rect x="1036.5" y="947.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (241 samples, 1.63%)</title><rect x="1036.5" y="931.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (239 samples, 1.61%)</title><rect x="1036.6" y="915.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.6" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (29 samples, 0.20%)</title><rect x="1036.9" y="899.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1039.9" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.03%)</title><rect x="1037.5" y="883.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1040.5" y="894.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.03%)</title><rect x="1038.1" y="883.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1041.1" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (8 samples, 0.05%)</title><rect x="1038.5" y="883.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1041.5" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (203 samples, 1.37%)</title><rect x="1039.3" y="899.0" width="16.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1042.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (172 samples, 1.16%)</title><rect x="1041.7" y="883.0" width="13.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1044.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (172 samples, 1.16%)</title><rect x="1041.7" y="867.0" width="13.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1044.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (160 samples, 1.08%)</title><rect x="1042.6" y="851.0" width="12.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.6" y="862.0"></text>
</g>
<g>
<title>do_futex (159 samples, 1.07%)</title><rect x="1042.6" y="835.0" width="12.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1045.6" y="846.0"></text>
</g>
<g>
<title>futex_wake (154 samples, 1.04%)</title><rect x="1042.8" y="819.0" width="12.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1045.8" y="830.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.05%)</title><rect x="1043.4" y="803.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1046.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (136 samples, 0.92%)</title><rect x="1044.2" y="803.0" width="10.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1047.2" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (129 samples, 0.87%)</title><rect x="1044.8" y="787.0" width="10.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1047.8" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (129 samples, 0.87%)</title><rect x="1044.8" y="771.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1047.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.06%)</title><rect x="1055.8" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.06%)</title><rect x="1055.8" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (172 samples, 1.16%)</title><rect x="1056.5" y="1043.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.5" y="1054.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (172 samples, 1.16%)</title><rect x="1056.5" y="1027.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.5" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (22 samples, 0.15%)</title><rect x="1056.8" y="1011.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.05%)</title><rect x="1058.0" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.05%)</title><rect x="1058.0" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1058.1" y="963.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1058.1" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (123 samples, 0.83%)</title><rect x="1058.6" y="1011.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.6" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (114 samples, 0.77%)</title><rect x="1059.2" y="995.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.2" y="1006.0"></text>
</g>
<g>
<title>itable stub (18 samples, 0.12%)</title><rect x="1059.7" y="979.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1062.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (60 samples, 0.41%)</title><rect x="1061.1" y="979.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (56 samples, 0.38%)</title><rect x="1061.4" y="963.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (54 samples, 0.36%)</title><rect x="1061.6" y="947.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (9 samples, 0.06%)</title><rect x="1062.9" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.9" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (7 samples, 0.05%)</title><rect x="1063.6" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.6" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (12 samples, 0.08%)</title><rect x="1064.1" y="931.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (8 samples, 0.05%)</title><rect x="1065.1" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1065.3" y="915.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1068.3" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (5 samples, 0.03%)</title><rect x="1065.3" y="899.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1068.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (11 samples, 0.07%)</title><rect x="1065.9" y="979.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.9" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (6 samples, 0.04%)</title><rect x="1066.8" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.8" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (13 samples, 0.09%)</title><rect x="1067.2" y="979.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.2" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (8 samples, 0.05%)</title><rect x="1067.6" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.6" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (8 samples, 0.05%)</title><rect x="1067.6" y="947.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.6" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (7 samples, 0.05%)</title><rect x="1067.7" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.7" y="942.0"></text>
</g>
<g>
<title>java/util/Set.of (23 samples, 0.16%)</title><rect x="1068.4" y="1011.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.4" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.04%)</title><rect x="1068.6" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.6" y="1006.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (13 samples, 0.09%)</title><rect x="1069.2" y="995.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (11 samples, 0.07%)</title><rect x="1069.3" y="979.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (26 samples, 0.18%)</title><rect x="1070.2" y="1075.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (26 samples, 0.18%)</title><rect x="1070.2" y="1059.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.03%)</title><rect x="1070.2" y="1043.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (22 samples, 0.15%)</title><rect x="1070.5" y="1043.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (22 samples, 0.15%)</title><rect x="1070.5" y="1027.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (22 samples, 0.15%)</title><rect x="1070.5" y="1011.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.04%)</title><rect x="1072.3" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.04%)</title><rect x="1072.3" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.04%)</title><rect x="1072.3" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (90 samples, 0.61%)</title><rect x="1072.7" y="1107.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (19 samples, 0.13%)</title><rect x="1073.2" y="1091.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.2" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.04%)</title><rect x="1073.2" y="1075.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.2" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (6 samples, 0.04%)</title><rect x="1073.2" y="1059.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.2" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1073.2" y="1043.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1076.2" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="1073.2" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1076.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.09%)</title><rect x="1073.7" y="1075.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.09%)</title><rect x="1073.7" y="1059.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.09%)</title><rect x="1073.7" y="1043.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="1074.3" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (57 samples, 0.39%)</title><rect x="1074.7" y="1091.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.7" y="1102.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8 samples, 0.05%)</title><rect x="1075.2" y="1075.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.2" y="1086.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.07%)</title><rect x="1075.9" y="1075.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1078.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.22%)</title><rect x="1076.6" y="1075.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.6" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1078.5" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1081.5" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1078.5" y="1043.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1081.5" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1078.5" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1081.5" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="1078.5" y="1011.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1081.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (8 samples, 0.05%)</title><rect x="1079.3" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.09%)</title><rect x="1080.2" y="1107.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.05%)</title><rect x="1080.4" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.05%)</title><rect x="1080.4" y="1075.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (101 samples, 0.68%)</title><rect x="1081.2" y="1107.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.48%)</title><rect x="1083.6" y="1091.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.6" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (16 samples, 0.11%)</title><rect x="1086.7" y="1075.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.7" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.11%)</title><rect x="1086.7" y="1059.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.7" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (15 samples, 0.10%)</title><rect x="1086.8" y="1043.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.8" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.07%)</title><rect x="1086.9" y="1027.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.9" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="1087.4" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1090.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.06%)</title><rect x="1088.5" y="1075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.06%)</title><rect x="1088.5" y="1059.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.06%)</title><rect x="1088.5" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.5" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.05%)</title><rect x="1088.5" y="1027.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1091.5" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.05%)</title><rect x="1088.5" y="1011.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1091.5" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.05%)</title><rect x="1088.5" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1091.5" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.04%)</title><rect x="1088.6" y="979.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1091.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (847 samples, 5.72%)</title><rect x="1089.2" y="1123.0" width="67.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.2" y="1134.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (836 samples, 5.65%)</title><rect x="1090.1" y="1107.0" width="66.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.1" y="1118.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (66 samples, 0.45%)</title><rect x="1090.6" y="1091.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1093.6" y="1102.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.07%)</title><rect x="1091.2" y="1075.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1094.2" y="1086.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.03%)</title><rect x="1092.3" y="1075.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1095.3" y="1086.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (30 samples, 0.20%)</title><rect x="1093.0" y="1075.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1096.0" y="1086.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.04%)</title><rect x="1093.5" y="1059.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1096.5" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.04%)</title><rect x="1094.3" y="1059.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.3" y="1070.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.05%)</title><rect x="1094.7" y="1059.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1097.7" y="1070.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (6 samples, 0.04%)</title><rect x="1095.4" y="1075.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.4" y="1086.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.03%)</title><rect x="1096.1" y="1091.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1099.1" y="1102.0"></text>
</g>
<g>
<title>recv (757 samples, 5.11%)</title><rect x="1096.4" y="1091.0" width="60.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1099.4" y="1102.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (679 samples, 4.59%)</title><rect x="1102.6" y="1075.0" width="54.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1105.6" y="1086.0">entry..</text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.03%)</title><rect x="1102.6" y="1059.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1105.6" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (675 samples, 4.56%)</title><rect x="1103.0" y="1059.0" width="53.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1106.0" y="1070.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (657 samples, 4.44%)</title><rect x="1104.4" y="1043.0" width="52.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1107.4" y="1054.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (654 samples, 4.42%)</title><rect x="1104.4" y="1027.0" width="52.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.4" y="1038.0">__sys..</text>
</g>
<g>
<title>sock_recvmsg (629 samples, 4.25%)</title><rect x="1104.7" y="1011.0" width="50.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.7" y="1022.0">sock_..</text>
</g>
<g>
<title>inet6_recvmsg (608 samples, 4.11%)</title><rect x="1104.8" y="995.0" width="48.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.8" y="1006.0">inet..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.03%)</title><rect x="1105.1" y="979.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1108.1" y="990.0"></text>
</g>
<g>
<title>tcp_recvmsg (599 samples, 4.05%)</title><rect x="1105.5" y="979.0" width="47.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1108.5" y="990.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (20 samples, 0.14%)</title><rect x="1106.6" y="963.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1109.6" y="974.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.10%)</title><rect x="1106.9" y="947.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1109.9" y="958.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.04%)</title><rect x="1107.2" y="931.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1110.2" y="942.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.04%)</title><rect x="1107.2" y="915.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.2" y="926.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.04%)</title><rect x="1107.7" y="931.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1110.7" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (13 samples, 0.09%)</title><rect x="1108.5" y="963.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1111.5" y="974.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.04%)</title><rect x="1109.7" y="963.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1112.7" y="974.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (38 samples, 0.26%)</title><rect x="1110.2" y="963.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1113.2" y="974.0"></text>
</g>
<g>
<title>__skb_datagram_iter (38 samples, 0.26%)</title><rect x="1110.2" y="947.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1113.2" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (26 samples, 0.18%)</title><rect x="1111.2" y="931.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1114.2" y="942.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.07%)</title><rect x="1111.2" y="915.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1114.2" y="926.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.04%)</title><rect x="1111.6" y="899.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.6" y="910.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.08%)</title><rect x="1112.1" y="915.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1115.1" y="926.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.05%)</title><rect x="1112.1" y="899.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.1" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.03%)</title><rect x="1112.8" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1115.8" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (492 samples, 3.32%)</title><rect x="1113.2" y="963.0" width="39.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1116.2" y="974.0">tcp..</text>
</g>
<g>
<title>tcp_send_ack (485 samples, 3.28%)</title><rect x="1113.8" y="947.0" width="38.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.8" y="958.0">tcp..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (485 samples, 3.28%)</title><rect x="1113.8" y="931.0" width="38.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1116.8" y="942.0">__t..</text>
</g>
<g>
<title>__alloc_skb (37 samples, 0.25%)</title><rect x="1114.1" y="915.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1117.1" y="926.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (19 samples, 0.13%)</title><rect x="1114.4" y="899.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.4" y="910.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.09%)</title><rect x="1114.4" y="883.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1117.4" y="894.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.06%)</title><rect x="1115.9" y="899.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.9" y="910.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (443 samples, 2.99%)</title><rect x="1117.1" y="915.0" width="35.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1120.1" y="926.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (425 samples, 2.87%)</title><rect x="1118.3" y="899.0" width="33.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1121.3" y="910.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (421 samples, 2.84%)</title><rect x="1118.3" y="883.0" width="33.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1121.3" y="894.0">__..</text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.05%)</title><rect x="1119.0" y="867.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.0" y="878.0"></text>
</g>
<g>
<title>ip_local_out (404 samples, 2.73%)</title><rect x="1119.5" y="867.0" width="32.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1122.5" y="878.0">ip..</text>
</g>
<g>
<title>__ip_local_out (74 samples, 0.50%)</title><rect x="1119.6" y="851.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1122.6" y="862.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.03%)</title><rect x="1120.0" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1123.0" y="846.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.03%)</title><rect x="1120.3" y="835.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1123.3" y="846.0"></text>
</g>
<g>
<title>nf_hook_slow (59 samples, 0.40%)</title><rect x="1120.6" y="835.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1123.6" y="846.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (47 samples, 0.32%)</title><rect x="1121.0" y="819.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1124.0" y="830.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (43 samples, 0.29%)</title><rect x="1121.3" y="803.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1124.3" y="814.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (13 samples, 0.09%)</title><rect x="1121.8" y="787.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1124.8" y="798.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (16 samples, 0.11%)</title><rect x="1123.1" y="787.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1126.1" y="798.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.04%)</title><rect x="1123.9" y="771.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1126.9" y="782.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.03%)</title><rect x="1124.4" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1127.4" y="798.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (4 samples, 0.03%)</title><rect x="1125.0" y="819.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1128.0" y="830.0"></text>
</g>
<g>
<title>ip_output (323 samples, 2.18%)</title><rect x="1125.5" y="851.0" width="25.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1128.5" y="862.0">i..</text>
</g>
<g>
<title>ip_finish_output (302 samples, 2.04%)</title><rect x="1125.8" y="835.0" width="24.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1128.8" y="846.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.03%)</title><rect x="1125.8" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1128.8" y="830.0"></text>
</g>
<g>
<title>__ip_finish_output (296 samples, 2.00%)</title><rect x="1126.1" y="819.0" width="23.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1129.1" y="830.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (292 samples, 1.97%)</title><rect x="1126.1" y="803.0" width="23.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1129.1" y="814.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (245 samples, 1.66%)</title><rect x="1127.5" y="787.0" width="19.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1130.5" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.0 (245 samples, 1.66%)</title><rect x="1127.5" y="771.0" width="19.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1130.5" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (242 samples, 1.63%)</title><rect x="1127.7" y="755.0" width="19.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1130.7" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (242 samples, 1.63%)</title><rect x="1127.7" y="739.0" width="19.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1130.7" y="750.0"></text>
</g>
<g>
<title>net_rx_action (230 samples, 1.55%)</title><rect x="1128.5" y="723.0" width="18.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1131.5" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.03%)</title><rect x="1128.6" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1131.6" y="718.0"></text>
</g>
<g>
<title>process_backlog (225 samples, 1.52%)</title><rect x="1128.9" y="707.0" width="18.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1131.9" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (221 samples, 1.49%)</title><rect x="1129.3" y="691.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1132.3" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (221 samples, 1.49%)</title><rect x="1129.3" y="675.0" width="17.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1132.3" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (15 samples, 0.10%)</title><rect x="1129.3" y="659.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1132.3" y="670.0"></text>
</g>
<g>
<title>ip_rcv (203 samples, 1.37%)</title><rect x="1130.5" y="659.0" width="16.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1133.5" y="670.0"></text>
</g>
<g>
<title>ip_rcv_finish (184 samples, 1.24%)</title><rect x="1130.7" y="643.0" width="14.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1133.7" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (181 samples, 1.22%)</title><rect x="1130.8" y="627.0" width="14.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1133.8" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (171 samples, 1.16%)</title><rect x="1130.8" y="611.0" width="13.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1133.8" y="622.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (170 samples, 1.15%)</title><rect x="1130.8" y="595.0" width="13.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.8" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (163 samples, 1.10%)</title><rect x="1131.3" y="579.0" width="13.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1134.3" y="590.0"></text>
</g>
<g>
<title>__inet_lookup_established (19 samples, 0.13%)</title><rect x="1132.0" y="563.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1135.0" y="574.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.05%)</title><rect x="1134.0" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1137.0" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (5 samples, 0.03%)</title><rect x="1134.1" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1137.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (122 samples, 0.82%)</title><rect x="1134.6" y="563.0" width="9.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1137.6" y="574.0"></text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.05%)</title><rect x="1134.6" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.6" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (114 samples, 0.77%)</title><rect x="1135.2" y="547.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1138.2" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.09%)</title><rect x="1135.3" y="531.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1138.3" y="542.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.07%)</title><rect x="1135.5" y="515.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1138.5" y="526.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.03%)</title><rect x="1135.6" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1138.6" y="510.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.04%)</title><rect x="1135.9" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1138.9" y="510.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.04%)</title><rect x="1135.9" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.9" y="494.0"></text>
</g>
<g>
<title>tcp_ack (90 samples, 0.61%)</title><rect x="1136.8" y="531.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1139.8" y="542.0"></text>
</g>
<g>
<title>rb_next (4 samples, 0.03%)</title><rect x="1137.9" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.9" y="526.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (65 samples, 0.44%)</title><rect x="1138.3" y="515.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1141.3" y="526.0"></text>
</g>
<g>
<title>__kfree_skb (33 samples, 0.22%)</title><rect x="1139.1" y="499.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.1" y="510.0"></text>
</g>
<g>
<title>kfree_skbmem (11 samples, 0.07%)</title><rect x="1139.1" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1142.1" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (9 samples, 0.06%)</title><rect x="1139.3" y="467.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1142.3" y="478.0"></text>
</g>
<g>
<title>skb_release_all (20 samples, 0.14%)</title><rect x="1140.1" y="483.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1143.1" y="494.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.12%)</title><rect x="1140.2" y="467.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1143.2" y="478.0"></text>
</g>
<g>
<title>skb_free_head (13 samples, 0.09%)</title><rect x="1140.6" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1143.6" y="462.0"></text>
</g>
<g>
<title>kfree (13 samples, 0.09%)</title><rect x="1140.6" y="435.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1143.6" y="446.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.04%)</title><rect x="1141.1" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1144.1" y="430.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (15 samples, 0.10%)</title><rect x="1141.9" y="499.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1144.9" y="510.0"></text>
</g>
<g>
<title>minmax_subwin_update (7 samples, 0.05%)</title><rect x="1142.6" y="483.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.6" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (4 samples, 0.03%)</title><rect x="1143.2" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1146.2" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.05%)</title><rect x="1144.6" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1147.6" y="622.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.03%)</title><rect x="1145.4" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.4" y="654.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1145.9" y="643.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.9" y="654.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="1146.2" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.2" y="638.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.03%)</title><rect x="1146.2" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1149.2" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (29 samples, 0.20%)</title><rect x="1147.0" y="787.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.0" y="798.0"></text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 0.20%)</title><rect x="1147.0" y="771.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.0" y="782.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (17 samples, 0.11%)</title><rect x="1147.4" y="755.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.4" y="766.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.09%)</title><rect x="1147.5" y="739.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.5" y="750.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.05%)</title><rect x="1147.9" y="723.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1150.9" y="734.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.05%)</title><rect x="1147.9" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1150.9" y="718.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.05%)</title><rect x="1147.9" y="691.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1150.9" y="702.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.04%)</title><rect x="1148.8" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.8" y="766.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.03%)</title><rect x="1149.3" y="803.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.3" y="814.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.08%)</title><rect x="1150.1" y="835.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.1" y="846.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.03%)</title><rect x="1150.1" y="819.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1153.1" y="830.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (4 samples, 0.03%)</title><rect x="1150.7" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1153.7" y="830.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="1151.3" y="851.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.3" y="862.0"></text>
</g>
<g>
<title>ip_copy_addrs (4 samples, 0.03%)</title><rect x="1151.9" y="883.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.9" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.03%)</title><rect x="1152.6" y="963.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1155.6" y="974.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.03%)</title><rect x="1152.7" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.7" y="958.0"></text>
</g>
<g>
<title>security_socket_recvmsg (20 samples, 0.14%)</title><rect x="1153.3" y="995.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.3" y="1006.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.10%)</title><rect x="1153.7" y="979.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1156.7" y="990.0"></text>
</g>
<g>
<title>aa_sk_perm (14 samples, 0.09%)</title><rect x="1153.7" y="963.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.7" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (21 samples, 0.14%)</title><rect x="1154.8" y="1011.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.8" y="1022.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.07%)</title><rect x="1154.8" y="995.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.8" y="1006.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.07%)</title><rect x="1154.8" y="979.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.8" y="990.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.07%)</title><rect x="1154.8" y="963.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1157.8" y="974.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.07%)</title><rect x="1155.6" y="995.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.6" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.09%)</title><rect x="1156.8" y="1155.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.8" y="1166.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.05%)</title><rect x="1157.2" y="1139.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1160.2" y="1150.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.05%)</title><rect x="1157.2" y="1123.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1160.2" y="1134.0"></text>
</g>
<g>
<title>start_thread (404 samples, 2.73%)</title><rect x="1157.8" y="1171.0" width="32.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1160.8" y="1182.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (404 samples, 2.73%)</title><rect x="1157.8" y="1155.0" width="32.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1160.8" y="1166.0">th..</text>
</g>
<g>
<title>Thread::call_run() (404 samples, 2.73%)</title><rect x="1157.8" y="1139.0" width="32.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.8" y="1150.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (363 samples, 2.45%)</title><rect x="1157.8" y="1123.0" width="28.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.8" y="1134.0">Ga..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (354 samples, 2.39%)</title><rect x="1157.8" y="1107.0" width="28.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.8" y="1118.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (196 samples, 1.32%)</title><rect x="1157.8" y="1091.0" width="15.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.8" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (66 samples, 0.45%)</title><rect x="1158.2" y="1075.0" width="5.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.2" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (34 samples, 0.23%)</title><rect x="1159.2" y="1059.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1162.2" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (17 samples, 0.11%)</title><rect x="1162.1" y="1059.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.1" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.05%)</title><rect x="1162.8" y="1043.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.8" y="1054.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (5 samples, 0.03%)</title><rect x="1163.5" y="1075.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.5" y="1086.0"></text>
</g>
<g>
<title>SpinPause (120 samples, 0.81%)</title><rect x="1163.9" y="1075.0" width="9.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1166.9" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (129 samples, 0.87%)</title><rect x="1173.4" y="1091.0" width="10.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.4" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (128 samples, 0.86%)</title><rect x="1173.5" y="1075.0" width="10.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.5" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (128 samples, 0.86%)</title><rect x="1173.5" y="1059.0" width="10.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.5" y="1070.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (128 samples, 0.86%)</title><rect x="1173.5" y="1043.0" width="10.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.5" y="1054.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (124 samples, 0.84%)</title><rect x="1173.7" y="1027.0" width="9.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.7" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (47 samples, 0.32%)</title><rect x="1173.7" y="1011.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.7" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (22 samples, 0.15%)</title><rect x="1174.4" y="995.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1177.4" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (16 samples, 0.11%)</title><rect x="1176.1" y="995.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.1" y="1006.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (77 samples, 0.52%)</title><rect x="1177.5" y="1011.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.5" y="1022.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (71 samples, 0.48%)</title><rect x="1177.5" y="995.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.5" y="1006.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (10 samples, 0.07%)</title><rect x="1178.4" y="979.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.4" y="990.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 0.03%)</title><rect x="1179.3" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.3" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (22 samples, 0.15%)</title><rect x="1179.8" y="979.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.8" y="990.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (18 samples, 0.12%)</title><rect x="1181.6" y="979.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.6" y="990.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (4 samples, 0.03%)</title><rect x="1183.2" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.2" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (26 samples, 0.18%)</title><rect x="1183.9" y="1091.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.9" y="1102.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (16 samples, 0.11%)</title><rect x="1184.3" y="1075.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.3" y="1086.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (16 samples, 0.11%)</title><rect x="1184.3" y="1059.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.3" y="1070.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (13 samples, 0.09%)</title><rect x="1184.4" y="1043.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.4" y="1054.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (5 samples, 0.03%)</title><rect x="1184.7" y="1027.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.7" y="1038.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (5 samples, 0.03%)</title><rect x="1185.6" y="1075.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.6" y="1086.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (6 samples, 0.04%)</title><rect x="1186.1" y="1107.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.1" y="1118.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (6 samples, 0.04%)</title><rect x="1186.1" y="1091.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.1" y="1102.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (6 samples, 0.04%)</title><rect x="1186.1" y="1075.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.1" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.04%)</title><rect x="1186.1" y="1059.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.1" y="1070.0"></text>
</g>
<g>
<title>JavaThread::run() (26 samples, 0.18%)</title><rect x="1186.7" y="1123.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.7" y="1134.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (24 samples, 0.16%)</title><rect x="1186.7" y="1107.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.7" y="1118.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (24 samples, 0.16%)</title><rect x="1186.7" y="1091.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.7" y="1102.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (24 samples, 0.16%)</title><rect x="1186.7" y="1075.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="1086.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (24 samples, 0.16%)</title><rect x="1186.7" y="1059.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.7" y="1070.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (15 samples, 0.10%)</title><rect x="1186.7" y="1043.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.7" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (12 samples, 0.08%)</title><rect x="1187.0" y="1027.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.03%)</title><rect x="1187.2" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.2" y="1022.0"></text>
</g>
<g>
<title>Compile::Optimize() (7 samples, 0.05%)</title><rect x="1187.9" y="1043.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.9" y="1054.0"></text>
</g>
<g>
<title>VMThread::run() (15 samples, 0.10%)</title><rect x="1188.8" y="1123.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.8" y="1134.0"></text>
</g>
<g>
<title>VMThread::loop() (15 samples, 0.10%)</title><rect x="1188.8" y="1107.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.8" y="1118.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (5 samples, 0.03%)</title><rect x="1189.1" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="1102.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.03%)</title><rect x="1189.1" y="1075.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.1" y="1086.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (5 samples, 0.03%)</title><rect x="1189.1" y="1059.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.03%)</title><rect x="1189.1" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.1" y="1054.0"></text>
</g>
<g>
<title>__sched_yield (6 samples, 0.04%)</title><rect x="1189.5" y="1091.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.5" y="1102.0"></text>
</g>
</g>
</svg>
