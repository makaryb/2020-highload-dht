<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (705,454 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (628,704 samples, 89.12%)</title><rect x="10.0" y="563.0" width="1051.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (628,704 samples, 89.12%)</title><rect x="10.0" y="547.0" width="1051.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (628,704 samples, 89.12%)</title><rect x="10.0" y="531.0" width="1051.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (4,195 samples, 0.59%)</title><rect x="10.0" y="515.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$438/2076361235.run (4,195 samples, 0.59%)</title><rect x="10.0" y="499.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$11 (4,195 samples, 0.59%)</title><rect x="10.0" y="483.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (4,182 samples, 0.59%)</title><rect x="10.0" y="467.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4,182 samples, 0.59%)</title><rect x="10.0" y="451.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (4,182 samples, 0.59%)</title><rect x="10.0" y="435.0" width="7.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (253,025 samples, 35.87%)</title><rect x="17.0" y="515.0" width="423.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (253,022 samples, 35.87%)</title><rect x="17.0" y="499.0" width="423.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.0" y="510.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (253,022 samples, 35.87%)</title><rect x="17.0" y="483.0" width="423.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.0" y="494.0">java/util/concurrent/CompletableFuture$UniCompose.tryFire</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/63339538.apply (244,368 samples, 34.64%)</title><rect x="17.0" y="467.0" width="408.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$181/63339538..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (244,368 samples, 34.64%)</title><rect x="17.0" y="451.0" width="408.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$responseAsync..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (244,368 samples, 34.64%)</title><rect x="17.0" y="435.0" width="408.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.0" y="446.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (243,432 samples, 34.51%)</title><rect x="17.0" y="419.0" width="407.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.0" y="430.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (243,432 samples, 34.51%)</title><rect x="17.0" y="403.0" width="407.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.0" y="414.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (243,432 samples, 34.51%)</title><rect x="17.0" y="387.0" width="407.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.0" y="398.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (196,575 samples, 27.87%)</title><rect x="17.0" y="371.0" width="328.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.0" y="382.0">java/util/concurrent/CompletableFuture.handle</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (196,575 samples, 27.87%)</title><rect x="17.0" y="355.0" width="328.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.0" y="366.0">java/util/concurrent/CompletableFuture.uniHa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (196,575 samples, 27.87%)</title><rect x="17.0" y="339.0" width="328.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.0" y="350.0">java/util/concurrent/CompletableFuture.uniHa..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$323/1204452569.apply (196,575 samples, 27.87%)</title><rect x="17.0" y="323.0" width="328.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.0" y="334.0">jdk/internal/net/http/Exchange$$Lambda$323/1..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (196,575 samples, 27.87%)</title><rect x="17.0" y="307.0" width="328.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.0" y="318.0">jdk/internal/net/http/Exchange.lambda$respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (196,575 samples, 27.87%)</title><rect x="17.0" y="291.0" width="328.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.0" y="302.0">jdk/internal/net/http/Exchange.checkFor407</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.apply (196,575 samples, 27.87%)</title><rect x="17.0" y="275.0" width="328.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.0" y="286.0">jdk/internal/net/http/Exchange$$Lambda$212/4..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (196,575 samples, 27.87%)</title><rect x="17.0" y="259.0" width="328.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.0" y="270.0">jdk/internal/net/http/Exchange.lambda$respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (196,575 samples, 27.87%)</title><rect x="17.0" y="243.0" width="328.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.0" y="254.0">jdk/internal/net/http/Http1Exchange.sendHead..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (196,562 samples, 27.86%)</title><rect x="17.0" y="227.0" width="328.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.0" y="238.0">java/util/concurrent/CompletableFuture.thenC..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (196,562 samples, 27.86%)</title><rect x="17.0" y="211.0" width="328.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.0" y="222.0">java/util/concurrent/CompletableFuture.uniCo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$368/1963220307.apply (196,562 samples, 27.86%)</title><rect x="17.0" y="195.0" width="328.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.0" y="206.0">jdk/internal/net/http/Http1Exchange$$Lambda$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (196,562 samples, 27.86%)</title><rect x="17.0" y="179.0" width="328.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.0" y="190.0">jdk/internal/net/http/Http1Exchange.lambda$s..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (196,562 samples, 27.86%)</title><rect x="17.0" y="163.0" width="328.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.0" y="174.0">jdk/internal/net/http/Http1Exchange.connectF..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (196,562 samples, 27.86%)</title><rect x="17.0" y="147.0" width="328.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.0" y="158.0">jdk/internal/net/http/SocketTube.connectFlows</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (13,633 samples, 1.93%)</title><rect x="17.0" y="131.0" width="22.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.0" y="142.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (13,633 samples, 1.93%)</title><rect x="17.0" y="115.0" width="22.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.0" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13,633 samples, 1.93%)</title><rect x="17.0" y="99.0" width="22.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="110.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13,633 samples, 1.93%)</title><rect x="17.0" y="83.0" width="22.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.0" y="94.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13,633 samples, 1.93%)</title><rect x="17.0" y="67.0" width="22.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.0" y="78.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,587 samples, 1.78%)</title><rect x="17.0" y="51.0" width="21.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="20.0" y="62.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,046 samples, 0.15%)</title><rect x="38.1" y="51.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,046 samples, 0.15%)</title><rect x="38.1" y="35.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="41.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (182,929 samples, 25.93%)</title><rect x="39.8" y="131.0" width="306.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.8" y="142.0">jdk/internal/net/http/SocketTube.subscribe</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (182,929 samples, 25.93%)</title><rect x="39.8" y="115.0" width="306.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.8" y="126.0">jdk/internal/net/http/SocketTube$Internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (182,926 samples, 25.93%)</title><rect x="39.8" y="99.0" width="306.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.8" y="110.0">jdk/internal/net/http/SocketTube$Internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (182,926 samples, 25.93%)</title><rect x="39.8" y="83.0" width="306.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.8" y="94.0">jdk/internal/net/http/HttpClientImpl.regi..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (182,926 samples, 25.93%)</title><rect x="39.8" y="67.0" width="306.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.8" y="78.0">jdk/internal/net/http/HttpClientImpl$Sele..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (181,263 samples, 25.69%)</title><rect x="39.8" y="51.0" width="303.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="42.8" y="62.0">jdk.internal.net.http.HttpClientImpl$Sele..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,663 samples, 0.24%)</title><rect x="343.0" y="51.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.0" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,663 samples, 0.24%)</title><rect x="343.0" y="35.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="346.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (46,857 samples, 6.64%)</title><rect x="345.8" y="371.0" width="78.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.8" y="382.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (46,857 samples, 6.64%)</title><rect x="345.8" y="355.0" width="78.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.8" y="366.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (46,857 samples, 6.64%)</title><rect x="345.8" y="339.0" width="78.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.8" y="350.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (46,857 samples, 6.64%)</title><rect x="345.8" y="323.0" width="78.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.8" y="334.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (46,856 samples, 6.64%)</title><rect x="345.8" y="307.0" width="78.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.8" y="318.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (46,856 samples, 6.64%)</title><rect x="345.8" y="291.0" width="78.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.8" y="302.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (46,856 samples, 6.64%)</title><rect x="345.8" y="275.0" width="78.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="348.8" y="286.0">jdk.inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (936 samples, 0.13%)</title><rect x="424.2" y="419.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (936 samples, 0.13%)</title><rect x="424.2" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (871 samples, 0.12%)</title><rect x="424.3" y="387.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (871 samples, 0.12%)</title><rect x="424.3" y="371.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="427.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/28457964.apply (8,646 samples, 1.23%)</title><rect x="425.8" y="467.0" width="14.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (8,646 samples, 1.23%)</title><rect x="425.8" y="451.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (8,646 samples, 1.23%)</title><rect x="425.8" y="435.0" width="14.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,858 samples, 0.26%)</title><rect x="425.8" y="419.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,858 samples, 0.26%)</title><rect x="425.8" y="403.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,858 samples, 0.26%)</title><rect x="425.8" y="387.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,858 samples, 0.26%)</title><rect x="425.8" y="371.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,858 samples, 0.26%)</title><rect x="425.8" y="355.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,858 samples, 0.26%)</title><rect x="425.8" y="339.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,858 samples, 0.26%)</title><rect x="425.8" y="323.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,858 samples, 0.26%)</title><rect x="425.8" y="307.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,847 samples, 0.26%)</title><rect x="425.8" y="291.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,847 samples, 0.26%)</title><rect x="425.8" y="275.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,847 samples, 0.26%)</title><rect x="425.8" y="259.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,847 samples, 0.26%)</title><rect x="425.8" y="243.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,847 samples, 0.26%)</title><rect x="425.8" y="227.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,847 samples, 0.26%)</title><rect x="425.8" y="211.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,847 samples, 0.26%)</title><rect x="425.8" y="195.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="428.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (6,788 samples, 0.96%)</title><rect x="428.9" y="419.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6,788 samples, 0.96%)</title><rect x="428.9" y="403.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$214/2080116879.accept (6,788 samples, 0.96%)</title><rect x="428.9" y="387.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (6,788 samples, 0.96%)</title><rect x="428.9" y="371.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (6,788 samples, 0.96%)</title><rect x="428.9" y="355.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (6,788 samples, 0.96%)</title><rect x="428.9" y="339.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (6,788 samples, 0.96%)</title><rect x="428.9" y="323.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (6,788 samples, 0.96%)</title><rect x="428.9" y="307.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (6,788 samples, 0.96%)</title><rect x="428.9" y="291.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (6,788 samples, 0.96%)</title><rect x="428.9" y="275.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (6,788 samples, 0.96%)</title><rect x="428.9" y="259.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6,788 samples, 0.96%)</title><rect x="428.9" y="243.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6,788 samples, 0.96%)</title><rect x="428.9" y="227.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6,788 samples, 0.96%)</title><rect x="428.9" y="211.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6,788 samples, 0.96%)</title><rect x="428.9" y="195.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6,788 samples, 0.96%)</title><rect x="428.9" y="179.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6,788 samples, 0.96%)</title><rect x="428.9" y="163.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (6,788 samples, 0.96%)</title><rect x="428.9" y="147.0" width="11.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="431.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (51,450 samples, 7.29%)</title><rect x="440.2" y="515.0" width="86.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.2" y="526.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (51,450 samples, 7.29%)</title><rect x="440.2" y="499.0" width="86.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.2" y="510.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8,125 samples, 1.15%)</title><rect x="440.2" y="483.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8,125 samples, 1.15%)</title><rect x="440.2" y="467.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8,125 samples, 1.15%)</title><rect x="440.2" y="451.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8,125 samples, 1.15%)</title><rect x="440.2" y="435.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8,125 samples, 1.15%)</title><rect x="440.2" y="419.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (8,125 samples, 1.15%)</title><rect x="440.2" y="403.0" width="13.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="443.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (43,325 samples, 6.14%)</title><rect x="453.8" y="483.0" width="72.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.8" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (43,325 samples, 6.14%)</title><rect x="453.8" y="467.0" width="72.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.8" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (43,325 samples, 6.14%)</title><rect x="453.8" y="451.0" width="72.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.8" y="462.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (43,325 samples, 6.14%)</title><rect x="453.8" y="435.0" width="72.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.8" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43,325 samples, 6.14%)</title><rect x="453.8" y="419.0" width="72.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.8" y="430.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43,325 samples, 6.14%)</title><rect x="453.8" y="403.0" width="72.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.8" y="414.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (43,325 samples, 6.14%)</title><rect x="453.8" y="387.0" width="72.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="456.8" y="398.0">java.uti..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (317,591 samples, 45.02%)</title><rect x="526.3" y="515.0" width="531.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.3" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (317,591 samples, 45.02%)</title><rect x="526.3" y="499.0" width="531.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.3" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask...</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (96,488 samples, 13.68%)</title><rect x="526.3" y="483.0" width="161.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.3" y="494.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (96,488 samples, 13.68%)</title><rect x="526.3" y="467.0" width="161.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.3" y="478.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (96,488 samples, 13.68%)</title><rect x="526.3" y="451.0" width="161.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.3" y="462.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (94,678 samples, 13.42%)</title><rect x="526.3" y="435.0" width="158.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.3" y="446.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (94,678 samples, 13.42%)</title><rect x="526.3" y="419.0" width="158.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.3" y="430.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (94,678 samples, 13.42%)</title><rect x="526.3" y="403.0" width="158.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.3" y="414.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (94,678 samples, 13.42%)</title><rect x="526.3" y="387.0" width="158.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.3" y="398.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (94,678 samples, 13.42%)</title><rect x="526.3" y="371.0" width="158.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.3" y="382.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (94,678 samples, 13.42%)</title><rect x="526.3" y="355.0" width="158.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.3" y="366.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (94,671 samples, 13.42%)</title><rect x="526.3" y="339.0" width="158.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.3" y="350.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (94,671 samples, 13.42%)</title><rect x="526.3" y="323.0" width="158.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.3" y="334.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (94,671 samples, 13.42%)</title><rect x="526.3" y="307.0" width="158.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.3" y="318.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (91,734 samples, 13.00%)</title><rect x="526.3" y="291.0" width="153.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="529.3" y="302.0">jdk.internal.net.ht..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,937 samples, 0.42%)</title><rect x="679.8" y="291.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (2,937 samples, 0.42%)</title><rect x="679.8" y="275.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="682.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,810 samples, 0.26%)</title><rect x="684.7" y="435.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,810 samples, 0.26%)</title><rect x="684.7" y="419.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,810 samples, 0.26%)</title><rect x="684.7" y="403.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,810 samples, 0.26%)</title><rect x="684.7" y="387.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,810 samples, 0.26%)</title><rect x="684.7" y="371.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,810 samples, 0.26%)</title><rect x="684.7" y="355.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,810 samples, 0.26%)</title><rect x="684.7" y="339.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,810 samples, 0.26%)</title><rect x="684.7" y="323.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,810 samples, 0.26%)</title><rect x="684.7" y="307.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,810 samples, 0.26%)</title><rect x="684.7" y="291.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,810 samples, 0.26%)</title><rect x="684.7" y="275.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,810 samples, 0.26%)</title><rect x="684.7" y="259.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,810 samples, 0.26%)</title><rect x="684.7" y="243.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,810 samples, 0.26%)</title><rect x="684.7" y="227.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/137991968.apply (1,810 samples, 0.26%)</title><rect x="684.7" y="211.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1,810 samples, 0.26%)</title><rect x="684.7" y="195.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1,810 samples, 0.26%)</title><rect x="684.7" y="179.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1,810 samples, 0.26%)</title><rect x="684.7" y="163.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1,810 samples, 0.26%)</title><rect x="684.7" y="147.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (1,810 samples, 0.26%)</title><rect x="684.7" y="131.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="687.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (221,103 samples, 31.34%)</title><rect x="687.7" y="483.0" width="369.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.7" y="494.0">jdk/internal/net/http/common/SequentialScheduler$T..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (221,103 samples, 31.34%)</title><rect x="687.7" y="467.0" width="369.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.7" y="478.0">jdk/internal/net/http/common/SequentialScheduler$C..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (221,103 samples, 31.34%)</title><rect x="687.7" y="451.0" width="369.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="462.0">jdk/internal/net/http/common/SequentialScheduler$S..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (221,103 samples, 31.34%)</title><rect x="687.7" y="435.0" width="369.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.7" y="446.0">jdk/internal/net/http/Http1AsyncReceiver$$Lambda$3..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (221,103 samples, 31.34%)</title><rect x="687.7" y="419.0" width="369.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.7" y="430.0">jdk/internal/net/http/Http1AsyncReceiver.flush</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (221,046 samples, 31.33%)</title><rect x="687.7" y="403.0" width="369.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.7" y="414.0">jdk/internal/net/http/Http1AsyncReceiver.handlePen..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (221,046 samples, 31.33%)</title><rect x="687.7" y="387.0" width="369.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.7" y="398.0">jdk/internal/net/http/Http1Response$BodyReader.onS..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (221,046 samples, 31.33%)</title><rect x="687.7" y="371.0" width="369.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.7" y="382.0">jdk/internal/net/http/ResponseContent$FixedLengthB..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/287410361.run (221,046 samples, 31.33%)</title><rect x="687.7" y="355.0" width="369.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.7" y="366.0">jdk/internal/net/http/Http1Response$$Lambda$453/28..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (221,046 samples, 31.33%)</title><rect x="687.7" y="339.0" width="369.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.7" y="350.0">jdk/internal/net/http/Http1Response.onFinished</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (221,046 samples, 31.33%)</title><rect x="687.7" y="323.0" width="369.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.7" y="334.0">jdk/internal/net/http/HttpConnection.closeOrReturn..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (221,046 samples, 31.33%)</title><rect x="687.7" y="307.0" width="369.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.7" y="318.0">jdk/internal/net/http/ConnectionPool.returnToPool</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (221,046 samples, 31.33%)</title><rect x="687.7" y="291.0" width="369.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="302.0">jdk/internal/net/http/ConnectionPool.returnToPool</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (56,099 samples, 7.95%)</title><rect x="687.7" y="275.0" width="93.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="690.7" y="286.0">jdk.interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (164,947 samples, 23.38%)</title><rect x="781.6" y="275.0" width="275.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.6" y="286.0">jdk/internal/net/http/ConnectionPool...</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (164,947 samples, 23.38%)</title><rect x="781.6" y="259.0" width="275.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.6" y="270.0">jdk/internal/net/http/SocketTube.conn..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (20,292 samples, 2.88%)</title><rect x="781.6" y="243.0" width="33.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.6" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (20,292 samples, 2.88%)</title><rect x="781.6" y="227.0" width="33.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.6" y="238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (20,292 samples, 2.88%)</title><rect x="781.6" y="211.0" width="33.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.6" y="222.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (20,292 samples, 2.88%)</title><rect x="781.6" y="195.0" width="33.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.6" y="206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (20,292 samples, 2.88%)</title><rect x="781.6" y="179.0" width="33.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.6" y="190.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (18,825 samples, 2.67%)</title><rect x="781.6" y="163.0" width="31.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="784.6" y="174.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,467 samples, 0.21%)</title><rect x="813.0" y="163.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,467 samples, 0.21%)</title><rect x="813.0" y="147.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="816.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (144,655 samples, 20.51%)</title><rect x="815.5" y="243.0" width="242.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.5" y="254.0">jdk/internal/net/http/SocketTube..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (144,655 samples, 20.51%)</title><rect x="815.5" y="227.0" width="242.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.5" y="238.0">jdk/internal/net/http/SocketTube..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (144,655 samples, 20.51%)</title><rect x="815.5" y="211.0" width="242.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.5" y="222.0">jdk/internal/net/http/SocketTube..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (144,655 samples, 20.51%)</title><rect x="815.5" y="195.0" width="242.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.5" y="206.0">jdk/internal/net/http/HttpClient..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (144,655 samples, 20.51%)</title><rect x="815.5" y="179.0" width="242.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.5" y="190.0">jdk/internal/net/http/HttpClient..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (142,433 samples, 20.19%)</title><rect x="815.5" y="163.0" width="238.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="818.5" y="174.0">jdk.internal.net.http.HttpClient..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,222 samples, 0.31%)</title><rect x="1053.7" y="163.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (2,222 samples, 0.31%)</title><rect x="1053.7" y="147.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1056.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/972466412.run (2,434 samples, 0.35%)</title><rect x="1057.6" y="515.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1060.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (2,434 samples, 0.35%)</title><rect x="1057.6" y="499.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (2,434 samples, 0.35%)</title><rect x="1057.6" y="483.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.upserting (2,434 samples, 0.35%)</title><rect x="1057.6" y="467.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doUpsert (1,269 samples, 0.18%)</title><rect x="1057.6" y="451.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (1,269 samples, 0.18%)</title><rect x="1057.6" y="435.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (1,269 samples, 0.18%)</title><rect x="1057.6" y="419.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,269 samples, 0.18%)</title><rect x="1057.6" y="403.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,269 samples, 0.18%)</title><rect x="1057.6" y="387.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1,118 samples, 0.16%)</title><rect x="1057.6" y="371.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,118 samples, 0.16%)</title><rect x="1057.6" y="355.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,118 samples, 0.16%)</title><rect x="1057.6" y="339.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,118 samples, 0.16%)</title><rect x="1057.6" y="323.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,118 samples, 0.16%)</title><rect x="1057.6" y="307.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,118 samples, 0.16%)</title><rect x="1057.6" y="291.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,118 samples, 0.16%)</title><rect x="1057.6" y="275.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,118 samples, 0.16%)</title><rect x="1057.6" y="259.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1060.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (151 samples, 0.02%)</title><rect x="1059.5" y="371.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (151 samples, 0.02%)</title><rect x="1059.5" y="355.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (151 samples, 0.02%)</title><rect x="1059.5" y="339.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (151 samples, 0.02%)</title><rect x="1059.5" y="323.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (151 samples, 0.02%)</title><rect x="1059.5" y="307.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (151 samples, 0.02%)</title><rect x="1059.5" y="291.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (151 samples, 0.02%)</title><rect x="1059.5" y="275.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1062.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (1,130 samples, 0.16%)</title><rect x="1059.7" y="451.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,130 samples, 0.16%)</title><rect x="1059.7" y="435.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1062.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,130 samples, 0.16%)</title><rect x="1059.7" y="419.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,130 samples, 0.16%)</title><rect x="1059.7" y="403.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,130 samples, 0.16%)</title><rect x="1059.7" y="387.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (983 samples, 0.14%)</title><rect x="1059.7" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (983 samples, 0.14%)</title><rect x="1059.7" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1062.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (983 samples, 0.14%)</title><rect x="1059.7" y="339.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (983 samples, 0.14%)</title><rect x="1059.7" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (983 samples, 0.14%)</title><rect x="1059.7" y="307.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (983 samples, 0.14%)</title><rect x="1059.7" y="291.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (983 samples, 0.14%)</title><rect x="1059.7" y="275.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (983 samples, 0.14%)</title><rect x="1059.7" y="259.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1062.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (3,919 samples, 0.56%)</title><rect x="1061.6" y="563.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (3,919 samples, 0.56%)</title><rect x="1061.6" y="547.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,919 samples, 0.56%)</title><rect x="1061.6" y="531.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (3,919 samples, 0.56%)</title><rect x="1061.6" y="515.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3,919 samples, 0.56%)</title><rect x="1061.6" y="499.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (3,919 samples, 0.56%)</title><rect x="1061.6" y="483.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,919 samples, 0.56%)</title><rect x="1061.6" y="467.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,914 samples, 0.55%)</title><rect x="1061.6" y="451.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,914 samples, 0.55%)</title><rect x="1061.6" y="435.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,914 samples, 0.55%)</title><rect x="1061.6" y="419.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,914 samples, 0.55%)</title><rect x="1061.6" y="403.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (3,914 samples, 0.55%)</title><rect x="1061.6" y="387.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (3,914 samples, 0.55%)</title><rect x="1061.6" y="371.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (3,914 samples, 0.55%)</title><rect x="1061.6" y="355.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (3,914 samples, 0.55%)</title><rect x="1061.6" y="339.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (3,914 samples, 0.55%)</title><rect x="1061.6" y="323.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3,914 samples, 0.55%)</title><rect x="1061.6" y="307.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3,914 samples, 0.55%)</title><rect x="1061.6" y="291.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3,914 samples, 0.55%)</title><rect x="1061.6" y="275.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3,914 samples, 0.55%)</title><rect x="1061.6" y="259.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3,914 samples, 0.55%)</title><rect x="1061.6" y="243.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3,914 samples, 0.55%)</title><rect x="1061.6" y="227.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (3,914 samples, 0.55%)</title><rect x="1061.6" y="211.0" width="6.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1064.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (64,361 samples, 9.12%)</title><rect x="1068.2" y="563.0" width="107.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.2" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (52,988 samples, 7.51%)</title><rect x="1068.4" y="547.0" width="88.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1071.4" y="558.0">jdk.intern..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,178 samples, 0.17%)</title><rect x="1157.0" y="547.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$276/960955001.run (162 samples, 0.02%)</title><rect x="1157.0" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (162 samples, 0.02%)</title><rect x="1157.0" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.02%)</title><rect x="1157.0" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.02%)</title><rect x="1157.0" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (162 samples, 0.02%)</title><rect x="1157.0" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (162 samples, 0.02%)</title><rect x="1157.0" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (162 samples, 0.02%)</title><rect x="1157.0" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (162 samples, 0.02%)</title><rect x="1157.0" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (162 samples, 0.02%)</title><rect x="1157.0" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (162 samples, 0.02%)</title><rect x="1157.0" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (162 samples, 0.02%)</title><rect x="1157.0" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.02%)</title><rect x="1157.0" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.02%)</title><rect x="1157.0" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (162 samples, 0.02%)</title><rect x="1157.0" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (162 samples, 0.02%)</title><rect x="1157.0" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (162 samples, 0.02%)</title><rect x="1157.0" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$289/1211432.run (1,016 samples, 0.14%)</title><rect x="1157.3" y="531.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,016 samples, 0.14%)</title><rect x="1157.3" y="515.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,016 samples, 0.14%)</title><rect x="1157.3" y="499.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,016 samples, 0.14%)</title><rect x="1157.3" y="483.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,016 samples, 0.14%)</title><rect x="1157.3" y="467.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (460 samples, 0.07%)</title><rect x="1157.3" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (460 samples, 0.07%)</title><rect x="1157.3" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (460 samples, 0.07%)</title><rect x="1157.3" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (460 samples, 0.07%)</title><rect x="1157.3" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (460 samples, 0.07%)</title><rect x="1157.3" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (460 samples, 0.07%)</title><rect x="1157.3" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (460 samples, 0.07%)</title><rect x="1157.3" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (460 samples, 0.07%)</title><rect x="1157.3" y="339.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1160.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (556 samples, 0.08%)</title><rect x="1158.1" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (556 samples, 0.08%)</title><rect x="1158.1" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (556 samples, 0.08%)</title><rect x="1158.1" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (556 samples, 0.08%)</title><rect x="1158.1" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (556 samples, 0.08%)</title><rect x="1158.1" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (556 samples, 0.08%)</title><rect x="1158.1" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (556 samples, 0.08%)</title><rect x="1158.1" y="355.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1161.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9,794 samples, 1.39%)</title><rect x="1159.0" y="547.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1162.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9,794 samples, 1.39%)</title><rect x="1159.0" y="531.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (9,794 samples, 1.39%)</title><rect x="1159.0" y="515.0" width="16.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1162.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (192 samples, 0.03%)</title><rect x="1175.4" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (192 samples, 0.03%)</title><rect x="1175.4" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (192 samples, 0.03%)</title><rect x="1175.4" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (192 samples, 0.03%)</title><rect x="1175.4" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (192 samples, 0.03%)</title><rect x="1175.4" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (192 samples, 0.03%)</title><rect x="1175.4" y="467.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1178.4" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,470 samples, 1.20%)</title><rect x="1175.8" y="563.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,470 samples, 1.20%)</title><rect x="1175.8" y="547.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.8" y="558.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (3,108 samples, 0.44%)</title><rect x="1175.8" y="531.0" width="5.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1178.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,362 samples, 0.76%)</title><rect x="1181.0" y="531.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,362 samples, 0.76%)</title><rect x="1181.0" y="515.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,362 samples, 0.76%)</title><rect x="1181.0" y="499.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,362 samples, 0.76%)</title><rect x="1181.0" y="483.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.0" y="494.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,362 samples, 0.76%)</title><rect x="1181.0" y="467.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (5,362 samples, 0.76%)</title><rect x="1181.0" y="451.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (5,362 samples, 0.76%)</title><rect x="1181.0" y="435.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5,362 samples, 0.76%)</title><rect x="1181.0" y="419.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5,362 samples, 0.76%)</title><rect x="1181.0" y="403.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4,983 samples, 0.71%)</title><rect x="1181.0" y="387.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4,983 samples, 0.71%)</title><rect x="1181.0" y="371.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,983 samples, 0.71%)</title><rect x="1181.0" y="355.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,983 samples, 0.71%)</title><rect x="1181.0" y="339.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,983 samples, 0.71%)</title><rect x="1181.0" y="323.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,983 samples, 0.71%)</title><rect x="1181.0" y="307.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,983 samples, 0.71%)</title><rect x="1181.0" y="291.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,983 samples, 0.71%)</title><rect x="1181.0" y="275.0" width="8.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1184.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (379 samples, 0.05%)</title><rect x="1189.4" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (379 samples, 0.05%)</title><rect x="1189.4" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (379 samples, 0.05%)</title><rect x="1189.4" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (379 samples, 0.05%)</title><rect x="1189.4" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (379 samples, 0.05%)</title><rect x="1189.4" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (379 samples, 0.05%)</title><rect x="1189.4" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (379 samples, 0.05%)</title><rect x="1189.4" y="291.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1192.4" y="302.0"></text>
</g>
</g>
</svg>
