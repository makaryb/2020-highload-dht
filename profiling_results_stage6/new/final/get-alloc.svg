<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (289,478 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (135,348 samples, 46.76%)</title><rect x="10.0" y="691.0" width="551.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (135,348 samples, 46.76%)</title><rect x="10.0" y="675.0" width="551.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (135,348 samples, 46.76%)</title><rect x="10.0" y="659.0" width="551.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (67,262 samples, 23.24%)</title><rect x="10.0" y="643.0" width="274.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$527/406022516.run (67,262 samples, 23.24%)</title><rect x="10.0" y="627.0" width="274.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="638.0">ru/mail/polis/service/boriskin/Replic..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5 (67,262 samples, 23.24%)</title><rect x="10.0" y="611.0" width="274.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="622.0">ru/mail/polis/service/boriskin/Replic..</text>
</g>
<g>
<title>java/lang/String.getBytes (216 samples, 0.07%)</title><rect x="10.0" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (216 samples, 0.07%)</title><rect x="10.0" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (216 samples, 0.07%)</title><rect x="10.0" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (216 samples, 0.07%)</title><rect x="10.0" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.07%)</title><rect x="10.0" y="531.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (70 samples, 0.02%)</title><rect x="10.9" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (70 samples, 0.02%)</title><rect x="10.9" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.9" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.02%)</title><rect x="10.9" y="563.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (249 samples, 0.09%)</title><rect x="11.2" y="595.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (249 samples, 0.09%)</title><rect x="11.2" y="579.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (249 samples, 0.09%)</title><rect x="11.2" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (193 samples, 0.07%)</title><rect x="11.2" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (193 samples, 0.07%)</title><rect x="11.2" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.2" y="542.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.07%)</title><rect x="11.2" y="515.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="14.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (66,330 samples, 22.91%)</title><rect x="12.2" y="595.0" width="270.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.2" y="606.0">ru/mail/polis/service/boriskin/Value..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,084 samples, 1.07%)</title><rect x="12.4" y="579.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,769 samples, 0.96%)</title><rect x="12.4" y="563.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (704 samples, 0.24%)</title><rect x="12.4" y="547.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.4" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (704 samples, 0.24%)</title><rect x="12.4" y="531.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (704 samples, 0.24%)</title><rect x="12.4" y="515.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (704 samples, 0.24%)</title><rect x="12.4" y="499.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (704 samples, 0.24%)</title><rect x="12.4" y="483.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (704 samples, 0.24%)</title><rect x="12.4" y="467.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (704 samples, 0.24%)</title><rect x="12.4" y="451.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (704 samples, 0.24%)</title><rect x="12.4" y="435.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (704 samples, 0.24%)</title><rect x="12.4" y="419.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (704 samples, 0.24%)</title><rect x="12.4" y="403.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (704 samples, 0.24%)</title><rect x="12.4" y="387.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (704 samples, 0.24%)</title><rect x="12.4" y="371.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="15.4" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,065 samples, 0.71%)</title><rect x="15.3" y="547.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,065 samples, 0.71%)</title><rect x="15.3" y="531.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,065 samples, 0.71%)</title><rect x="15.3" y="515.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,065 samples, 0.71%)</title><rect x="15.3" y="499.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,065 samples, 0.71%)</title><rect x="15.3" y="483.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,065 samples, 0.71%)</title><rect x="15.3" y="467.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,587 samples, 0.55%)</title><rect x="15.3" y="451.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,587 samples, 0.55%)</title><rect x="15.3" y="435.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,587 samples, 0.55%)</title><rect x="15.3" y="419.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (1,587 samples, 0.55%)</title><rect x="15.3" y="403.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,014 samples, 0.35%)</title><rect x="15.3" y="387.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.3" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (653 samples, 0.23%)</title><rect x="15.3" y="371.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="18.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (361 samples, 0.12%)</title><rect x="17.9" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.9" y="382.0"></text>
</g>
<g>
<title>byte[] (361 samples, 0.12%)</title><rect x="17.9" y="355.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="20.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (454 samples, 0.16%)</title><rect x="19.9" y="387.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (454 samples, 0.16%)</title><rect x="19.9" y="371.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.9" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (313 samples, 0.11%)</title><rect x="19.9" y="355.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="22.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (141 samples, 0.05%)</title><rect x="21.2" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.2" y="366.0"></text>
</g>
<g>
<title>byte[] (141 samples, 0.05%)</title><rect x="21.2" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="24.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (478 samples, 0.17%)</title><rect x="21.7" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (478 samples, 0.17%)</title><rect x="21.7" y="435.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (478 samples, 0.17%)</title><rect x="21.7" y="419.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (478 samples, 0.17%)</title><rect x="21.7" y="403.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (478 samples, 0.17%)</title><rect x="21.7" y="387.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (478 samples, 0.17%)</title><rect x="21.7" y="371.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (478 samples, 0.17%)</title><rect x="21.7" y="355.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="24.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$523/1887481660.apply (315 samples, 0.11%)</title><rect x="23.7" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (315 samples, 0.11%)</title><rect x="23.7" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (315 samples, 0.11%)</title><rect x="23.7" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.7" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (315 samples, 0.11%)</title><rect x="23.7" y="515.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="26.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (86 samples, 0.03%)</title><rect x="25.0" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (86 samples, 0.03%)</title><rect x="25.0" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.0" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (86 samples, 0.03%)</title><rect x="25.0" y="547.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (62,994 samples, 21.76%)</title><rect x="25.3" y="579.0" width="256.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.3" y="590.0">ru/mail/polis/service/boriskin/Val..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,848 samples, 3.06%)</title><rect x="25.3" y="563.0" width="36.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.3" y="574.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,828 samples, 3.05%)</title><rect x="25.4" y="547.0" width="36.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.4" y="558.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (354 samples, 0.12%)</title><rect x="25.6" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.6" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (354 samples, 0.12%)</title><rect x="25.6" y="515.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="28.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,356 samples, 2.89%)</title><rect x="27.3" y="531.0" width="34.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.3" y="542.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,356 samples, 2.89%)</title><rect x="27.3" y="515.0" width="34.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.3" y="526.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (186 samples, 0.06%)</title><rect x="27.3" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (186 samples, 0.06%)</title><rect x="27.3" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (186 samples, 0.06%)</title><rect x="27.3" y="467.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="30.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,170 samples, 2.82%)</title><rect x="28.1" y="499.0" width="33.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,170 samples, 2.82%)</title><rect x="28.1" y="483.0" width="33.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.1" y="494.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,170 samples, 2.82%)</title><rect x="28.1" y="467.0" width="33.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.1" y="478.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,170 samples, 2.82%)</title><rect x="28.1" y="451.0" width="33.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.1" y="462.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7,117 samples, 2.46%)</title><rect x="28.1" y="435.0" width="29.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.1" y="446.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (7,117 samples, 2.46%)</title><rect x="28.1" y="419.0" width="29.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.1" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (7,117 samples, 2.46%)</title><rect x="28.1" y="403.0" width="29.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.1" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (7,117 samples, 2.46%)</title><rect x="28.1" y="387.0" width="29.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.1" y="398.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,287 samples, 1.48%)</title><rect x="28.1" y="371.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.1" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,827 samples, 0.98%)</title><rect x="28.1" y="355.0" width="11.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="31.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,460 samples, 0.50%)</title><rect x="39.6" y="355.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.6" y="366.0"></text>
</g>
<g>
<title>byte[] (1,460 samples, 0.50%)</title><rect x="39.6" y="339.0" width="5.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="42.6" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (395 samples, 0.14%)</title><rect x="45.5" y="371.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="48.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (350 samples, 0.12%)</title><rect x="47.2" y="371.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="50.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (2,085 samples, 0.72%)</title><rect x="48.6" y="371.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,085 samples, 0.72%)</title><rect x="48.6" y="355.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,393 samples, 0.48%)</title><rect x="48.6" y="339.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="51.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (692 samples, 0.24%)</title><rect x="54.3" y="339.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.3" y="350.0"></text>
</g>
<g>
<title>byte[] (692 samples, 0.24%)</title><rect x="54.3" y="323.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="57.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,053 samples, 0.36%)</title><rect x="57.1" y="435.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,053 samples, 0.36%)</title><rect x="57.1" y="419.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,053 samples, 0.36%)</title><rect x="57.1" y="403.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (1,053 samples, 0.36%)</title><rect x="57.1" y="387.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (1,053 samples, 0.36%)</title><rect x="57.1" y="371.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,053 samples, 0.36%)</title><rect x="57.1" y="355.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,053 samples, 0.36%)</title><rect x="57.1" y="339.0" width="4.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="60.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (113 samples, 0.04%)</title><rect x="61.6" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.6" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.04%)</title><rect x="61.6" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="64.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (52,291 samples, 18.06%)</title><rect x="62.1" y="563.0" width="213.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.1" y="574.0">java/util/Collections$Unmodi..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (52,291 samples, 18.06%)</title><rect x="62.1" y="547.0" width="213.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.1" y="558.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (102 samples, 0.04%)</title><rect x="62.1" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (66 samples, 0.02%)</title><rect x="62.3" y="515.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (66 samples, 0.02%)</title><rect x="62.3" y="499.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (66 samples, 0.02%)</title><rect x="62.3" y="483.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="65.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$521/61486316.accept (52,189 samples, 18.03%)</title><rect x="62.5" y="531.0" width="212.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.5" y="542.0">ru/mail/polis/service/borisk..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (52,189 samples, 18.03%)</title><rect x="62.5" y="515.0" width="212.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.5" y="526.0">ru/mail/polis/service/borisk..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (52,189 samples, 18.03%)</title><rect x="62.5" y="499.0" width="212.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.5" y="510.0">ru/mail/polis/dao/boriskin/S..</text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.SortedStringTable$1 (565 samples, 0.20%)</title><rect x="62.5" y="483.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="65.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (51,624 samples, 17.83%)</title><rect x="64.8" y="483.0" width="210.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.8" y="494.0">ru/mail/polis/dao/boriskin/S..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (51,624 samples, 17.83%)</title><rect x="64.8" y="467.0" width="210.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.8" y="478.0">ru/mail/polis/dao/boriskin/S..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (51,624 samples, 17.83%)</title><rect x="64.8" y="451.0" width="210.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.8" y="462.0">ru/mail/polis/dao/boriskin/S..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34,359 samples, 11.87%)</title><rect x="64.8" y="435.0" width="140.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.8" y="446.0">java/nio/ByteBuffe..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23,547 samples, 8.13%)</title><rect x="64.8" y="419.0" width="96.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="67.8" y="430.0">java.nio.He..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10,812 samples, 3.73%)</title><rect x="160.8" y="419.0" width="44.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.8" y="430.0">java..</text>
</g>
<g>
<title>byte[] (10,812 samples, 3.73%)</title><rect x="160.8" y="403.0" width="44.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="163.8" y="414.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (17,265 samples, 5.96%)</title><rect x="204.9" y="435.0" width="70.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.9" y="446.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17,265 samples, 5.96%)</title><rect x="204.9" y="419.0" width="70.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.9" y="430.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11,781 samples, 4.07%)</title><rect x="204.9" y="403.0" width="48.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="207.9" y="414.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5,484 samples, 1.89%)</title><rect x="252.9" y="403.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.9" y="414.0">j..</text>
</g>
<g>
<title>byte[] (5,484 samples, 1.89%)</title><rect x="252.9" y="387.0" width="22.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="255.9" y="398.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,461 samples, 0.50%)</title><rect x="275.3" y="563.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,415 samples, 0.49%)</title><rect x="275.5" y="547.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,415 samples, 0.49%)</title><rect x="275.5" y="531.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.5" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (396 samples, 0.14%)</title><rect x="275.5" y="515.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (396 samples, 0.14%)</title><rect x="275.5" y="499.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (396 samples, 0.14%)</title><rect x="275.5" y="483.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (396 samples, 0.14%)</title><rect x="275.5" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (396 samples, 0.14%)</title><rect x="275.5" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (396 samples, 0.14%)</title><rect x="275.5" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (396 samples, 0.14%)</title><rect x="275.5" y="419.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (396 samples, 0.14%)</title><rect x="275.5" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (396 samples, 0.14%)</title><rect x="275.5" y="387.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (396 samples, 0.14%)</title><rect x="275.5" y="371.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (396 samples, 0.14%)</title><rect x="275.5" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (396 samples, 0.14%)</title><rect x="275.5" y="339.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="278.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,019 samples, 0.35%)</title><rect x="277.1" y="515.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,019 samples, 0.35%)</title><rect x="277.1" y="499.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,019 samples, 0.35%)</title><rect x="277.1" y="483.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,019 samples, 0.35%)</title><rect x="277.1" y="467.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,019 samples, 0.35%)</title><rect x="277.1" y="451.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,019 samples, 0.35%)</title><rect x="277.1" y="435.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (801 samples, 0.28%)</title><rect x="277.1" y="419.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (801 samples, 0.28%)</title><rect x="277.1" y="403.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (801 samples, 0.28%)</title><rect x="277.1" y="387.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (801 samples, 0.28%)</title><rect x="277.1" y="371.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.1" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (489 samples, 0.17%)</title><rect x="277.1" y="355.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (314 samples, 0.11%)</title><rect x="277.1" y="339.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="280.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (175 samples, 0.06%)</title><rect x="278.4" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.4" y="350.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.06%)</title><rect x="278.4" y="323.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="281.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (236 samples, 0.08%)</title><rect x="279.4" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (236 samples, 0.08%)</title><rect x="279.4" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.4" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (167 samples, 0.06%)</title><rect x="279.4" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="282.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (69 samples, 0.02%)</title><rect x="280.1" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.1" y="334.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.02%)</title><rect x="280.1" y="307.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="283.1" y="318.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (218 samples, 0.08%)</title><rect x="280.4" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (218 samples, 0.08%)</title><rect x="280.4" y="403.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (218 samples, 0.08%)</title><rect x="280.4" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (218 samples, 0.08%)</title><rect x="280.4" y="371.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (218 samples, 0.08%)</title><rect x="280.4" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (218 samples, 0.08%)</title><rect x="280.4" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.4" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (218 samples, 0.08%)</title><rect x="280.4" y="323.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="283.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (195 samples, 0.07%)</title><rect x="281.3" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (73 samples, 0.03%)</title><rect x="281.8" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (73 samples, 0.03%)</title><rect x="281.8" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (73 samples, 0.03%)</title><rect x="281.8" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (73 samples, 0.03%)</title><rect x="281.8" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="284.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.isPresent (116 samples, 0.04%)</title><rect x="282.1" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.1" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.Value (62 samples, 0.02%)</title><rect x="282.1" y="563.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="285.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (397 samples, 0.14%)</title><rect x="282.6" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (114 samples, 0.04%)</title><rect x="282.6" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1423457668.invoke (114 samples, 0.04%)</title><rect x="282.6" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (114 samples, 0.04%)</title><rect x="282.6" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (86 samples, 0.03%)</title><rect x="282.7" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (86 samples, 0.03%)</title><rect x="282.7" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.7" y="526.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.03%)</title><rect x="282.7" y="499.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="285.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (140 samples, 0.05%)</title><rect x="283.3" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getData (89 samples, 0.03%)</title><rect x="283.8" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.8" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.03%)</title><rect x="283.8" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.8" y="574.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.03%)</title><rect x="283.8" y="547.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="286.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (49,067 samples, 16.95%)</title><rect x="284.2" y="643.0" width="200.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.2" y="654.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20,528 samples, 7.09%)</title><rect x="284.2" y="627.0" width="83.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.2" y="638.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (20,527 samples, 7.09%)</title><rect x="284.2" y="611.0" width="83.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.2" y="622.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (144 samples, 0.05%)</title><rect x="284.2" y="595.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="287.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/63339538.apply (15,610 samples, 5.39%)</title><rect x="284.8" y="595.0" width="63.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.8" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (15,610 samples, 5.39%)</title><rect x="284.8" y="579.0" width="63.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.8" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (15,610 samples, 5.39%)</title><rect x="284.8" y="563.0" width="63.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.8" y="574.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.04%)</title><rect x="284.8" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.04%)</title><rect x="284.8" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/137991968.get$Lambda (67 samples, 0.02%)</title><rect x="284.8" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$376 (67 samples, 0.02%)</title><rect x="284.8" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="287.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (247 samples, 0.09%)</title><rect x="285.3" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (247 samples, 0.09%)</title><rect x="285.3" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (149 samples, 0.05%)</title><rect x="285.3" y="515.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="288.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (98 samples, 0.03%)</title><rect x="285.9" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (98 samples, 0.03%)</title><rect x="285.9" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (98 samples, 0.03%)</title><rect x="285.9" y="483.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="288.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (467 samples, 0.16%)</title><rect x="286.3" y="547.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (467 samples, 0.16%)</title><rect x="286.3" y="531.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (269 samples, 0.09%)</title><rect x="286.3" y="515.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="289.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (198 samples, 0.07%)</title><rect x="287.4" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (198 samples, 0.07%)</title><rect x="287.4" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (198 samples, 0.07%)</title><rect x="287.4" y="483.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="290.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (14,777 samples, 5.10%)</title><rect x="288.2" y="547.0" width="60.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.2" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (14,777 samples, 5.10%)</title><rect x="288.2" y="531.0" width="60.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.2" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (14,777 samples, 5.10%)</title><rect x="288.2" y="515.0" width="60.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.2" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (341 samples, 0.12%)</title><rect x="288.2" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (341 samples, 0.12%)</title><rect x="288.2" y="483.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/885000023.get$Lambda (181 samples, 0.06%)</title><rect x="288.2" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$211 (181 samples, 0.06%)</title><rect x="288.2" y="451.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="291.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.get$Lambda (83 samples, 0.03%)</title><rect x="288.9" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$212 (83 samples, 0.03%)</title><rect x="288.9" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="291.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$323/1204452569.get$Lambda (77 samples, 0.03%)</title><rect x="289.3" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$323 (77 samples, 0.03%)</title><rect x="289.3" y="451.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="292.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10,157 samples, 3.51%)</title><rect x="289.6" y="499.0" width="41.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.6" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10,157 samples, 3.51%)</title><rect x="289.6" y="483.0" width="41.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.6" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,060 samples, 3.48%)</title><rect x="289.6" y="467.0" width="41.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.6" y="478.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$323/1204452569.apply (10,060 samples, 3.48%)</title><rect x="289.6" y="451.0" width="41.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.6" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (10,060 samples, 3.48%)</title><rect x="289.6" y="435.0" width="41.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.6" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10,060 samples, 3.48%)</title><rect x="289.6" y="419.0" width="41.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.6" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.apply (10,060 samples, 3.48%)</title><rect x="289.6" y="403.0" width="41.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.6" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (10,060 samples, 3.48%)</title><rect x="289.6" y="387.0" width="41.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.6" y="398.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.03%)</title><rect x="289.6" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.03%)</title><rect x="289.6" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$371/1785628412.get$Lambda (78 samples, 0.03%)</title><rect x="289.6" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$371 (78 samples, 0.03%)</title><rect x="289.6" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="292.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (241 samples, 0.08%)</title><rect x="289.9" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (241 samples, 0.08%)</title><rect x="289.9" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (136 samples, 0.05%)</title><rect x="289.9" y="339.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="292.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.04%)</title><rect x="290.4" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.04%)</title><rect x="290.4" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (102 samples, 0.04%)</title><rect x="290.4" y="307.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="293.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (208 samples, 0.07%)</title><rect x="290.9" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (208 samples, 0.07%)</title><rect x="290.9" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (123 samples, 0.04%)</title><rect x="290.9" y="339.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="293.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="291.4" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="291.4" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.03%)</title><rect x="291.4" y="307.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="294.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9,533 samples, 3.29%)</title><rect x="291.7" y="371.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.7" y="382.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.03%)</title><rect x="291.7" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.03%)</title><rect x="291.7" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7,796 samples, 2.69%)</title><rect x="292.1" y="355.0" width="31.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.1" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7,796 samples, 2.69%)</title><rect x="292.1" y="339.0" width="31.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.1" y="350.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (106 samples, 0.04%)</title><rect x="292.1" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="295.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$368/1963220307.apply (7,456 samples, 2.58%)</title><rect x="292.5" y="323.0" width="30.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.5" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (7,456 samples, 2.58%)</title><rect x="292.5" y="307.0" width="30.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.5" y="318.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (249 samples, 0.09%)</title><rect x="292.8" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (249 samples, 0.09%)</title><rect x="292.8" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (145 samples, 0.05%)</title><rect x="292.8" y="259.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="295.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.04%)</title><rect x="293.3" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.04%)</title><rect x="293.3" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.04%)</title><rect x="293.3" y="227.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="296.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.03%)</title><rect x="293.8" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="296.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (142 samples, 0.05%)</title><rect x="294.2" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (69 samples, 0.02%)</title><rect x="294.2" y="275.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="297.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (73 samples, 0.03%)</title><rect x="294.4" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (73 samples, 0.03%)</title><rect x="294.4" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (73 samples, 0.03%)</title><rect x="294.4" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (73 samples, 0.03%)</title><rect x="294.4" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (73 samples, 0.03%)</title><rect x="294.4" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (73 samples, 0.03%)</title><rect x="294.4" y="195.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="297.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (266 samples, 0.09%)</title><rect x="294.7" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (266 samples, 0.09%)</title><rect x="294.7" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (87 samples, 0.03%)</title><rect x="294.7" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (87 samples, 0.03%)</title><rect x="294.7" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (87 samples, 0.03%)</title><rect x="294.7" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (87 samples, 0.03%)</title><rect x="294.7" y="211.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="297.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (179 samples, 0.06%)</title><rect x="295.1" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (179 samples, 0.06%)</title><rect x="295.1" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (138 samples, 0.05%)</title><rect x="295.1" y="227.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="298.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (6,653 samples, 2.30%)</title><rect x="295.8" y="291.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.8" y="302.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (94 samples, 0.03%)</title><rect x="295.8" y="275.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="298.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (543 samples, 0.19%)</title><rect x="296.2" y="275.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (543 samples, 0.19%)</title><rect x="296.2" y="259.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (543 samples, 0.19%)</title><rect x="296.2" y="243.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.2" y="254.0"></text>
</g>
<g>
<title>byte[] (543 samples, 0.19%)</title><rect x="296.2" y="227.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="299.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (220 samples, 0.08%)</title><rect x="298.4" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (220 samples, 0.08%)</title><rect x="298.4" y="259.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.4" y="270.0"></text>
</g>
<g>
<title>byte[] (220 samples, 0.08%)</title><rect x="298.4" y="243.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="301.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (462 samples, 0.16%)</title><rect x="299.3" y="275.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (462 samples, 0.16%)</title><rect x="299.3" y="259.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (462 samples, 0.16%)</title><rect x="299.3" y="243.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.3" y="254.0"></text>
</g>
<g>
<title>byte[] (462 samples, 0.16%)</title><rect x="299.3" y="227.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="302.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (156 samples, 0.05%)</title><rect x="301.2" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (156 samples, 0.05%)</title><rect x="301.2" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (156 samples, 0.05%)</title><rect x="301.2" y="243.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="304.2" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (94 samples, 0.03%)</title><rect x="301.8" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.8" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (94 samples, 0.03%)</title><rect x="301.8" y="259.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="304.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (4,085 samples, 1.41%)</title><rect x="302.2" y="275.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.2" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (83 samples, 0.03%)</title><rect x="302.2" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.03%)</title><rect x="302.2" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.03%)</title><rect x="302.2" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.2" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1862624918.get$Lambda (83 samples, 0.03%)</title><rect x="302.2" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.2" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$396 (83 samples, 0.03%)</title><rect x="302.2" y="195.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="305.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2,301 samples, 0.79%)</title><rect x="302.5" y="259.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,419 samples, 0.49%)</title><rect x="302.5" y="243.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.5" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,419 samples, 0.49%)</title><rect x="302.5" y="227.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,419 samples, 0.49%)</title><rect x="302.5" y="211.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,419 samples, 0.49%)</title><rect x="302.5" y="195.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.5" y="206.0"></text>
</g>
<g>
<title>byte[] (1,419 samples, 0.49%)</title><rect x="302.5" y="179.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="305.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (194 samples, 0.07%)</title><rect x="308.3" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (194 samples, 0.07%)</title><rect x="308.3" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (194 samples, 0.07%)</title><rect x="308.3" y="211.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (194 samples, 0.07%)</title><rect x="308.3" y="195.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="311.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (225 samples, 0.08%)</title><rect x="309.1" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (92 samples, 0.03%)</title><rect x="309.1" y="227.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="312.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (133 samples, 0.05%)</title><rect x="309.5" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (133 samples, 0.05%)</title><rect x="309.5" y="211.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="312.5" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1862624918.test (463 samples, 0.16%)</title><rect x="310.0" y="243.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (463 samples, 0.16%)</title><rect x="310.0" y="227.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (463 samples, 0.16%)</title><rect x="310.0" y="211.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (463 samples, 0.16%)</title><rect x="310.0" y="195.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (463 samples, 0.16%)</title><rect x="310.0" y="179.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.0" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (463 samples, 0.16%)</title><rect x="310.0" y="163.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (463 samples, 0.16%)</title><rect x="310.0" y="147.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (463 samples, 0.16%)</title><rect x="310.0" y="131.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (463 samples, 0.16%)</title><rect x="310.0" y="115.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (463 samples, 0.16%)</title><rect x="310.0" y="99.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (233 samples, 0.08%)</title><rect x="310.0" y="83.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="313.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (230 samples, 0.08%)</title><rect x="311.0" y="83.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.0" y="94.0"></text>
</g>
<g>
<title>byte[] (230 samples, 0.08%)</title><rect x="311.0" y="67.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="314.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,701 samples, 0.59%)</title><rect x="311.9" y="259.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,701 samples, 0.59%)</title><rect x="311.9" y="243.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,701 samples, 0.59%)</title><rect x="311.9" y="227.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (87 samples, 0.03%)</title><rect x="312.2" y="211.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="315.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (161 samples, 0.06%)</title><rect x="312.5" y="211.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="315.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.04%)</title><rect x="313.4" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.04%)</title><rect x="313.4" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.get$Lambda (106 samples, 0.04%)</title><rect x="313.4" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.4" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (106 samples, 0.04%)</title><rect x="313.4" y="163.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="316.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (88 samples, 0.03%)</title><rect x="313.8" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.8" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (88 samples, 0.03%)</title><rect x="313.8" y="195.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="316.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,005 samples, 0.35%)</title><rect x="314.2" y="211.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (1,005 samples, 0.35%)</title><rect x="314.2" y="195.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,005 samples, 0.35%)</title><rect x="314.2" y="179.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (180 samples, 0.06%)</title><rect x="314.2" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (180 samples, 0.06%)</title><rect x="314.2" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (180 samples, 0.06%)</title><rect x="314.2" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (180 samples, 0.06%)</title><rect x="314.2" y="115.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (180 samples, 0.06%)</title><rect x="314.2" y="99.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.2" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (180 samples, 0.06%)</title><rect x="314.2" y="83.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.2" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (180 samples, 0.06%)</title><rect x="314.2" y="67.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (180 samples, 0.06%)</title><rect x="314.2" y="51.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 0.06%)</title><rect x="314.2" y="35.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="317.2" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (426 samples, 0.15%)</title><rect x="314.9" y="163.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (426 samples, 0.15%)</title><rect x="314.9" y="147.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (206 samples, 0.07%)</title><rect x="314.9" y="131.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (206 samples, 0.07%)</title><rect x="314.9" y="115.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (206 samples, 0.07%)</title><rect x="314.9" y="99.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="317.9" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (220 samples, 0.08%)</title><rect x="315.8" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (220 samples, 0.08%)</title><rect x="315.8" y="115.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="318.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (399 samples, 0.14%)</title><rect x="316.7" y="163.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.7" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (399 samples, 0.14%)</title><rect x="316.7" y="147.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="319.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (141 samples, 0.05%)</title><rect x="318.3" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (141 samples, 0.05%)</title><rect x="318.3" y="195.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="321.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (250 samples, 0.09%)</title><rect x="318.9" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (68 samples, 0.02%)</title><rect x="318.9" y="259.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.9" y="270.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.02%)</title><rect x="318.9" y="243.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="321.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (182 samples, 0.06%)</title><rect x="319.1" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (182 samples, 0.06%)</title><rect x="319.1" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (182 samples, 0.06%)</title><rect x="319.1" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (182 samples, 0.06%)</title><rect x="319.1" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (82 samples, 0.03%)</title><rect x="319.1" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.03%)</title><rect x="319.1" y="179.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="322.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (100 samples, 0.03%)</title><rect x="319.5" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (100 samples, 0.03%)</title><rect x="319.5" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.5" y="190.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.03%)</title><rect x="319.5" y="163.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="322.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (196 samples, 0.07%)</title><rect x="319.9" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (196 samples, 0.07%)</title><rect x="319.9" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (196 samples, 0.07%)</title><rect x="319.9" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (196 samples, 0.07%)</title><rect x="319.9" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (196 samples, 0.07%)</title><rect x="319.9" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (196 samples, 0.07%)</title><rect x="319.9" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (137 samples, 0.05%)</title><rect x="320.1" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (137 samples, 0.05%)</title><rect x="320.1" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.1" y="174.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.05%)</title><rect x="320.1" y="147.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="323.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (553 samples, 0.19%)</title><rect x="320.7" y="275.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (143 samples, 0.05%)</title><rect x="320.7" y="259.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="323.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (161 samples, 0.06%)</title><rect x="321.3" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (161 samples, 0.06%)</title><rect x="321.3" y="243.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="324.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (249 samples, 0.09%)</title><rect x="321.9" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.9" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (249 samples, 0.09%)</title><rect x="321.9" y="243.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="324.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (234 samples, 0.08%)</title><rect x="322.9" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (234 samples, 0.08%)</title><rect x="322.9" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (234 samples, 0.08%)</title><rect x="322.9" y="291.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="325.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (280 samples, 0.10%)</title><rect x="323.9" y="355.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="326.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.03%)</title><rect x="325.0" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="328.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,259 samples, 0.43%)</title><rect x="325.4" y="355.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.04%)</title><rect x="325.4" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.04%)</title><rect x="325.4" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (105 samples, 0.04%)</title><rect x="325.9" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="328.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (98 samples, 0.03%)</title><rect x="326.3" y="339.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="329.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (126 samples, 0.04%)</title><rect x="326.7" y="339.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="329.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (373 samples, 0.13%)</title><rect x="327.3" y="339.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (373 samples, 0.13%)</title><rect x="327.3" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (373 samples, 0.13%)</title><rect x="327.3" y="307.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (373 samples, 0.13%)</title><rect x="327.3" y="291.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (373 samples, 0.13%)</title><rect x="327.3" y="275.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (373 samples, 0.13%)</title><rect x="327.3" y="259.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (373 samples, 0.13%)</title><rect x="327.3" y="243.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (373 samples, 0.13%)</title><rect x="327.3" y="227.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (373 samples, 0.13%)</title><rect x="327.3" y="211.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (124 samples, 0.04%)</title><rect x="327.3" y="195.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (124 samples, 0.04%)</title><rect x="327.3" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$348/1253487553.get$Lambda (74 samples, 0.03%)</title><rect x="327.5" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$348 (74 samples, 0.03%)</title><rect x="327.5" y="147.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="330.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (109 samples, 0.04%)</title><rect x="327.8" y="195.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="330.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (140 samples, 0.05%)</title><rect x="328.2" y="195.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (140 samples, 0.05%)</title><rect x="328.2" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (64 samples, 0.02%)</title><rect x="328.2" y="163.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="331.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (76 samples, 0.03%)</title><rect x="328.5" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (76 samples, 0.03%)</title><rect x="328.5" y="147.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="331.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (348 samples, 0.12%)</title><rect x="328.8" y="339.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.8" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (87 samples, 0.03%)</title><rect x="328.8" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="331.8" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (152 samples, 0.05%)</title><rect x="329.1" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="332.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (109 samples, 0.04%)</title><rect x="329.7" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (109 samples, 0.04%)</title><rect x="329.7" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.7" y="318.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.04%)</title><rect x="329.7" y="291.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="332.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (93 samples, 0.03%)</title><rect x="330.2" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.03%)</title><rect x="330.2" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="333.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.03%)</title><rect x="330.6" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.03%)</title><rect x="330.6" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (97 samples, 0.03%)</title><rect x="330.6" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="333.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (229 samples, 0.08%)</title><rect x="331.0" y="499.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (229 samples, 0.08%)</title><rect x="331.0" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (120 samples, 0.04%)</title><rect x="331.0" y="467.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="334.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="331.5" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="331.5" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="331.5" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="334.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (4,050 samples, 1.40%)</title><rect x="331.9" y="499.0" width="16.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (146 samples, 0.05%)</title><rect x="331.9" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (146 samples, 0.05%)</title><rect x="331.9" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/637941596.get$Lambda (98 samples, 0.03%)</title><rect x="331.9" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$315 (98 samples, 0.03%)</title><rect x="331.9" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="334.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (230 samples, 0.08%)</title><rect x="332.5" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (230 samples, 0.08%)</title><rect x="332.5" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$320/57313921.apply (121 samples, 0.04%)</title><rect x="332.5" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (121 samples, 0.04%)</title><rect x="332.5" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (121 samples, 0.04%)</title><rect x="332.5" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (121 samples, 0.04%)</title><rect x="332.5" y="403.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="335.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="333.0" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="333.0" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="333.0" y="419.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="336.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (95 samples, 0.03%)</title><rect x="333.4" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (95 samples, 0.03%)</title><rect x="333.4" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.03%)</title><rect x="333.4" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.03%)</title><rect x="333.4" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.03%)</title><rect x="333.4" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="336.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (3,579 samples, 1.24%)</title><rect x="333.8" y="483.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3,579 samples, 1.24%)</title><rect x="333.8" y="467.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (294 samples, 0.10%)</title><rect x="333.8" y="451.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="336.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,177 samples, 1.10%)</title><rect x="335.0" y="451.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.0" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (85 samples, 0.03%)</title><rect x="335.3" y="435.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="338.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (72 samples, 0.02%)</title><rect x="335.6" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="338.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (163 samples, 0.06%)</title><rect x="335.9" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.9" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (163 samples, 0.06%)</title><rect x="335.9" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.9" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (163 samples, 0.06%)</title><rect x="335.9" y="403.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="338.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (89 samples, 0.03%)</title><rect x="336.6" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (89 samples, 0.03%)</title><rect x="336.6" y="419.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="339.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (242 samples, 0.08%)</title><rect x="336.9" y="435.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="339.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (169 samples, 0.06%)</title><rect x="337.9" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="340.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (150 samples, 0.05%)</title><rect x="338.6" y="435.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="341.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (213 samples, 0.07%)</title><rect x="339.2" y="435.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="342.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (937 samples, 0.32%)</title><rect x="340.1" y="435.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (75 samples, 0.03%)</title><rect x="340.1" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="343.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (67 samples, 0.02%)</title><rect x="340.6" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="343.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (78 samples, 0.03%)</title><rect x="341.3" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (78 samples, 0.03%)</title><rect x="341.3" y="403.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="344.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (77 samples, 0.03%)</title><rect x="341.6" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="344.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.03%)</title><rect x="341.9" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="344.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (391 samples, 0.14%)</title><rect x="342.3" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (74 samples, 0.03%)</title><rect x="342.3" y="403.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="345.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (105 samples, 0.04%)</title><rect x="342.6" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="345.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (151 samples, 0.05%)</title><rect x="343.3" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (618 samples, 0.21%)</title><rect x="343.9" y="435.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (403 samples, 0.14%)</title><rect x="344.8" y="419.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (81 samples, 0.03%)</title><rect x="344.8" y="403.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="347.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (109 samples, 0.04%)</title><rect x="345.1" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="348.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (163 samples, 0.06%)</title><rect x="345.8" y="403.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (79 samples, 0.03%)</title><rect x="346.4" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (78 samples, 0.03%)</title><rect x="346.4" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (78 samples, 0.03%)</title><rect x="346.4" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (78 samples, 0.03%)</title><rect x="346.4" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (78 samples, 0.03%)</title><rect x="346.4" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (78 samples, 0.03%)</title><rect x="346.4" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (78 samples, 0.03%)</title><rect x="346.4" y="339.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="349.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (299 samples, 0.10%)</title><rect x="346.8" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (80 samples, 0.03%)</title><rect x="346.8" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.03%)</title><rect x="346.8" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$233/1238270558.get$Lambda (80 samples, 0.03%)</title><rect x="346.8" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$233 (80 samples, 0.03%)</title><rect x="346.8" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="349.8" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (219 samples, 0.08%)</title><rect x="347.1" y="419.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$233/1238270558.run (219 samples, 0.08%)</title><rect x="347.1" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (219 samples, 0.08%)</title><rect x="347.1" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.1" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (65 samples, 0.02%)</title><rect x="347.1" y="371.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="350.1" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (154 samples, 0.05%)</title><rect x="347.3" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.3" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (79 samples, 0.03%)</title><rect x="347.3" y="355.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="350.3" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (75 samples, 0.03%)</title><rect x="347.7" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (75 samples, 0.03%)</title><rect x="347.7" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.7" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (75 samples, 0.03%)</title><rect x="347.7" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.7" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (75 samples, 0.03%)</title><rect x="347.7" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.7" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (75 samples, 0.03%)</title><rect x="347.7" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="350.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (108 samples, 0.04%)</title><rect x="348.0" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.04%)</title><rect x="348.0" y="435.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="351.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$507/476267620.apply (4,771 samples, 1.65%)</title><rect x="348.4" y="595.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$1 (4,771 samples, 1.65%)</title><rect x="348.4" y="579.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (4,771 samples, 1.65%)</title><rect x="348.4" y="563.0" width="19.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.04%)</title><rect x="348.5" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (106 samples, 0.04%)</title><rect x="348.5" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.04%)</title><rect x="348.5" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (79 samples, 0.03%)</title><rect x="348.6" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (79 samples, 0.03%)</title><rect x="348.6" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.6" y="494.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.03%)</title><rect x="348.6" y="467.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="351.6" y="478.0"></text>
</g>
<g>
<title>java/net/URI.create (513 samples, 0.18%)</title><rect x="348.9" y="547.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.9" y="558.0"></text>
</g>
<g>
<title>java.net.URI (102 samples, 0.04%)</title><rect x="348.9" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="351.9" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (411 samples, 0.14%)</title><rect x="349.3" y="531.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.3" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (364 samples, 0.13%)</title><rect x="349.5" y="515.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (314 samples, 0.11%)</title><rect x="349.7" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (150 samples, 0.05%)</title><rect x="349.7" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (150 samples, 0.05%)</title><rect x="349.7" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.02%)</title><rect x="349.7" y="451.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="352.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (85 samples, 0.03%)</title><rect x="350.0" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.0" y="462.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.03%)</title><rect x="350.0" y="435.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="353.0" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (164 samples, 0.06%)</title><rect x="350.3" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 0.03%)</title><rect x="350.3" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.03%)</title><rect x="350.3" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.3" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (85 samples, 0.03%)</title><rect x="350.6" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.6" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (85 samples, 0.03%)</title><rect x="350.6" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (85 samples, 0.03%)</title><rect x="350.6" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.03%)</title><rect x="350.6" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (138 samples, 0.05%)</title><rect x="351.0" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (79 samples, 0.03%)</title><rect x="351.2" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (63 samples, 0.02%)</title><rect x="351.3" y="515.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (63 samples, 0.02%)</title><rect x="351.3" y="499.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="354.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (2,675 samples, 0.92%)</title><rect x="351.8" y="547.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,675 samples, 0.92%)</title><rect x="351.8" y="531.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,675 samples, 0.92%)</title><rect x="351.8" y="515.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,675 samples, 0.92%)</title><rect x="351.8" y="499.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.03%)</title><rect x="351.8" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.03%)</title><rect x="351.8" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$199/469762584.get$Lambda (92 samples, 0.03%)</title><rect x="351.8" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$199 (92 samples, 0.03%)</title><rect x="351.8" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="354.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (102 samples, 0.04%)</title><rect x="352.2" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (102 samples, 0.04%)</title><rect x="352.2" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (97 samples, 0.03%)</title><rect x="352.6" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (97 samples, 0.03%)</title><rect x="352.6" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (68 samples, 0.02%)</title><rect x="353.0" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="356.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (125 samples, 0.04%)</title><rect x="353.3" y="483.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="356.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,246 samples, 0.43%)</title><rect x="353.8" y="483.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (143 samples, 0.05%)</title><rect x="353.8" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="356.8" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (107 samples, 0.04%)</title><rect x="353.8" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (69 samples, 0.02%)</title><rect x="354.0" y="435.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="357.0" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (69 samples, 0.02%)</title><rect x="354.0" y="419.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="357.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (510 samples, 0.18%)</title><rect x="354.4" y="467.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (510 samples, 0.18%)</title><rect x="354.4" y="451.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (63 samples, 0.02%)</title><rect x="354.6" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="357.6" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (191 samples, 0.07%)</title><rect x="355.2" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (191 samples, 0.07%)</title><rect x="355.2" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (191 samples, 0.07%)</title><rect x="355.2" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (191 samples, 0.07%)</title><rect x="355.2" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (72 samples, 0.02%)</title><rect x="355.2" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (72 samples, 0.02%)</title><rect x="355.2" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (72 samples, 0.02%)</title><rect x="355.2" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.02%)</title><rect x="355.2" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (72 samples, 0.02%)</title><rect x="355.2" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.02%)</title><rect x="355.2" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="358.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (72 samples, 0.02%)</title><rect x="355.2" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.02%)</title><rect x="355.2" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (72 samples, 0.02%)</title><rect x="355.2" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="358.2" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (62 samples, 0.02%)</title><rect x="355.5" y="371.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.5" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (62 samples, 0.02%)</title><rect x="355.5" y="355.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.5" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (69 samples, 0.02%)</title><rect x="356.2" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (69 samples, 0.02%)</title><rect x="356.2" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="359.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (402 samples, 0.14%)</title><rect x="356.5" y="467.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.5" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (402 samples, 0.14%)</title><rect x="356.5" y="451.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.5" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (357 samples, 0.12%)</title><rect x="356.5" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.5" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (357 samples, 0.12%)</title><rect x="356.5" y="419.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.5" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (357 samples, 0.12%)</title><rect x="356.5" y="403.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.5" y="414.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (84 samples, 0.03%)</title><rect x="356.5" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="359.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (130 samples, 0.04%)</title><rect x="356.9" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.9" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (130 samples, 0.04%)</title><rect x="356.9" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.9" y="382.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.04%)</title><rect x="356.9" y="355.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="359.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (143 samples, 0.05%)</title><rect x="357.4" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (143 samples, 0.05%)</title><rect x="357.4" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.05%)</title><rect x="357.4" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.4" y="366.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.05%)</title><rect x="357.4" y="339.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="360.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (64 samples, 0.02%)</title><rect x="358.2" y="467.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.2" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (64 samples, 0.02%)</title><rect x="358.2" y="451.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="361.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (111 samples, 0.04%)</title><rect x="358.4" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (608 samples, 0.21%)</title><rect x="358.9" y="483.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (95 samples, 0.03%)</title><rect x="359.0" y="467.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="362.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (471 samples, 0.16%)</title><rect x="359.4" y="467.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (471 samples, 0.16%)</title><rect x="359.4" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (214 samples, 0.07%)</title><rect x="359.9" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="362.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (214 samples, 0.07%)</title><rect x="359.9" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="362.9" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (214 samples, 0.07%)</title><rect x="359.9" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.9" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (214 samples, 0.07%)</title><rect x="359.9" y="387.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.9" y="398.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (214 samples, 0.07%)</title><rect x="359.9" y="371.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="362.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (76 samples, 0.03%)</title><rect x="360.8" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (76 samples, 0.03%)</title><rect x="360.8" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (62 samples, 0.02%)</title><rect x="361.1" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (62 samples, 0.02%)</title><rect x="361.1" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (62 samples, 0.02%)</title><rect x="361.1" y="403.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="364.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (337 samples, 0.12%)</title><rect x="361.4" y="483.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (70 samples, 0.02%)</title><rect x="361.4" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (227 samples, 0.08%)</title><rect x="361.8" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (181 samples, 0.06%)</title><rect x="362.0" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (181 samples, 0.06%)</title><rect x="362.0" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (89 samples, 0.03%)</title><rect x="362.0" y="419.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="365.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.03%)</title><rect x="362.4" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.03%)</title><rect x="362.4" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (92 samples, 0.03%)</title><rect x="362.4" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="365.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (534 samples, 0.18%)</title><rect x="362.7" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (484 samples, 0.17%)</title><rect x="362.9" y="531.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (484 samples, 0.17%)</title><rect x="362.9" y="515.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (484 samples, 0.17%)</title><rect x="362.9" y="499.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.9" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (71 samples, 0.02%)</title><rect x="363.1" y="483.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="366.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (173 samples, 0.06%)</title><rect x="363.9" y="483.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (173 samples, 0.06%)</title><rect x="363.9" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (173 samples, 0.06%)</title><rect x="363.9" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (62 samples, 0.02%)</title><rect x="363.9" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (62 samples, 0.02%)</title><rect x="363.9" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (62 samples, 0.02%)</title><rect x="363.9" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.02%)</title><rect x="363.9" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.02%)</title><rect x="363.9" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.02%)</title><rect x="363.9" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.02%)</title><rect x="363.9" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.02%)</title><rect x="363.9" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.02%)</title><rect x="363.9" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="366.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (70 samples, 0.02%)</title><rect x="364.6" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (70 samples, 0.02%)</title><rect x="364.6" y="467.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="367.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (123 samples, 0.04%)</title><rect x="364.9" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (123 samples, 0.04%)</title><rect x="364.9" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (123 samples, 0.04%)</title><rect x="364.9" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (600 samples, 0.21%)</title><rect x="365.4" y="547.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (488 samples, 0.17%)</title><rect x="365.8" y="531.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$214/2080116879.accept (488 samples, 0.17%)</title><rect x="365.8" y="515.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (488 samples, 0.17%)</title><rect x="365.8" y="499.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (107 samples, 0.04%)</title><rect x="365.8" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (107 samples, 0.04%)</title><rect x="365.8" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (299 samples, 0.10%)</title><rect x="366.2" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (154 samples, 0.05%)</title><rect x="366.4" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (154 samples, 0.05%)</title><rect x="366.4" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (116 samples, 0.04%)</title><rect x="366.4" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="369.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (103 samples, 0.04%)</title><rect x="367.0" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (103 samples, 0.04%)</title><rect x="367.0" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (82 samples, 0.03%)</title><rect x="367.4" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (82 samples, 0.03%)</title><rect x="367.4" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$126/245683815.get (28,539 samples, 9.86%)</title><rect x="367.9" y="627.0" width="116.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.9" y="638.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (28,539 samples, 9.86%)</title><rect x="367.9" y="611.0" width="116.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.9" y="622.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$503/1350247418.run (28,539 samples, 9.86%)</title><rect x="367.9" y="595.0" width="116.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.9" y="606.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$0 (28,539 samples, 9.86%)</title><rect x="367.9" y="579.0" width="116.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.9" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.getBytes (75 samples, 0.03%)</title><rect x="367.9" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (75 samples, 0.03%)</title><rect x="367.9" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="370.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (75 samples, 0.03%)</title><rect x="367.9" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (75 samples, 0.03%)</title><rect x="367.9" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="526.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.03%)</title><rect x="367.9" y="499.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="370.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (28,395 samples, 9.81%)</title><rect x="368.4" y="563.0" width="115.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.4" y="574.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,339 samples, 0.46%)</title><rect x="368.5" y="547.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,214 samples, 0.42%)</title><rect x="368.5" y="531.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.5" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (337 samples, 0.12%)</title><rect x="368.5" y="515.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (337 samples, 0.12%)</title><rect x="368.5" y="499.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (337 samples, 0.12%)</title><rect x="368.5" y="483.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (337 samples, 0.12%)</title><rect x="368.5" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (337 samples, 0.12%)</title><rect x="368.5" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (337 samples, 0.12%)</title><rect x="368.5" y="435.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (337 samples, 0.12%)</title><rect x="368.5" y="419.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (337 samples, 0.12%)</title><rect x="368.5" y="403.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (337 samples, 0.12%)</title><rect x="368.5" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (337 samples, 0.12%)</title><rect x="368.5" y="371.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (337 samples, 0.12%)</title><rect x="368.5" y="355.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (337 samples, 0.12%)</title><rect x="368.5" y="339.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="371.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (877 samples, 0.30%)</title><rect x="369.9" y="515.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.9" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (877 samples, 0.30%)</title><rect x="369.9" y="499.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (877 samples, 0.30%)</title><rect x="369.9" y="483.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (877 samples, 0.30%)</title><rect x="369.9" y="467.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (877 samples, 0.30%)</title><rect x="369.9" y="451.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (877 samples, 0.30%)</title><rect x="369.9" y="435.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (669 samples, 0.23%)</title><rect x="369.9" y="419.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (669 samples, 0.23%)</title><rect x="369.9" y="403.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (669 samples, 0.23%)</title><rect x="369.9" y="387.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (669 samples, 0.23%)</title><rect x="369.9" y="371.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (422 samples, 0.15%)</title><rect x="369.9" y="355.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (270 samples, 0.09%)</title><rect x="369.9" y="339.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="372.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (152 samples, 0.05%)</title><rect x="371.0" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="374.0" y="350.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.05%)</title><rect x="371.0" y="323.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="374.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (185 samples, 0.06%)</title><rect x="371.9" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (185 samples, 0.06%)</title><rect x="371.9" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (133 samples, 0.05%)</title><rect x="371.9" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="374.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (208 samples, 0.07%)</title><rect x="372.6" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (208 samples, 0.07%)</title><rect x="372.6" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (208 samples, 0.07%)</title><rect x="372.6" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (208 samples, 0.07%)</title><rect x="372.6" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (208 samples, 0.07%)</title><rect x="372.6" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (208 samples, 0.07%)</title><rect x="372.6" y="339.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.6" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (208 samples, 0.07%)</title><rect x="372.6" y="323.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="375.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$523/1887481660.apply (125 samples, 0.04%)</title><rect x="373.5" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (125 samples, 0.04%)</title><rect x="373.5" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.5" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (125 samples, 0.04%)</title><rect x="373.5" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (125 samples, 0.04%)</title><rect x="373.5" y="483.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="376.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (26,972 samples, 9.32%)</title><rect x="374.1" y="547.0" width="110.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.1" y="558.0">ru/mail/polis..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3,781 samples, 1.31%)</title><rect x="374.1" y="531.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3,772 samples, 1.30%)</title><rect x="374.1" y="515.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (170 samples, 0.06%)</title><rect x="374.2" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.2" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (170 samples, 0.06%)</title><rect x="374.2" y="483.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="377.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,552 samples, 1.23%)</title><rect x="375.0" y="499.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.0" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,552 samples, 1.23%)</title><rect x="375.0" y="483.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (81 samples, 0.03%)</title><rect x="375.0" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.03%)</title><rect x="375.0" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.03%)</title><rect x="375.0" y="435.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="378.0" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,471 samples, 1.20%)</title><rect x="375.4" y="467.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,471 samples, 1.20%)</title><rect x="375.4" y="451.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,471 samples, 1.20%)</title><rect x="375.4" y="435.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,471 samples, 1.20%)</title><rect x="375.4" y="419.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,035 samples, 1.05%)</title><rect x="375.4" y="403.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (3,035 samples, 1.05%)</title><rect x="375.4" y="387.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (3,035 samples, 1.05%)</title><rect x="375.4" y="371.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (3,035 samples, 1.05%)</title><rect x="375.4" y="355.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,826 samples, 0.63%)</title><rect x="375.4" y="339.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.4" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,205 samples, 0.42%)</title><rect x="375.4" y="323.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="378.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (621 samples, 0.21%)</title><rect x="380.3" y="323.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.3" y="334.0"></text>
</g>
<g>
<title>byte[] (621 samples, 0.21%)</title><rect x="380.3" y="307.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="383.3" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.TableCell (165 samples, 0.06%)</title><rect x="382.8" y="339.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="385.8" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (133 samples, 0.05%)</title><rect x="383.5" y="339.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="386.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (911 samples, 0.31%)</title><rect x="384.0" y="339.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (911 samples, 0.31%)</title><rect x="384.0" y="323.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (611 samples, 0.21%)</title><rect x="384.0" y="307.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="387.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (300 samples, 0.10%)</title><rect x="386.5" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.5" y="318.0"></text>
</g>
<g>
<title>byte[] (300 samples, 0.10%)</title><rect x="386.5" y="291.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="389.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (436 samples, 0.15%)</title><rect x="387.7" y="403.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (436 samples, 0.15%)</title><rect x="387.7" y="387.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (436 samples, 0.15%)</title><rect x="387.7" y="371.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (436 samples, 0.15%)</title><rect x="387.7" y="355.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (436 samples, 0.15%)</title><rect x="387.7" y="339.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (436 samples, 0.15%)</title><rect x="387.7" y="323.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (436 samples, 0.15%)</title><rect x="387.7" y="307.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="390.7" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (22,383 samples, 7.73%)</title><rect x="389.9" y="531.0" width="91.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.9" y="542.0">java/util/C..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (22,383 samples, 7.73%)</title><rect x="389.9" y="515.0" width="91.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.9" y="526.0">java/lang/I..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$521/61486316.accept (22,330 samples, 7.71%)</title><rect x="390.1" y="499.0" width="91.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.1" y="510.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (22,330 samples, 7.71%)</title><rect x="390.1" y="483.0" width="91.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.1" y="494.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (22,330 samples, 7.71%)</title><rect x="390.1" y="467.0" width="91.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.1" y="478.0">ru/mail/pol..</text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.SortedStringTable$1 (228 samples, 0.08%)</title><rect x="390.1" y="451.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="393.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (22,102 samples, 7.64%)</title><rect x="391.0" y="451.0" width="90.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.0" y="462.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (22,102 samples, 7.64%)</title><rect x="391.0" y="435.0" width="90.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.0" y="446.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (22,102 samples, 7.64%)</title><rect x="391.0" y="419.0" width="90.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.0" y="430.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14,830 samples, 5.12%)</title><rect x="391.0" y="403.0" width="60.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.0" y="414.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10,094 samples, 3.49%)</title><rect x="391.0" y="387.0" width="41.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="394.0" y="398.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,736 samples, 1.64%)</title><rect x="432.2" y="387.0" width="19.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.2" y="398.0"></text>
</g>
<g>
<title>byte[] (4,736 samples, 1.64%)</title><rect x="432.2" y="371.0" width="19.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="435.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (7,272 samples, 2.51%)</title><rect x="451.5" y="403.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.5" y="414.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7,272 samples, 2.51%)</title><rect x="451.5" y="387.0" width="29.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.5" y="398.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,912 samples, 1.70%)</title><rect x="451.5" y="371.0" width="20.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="454.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,360 samples, 0.82%)</title><rect x="471.5" y="371.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.5" y="382.0"></text>
</g>
<g>
<title>byte[] (2,360 samples, 0.82%)</title><rect x="471.5" y="355.0" width="9.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="474.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (627 samples, 0.22%)</title><rect x="481.1" y="531.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (604 samples, 0.21%)</title><rect x="481.2" y="515.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (604 samples, 0.21%)</title><rect x="481.2" y="499.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.2" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (172 samples, 0.06%)</title><rect x="481.2" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (172 samples, 0.06%)</title><rect x="481.2" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (172 samples, 0.06%)</title><rect x="481.2" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (172 samples, 0.06%)</title><rect x="481.2" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (172 samples, 0.06%)</title><rect x="481.2" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (172 samples, 0.06%)</title><rect x="481.2" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (172 samples, 0.06%)</title><rect x="481.2" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (172 samples, 0.06%)</title><rect x="481.2" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (172 samples, 0.06%)</title><rect x="481.2" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (172 samples, 0.06%)</title><rect x="481.2" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (172 samples, 0.06%)</title><rect x="481.2" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (172 samples, 0.06%)</title><rect x="481.2" y="307.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="484.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (432 samples, 0.15%)</title><rect x="481.9" y="483.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (432 samples, 0.15%)</title><rect x="481.9" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (432 samples, 0.15%)</title><rect x="481.9" y="451.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (432 samples, 0.15%)</title><rect x="481.9" y="435.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (432 samples, 0.15%)</title><rect x="481.9" y="419.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (432 samples, 0.15%)</title><rect x="481.9" y="403.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (345 samples, 0.12%)</title><rect x="481.9" y="387.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (345 samples, 0.12%)</title><rect x="481.9" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (345 samples, 0.12%)</title><rect x="481.9" y="355.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (345 samples, 0.12%)</title><rect x="481.9" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (203 samples, 0.07%)</title><rect x="481.9" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (131 samples, 0.05%)</title><rect x="481.9" y="307.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="484.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (72 samples, 0.02%)</title><rect x="482.5" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.5" y="318.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.02%)</title><rect x="482.5" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="485.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (103 samples, 0.04%)</title><rect x="482.9" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (103 samples, 0.04%)</title><rect x="482.9" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.02%)</title><rect x="482.9" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="485.9" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (87 samples, 0.03%)</title><rect x="483.3" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (87 samples, 0.03%)</title><rect x="483.3" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (87 samples, 0.03%)</title><rect x="483.3" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (87 samples, 0.03%)</title><rect x="483.3" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.getKey (87 samples, 0.03%)</title><rect x="483.3" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.3" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (87 samples, 0.03%)</title><rect x="483.3" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (87 samples, 0.03%)</title><rect x="483.3" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="486.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (86 samples, 0.03%)</title><rect x="483.7" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (631 samples, 0.22%)</title><rect x="484.2" y="643.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (598 samples, 0.21%)</title><rect x="484.2" y="627.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (595 samples, 0.21%)</title><rect x="484.2" y="611.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (595 samples, 0.21%)</title><rect x="484.2" y="595.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (595 samples, 0.21%)</title><rect x="484.2" y="579.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="487.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1765573268.run (1,681 samples, 0.58%)</title><rect x="486.8" y="643.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,681 samples, 0.58%)</title><rect x="486.8" y="627.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,681 samples, 0.58%)</title><rect x="486.8" y="611.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,681 samples, 0.58%)</title><rect x="486.8" y="595.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,681 samples, 0.58%)</title><rect x="486.8" y="579.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,681 samples, 0.58%)</title><rect x="486.8" y="563.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,681 samples, 0.58%)</title><rect x="486.8" y="547.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,681 samples, 0.58%)</title><rect x="486.8" y="531.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,681 samples, 0.58%)</title><rect x="486.8" y="515.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,681 samples, 0.58%)</title><rect x="486.8" y="499.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,681 samples, 0.58%)</title><rect x="486.8" y="483.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,503 samples, 0.52%)</title><rect x="486.8" y="467.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (137 samples, 0.05%)</title><rect x="486.8" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (137 samples, 0.05%)</title><rect x="486.8" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$407/374842750.get$Lambda (73 samples, 0.03%)</title><rect x="486.8" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$407 (73 samples, 0.03%)</title><rect x="486.8" y="403.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="489.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/2077801692.get$Lambda (64 samples, 0.02%)</title><rect x="487.1" y="419.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$436 (64 samples, 0.02%)</title><rect x="487.1" y="403.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="490.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,366 samples, 0.47%)</title><rect x="487.3" y="451.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (151 samples, 0.05%)</title><rect x="487.3" y="435.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="490.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,215 samples, 0.42%)</title><rect x="487.9" y="435.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,215 samples, 0.42%)</title><rect x="487.9" y="419.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,215 samples, 0.42%)</title><rect x="487.9" y="403.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (568 samples, 0.20%)</title><rect x="487.9" y="387.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (223 samples, 0.08%)</title><rect x="487.9" y="371.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="490.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$428/2006974621.apply (345 samples, 0.12%)</title><rect x="488.9" y="371.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (345 samples, 0.12%)</title><rect x="488.9" y="355.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (345 samples, 0.12%)</title><rect x="488.9" y="339.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (71 samples, 0.02%)</title><rect x="488.9" y="323.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.9" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (71 samples, 0.02%)</title><rect x="488.9" y="307.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.9" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (71 samples, 0.02%)</title><rect x="488.9" y="291.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="491.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (274 samples, 0.09%)</title><rect x="489.1" y="323.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (223 samples, 0.08%)</title><rect x="489.3" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (223 samples, 0.08%)</title><rect x="489.3" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (126 samples, 0.04%)</title><rect x="489.3" y="275.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="492.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.03%)</title><rect x="489.9" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.03%)</title><rect x="489.9" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (97 samples, 0.03%)</title><rect x="489.9" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="492.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (647 samples, 0.22%)</title><rect x="490.3" y="387.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (647 samples, 0.22%)</title><rect x="490.3" y="371.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$371/1785628412.apply (647 samples, 0.22%)</title><rect x="490.3" y="355.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (647 samples, 0.22%)</title><rect x="490.3" y="339.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (647 samples, 0.22%)</title><rect x="490.3" y="323.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/885000023.apply (647 samples, 0.22%)</title><rect x="490.3" y="307.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (647 samples, 0.22%)</title><rect x="490.3" y="291.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (221 samples, 0.08%)</title><rect x="490.5" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (221 samples, 0.08%)</title><rect x="490.5" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (112 samples, 0.04%)</title><rect x="490.5" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="493.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="490.9" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.04%)</title><rect x="490.9" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.04%)</title><rect x="490.9" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="493.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (373 samples, 0.13%)</title><rect x="491.4" y="275.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (204 samples, 0.07%)</title><rect x="491.4" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (101 samples, 0.03%)</title><rect x="491.4" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="494.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (103 samples, 0.04%)</title><rect x="491.8" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (103 samples, 0.04%)</title><rect x="491.8" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.04%)</title><rect x="491.8" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="494.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (169 samples, 0.06%)</title><rect x="492.2" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (74 samples, 0.03%)</title><rect x="492.2" y="243.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="495.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (95 samples, 0.03%)</title><rect x="492.5" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (95 samples, 0.03%)</title><rect x="492.5" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (95 samples, 0.03%)</title><rect x="492.5" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (95 samples, 0.03%)</title><rect x="492.5" y="195.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (95 samples, 0.03%)</title><rect x="492.5" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (95 samples, 0.03%)</title><rect x="492.5" y="163.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="495.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (178 samples, 0.06%)</title><rect x="492.9" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (178 samples, 0.06%)</title><rect x="492.9" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (178 samples, 0.06%)</title><rect x="492.9" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (178 samples, 0.06%)</title><rect x="492.9" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (178 samples, 0.06%)</title><rect x="492.9" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.9" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (178 samples, 0.06%)</title><rect x="492.9" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (66 samples, 0.02%)</title><rect x="492.9" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.9" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (66 samples, 0.02%)</title><rect x="492.9" y="355.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="495.9" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (112 samples, 0.04%)</title><rect x="493.2" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (112 samples, 0.04%)</title><rect x="493.2" y="355.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="496.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15,242 samples, 5.27%)</title><rect x="493.6" y="643.0" width="62.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.6" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15,242 samples, 5.27%)</title><rect x="493.6" y="627.0" width="62.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.6" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12,630 samples, 4.36%)</title><rect x="493.6" y="611.0" width="51.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.6" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (12,630 samples, 4.36%)</title><rect x="493.6" y="595.0" width="51.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.6" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (12,630 samples, 4.36%)</title><rect x="493.6" y="579.0" width="51.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.6" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (220 samples, 0.08%)</title><rect x="493.6" y="563.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (220 samples, 0.08%)</title><rect x="493.6" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (220 samples, 0.08%)</title><rect x="493.6" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (220 samples, 0.08%)</title><rect x="493.6" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (129 samples, 0.04%)</title><rect x="493.6" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (129 samples, 0.04%)</title><rect x="493.6" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.04%)</title><rect x="493.6" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (129 samples, 0.04%)</title><rect x="493.6" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (129 samples, 0.04%)</title><rect x="493.6" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.6" y="446.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.04%)</title><rect x="493.6" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="496.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (91 samples, 0.03%)</title><rect x="494.1" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.03%)</title><rect x="494.1" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.03%)</title><rect x="494.1" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405/227400038.get$Lambda (91 samples, 0.03%)</title><rect x="494.1" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405 (91 samples, 0.03%)</title><rect x="494.1" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="497.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (12,410 samples, 4.29%)</title><rect x="494.5" y="563.0" width="50.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.5" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (12,410 samples, 4.29%)</title><rect x="494.5" y="547.0" width="50.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.5" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12,410 samples, 4.29%)</title><rect x="494.5" y="531.0" width="50.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.5" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12,410 samples, 4.29%)</title><rect x="494.5" y="515.0" width="50.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.5" y="526.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4,958 samples, 1.71%)</title><rect x="494.5" y="499.0" width="20.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,958 samples, 1.71%)</title><rect x="494.5" y="483.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,958 samples, 1.71%)</title><rect x="494.5" y="467.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4,958 samples, 1.71%)</title><rect x="494.5" y="451.0" width="20.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,958 samples, 1.71%)</title><rect x="494.5" y="435.0" width="20.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4,958 samples, 1.71%)</title><rect x="494.5" y="419.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,958 samples, 1.71%)</title><rect x="494.5" y="403.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4,829 samples, 1.67%)</title><rect x="494.5" y="387.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,829 samples, 1.67%)</title><rect x="494.5" y="371.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,743 samples, 1.64%)</title><rect x="494.5" y="355.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (86 samples, 0.03%)</title><rect x="494.5" y="339.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="497.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$188/1227969850.apply (4,459 samples, 1.54%)</title><rect x="494.9" y="339.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4,459 samples, 1.54%)</title><rect x="494.9" y="323.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.03%)</title><rect x="494.9" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.03%)</title><rect x="494.9" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$488/398166842.get$Lambda (88 samples, 0.03%)</title><rect x="494.9" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$488 (88 samples, 0.03%)</title><rect x="494.9" y="259.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="497.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (216 samples, 0.07%)</title><rect x="495.2" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (216 samples, 0.07%)</title><rect x="495.2" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (123 samples, 0.04%)</title><rect x="495.2" y="275.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="498.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.03%)</title><rect x="495.7" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.03%)</title><rect x="495.7" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.03%)</title><rect x="495.7" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="498.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4,155 samples, 1.44%)</title><rect x="496.1" y="307.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (243 samples, 0.08%)</title><rect x="496.3" y="291.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (243 samples, 0.08%)</title><rect x="496.3" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (140 samples, 0.05%)</title><rect x="496.3" y="259.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="499.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="496.9" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.04%)</title><rect x="496.9" y="243.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.04%)</title><rect x="496.9" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="499.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3,867 samples, 1.34%)</title><rect x="497.3" y="291.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$158/212951193.apply (262 samples, 0.09%)</title><rect x="497.3" y="275.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (262 samples, 0.09%)</title><rect x="497.3" y="259.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (262 samples, 0.09%)</title><rect x="497.3" y="243.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (101 samples, 0.03%)</title><rect x="497.3" y="227.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="500.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (161 samples, 0.06%)</title><rect x="497.7" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.7" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (66 samples, 0.02%)</title><rect x="497.7" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="500.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.03%)</title><rect x="498.0" y="211.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="501.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3,605 samples, 1.25%)</title><rect x="498.3" y="275.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.03%)</title><rect x="498.3" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.03%)</title><rect x="498.3" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/749517334.linkToTargetMethod (140 samples, 0.05%)</title><rect x="498.8" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/452483990.invokeStatic (140 samples, 0.05%)</title><rect x="498.8" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/611855769.get$Lambda (140 samples, 0.05%)</title><rect x="498.8" y="227.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$448 (140 samples, 0.05%)</title><rect x="498.8" y="211.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="501.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (759 samples, 0.26%)</title><rect x="499.3" y="259.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.3" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (321 samples, 0.11%)</title><rect x="499.3" y="243.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.3" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (113 samples, 0.04%)</title><rect x="499.3" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.3" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (113 samples, 0.04%)</title><rect x="499.3" y="211.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="502.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (208 samples, 0.07%)</title><rect x="499.8" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (208 samples, 0.07%)</title><rect x="499.8" y="211.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="502.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (222 samples, 0.08%)</title><rect x="500.6" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (222 samples, 0.08%)</title><rect x="500.6" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (222 samples, 0.08%)</title><rect x="500.6" y="211.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (76 samples, 0.03%)</title><rect x="500.6" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (76 samples, 0.03%)</title><rect x="500.6" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (76 samples, 0.03%)</title><rect x="500.6" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (76 samples, 0.03%)</title><rect x="500.6" y="147.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="503.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$443/1991057533.get (69 samples, 0.02%)</title><rect x="500.9" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (69 samples, 0.02%)</title><rect x="500.9" y="179.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="503.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (77 samples, 0.03%)</title><rect x="501.2" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (77 samples, 0.03%)</title><rect x="501.2" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (77 samples, 0.03%)</title><rect x="501.2" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (77 samples, 0.03%)</title><rect x="501.2" y="147.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="504.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (216 samples, 0.07%)</title><rect x="501.5" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (216 samples, 0.07%)</title><rect x="501.5" y="227.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="504.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (433 samples, 0.15%)</title><rect x="502.4" y="259.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (214 samples, 0.07%)</title><rect x="502.4" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (132 samples, 0.05%)</title><rect x="502.4" y="227.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="505.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (82 samples, 0.03%)</title><rect x="503.0" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (82 samples, 0.03%)</title><rect x="503.0" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (82 samples, 0.03%)</title><rect x="503.0" y="195.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="506.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (219 samples, 0.08%)</title><rect x="503.3" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (219 samples, 0.08%)</title><rect x="503.3" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (122 samples, 0.04%)</title><rect x="503.3" y="211.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="506.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.03%)</title><rect x="503.8" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (97 samples, 0.03%)</title><rect x="503.8" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.8" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (97 samples, 0.03%)</title><rect x="503.8" y="179.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="506.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (77 samples, 0.03%)</title><rect x="504.2" y="259.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="507.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (116 samples, 0.04%)</title><rect x="504.5" y="259.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="507.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (92 samples, 0.03%)</title><rect x="505.0" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="508.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,838 samples, 0.63%)</title><rect x="505.6" y="259.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/611855769.run (1,838 samples, 0.63%)</title><rect x="505.6" y="243.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,838 samples, 0.63%)</title><rect x="505.6" y="227.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (231 samples, 0.08%)</title><rect x="505.6" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (231 samples, 0.08%)</title><rect x="505.6" y="195.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/1806290182.get$Lambda (84 samples, 0.03%)</title><rect x="505.8" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$457 (84 samples, 0.03%)</title><rect x="505.8" y="163.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="508.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$467/260729516.get$Lambda (98 samples, 0.03%)</title><rect x="506.1" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$467 (98 samples, 0.03%)</title><rect x="506.1" y="163.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="509.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (223 samples, 0.08%)</title><rect x="506.5" y="211.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (223 samples, 0.08%)</title><rect x="506.5" y="195.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.5" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (134 samples, 0.05%)</title><rect x="506.5" y="179.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="509.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.03%)</title><rect x="507.0" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (89 samples, 0.03%)</title><rect x="507.0" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (89 samples, 0.03%)</title><rect x="507.0" y="147.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="510.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (134 samples, 0.05%)</title><rect x="507.4" y="211.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="510.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (100 samples, 0.03%)</title><rect x="507.9" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.03%)</title><rect x="507.9" y="195.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="510.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (288 samples, 0.10%)</title><rect x="508.4" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (288 samples, 0.10%)</title><rect x="508.4" y="195.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.03%)</title><rect x="508.4" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.03%)</title><rect x="508.4" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$471/1154418669.get$Lambda (77 samples, 0.03%)</title><rect x="508.4" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$471 (77 samples, 0.03%)</title><rect x="508.4" y="131.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="511.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (211 samples, 0.07%)</title><rect x="508.7" y="179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (211 samples, 0.07%)</title><rect x="508.7" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (211 samples, 0.07%)</title><rect x="508.7" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (110 samples, 0.04%)</title><rect x="508.7" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="511.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.03%)</title><rect x="509.1" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.03%)</title><rect x="509.1" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.1" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.03%)</title><rect x="509.1" y="99.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="512.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (311 samples, 0.11%)</title><rect x="509.5" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (311 samples, 0.11%)</title><rect x="509.5" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (311 samples, 0.11%)</title><rect x="509.5" y="179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (311 samples, 0.11%)</title><rect x="509.5" y="163.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (82 samples, 0.03%)</title><rect x="509.5" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.03%)</title><rect x="509.5" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="512.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (229 samples, 0.08%)</title><rect x="509.9" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (229 samples, 0.08%)</title><rect x="509.9" y="131.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.9" y="142.0"></text>
</g>
<g>
<title>byte[] (229 samples, 0.08%)</title><rect x="509.9" y="115.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="512.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (551 samples, 0.19%)</title><rect x="510.8" y="211.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (185 samples, 0.06%)</title><rect x="510.8" y="195.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="513.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (366 samples, 0.13%)</title><rect x="511.6" y="195.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (366 samples, 0.13%)</title><rect x="511.6" y="179.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (366 samples, 0.13%)</title><rect x="511.6" y="163.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (366 samples, 0.13%)</title><rect x="511.6" y="147.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (84 samples, 0.03%)</title><rect x="511.6" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.03%)</title><rect x="511.6" y="115.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="514.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (282 samples, 0.10%)</title><rect x="511.9" y="131.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (282 samples, 0.10%)</title><rect x="511.9" y="115.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.9" y="126.0"></text>
</g>
<g>
<title>byte[] (282 samples, 0.10%)</title><rect x="511.9" y="99.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="514.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/137991968.apply (198 samples, 0.07%)</title><rect x="513.0" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (198 samples, 0.07%)</title><rect x="513.0" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (101 samples, 0.03%)</title><rect x="513.0" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (101 samples, 0.03%)</title><rect x="513.0" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.0" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (101 samples, 0.03%)</title><rect x="513.0" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.0" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (101 samples, 0.03%)</title><rect x="513.0" y="259.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="516.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (97 samples, 0.03%)</title><rect x="513.5" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (97 samples, 0.03%)</title><rect x="513.5" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="516.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (86 samples, 0.03%)</title><rect x="513.9" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (86 samples, 0.03%)</title><rect x="513.9" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/905457088.apply (86 samples, 0.03%)</title><rect x="513.9" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (86 samples, 0.03%)</title><rect x="513.9" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (86 samples, 0.03%)</title><rect x="513.9" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.03%)</title><rect x="513.9" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="516.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$437/109749654.apply (129 samples, 0.04%)</title><rect x="514.2" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (129 samples, 0.04%)</title><rect x="514.2" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (129 samples, 0.04%)</title><rect x="514.2" y="355.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="517.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (7,452 samples, 2.57%)</title><rect x="514.7" y="499.0" width="30.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.7" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (517 samples, 0.18%)</title><rect x="514.7" y="483.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (517 samples, 0.18%)</title><rect x="514.7" y="467.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (517 samples, 0.18%)</title><rect x="514.7" y="451.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.7" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (517 samples, 0.18%)</title><rect x="514.7" y="435.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (517 samples, 0.18%)</title><rect x="514.7" y="419.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.7" y="430.0"></text>
</g>
<g>
<title>byte[] (517 samples, 0.18%)</title><rect x="514.7" y="403.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="517.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (587 samples, 0.20%)</title><rect x="516.8" y="483.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.8" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (78 samples, 0.03%)</title><rect x="516.8" y="467.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="519.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 0.03%)</title><rect x="517.2" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.03%)</title><rect x="517.2" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.03%)</title><rect x="517.2" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.2" y="446.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.03%)</title><rect x="517.2" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="520.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (110 samples, 0.04%)</title><rect x="517.5" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (110 samples, 0.04%)</title><rect x="517.5" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.5" y="462.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.04%)</title><rect x="517.5" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="520.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (320 samples, 0.11%)</title><rect x="517.9" y="467.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (320 samples, 0.11%)</title><rect x="517.9" y="451.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (207 samples, 0.07%)</title><rect x="517.9" y="435.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="520.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (113 samples, 0.04%)</title><rect x="518.8" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.8" y="446.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.04%)</title><rect x="518.8" y="419.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="521.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,718 samples, 0.59%)</title><rect x="519.2" y="483.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,718 samples, 0.59%)</title><rect x="519.2" y="467.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,718 samples, 0.59%)</title><rect x="519.2" y="451.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.2" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.02%)</title><rect x="519.4" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="522.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (138 samples, 0.05%)</title><rect x="519.7" y="435.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="522.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.03%)</title><rect x="520.5" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.03%)</title><rect x="520.5" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.get$Lambda (92 samples, 0.03%)</title><rect x="520.5" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.5" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (92 samples, 0.03%)</title><rect x="520.5" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="523.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (106 samples, 0.04%)</title><rect x="520.8" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.8" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (106 samples, 0.04%)</title><rect x="520.8" y="419.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="523.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,055 samples, 0.36%)</title><rect x="521.3" y="435.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (1,055 samples, 0.36%)</title><rect x="521.3" y="419.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,055 samples, 0.36%)</title><rect x="521.3" y="403.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (153 samples, 0.05%)</title><rect x="521.3" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (153 samples, 0.05%)</title><rect x="521.3" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (153 samples, 0.05%)</title><rect x="521.3" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (153 samples, 0.05%)</title><rect x="521.3" y="339.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (153 samples, 0.05%)</title><rect x="521.3" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (153 samples, 0.05%)</title><rect x="521.3" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (153 samples, 0.05%)</title><rect x="521.3" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (153 samples, 0.05%)</title><rect x="521.3" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.05%)</title><rect x="521.3" y="259.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="524.3" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (482 samples, 0.17%)</title><rect x="521.9" y="387.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (482 samples, 0.17%)</title><rect x="521.9" y="371.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (245 samples, 0.08%)</title><rect x="521.9" y="355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (245 samples, 0.08%)</title><rect x="521.9" y="339.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (245 samples, 0.08%)</title><rect x="521.9" y="323.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="524.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (237 samples, 0.08%)</title><rect x="522.9" y="355.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (237 samples, 0.08%)</title><rect x="522.9" y="339.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="525.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (420 samples, 0.15%)</title><rect x="523.9" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (420 samples, 0.15%)</title><rect x="523.9" y="371.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="526.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (163 samples, 0.06%)</title><rect x="525.6" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (163 samples, 0.06%)</title><rect x="525.6" y="419.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="528.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4,630 samples, 1.60%)</title><rect x="526.2" y="483.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (229 samples, 0.08%)</title><rect x="526.2" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="529.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (324 samples, 0.11%)</title><rect x="527.2" y="467.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (324 samples, 0.11%)</title><rect x="527.2" y="451.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.2" y="462.0"></text>
</g>
<g>
<title>byte[] (324 samples, 0.11%)</title><rect x="527.2" y="435.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="530.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (646 samples, 0.22%)</title><rect x="528.5" y="467.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (646 samples, 0.22%)</title><rect x="528.5" y="451.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (249 samples, 0.09%)</title><rect x="528.5" y="435.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="531.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (397 samples, 0.14%)</title><rect x="529.5" y="435.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.5" y="446.0"></text>
</g>
<g>
<title>byte[] (397 samples, 0.14%)</title><rect x="529.5" y="419.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="532.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (3,431 samples, 1.19%)</title><rect x="531.1" y="467.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,054 samples, 0.36%)</title><rect x="531.1" y="451.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,054 samples, 0.36%)</title><rect x="531.1" y="435.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (491 samples, 0.17%)</title><rect x="531.1" y="419.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="534.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (563 samples, 0.19%)</title><rect x="533.1" y="419.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.1" y="430.0"></text>
</g>
<g>
<title>byte[] (563 samples, 0.19%)</title><rect x="533.1" y="403.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="536.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (562 samples, 0.19%)</title><rect x="535.4" y="451.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (562 samples, 0.19%)</title><rect x="535.4" y="435.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.4" y="446.0"></text>
</g>
<g>
<title>byte[] (328 samples, 0.11%)</title><rect x="535.4" y="419.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="538.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (234 samples, 0.08%)</title><rect x="536.8" y="419.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="539.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (466 samples, 0.16%)</title><rect x="537.7" y="451.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="540.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (466 samples, 0.16%)</title><rect x="537.7" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (466 samples, 0.16%)</title><rect x="537.7" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (222 samples, 0.08%)</title><rect x="537.7" y="403.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="540.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (244 samples, 0.08%)</title><rect x="538.6" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.6" y="414.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.08%)</title><rect x="538.6" y="387.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="541.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (569 samples, 0.20%)</title><rect x="539.6" y="451.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (569 samples, 0.20%)</title><rect x="539.6" y="435.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (569 samples, 0.20%)</title><rect x="539.6" y="419.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (569 samples, 0.20%)</title><rect x="539.6" y="403.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (569 samples, 0.20%)</title><rect x="539.6" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (569 samples, 0.20%)</title><rect x="539.6" y="371.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="542.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (780 samples, 0.27%)</title><rect x="541.9" y="451.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (319 samples, 0.11%)</title><rect x="541.9" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (319 samples, 0.11%)</title><rect x="541.9" y="419.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="544.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (239 samples, 0.08%)</title><rect x="543.2" y="435.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.2" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (239 samples, 0.08%)</title><rect x="543.2" y="419.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="546.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$440/1537378334.apply (222 samples, 0.08%)</title><rect x="544.2" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (222 samples, 0.08%)</title><rect x="544.2" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.2" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (222 samples, 0.08%)</title><rect x="544.2" y="403.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="547.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2,612 samples, 0.90%)</title><rect x="545.1" y="611.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,612 samples, 0.90%)</title><rect x="545.1" y="595.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,612 samples, 0.90%)</title><rect x="545.1" y="579.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (2,612 samples, 0.90%)</title><rect x="545.1" y="563.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,612 samples, 0.90%)</title><rect x="545.1" y="547.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (344 samples, 0.12%)</title><rect x="545.1" y="531.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.04%)</title><rect x="545.1" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.04%)</title><rect x="545.1" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$348/1253487553.get$Lambda (75 samples, 0.03%)</title><rect x="545.3" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$348 (75 samples, 0.03%)</title><rect x="545.3" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="548.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (94 samples, 0.03%)</title><rect x="545.6" y="515.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="548.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (131 samples, 0.05%)</title><rect x="546.0" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (131 samples, 0.05%)</title><rect x="546.0" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (75 samples, 0.03%)</title><rect x="546.2" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (75 samples, 0.03%)</title><rect x="546.2" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="549.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2,268 samples, 0.78%)</title><rect x="546.5" y="531.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,268 samples, 0.78%)</title><rect x="546.5" y="515.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,268 samples, 0.78%)</title><rect x="546.5" y="499.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,268 samples, 0.78%)</title><rect x="546.5" y="483.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,268 samples, 0.78%)</title><rect x="546.5" y="467.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,268 samples, 0.78%)</title><rect x="546.5" y="451.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (141 samples, 0.05%)</title><rect x="546.5" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (141 samples, 0.05%)</title><rect x="546.5" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (141 samples, 0.05%)</title><rect x="546.5" y="403.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="549.5" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (86 samples, 0.03%)</title><rect x="547.1" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.1" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (86 samples, 0.03%)</title><rect x="547.1" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="550.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/287410361.run (1,361 samples, 0.47%)</title><rect x="547.4" y="435.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,361 samples, 0.47%)</title><rect x="547.4" y="419.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,361 samples, 0.47%)</title><rect x="547.4" y="403.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (368 samples, 0.13%)</title><rect x="547.4" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (249 samples, 0.09%)</title><rect x="547.4" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (89 samples, 0.03%)</title><rect x="547.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.4" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (89 samples, 0.03%)</title><rect x="547.4" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="550.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (160 samples, 0.06%)</title><rect x="547.8" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (160 samples, 0.06%)</title><rect x="547.8" y="339.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="550.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (119 samples, 0.04%)</title><rect x="548.4" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (119 samples, 0.04%)</title><rect x="548.4" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (119 samples, 0.04%)</title><rect x="548.4" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (76 samples, 0.03%)</title><rect x="548.4" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (76 samples, 0.03%)</title><rect x="548.4" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="551.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (940 samples, 0.32%)</title><rect x="549.1" y="387.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.1" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (79 samples, 0.03%)</title><rect x="549.1" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.1" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (79 samples, 0.03%)</title><rect x="549.1" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.1" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (79 samples, 0.03%)</title><rect x="549.1" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.1" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (79 samples, 0.03%)</title><rect x="549.1" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.1" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (79 samples, 0.03%)</title><rect x="549.1" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="552.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (861 samples, 0.30%)</title><rect x="549.5" y="371.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (326 samples, 0.11%)</title><rect x="549.5" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.5" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.03%)</title><rect x="549.5" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.5" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (76 samples, 0.03%)</title><rect x="549.5" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.5" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.03%)</title><rect x="549.5" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.5" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (76 samples, 0.03%)</title><rect x="549.5" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.5" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (76 samples, 0.03%)</title><rect x="549.5" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.5" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (76 samples, 0.03%)</title><rect x="549.5" y="259.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="552.5" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (94 samples, 0.03%)</title><rect x="549.8" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (94 samples, 0.03%)</title><rect x="549.8" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.8" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (94 samples, 0.03%)</title><rect x="549.8" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.8" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (94 samples, 0.03%)</title><rect x="549.8" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.8" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (94 samples, 0.03%)</title><rect x="549.8" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.8" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (94 samples, 0.03%)</title><rect x="549.8" y="259.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="552.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (93 samples, 0.03%)</title><rect x="550.4" y="339.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="553.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (153 samples, 0.05%)</title><rect x="550.8" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (75 samples, 0.03%)</title><rect x="550.8" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.8" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (75 samples, 0.03%)</title><rect x="550.8" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (75 samples, 0.03%)</title><rect x="550.8" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.03%)</title><rect x="550.8" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="553.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (78 samples, 0.03%)</title><rect x="551.1" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (78 samples, 0.03%)</title><rect x="551.1" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.1" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (78 samples, 0.03%)</title><rect x="551.1" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="554.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (382 samples, 0.13%)</title><rect x="551.4" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="554.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (70 samples, 0.02%)</title><rect x="551.4" y="339.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="554.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (312 samples, 0.11%)</title><rect x="551.7" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (116 samples, 0.04%)</title><rect x="551.7" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (116 samples, 0.04%)</title><rect x="551.7" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (116 samples, 0.04%)</title><rect x="551.7" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (116 samples, 0.04%)</title><rect x="551.7" y="275.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="554.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (196 samples, 0.07%)</title><rect x="552.2" y="323.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (196 samples, 0.07%)</title><rect x="552.2" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (129 samples, 0.04%)</title><rect x="552.2" y="291.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="555.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (67 samples, 0.02%)</title><rect x="552.7" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (67 samples, 0.02%)</title><rect x="552.7" y="275.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="555.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (327 samples, 0.11%)</title><rect x="553.0" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (327 samples, 0.11%)</title><rect x="553.0" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (327 samples, 0.11%)</title><rect x="553.0" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (221 samples, 0.08%)</title><rect x="553.0" y="387.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (221 samples, 0.08%)</title><rect x="553.0" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (221 samples, 0.08%)</title><rect x="553.0" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (221 samples, 0.08%)</title><rect x="553.0" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$476/955279240.accept (221 samples, 0.08%)</title><rect x="553.0" y="323.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (221 samples, 0.08%)</title><rect x="553.0" y="307.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (221 samples, 0.08%)</title><rect x="553.0" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (221 samples, 0.08%)</title><rect x="553.0" y="275.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (221 samples, 0.08%)</title><rect x="553.0" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$488/398166842.apply (221 samples, 0.08%)</title><rect x="553.0" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (221 samples, 0.08%)</title><rect x="553.0" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (221 samples, 0.08%)</title><rect x="553.0" y="211.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="556.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (106 samples, 0.04%)</title><rect x="553.9" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.9" y="398.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.04%)</title><rect x="553.9" y="371.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="556.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (353 samples, 0.12%)</title><rect x="554.3" y="435.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (353 samples, 0.12%)</title><rect x="554.3" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (353 samples, 0.12%)</title><rect x="554.3" y="403.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (353 samples, 0.12%)</title><rect x="554.3" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (353 samples, 0.12%)</title><rect x="554.3" y="371.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (159 samples, 0.05%)</title><rect x="554.3" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.3" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (100 samples, 0.03%)</title><rect x="554.6" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.6" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (100 samples, 0.03%)</title><rect x="554.6" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="557.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (194 samples, 0.07%)</title><rect x="555.0" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (194 samples, 0.07%)</title><rect x="555.0" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (194 samples, 0.07%)</title><rect x="555.0" y="323.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="558.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/972466412.run (1,465 samples, 0.51%)</title><rect x="555.8" y="643.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (1,465 samples, 0.51%)</title><rect x="555.8" y="627.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (1,465 samples, 0.51%)</title><rect x="555.8" y="611.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (90 samples, 0.03%)</title><rect x="555.8" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (90 samples, 0.03%)</title><rect x="555.8" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (90 samples, 0.03%)</title><rect x="555.8" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.02%)</title><rect x="555.8" y="547.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="558.8" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.MetaInfoRequest (102 samples, 0.04%)</title><rect x="556.1" y="595.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="559.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (363 samples, 0.13%)</title><rect x="556.5" y="595.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (116 samples, 0.04%)</title><rect x="556.5" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (116 samples, 0.04%)</title><rect x="556.5" y="563.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.02%)</title><rect x="556.5" y="547.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="559.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (96 samples, 0.03%)</title><rect x="557.2" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (96 samples, 0.03%)</title><rect x="557.2" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.2" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (96 samples, 0.03%)</title><rect x="557.2" y="547.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="560.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (110 samples, 0.04%)</title><rect x="557.6" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (110 samples, 0.04%)</title><rect x="557.6" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (110 samples, 0.04%)</title><rect x="557.6" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getting (910 samples, 0.31%)</title><rect x="558.0" y="595.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (362 samples, 0.13%)</title><rect x="559.0" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.0" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (77 samples, 0.03%)</title><rect x="559.1" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (185 samples, 0.06%)</title><rect x="559.7" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (146 samples, 0.05%)</title><rect x="559.7" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (109 samples, 0.04%)</title><rect x="559.7" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (109 samples, 0.04%)</title><rect x="559.7" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (75 samples, 0.03%)</title><rect x="559.9" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (75 samples, 0.03%)</title><rect x="559.9" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.9" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (75 samples, 0.03%)</title><rect x="559.9" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (75 samples, 0.03%)</title><rect x="559.9" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doGet (252 samples, 0.09%)</title><rect x="560.5" y="579.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (104 samples, 0.04%)</title><rect x="560.6" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (104 samples, 0.04%)</title><rect x="560.6" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (67 samples, 0.02%)</title><rect x="560.6" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="563.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (117 samples, 0.04%)</title><rect x="561.0" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (117 samples, 0.04%)</title><rect x="561.0" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (32,187 samples, 11.12%)</title><rect x="561.7" y="691.0" width="131.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.7" y="702.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (32,187 samples, 11.12%)</title><rect x="561.7" y="675.0" width="131.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.7" y="686.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (32,187 samples, 11.12%)</title><rect x="561.7" y="659.0" width="131.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.7" y="670.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (32,187 samples, 11.12%)</title><rect x="561.7" y="643.0" width="131.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.7" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (32,187 samples, 11.12%)</title><rect x="561.7" y="627.0" width="131.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.7" y="638.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (32,187 samples, 11.12%)</title><rect x="561.7" y="611.0" width="131.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.7" y="622.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32,187 samples, 11.12%)</title><rect x="561.7" y="595.0" width="131.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.7" y="606.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (32,142 samples, 11.10%)</title><rect x="561.9" y="579.0" width="131.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.9" y="590.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$204/1435990821.accept (32,142 samples, 11.10%)</title><rect x="561.9" y="563.0" width="131.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.9" y="574.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (32,142 samples, 11.10%)</title><rect x="561.9" y="547.0" width="131.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.9" y="558.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (30,851 samples, 10.66%)</title><rect x="561.9" y="531.0" width="125.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.9" y="542.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30,851 samples, 10.66%)</title><rect x="561.9" y="515.0" width="125.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.9" y="526.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (30,851 samples, 10.66%)</title><rect x="561.9" y="499.0" width="125.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.9" y="510.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (30,851 samples, 10.66%)</title><rect x="561.9" y="483.0" width="125.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.9" y="494.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$509/575947167.accept (30,851 samples, 10.66%)</title><rect x="561.9" y="467.0" width="125.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.9" y="478.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$3 (30,851 samples, 10.66%)</title><rect x="561.9" y="451.0" width="125.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.9" y="462.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getNumberOfSuccessfulResponses (6,651 samples, 2.30%)</title><rect x="561.9" y="435.0" width="27.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.9" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$529/591936526.test (6,651 samples, 2.30%)</title><rect x="561.9" y="419.0" width="27.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.9" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$2 (6,651 samples, 2.30%)</title><rect x="561.9" y="403.0" width="27.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.9" y="414.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (6,651 samples, 2.30%)</title><rect x="561.9" y="387.0" width="27.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.9" y="398.0">r..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (4,792 samples, 1.66%)</title><rect x="561.9" y="371.0" width="19.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4,792 samples, 1.66%)</title><rect x="561.9" y="355.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.9" y="366.0"></text>
</g>
<g>
<title>byte[] (4,767 samples, 1.65%)</title><rect x="561.9" y="339.0" width="19.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="564.9" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,468 samples, 0.51%)</title><rect x="581.4" y="371.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,354 samples, 0.47%)</title><rect x="581.4" y="355.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.4" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (627 samples, 0.22%)</title><rect x="581.4" y="339.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.4" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (627 samples, 0.22%)</title><rect x="581.4" y="323.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="584.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (727 samples, 0.25%)</title><rect x="584.0" y="339.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (725 samples, 0.25%)</title><rect x="584.0" y="323.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="587.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (114 samples, 0.04%)</title><rect x="587.0" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (114 samples, 0.04%)</title><rect x="587.0" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (114 samples, 0.04%)</title><rect x="587.0" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (106 samples, 0.04%)</title><rect x="587.0" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.0" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (106 samples, 0.04%)</title><rect x="587.0" y="291.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="590.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.isPresent (391 samples, 0.14%)</title><rect x="587.4" y="371.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.4" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.Value (323 samples, 0.11%)</title><rect x="587.4" y="355.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="590.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.&lt;init&gt; (68 samples, 0.02%)</title><rect x="588.7" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (68 samples, 0.02%)</title><rect x="588.7" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.7" y="350.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.02%)</title><rect x="588.7" y="323.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="591.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (10,703 samples, 3.70%)</title><rect x="589.0" y="435.0" width="43.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.0" y="446.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (10,703 samples, 3.70%)</title><rect x="589.0" y="419.0" width="43.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.0" y="430.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10,703 samples, 3.70%)</title><rect x="589.0" y="403.0" width="43.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.0" y="414.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10,703 samples, 3.70%)</title><rect x="589.0" y="387.0" width="43.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.0" y="398.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6,552 samples, 2.26%)</title><rect x="589.0" y="371.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.0" y="382.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6,552 samples, 2.26%)</title><rect x="589.0" y="355.0" width="26.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.0" y="366.0">o..</text>
</g>
<g>
<title>byte[] (1,544 samples, 0.53%)</title><rect x="589.0" y="339.0" width="6.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="592.0" y="350.0"></text>
</g>
<g>
<title>byte[] (5,008 samples, 1.73%)</title><rect x="595.3" y="339.0" width="20.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="598.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4,151 samples, 1.43%)</title><rect x="615.7" y="371.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.7" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4,151 samples, 1.43%)</title><rect x="615.7" y="355.0" width="16.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="618.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.merge (11,910 samples, 4.11%)</title><rect x="632.6" y="435.0" width="48.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.6" y="446.0">ru/m..</text>
</g>
<g>
<title>java/util/Collection.stream (1,654 samples, 0.57%)</title><rect x="632.6" y="419.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (63 samples, 0.02%)</title><rect x="632.6" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.6" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (63 samples, 0.02%)</title><rect x="632.6" y="387.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="635.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,591 samples, 0.55%)</title><rect x="632.9" y="403.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,588 samples, 0.55%)</title><rect x="632.9" y="387.0" width="6.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="635.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (5,178 samples, 1.79%)</title><rect x="639.4" y="419.0" width="21.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.4" y="430.0">j..</text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (5,170 samples, 1.79%)</title><rect x="639.4" y="403.0" width="21.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="642.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5,078 samples, 1.75%)</title><rect x="660.5" y="419.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.5" y="430.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (4,366 samples, 1.51%)</title><rect x="660.5" y="403.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,366 samples, 1.51%)</title><rect x="660.5" y="387.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,366 samples, 1.51%)</title><rect x="660.5" y="371.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.5" y="382.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$532/1823657004.get$Lambda (4,366 samples, 1.51%)</title><rect x="660.5" y="355.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.5" y="366.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$532 (4,366 samples, 1.51%)</title><rect x="660.5" y="339.0" width="17.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="663.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (712 samples, 0.25%)</title><rect x="678.3" y="403.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (665 samples, 0.23%)</title><rect x="678.3" y="387.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (665 samples, 0.23%)</title><rect x="678.3" y="371.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (83 samples, 0.03%)</title><rect x="678.3" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (83 samples, 0.03%)</title><rect x="678.3" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (83 samples, 0.03%)</title><rect x="678.3" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.3" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (83 samples, 0.03%)</title><rect x="678.3" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="681.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (580 samples, 0.20%)</title><rect x="678.6" y="355.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (580 samples, 0.20%)</title><rect x="678.6" y="339.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (580 samples, 0.20%)</title><rect x="678.6" y="323.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="681.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (1,587 samples, 0.55%)</title><rect x="681.2" y="435.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.2" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (125 samples, 0.04%)</title><rect x="681.2" y="419.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="684.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (362 samples, 0.13%)</title><rect x="681.7" y="419.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="684.7" y="430.0"></text>
</g>
<g>
<title>byte[] (215 samples, 0.07%)</title><rect x="681.7" y="403.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="684.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (103 samples, 0.04%)</title><rect x="682.6" y="403.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="685.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getData (1,100 samples, 0.38%)</title><rect x="683.2" y="419.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,100 samples, 0.38%)</title><rect x="683.2" y="403.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.2" y="414.0"></text>
</g>
<g>
<title>byte[] (1,100 samples, 0.38%)</title><rect x="683.2" y="387.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="686.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1,291 samples, 0.45%)</title><rect x="687.7" y="531.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,291 samples, 0.45%)</title><rect x="687.7" y="515.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,291 samples, 0.45%)</title><rect x="687.7" y="499.0" width="5.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="690.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4,364 samples, 1.51%)</title><rect x="692.9" y="691.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.03%)</title><rect x="692.9" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.03%)</title><rect x="692.9" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (90 samples, 0.03%)</title><rect x="693.2" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.03%)</title><rect x="693.2" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$387/771141945.get$Lambda (90 samples, 0.03%)</title><rect x="693.2" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$387 (90 samples, 0.03%)</title><rect x="693.2" y="627.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="696.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,279 samples, 0.44%)</title><rect x="693.6" y="675.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/2075659030.accept (1,102 samples, 0.38%)</title><rect x="693.6" y="659.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,102 samples, 0.38%)</title><rect x="693.6" y="643.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,102 samples, 0.38%)</title><rect x="693.6" y="627.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,102 samples, 0.38%)</title><rect x="693.6" y="611.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,102 samples, 0.38%)</title><rect x="693.6" y="595.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,102 samples, 0.38%)</title><rect x="693.6" y="579.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,102 samples, 0.38%)</title><rect x="693.6" y="563.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,102 samples, 0.38%)</title><rect x="693.6" y="547.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,102 samples, 0.38%)</title><rect x="693.6" y="531.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,102 samples, 0.38%)</title><rect x="693.6" y="515.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (1,102 samples, 0.38%)</title><rect x="693.6" y="499.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,102 samples, 0.38%)</title><rect x="693.6" y="483.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (222 samples, 0.08%)</title><rect x="693.6" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (222 samples, 0.08%)</title><rect x="693.6" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (222 samples, 0.08%)</title><rect x="693.6" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (106 samples, 0.04%)</title><rect x="693.6" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (106 samples, 0.04%)</title><rect x="693.6" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (106 samples, 0.04%)</title><rect x="693.6" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (106 samples, 0.04%)</title><rect x="693.6" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (106 samples, 0.04%)</title><rect x="693.6" y="355.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="696.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 0.04%)</title><rect x="694.0" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 0.04%)</title><rect x="694.0" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (116 samples, 0.04%)</title><rect x="694.0" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (116 samples, 0.04%)</title><rect x="694.0" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (116 samples, 0.04%)</title><rect x="694.0" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (115 samples, 0.04%)</title><rect x="694.0" y="339.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="697.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (69 samples, 0.02%)</title><rect x="694.5" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (69 samples, 0.02%)</title><rect x="694.5" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (69 samples, 0.02%)</title><rect x="694.5" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (69 samples, 0.02%)</title><rect x="694.5" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (69 samples, 0.02%)</title><rect x="694.5" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (82 samples, 0.03%)</title><rect x="694.8" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.03%)</title><rect x="694.8" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.03%)</title><rect x="694.8" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405/227400038.get$Lambda (82 samples, 0.03%)</title><rect x="694.8" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405 (82 samples, 0.03%)</title><rect x="694.8" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="697.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (729 samples, 0.25%)</title><rect x="695.1" y="467.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (307 samples, 0.11%)</title><rect x="695.1" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (210 samples, 0.07%)</title><rect x="695.1" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.1" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (210 samples, 0.07%)</title><rect x="695.1" y="419.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="698.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (97 samples, 0.03%)</title><rect x="696.0" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (97 samples, 0.03%)</title><rect x="696.0" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.0" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (97 samples, 0.03%)</title><rect x="696.0" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="699.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (422 samples, 0.15%)</title><rect x="696.4" y="451.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$250/1111380793.get (422 samples, 0.15%)</title><rect x="696.4" y="435.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (422 samples, 0.15%)</title><rect x="696.4" y="419.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (422 samples, 0.15%)</title><rect x="696.4" y="403.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (420 samples, 0.15%)</title><rect x="696.4" y="387.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.4" y="398.0"></text>
</g>
<g>
<title>byte[] (407 samples, 0.14%)</title><rect x="696.4" y="371.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="699.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$391/625058377.accept (177 samples, 0.06%)</title><rect x="698.1" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (177 samples, 0.06%)</title><rect x="698.1" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$387/771141945.run (177 samples, 0.06%)</title><rect x="698.1" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (177 samples, 0.06%)</title><rect x="698.1" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (177 samples, 0.06%)</title><rect x="698.1" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (177 samples, 0.06%)</title><rect x="698.1" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (177 samples, 0.06%)</title><rect x="698.1" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.1" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (177 samples, 0.06%)</title><rect x="698.1" y="547.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="701.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (347 samples, 0.12%)</title><rect x="698.8" y="675.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.8" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (347 samples, 0.12%)</title><rect x="698.8" y="659.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="701.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (191 samples, 0.07%)</title><rect x="700.2" y="675.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (88 samples, 0.03%)</title><rect x="700.2" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (88 samples, 0.03%)</title><rect x="700.2" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (88 samples, 0.03%)</title><rect x="700.2" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (88 samples, 0.03%)</title><rect x="700.2" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (88 samples, 0.03%)</title><rect x="700.2" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (88 samples, 0.03%)</title><rect x="700.2" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (88 samples, 0.03%)</title><rect x="700.2" y="563.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="703.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (103 samples, 0.04%)</title><rect x="700.6" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (103 samples, 0.04%)</title><rect x="700.6" y="643.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="703.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (603 samples, 0.21%)</title><rect x="701.0" y="675.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$276/960955001.run (285 samples, 0.10%)</title><rect x="701.0" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (285 samples, 0.10%)</title><rect x="701.0" y="643.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (285 samples, 0.10%)</title><rect x="701.0" y="627.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (285 samples, 0.10%)</title><rect x="701.0" y="611.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (285 samples, 0.10%)</title><rect x="701.0" y="595.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (285 samples, 0.10%)</title><rect x="701.0" y="579.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (285 samples, 0.10%)</title><rect x="701.0" y="563.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (285 samples, 0.10%)</title><rect x="701.0" y="547.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (264 samples, 0.09%)</title><rect x="701.0" y="531.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (264 samples, 0.09%)</title><rect x="701.0" y="515.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (170 samples, 0.06%)</title><rect x="701.0" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (170 samples, 0.06%)</title><rect x="701.0" y="483.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (170 samples, 0.06%)</title><rect x="701.0" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (120 samples, 0.04%)</title><rect x="701.0" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (120 samples, 0.04%)</title><rect x="701.0" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.04%)</title><rect x="701.0" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (120 samples, 0.04%)</title><rect x="701.0" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (120 samples, 0.04%)</title><rect x="701.0" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.0" y="398.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.04%)</title><rect x="701.0" y="371.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="704.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (94 samples, 0.03%)</title><rect x="701.7" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (94 samples, 0.03%)</title><rect x="701.7" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (94 samples, 0.03%)</title><rect x="701.7" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (94 samples, 0.03%)</title><rect x="701.7" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (94 samples, 0.03%)</title><rect x="701.7" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (94 samples, 0.03%)</title><rect x="701.7" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (93 samples, 0.03%)</title><rect x="701.7" y="403.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="704.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$289/1211432.run (318 samples, 0.11%)</title><rect x="702.2" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (318 samples, 0.11%)</title><rect x="702.2" y="643.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.04%)</title><rect x="702.2" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.04%)</title><rect x="702.2" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1765573268.get$Lambda (122 samples, 0.04%)</title><rect x="702.2" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$401 (122 samples, 0.04%)</title><rect x="702.2" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="705.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (196 samples, 0.07%)</title><rect x="702.7" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (196 samples, 0.07%)</title><rect x="702.7" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (196 samples, 0.07%)</title><rect x="702.7" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (195 samples, 0.07%)</title><rect x="702.7" y="579.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="705.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (689 samples, 0.24%)</title><rect x="703.5" y="675.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.5" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (108 samples, 0.04%)</title><rect x="703.5" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.5" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (108 samples, 0.04%)</title><rect x="703.5" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.5" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (108 samples, 0.04%)</title><rect x="703.5" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (108 samples, 0.04%)</title><rect x="703.5" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.5" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (108 samples, 0.04%)</title><rect x="703.5" y="595.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="706.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (581 samples, 0.20%)</title><rect x="703.9" y="659.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.03%)</title><rect x="703.9" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.03%)</title><rect x="703.9" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$497/870263673.get$Lambda (85 samples, 0.03%)</title><rect x="703.9" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$497 (85 samples, 0.03%)</title><rect x="703.9" y="595.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="706.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (150 samples, 0.05%)</title><rect x="704.3" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (150 samples, 0.05%)</title><rect x="704.3" y="627.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="707.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (69 samples, 0.02%)</title><rect x="704.9" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.9" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (69 samples, 0.02%)</title><rect x="704.9" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.9" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (69 samples, 0.02%)</title><rect x="704.9" y="611.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="707.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (277 samples, 0.10%)</title><rect x="705.2" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.2" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (137 samples, 0.05%)</title><rect x="705.2" y="627.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="708.2" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (140 samples, 0.05%)</title><rect x="705.7" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.7" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (140 samples, 0.05%)</title><rect x="705.7" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.7" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (140 samples, 0.05%)</title><rect x="705.7" y="595.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="708.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (735 samples, 0.25%)</title><rect x="706.3" y="675.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.02%)</title><rect x="706.3" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.02%)</title><rect x="706.3" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$385/1587615542.get$Lambda (70 samples, 0.02%)</title><rect x="706.3" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$385 (70 samples, 0.02%)</title><rect x="706.3" y="611.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.3" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (383 samples, 0.13%)</title><rect x="706.6" y="659.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (163 samples, 0.06%)</title><rect x="706.6" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (163 samples, 0.06%)</title><rect x="706.6" y="627.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="709.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (220 samples, 0.08%)</title><rect x="707.2" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.2" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (220 samples, 0.08%)</title><rect x="707.2" y="627.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="710.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (282 samples, 0.10%)</title><rect x="708.1" y="659.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.1" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (282 samples, 0.10%)</title><rect x="708.1" y="643.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="711.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (208 samples, 0.07%)</title><rect x="709.3" y="675.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (208 samples, 0.07%)</title><rect x="709.3" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (208 samples, 0.07%)</title><rect x="709.3" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (208 samples, 0.07%)</title><rect x="709.3" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (82 samples, 0.03%)</title><rect x="709.3" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (82 samples, 0.03%)</title><rect x="709.3" y="595.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="712.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (126 samples, 0.04%)</title><rect x="709.6" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (126 samples, 0.04%)</title><rect x="709.6" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (126 samples, 0.04%)</title><rect x="709.6" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (126 samples, 0.04%)</title><rect x="709.6" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (126 samples, 0.04%)</title><rect x="709.6" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (126 samples, 0.04%)</title><rect x="709.6" y="531.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="712.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (76 samples, 0.03%)</title><rect x="710.1" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (76 samples, 0.03%)</title><rect x="710.1" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (76 samples, 0.03%)</title><rect x="710.1" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (76 samples, 0.03%)</title><rect x="710.1" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (73 samples, 0.03%)</title><rect x="710.1" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (73 samples, 0.03%)</title><rect x="710.1" y="595.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="713.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (69 samples, 0.02%)</title><rect x="710.4" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (69 samples, 0.02%)</title><rect x="710.4" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (69 samples, 0.02%)</title><rect x="710.4" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (69 samples, 0.02%)</title><rect x="710.4" y="627.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="713.4" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (117,572 samples, 40.62%)</title><rect x="710.7" y="691.0" width="479.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.7" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,346 samples, 0.81%)</title><rect x="710.7" y="675.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,346 samples, 0.81%)</title><rect x="710.7" y="659.0" width="9.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="713.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (115,226 samples, 39.80%)</title><rect x="720.3" y="675.0" width="469.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.3" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (115,226 samples, 39.80%)</title><rect x="720.3" y="659.0" width="469.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.3" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (115,226 samples, 39.80%)</title><rect x="720.3" y="643.0" width="469.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.3" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (54,354 samples, 18.78%)</title><rect x="720.3" y="627.0" width="221.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.3" y="638.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (54,354 samples, 18.78%)</title><rect x="720.3" y="611.0" width="221.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.3" y="622.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (47,986 samples, 16.58%)</title><rect x="720.3" y="595.0" width="195.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.3" y="606.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,246 samples, 1.12%)</title><rect x="720.3" y="579.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,246 samples, 1.12%)</title><rect x="720.3" y="563.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,246 samples, 1.12%)</title><rect x="720.3" y="547.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,427 samples, 0.49%)</title><rect x="720.3" y="531.0" width="5.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="723.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,819 samples, 0.63%)</title><rect x="726.1" y="531.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.1" y="542.0"></text>
</g>
<g>
<title>byte[] (1,819 samples, 0.63%)</title><rect x="726.1" y="515.0" width="7.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="729.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (44,740 samples, 15.46%)</title><rect x="733.5" y="579.0" width="182.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.5" y="590.0">ru/mail/polis/service/bo..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (4,811 samples, 1.66%)</title><rect x="733.5" y="563.0" width="19.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,310 samples, 1.14%)</title><rect x="733.5" y="547.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,310 samples, 1.14%)</title><rect x="733.5" y="531.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/972466412.get$Lambda (3,310 samples, 1.14%)</title><rect x="733.5" y="515.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.5" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$110 (3,310 samples, 1.14%)</title><rect x="733.5" y="499.0" width="13.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="736.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,501 samples, 0.52%)</title><rect x="747.0" y="547.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,501 samples, 0.52%)</title><rect x="747.0" y="531.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,493 samples, 0.52%)</title><rect x="747.0" y="515.0" width="6.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="750.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (39,929 samples, 13.79%)</title><rect x="753.1" y="563.0" width="162.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.1" y="574.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/util/Set.copyOf (39,929 samples, 13.79%)</title><rect x="753.1" y="547.0" width="162.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.1" y="558.0">java/util/Set.copyOf</text>
</g>
<g>
<title>java.util.HashSet (824 samples, 0.28%)</title><rect x="753.1" y="531.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="756.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7,913 samples, 2.73%)</title><rect x="756.5" y="531.0" width="32.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.5" y="542.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (1,926 samples, 0.67%)</title><rect x="756.5" y="515.0" width="7.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="759.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5,987 samples, 2.07%)</title><rect x="764.4" y="515.0" width="24.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4,633 samples, 1.60%)</title><rect x="764.4" y="499.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.4" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (4,633 samples, 1.60%)</title><rect x="764.4" y="483.0" width="18.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="767.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1,354 samples, 0.47%)</title><rect x="783.2" y="499.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.2" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (1,354 samples, 0.47%)</title><rect x="783.2" y="483.0" width="5.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="786.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (27,804 samples, 9.60%)</title><rect x="788.8" y="531.0" width="113.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.8" y="542.0">java/util/Hash..</text>
</g>
<g>
<title>java.util.HashMap (5,368 samples, 1.85%)</title><rect x="788.8" y="515.0" width="21.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="791.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (22,436 samples, 7.75%)</title><rect x="810.6" y="515.0" width="91.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.6" y="526.0">java/util/A..</text>
</g>
<g>
<title>java/util/HashSet.add (20,422 samples, 7.05%)</title><rect x="810.6" y="499.0" width="83.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.6" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap.put (20,422 samples, 7.05%)</title><rect x="810.6" y="483.0" width="83.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.6" y="494.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap.putVal (20,422 samples, 7.05%)</title><rect x="810.6" y="467.0" width="83.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.6" y="478.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap.newNode (10,341 samples, 3.57%)</title><rect x="810.6" y="451.0" width="42.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.6" y="462.0">java..</text>
</g>
<g>
<title>java.util.HashMap$Node (10,341 samples, 3.57%)</title><rect x="810.6" y="435.0" width="42.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="813.6" y="446.0">java..</text>
</g>
<g>
<title>java/util/HashMap.resize (10,081 samples, 3.48%)</title><rect x="852.8" y="451.0" width="41.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.8" y="462.0">jav..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (6,594 samples, 2.28%)</title><rect x="852.8" y="435.0" width="26.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="855.8" y="446.0">j..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (3,487 samples, 1.20%)</title><rect x="879.7" y="435.0" width="14.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="882.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2,014 samples, 0.70%)</title><rect x="893.9" y="499.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2,014 samples, 0.70%)</title><rect x="893.9" y="483.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2,014 samples, 0.70%)</title><rect x="893.9" y="467.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2,014 samples, 0.70%)</title><rect x="893.9" y="451.0" width="8.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="896.9" y="462.0"></text>
</g>
<g>
<title>java/util/Set.of (3,388 samples, 1.17%)</title><rect x="902.1" y="531.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.1" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (1,465 samples, 0.51%)</title><rect x="902.1" y="515.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="905.1" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,923 samples, 0.66%)</title><rect x="908.1" y="515.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,923 samples, 0.66%)</title><rect x="908.1" y="499.0" width="7.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="911.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6,368 samples, 2.20%)</title><rect x="915.9" y="595.0" width="26.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.9" y="606.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (6,368 samples, 2.20%)</title><rect x="915.9" y="579.0" width="26.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.9" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,368 samples, 2.20%)</title><rect x="915.9" y="563.0" width="26.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.9" y="574.0">j..</text>
</g>
<g>
<title>java.lang.String (1,605 samples, 0.55%)</title><rect x="915.9" y="547.0" width="6.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="918.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,763 samples, 1.65%)</title><rect x="922.5" y="547.0" width="19.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.5" y="558.0"></text>
</g>
<g>
<title>byte[] (4,763 samples, 1.65%)</title><rect x="922.5" y="531.0" width="19.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="925.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (24,019 samples, 8.30%)</title><rect x="941.9" y="627.0" width="97.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.9" y="638.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (4,551 samples, 1.57%)</title><rect x="941.9" y="611.0" width="18.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="944.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6,407 samples, 2.21%)</title><rect x="960.4" y="611.0" width="26.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.4" y="622.0">o..</text>
</g>
<g>
<title>java.lang.String[] (3,118 samples, 1.08%)</title><rect x="960.4" y="595.0" width="12.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="963.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (3,289 samples, 1.14%)</title><rect x="973.1" y="595.0" width="13.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="976.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,061 samples, 4.51%)</title><rect x="986.5" y="611.0" width="53.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.5" y="622.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,061 samples, 4.51%)</title><rect x="986.5" y="595.0" width="53.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.5" y="606.0">one/n..</text>
</g>
<g>
<title>char[] (6,115 samples, 2.11%)</title><rect x="986.5" y="579.0" width="25.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="989.5" y="590.0">c..</text>
</g>
<g>
<title>char[] (739 samples, 0.26%)</title><rect x="1011.5" y="579.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (2,798 samples, 0.97%)</title><rect x="1014.5" y="579.0" width="11.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1017.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,409 samples, 1.18%)</title><rect x="1025.9" y="579.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,409 samples, 1.18%)</title><rect x="1025.9" y="563.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1028.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,409 samples, 1.18%)</title><rect x="1025.9" y="547.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1028.9" y="558.0"></text>
</g>
<g>
<title>byte[] (3,409 samples, 1.18%)</title><rect x="1025.9" y="531.0" width="13.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1028.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (783 samples, 0.27%)</title><rect x="1039.8" y="627.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.8" y="638.0"></text>
</g>
<g>
<title>byte[] (783 samples, 0.27%)</title><rect x="1039.8" y="611.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1042.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,211 samples, 0.76%)</title><rect x="1043.0" y="627.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,211 samples, 0.76%)</title><rect x="1043.0" y="611.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,211 samples, 0.76%)</title><rect x="1043.0" y="595.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1,179 samples, 0.41%)</title><rect x="1043.0" y="579.0" width="4.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1046.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,032 samples, 0.36%)</title><rect x="1047.8" y="579.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.8" y="590.0"></text>
</g>
<g>
<title>byte[] (1,032 samples, 0.36%)</title><rect x="1047.8" y="563.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1050.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33,859 samples, 11.70%)</title><rect x="1052.0" y="627.0" width="138.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.0" y="638.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (33,859 samples, 11.70%)</title><rect x="1052.0" y="611.0" width="138.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.0" y="622.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (11,928 samples, 4.12%)</title><rect x="1052.0" y="595.0" width="48.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1055.0" y="606.0">char[]</text>
</g>
<g>
<title>char[] (3,210 samples, 1.11%)</title><rect x="1100.6" y="595.0" width="13.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1103.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (7,893 samples, 2.73%)</title><rect x="1113.7" y="595.0" width="32.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1116.7" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,828 samples, 3.74%)</title><rect x="1145.9" y="595.0" width="44.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.9" y="606.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,828 samples, 3.74%)</title><rect x="1145.9" y="579.0" width="44.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.9" y="590.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10,828 samples, 3.74%)</title><rect x="1145.9" y="563.0" width="44.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.9" y="574.0">java..</text>
</g>
<g>
<title>byte[] (10,807 samples, 3.73%)</title><rect x="1145.9" y="547.0" width="44.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1148.9" y="558.0">byte[]</text>
</g>
</g>
</svg>
