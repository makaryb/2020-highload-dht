<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (1,768,196 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (959,930 samples, 54.29%)</title><rect x="10.0" y="803.0" width="640.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (959,930 samples, 54.29%)</title><rect x="10.0" y="787.0" width="640.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (959,930 samples, 54.29%)</title><rect x="10.0" y="771.0" width="640.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (132,422 samples, 7.49%)</title><rect x="10.0" y="755.0" width="88.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$438/2076361235.run (132,422 samples, 7.49%)</title><rect x="10.0" y="739.0" width="88.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="750.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doUpsert$11 (132,422 samples, 7.49%)</title><rect x="10.0" y="723.0" width="88.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="734.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (11,405 samples, 0.65%)</title><rect x="10.0" y="707.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11,405 samples, 0.65%)</title><rect x="10.0" y="691.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11,405 samples, 0.65%)</title><rect x="10.0" y="675.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11,405 samples, 0.65%)</title><rect x="10.0" y="659.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>byte[] (11,405 samples, 0.65%)</title><rect x="10.0" y="643.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17,303 samples, 0.98%)</title><rect x="17.6" y="707.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17,303 samples, 0.98%)</title><rect x="17.6" y="691.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.6" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17,303 samples, 0.98%)</title><rect x="17.6" y="675.0" width="11.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="20.6" y="686.0"></text>
</g>
<g>
<title>one.nio.http.Response (6,128 samples, 0.35%)</title><rect x="29.2" y="707.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="32.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (24,238 samples, 1.37%)</title><rect x="33.2" y="707.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.2" y="718.0"></text>
</g>
<g>
<title>byte[] (9,527 samples, 0.54%)</title><rect x="33.2" y="691.0" width="6.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="36.2" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (7,662 samples, 0.43%)</title><rect x="39.6" y="691.0" width="5.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="42.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (7,049 samples, 0.40%)</title><rect x="44.7" y="691.0" width="4.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="47.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (34,271 samples, 1.94%)</title><rect x="49.4" y="707.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.4" y="718.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (32,470 samples, 1.84%)</title><rect x="49.6" y="691.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.6" y="702.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25,955 samples, 1.47%)</title><rect x="49.6" y="675.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.6" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25,955 samples, 1.47%)</title><rect x="49.6" y="659.0" width="17.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="52.6" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (6,366 samples, 0.36%)</title><rect x="67.0" y="675.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="70.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.flush (1,519 samples, 0.09%)</title><rect x="71.3" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.writeData (1,511 samples, 0.09%)</title><rect x="71.3" y="675.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (910 samples, 0.05%)</title><rect x="71.4" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (531 samples, 0.03%)</title><rect x="71.4" y="643.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="74.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (379 samples, 0.02%)</title><rect x="71.7" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.7" y="654.0"></text>
</g>
<g>
<title>byte[] (379 samples, 0.02%)</title><rect x="71.7" y="627.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="74.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (39,077 samples, 2.21%)</title><rect x="72.3" y="707.0" width="26.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.3" y="718.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39,077 samples, 2.21%)</title><rect x="72.3" y="691.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.3" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (39,077 samples, 2.21%)</title><rect x="72.3" y="675.0" width="26.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.3" y="686.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24,537 samples, 1.39%)</title><rect x="72.3" y="659.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.3" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24,537 samples, 1.39%)</title><rect x="72.3" y="643.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.3" y="654.0"></text>
</g>
<g>
<title>byte[] (11,982 samples, 0.68%)</title><rect x="72.3" y="627.0" width="8.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="75.3" y="638.0"></text>
</g>
<g>
<title>byte[] (12,555 samples, 0.71%)</title><rect x="80.3" y="627.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.3" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14,540 samples, 0.82%)</title><rect x="88.7" y="659.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.7" y="670.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14,540 samples, 0.82%)</title><rect x="88.7" y="643.0" width="9.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="91.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (474,298 samples, 26.82%)</title><rect x="98.4" y="755.0" width="316.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.4" y="766.0">java/util/concurrent/CompletableFuture$Asyn..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (465,340 samples, 26.32%)</title><rect x="98.4" y="739.0" width="310.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.4" y="750.0">java/util/concurrent/CompletableFuture.pos..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (465,340 samples, 26.32%)</title><rect x="98.4" y="723.0" width="310.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.4" y="734.0">java/util/concurrent/CompletableFuture$Uni..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2,475 samples, 0.14%)</title><rect x="98.4" y="707.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="101.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/63339538.apply (160,418 samples, 9.07%)</title><rect x="100.0" y="707.0" width="107.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.0" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (160,418 samples, 9.07%)</title><rect x="100.0" y="691.0" width="107.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.0" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (160,418 samples, 9.07%)</title><rect x="100.0" y="675.0" width="107.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.0" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,314 samples, 0.07%)</title><rect x="100.0" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,314 samples, 0.07%)</title><rect x="100.0" y="643.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/137991968.get$Lambda (775 samples, 0.04%)</title><rect x="100.0" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$376 (775 samples, 0.04%)</title><rect x="100.0" y="611.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="103.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/905457088.get$Lambda (539 samples, 0.03%)</title><rect x="100.5" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$380 (539 samples, 0.03%)</title><rect x="100.5" y="611.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="103.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,313 samples, 0.13%)</title><rect x="100.9" y="659.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,313 samples, 0.13%)</title><rect x="100.9" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1,324 samples, 0.07%)</title><rect x="100.9" y="627.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="103.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (989 samples, 0.06%)</title><rect x="101.8" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (989 samples, 0.06%)</title><rect x="101.8" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (989 samples, 0.06%)</title><rect x="101.8" y="595.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="104.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,600 samples, 0.26%)</title><rect x="102.4" y="659.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,600 samples, 0.26%)</title><rect x="102.4" y="643.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2,602 samples, 0.15%)</title><rect x="102.4" y="627.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="105.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,998 samples, 0.11%)</title><rect x="104.2" y="627.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,998 samples, 0.11%)</title><rect x="104.2" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,998 samples, 0.11%)</title><rect x="104.2" y="595.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="107.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (152,191 samples, 8.61%)</title><rect x="105.5" y="659.0" width="101.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.5" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (152,191 samples, 8.61%)</title><rect x="105.5" y="643.0" width="101.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.5" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (152,191 samples, 8.61%)</title><rect x="105.5" y="627.0" width="101.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.5" y="638.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,483 samples, 0.14%)</title><rect x="105.5" y="611.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,483 samples, 0.14%)</title><rect x="105.5" y="595.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/885000023.get$Lambda (887 samples, 0.05%)</title><rect x="105.5" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$211 (887 samples, 0.05%)</title><rect x="105.5" y="563.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="108.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.get$Lambda (789 samples, 0.04%)</title><rect x="106.1" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$212 (789 samples, 0.04%)</title><rect x="106.1" y="563.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="109.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$323/1204452569.get$Lambda (807 samples, 0.05%)</title><rect x="106.6" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$323 (807 samples, 0.05%)</title><rect x="106.6" y="563.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="109.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (105,940 samples, 5.99%)</title><rect x="107.2" y="611.0" width="70.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.2" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (105,940 samples, 5.99%)</title><rect x="107.2" y="595.0" width="70.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.2" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (104,925 samples, 5.93%)</title><rect x="107.2" y="579.0" width="70.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.2" y="590.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$323/1204452569.apply (104,925 samples, 5.93%)</title><rect x="107.2" y="563.0" width="70.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.2" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (104,925 samples, 5.93%)</title><rect x="107.2" y="547.0" width="70.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.2" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (104,925 samples, 5.93%)</title><rect x="107.2" y="531.0" width="70.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.2" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.apply (104,925 samples, 5.93%)</title><rect x="107.2" y="515.0" width="70.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.2" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (104,925 samples, 5.93%)</title><rect x="107.2" y="499.0" width="70.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.2" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (790 samples, 0.04%)</title><rect x="107.2" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (790 samples, 0.04%)</title><rect x="107.2" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$371/1785628412.get$Lambda (790 samples, 0.04%)</title><rect x="107.2" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$371 (790 samples, 0.04%)</title><rect x="107.2" y="435.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="110.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,375 samples, 0.13%)</title><rect x="107.7" y="483.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,375 samples, 0.13%)</title><rect x="107.7" y="467.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (1,374 samples, 0.08%)</title><rect x="107.7" y="451.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="110.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (991 samples, 0.06%)</title><rect x="108.6" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (991 samples, 0.06%)</title><rect x="108.6" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (991 samples, 0.06%)</title><rect x="108.6" y="419.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="111.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,385 samples, 0.13%)</title><rect x="109.3" y="483.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,385 samples, 0.13%)</title><rect x="109.3" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,308 samples, 0.07%)</title><rect x="109.3" y="451.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="112.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,076 samples, 0.06%)</title><rect x="110.2" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,076 samples, 0.06%)</title><rect x="110.2" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,076 samples, 0.06%)</title><rect x="110.2" y="419.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="113.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (99,375 samples, 5.62%)</title><rect x="110.9" y="483.0" width="66.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.9" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,070 samples, 0.06%)</title><rect x="110.9" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,070 samples, 0.06%)</title><rect x="110.9" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$368/1963220307.get$Lambda (547 samples, 0.03%)</title><rect x="110.9" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$368 (547 samples, 0.03%)</title><rect x="110.9" y="419.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="113.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$370/398808880.get$Lambda (523 samples, 0.03%)</title><rect x="111.2" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$370 (523 samples, 0.03%)</title><rect x="111.2" y="419.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="114.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (81,386 samples, 4.60%)</title><rect x="111.6" y="467.0" width="54.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.6" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (81,386 samples, 4.60%)</title><rect x="111.6" y="451.0" width="54.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.6" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,069 samples, 0.06%)</title><rect x="111.6" y="435.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="114.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$368/1963220307.apply (78,158 samples, 4.42%)</title><rect x="112.3" y="435.0" width="52.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.3" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (78,158 samples, 4.42%)</title><rect x="112.3" y="419.0" width="52.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.3" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (489 samples, 0.03%)</title><rect x="112.3" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (489 samples, 0.03%)</title><rect x="112.3" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$392/1255367607.get$Lambda (489 samples, 0.03%)</title><rect x="112.3" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$392 (489 samples, 0.03%)</title><rect x="112.3" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="115.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,438 samples, 0.14%)</title><rect x="112.6" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,438 samples, 0.14%)</title><rect x="112.6" y="387.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,381 samples, 0.08%)</title><rect x="112.6" y="371.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="115.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,057 samples, 0.06%)</title><rect x="113.6" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,057 samples, 0.06%)</title><rect x="113.6" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,057 samples, 0.06%)</title><rect x="113.6" y="339.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="116.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,038 samples, 0.06%)</title><rect x="114.3" y="403.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="117.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,551 samples, 0.09%)</title><rect x="114.9" y="403.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (801 samples, 0.05%)</title><rect x="114.9" y="387.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="117.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (750 samples, 0.04%)</title><rect x="115.5" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (750 samples, 0.04%)</title><rect x="115.5" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (750 samples, 0.04%)</title><rect x="115.5" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (750 samples, 0.04%)</title><rect x="115.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (750 samples, 0.04%)</title><rect x="115.5" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (750 samples, 0.04%)</title><rect x="115.5" y="307.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="118.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2,666 samples, 0.15%)</title><rect x="116.0" y="403.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2,666 samples, 0.15%)</title><rect x="116.0" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (888 samples, 0.05%)</title><rect x="116.0" y="371.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (888 samples, 0.05%)</title><rect x="116.0" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (888 samples, 0.05%)</title><rect x="116.0" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (888 samples, 0.05%)</title><rect x="116.0" y="323.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="119.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1,778 samples, 0.10%)</title><rect x="116.6" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1,778 samples, 0.10%)</title><rect x="116.6" y="355.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (1,295 samples, 0.07%)</title><rect x="116.6" y="339.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="119.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (482 samples, 0.03%)</title><rect x="117.4" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (482 samples, 0.03%)</title><rect x="117.4" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="120.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (69,976 samples, 3.96%)</title><rect x="117.8" y="403.0" width="46.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.8" y="414.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (804 samples, 0.05%)</title><rect x="117.8" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="120.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1,551 samples, 0.09%)</title><rect x="118.3" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.3" y="398.0"></text>
</g>
<g>
<title>byte[] (776 samples, 0.04%)</title><rect x="118.3" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="121.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String (775 samples, 0.04%)</title><rect x="118.8" y="371.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="121.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5,674 samples, 0.32%)</title><rect x="119.3" y="387.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5,674 samples, 0.32%)</title><rect x="119.3" y="371.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (5,674 samples, 0.32%)</title><rect x="119.3" y="355.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.3" y="366.0"></text>
</g>
<g>
<title>byte[] (5,673 samples, 0.32%)</title><rect x="119.3" y="339.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="122.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2,578 samples, 0.15%)</title><rect x="123.1" y="387.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.1" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2,578 samples, 0.15%)</title><rect x="123.1" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.1" y="382.0"></text>
</g>
<g>
<title>byte[] (2,578 samples, 0.15%)</title><rect x="123.1" y="355.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="126.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,889 samples, 0.28%)</title><rect x="124.8" y="387.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,889 samples, 0.28%)</title><rect x="124.8" y="371.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,889 samples, 0.28%)</title><rect x="124.8" y="355.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.8" y="366.0"></text>
</g>
<g>
<title>byte[] (4,888 samples, 0.28%)</title><rect x="124.8" y="339.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="127.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,565 samples, 0.09%)</title><rect x="128.1" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,565 samples, 0.09%)</title><rect x="128.1" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.1" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,565 samples, 0.09%)</title><rect x="128.1" y="355.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="131.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (757 samples, 0.04%)</title><rect x="129.1" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (757 samples, 0.04%)</title><rect x="129.1" y="371.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="132.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (41,508 samples, 2.35%)</title><rect x="129.7" y="387.0" width="27.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (803 samples, 0.05%)</title><rect x="129.7" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (803 samples, 0.05%)</title><rect x="129.7" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (803 samples, 0.05%)</title><rect x="129.7" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.7" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1862624918.get$Lambda (803 samples, 0.05%)</title><rect x="129.7" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.7" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$396 (803 samples, 0.05%)</title><rect x="129.7" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="132.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (23,087 samples, 1.31%)</title><rect x="130.2" y="371.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14,155 samples, 0.80%)</title><rect x="130.2" y="355.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.2" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (14,155 samples, 0.80%)</title><rect x="130.2" y="339.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.2" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (14,155 samples, 0.80%)</title><rect x="130.2" y="323.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14,155 samples, 0.80%)</title><rect x="130.2" y="307.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.2" y="318.0"></text>
</g>
<g>
<title>byte[] (13,457 samples, 0.76%)</title><rect x="130.2" y="291.0" width="9.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="133.2" y="302.0"></text>
</g>
<g>
<title>byte[] (698 samples, 0.04%)</title><rect x="139.2" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="142.2" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (2,070 samples, 0.12%)</title><rect x="139.6" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.6" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (2,070 samples, 0.12%)</title><rect x="139.6" y="339.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2,070 samples, 0.12%)</title><rect x="139.6" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (2,070 samples, 0.12%)</title><rect x="139.6" y="307.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="142.6" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (2,118 samples, 0.12%)</title><rect x="141.0" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.0" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (1,056 samples, 0.06%)</title><rect x="141.0" y="339.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="144.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1,062 samples, 0.06%)</title><rect x="141.7" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1,062 samples, 0.06%)</title><rect x="141.7" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="144.7" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1862624918.test (4,744 samples, 0.27%)</title><rect x="142.4" y="355.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.4" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4,744 samples, 0.27%)</title><rect x="142.4" y="339.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (4,744 samples, 0.27%)</title><rect x="142.4" y="323.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (4,744 samples, 0.27%)</title><rect x="142.4" y="307.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.4" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (4,744 samples, 0.27%)</title><rect x="142.4" y="291.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.4" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (4,744 samples, 0.27%)</title><rect x="142.4" y="275.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (4,744 samples, 0.27%)</title><rect x="142.4" y="259.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (4,744 samples, 0.27%)</title><rect x="142.4" y="243.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,744 samples, 0.27%)</title><rect x="142.4" y="227.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,744 samples, 0.27%)</title><rect x="142.4" y="211.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (2,476 samples, 0.14%)</title><rect x="142.4" y="195.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="145.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,268 samples, 0.13%)</title><rect x="144.1" y="195.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.1" y="206.0"></text>
</g>
<g>
<title>byte[] (2,268 samples, 0.13%)</title><rect x="144.1" y="179.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="147.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (17,618 samples, 1.00%)</title><rect x="145.6" y="371.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17,618 samples, 1.00%)</title><rect x="145.6" y="355.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (17,618 samples, 1.00%)</title><rect x="145.6" y="339.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.6" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (520 samples, 0.03%)</title><rect x="145.6" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="148.6" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (764 samples, 0.04%)</title><rect x="145.9" y="323.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="148.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,518 samples, 0.09%)</title><rect x="146.5" y="323.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="149.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (543 samples, 0.03%)</title><rect x="147.5" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="150.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,040 samples, 0.06%)</title><rect x="147.8" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,040 samples, 0.06%)</title><rect x="147.8" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.get$Lambda (1,040 samples, 0.06%)</title><rect x="147.8" y="291.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.8" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (1,040 samples, 0.06%)</title><rect x="147.8" y="275.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="150.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1,069 samples, 0.06%)</title><rect x="148.5" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.5" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1,069 samples, 0.06%)</title><rect x="148.5" y="307.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="151.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (10,589 samples, 0.60%)</title><rect x="149.2" y="323.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (10,589 samples, 0.60%)</title><rect x="149.2" y="307.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10,589 samples, 0.60%)</title><rect x="149.2" y="291.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,895 samples, 0.11%)</title><rect x="149.2" y="275.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (1,895 samples, 0.11%)</title><rect x="149.2" y="259.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,895 samples, 0.11%)</title><rect x="149.2" y="243.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,895 samples, 0.11%)</title><rect x="149.2" y="227.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,895 samples, 0.11%)</title><rect x="149.2" y="211.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,895 samples, 0.11%)</title><rect x="149.2" y="195.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,895 samples, 0.11%)</title><rect x="149.2" y="179.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,895 samples, 0.11%)</title><rect x="149.2" y="163.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,895 samples, 0.11%)</title><rect x="149.2" y="147.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="152.2" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4,743 samples, 0.27%)</title><rect x="150.5" y="275.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4,743 samples, 0.27%)</title><rect x="150.5" y="259.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2,353 samples, 0.13%)</title><rect x="150.5" y="243.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,353 samples, 0.13%)</title><rect x="150.5" y="227.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,353 samples, 0.13%)</title><rect x="150.5" y="211.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="153.5" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (2,390 samples, 0.14%)</title><rect x="152.1" y="243.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.1" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2,390 samples, 0.14%)</title><rect x="152.1" y="227.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="155.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3,951 samples, 0.22%)</title><rect x="153.7" y="275.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3,951 samples, 0.22%)</title><rect x="153.7" y="259.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="156.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,575 samples, 0.09%)</title><rect x="156.3" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,575 samples, 0.09%)</title><rect x="156.3" y="307.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="159.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2,613 samples, 0.15%)</title><rect x="157.4" y="387.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (762 samples, 0.04%)</title><rect x="157.4" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.4" y="382.0"></text>
</g>
<g>
<title>byte[] (762 samples, 0.04%)</title><rect x="157.4" y="355.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="160.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,851 samples, 0.10%)</title><rect x="157.9" y="371.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,851 samples, 0.10%)</title><rect x="157.9" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (1,851 samples, 0.10%)</title><rect x="157.9" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,851 samples, 0.10%)</title><rect x="157.9" y="323.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (758 samples, 0.04%)</title><rect x="157.9" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (758 samples, 0.04%)</title><rect x="157.9" y="291.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="160.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,093 samples, 0.06%)</title><rect x="158.4" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,093 samples, 0.06%)</title><rect x="158.4" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.4" y="302.0"></text>
</g>
<g>
<title>byte[] (1,093 samples, 0.06%)</title><rect x="158.4" y="275.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="161.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2,104 samples, 0.12%)</title><rect x="159.1" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2,104 samples, 0.12%)</title><rect x="159.1" y="371.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,104 samples, 0.12%)</title><rect x="159.1" y="355.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2,104 samples, 0.12%)</title><rect x="159.1" y="339.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/128359175.invoke (2,104 samples, 0.12%)</title><rect x="159.1" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,104 samples, 0.12%)</title><rect x="159.1" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (783 samples, 0.04%)</title><rect x="159.1" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.1" y="302.0"></text>
</g>
<g>
<title>java.lang.String (783 samples, 0.04%)</title><rect x="159.1" y="275.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="162.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,321 samples, 0.07%)</title><rect x="159.6" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,321 samples, 0.07%)</title><rect x="159.6" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.6" y="286.0"></text>
</g>
<g>
<title>byte[] (1,321 samples, 0.07%)</title><rect x="159.6" y="259.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="162.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5,933 samples, 0.34%)</title><rect x="160.5" y="387.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.5" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,573 samples, 0.09%)</title><rect x="160.5" y="371.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="163.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,591 samples, 0.09%)</title><rect x="161.6" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,591 samples, 0.09%)</title><rect x="161.6" y="355.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="164.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,769 samples, 0.16%)</title><rect x="162.6" y="371.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,769 samples, 0.16%)</title><rect x="162.6" y="355.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="165.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,157 samples, 0.12%)</title><rect x="164.5" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,157 samples, 0.12%)</title><rect x="164.5" y="419.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,157 samples, 0.12%)</title><rect x="164.5" y="403.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="167.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (2,985 samples, 0.17%)</title><rect x="165.9" y="467.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="168.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,080 samples, 0.06%)</title><rect x="167.9" y="467.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="170.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (12,853 samples, 0.73%)</title><rect x="168.6" y="467.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,100 samples, 0.06%)</title><rect x="168.6" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,100 samples, 0.06%)</title><rect x="168.6" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$331/827520910.get$Lambda (548 samples, 0.03%)</title><rect x="168.6" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$331 (548 samples, 0.03%)</title><rect x="168.6" y="403.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="171.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$335/425638179.get$Lambda (552 samples, 0.03%)</title><rect x="169.0" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$335 (552 samples, 0.03%)</title><rect x="169.0" y="403.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="172.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (1,281 samples, 0.07%)</title><rect x="169.3" y="451.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="172.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (1,031 samples, 0.06%)</title><rect x="170.2" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="173.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (1,338 samples, 0.08%)</title><rect x="170.9" y="451.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="173.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3,634 samples, 0.21%)</title><rect x="171.8" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,634 samples, 0.21%)</title><rect x="171.8" y="435.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,634 samples, 0.21%)</title><rect x="171.8" y="419.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,634 samples, 0.21%)</title><rect x="171.8" y="403.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,634 samples, 0.21%)</title><rect x="171.8" y="387.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,634 samples, 0.21%)</title><rect x="171.8" y="371.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (3,634 samples, 0.21%)</title><rect x="171.8" y="355.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,634 samples, 0.21%)</title><rect x="171.8" y="339.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3,634 samples, 0.21%)</title><rect x="171.8" y="323.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,324 samples, 0.07%)</title><rect x="171.8" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,324 samples, 0.07%)</title><rect x="171.8" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1636786673.get$Lambda (536 samples, 0.03%)</title><rect x="171.8" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$343 (536 samples, 0.03%)</title><rect x="171.8" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="174.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$348/1253487553.get$Lambda (788 samples, 0.04%)</title><rect x="172.1" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$348 (788 samples, 0.04%)</title><rect x="172.1" y="259.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="175.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1,000 samples, 0.06%)</title><rect x="172.7" y="307.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="175.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1,310 samples, 0.07%)</title><rect x="173.3" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1,310 samples, 0.07%)</title><rect x="173.3" y="291.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (516 samples, 0.03%)</title><rect x="173.3" y="275.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="176.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (794 samples, 0.04%)</title><rect x="173.7" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (794 samples, 0.04%)</title><rect x="173.7" y="259.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="176.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (3,401 samples, 0.19%)</title><rect x="174.2" y="451.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.2" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (794 samples, 0.04%)</title><rect x="174.2" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="177.2" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (1,580 samples, 0.09%)</title><rect x="174.7" y="435.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="177.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,027 samples, 0.06%)</title><rect x="175.8" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.8" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,027 samples, 0.06%)</title><rect x="175.8" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.8" y="430.0"></text>
</g>
<g>
<title>byte[] (1,027 samples, 0.06%)</title><rect x="175.8" y="403.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="178.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (1,068 samples, 0.06%)</title><rect x="176.5" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,068 samples, 0.06%)</title><rect x="176.5" y="435.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="179.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,015 samples, 0.06%)</title><rect x="177.2" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,015 samples, 0.06%)</title><rect x="177.2" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,015 samples, 0.06%)</title><rect x="177.2" y="547.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="180.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,065 samples, 0.12%)</title><rect x="177.9" y="611.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,065 samples, 0.12%)</title><rect x="177.9" y="595.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,019 samples, 0.06%)</title><rect x="177.9" y="579.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="180.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,046 samples, 0.06%)</title><rect x="178.5" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,046 samples, 0.06%)</title><rect x="178.5" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,046 samples, 0.06%)</title><rect x="178.5" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="181.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (41,703 samples, 2.36%)</title><rect x="179.2" y="611.0" width="27.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.2" y="622.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,340 samples, 0.08%)</title><rect x="179.2" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,340 samples, 0.08%)</title><rect x="179.2" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/637941596.get$Lambda (779 samples, 0.04%)</title><rect x="179.2" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$315 (779 samples, 0.04%)</title><rect x="179.2" y="547.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="182.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$320/57313921.get$Lambda (561 samples, 0.03%)</title><rect x="179.8" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$320 (561 samples, 0.03%)</title><rect x="179.8" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="182.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,061 samples, 0.12%)</title><rect x="180.1" y="595.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,061 samples, 0.12%)</title><rect x="180.1" y="579.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$320/57313921.apply (1,007 samples, 0.06%)</title><rect x="180.1" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1,007 samples, 0.06%)</title><rect x="180.1" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,007 samples, 0.06%)</title><rect x="180.1" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,007 samples, 0.06%)</title><rect x="180.1" y="515.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="183.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,054 samples, 0.06%)</title><rect x="180.8" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,054 samples, 0.06%)</title><rect x="180.8" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,054 samples, 0.06%)</title><rect x="180.8" y="531.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="183.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,054 samples, 0.06%)</title><rect x="181.5" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,054 samples, 0.06%)</title><rect x="181.5" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,054 samples, 0.06%)</title><rect x="181.5" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,054 samples, 0.06%)</title><rect x="181.5" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,054 samples, 0.06%)</title><rect x="181.5" y="531.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="184.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (37,248 samples, 2.11%)</title><rect x="182.2" y="595.0" width="24.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.2" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (37,248 samples, 2.11%)</title><rect x="182.2" y="579.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.2" y="590.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (3,029 samples, 0.17%)</title><rect x="182.2" y="563.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="185.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (33,155 samples, 1.88%)</title><rect x="184.2" y="563.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.2" y="574.0">j..</text>
</g>
<g>
<title>java.lang.Object (546 samples, 0.03%)</title><rect x="184.2" y="547.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="187.2" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (1,060 samples, 0.06%)</title><rect x="184.6" y="547.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="187.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (852 samples, 0.05%)</title><rect x="185.3" y="547.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="188.3" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,558 samples, 0.09%)</title><rect x="185.9" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.9" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,558 samples, 0.09%)</title><rect x="185.9" y="531.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.9" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,558 samples, 0.09%)</title><rect x="185.9" y="515.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="188.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (857 samples, 0.05%)</title><rect x="186.9" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (857 samples, 0.05%)</title><rect x="186.9" y="531.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="189.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (2,331 samples, 0.13%)</title><rect x="187.5" y="547.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="190.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (1,600 samples, 0.09%)</title><rect x="189.0" y="547.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="192.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (1,877 samples, 0.11%)</title><rect x="190.1" y="547.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="193.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,170 samples, 0.12%)</title><rect x="191.4" y="547.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="194.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (9,985 samples, 0.56%)</title><rect x="192.8" y="547.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (832 samples, 0.05%)</title><rect x="192.8" y="531.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="195.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (520 samples, 0.03%)</title><rect x="193.4" y="531.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="196.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (803 samples, 0.05%)</title><rect x="193.7" y="531.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="196.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (521 samples, 0.03%)</title><rect x="194.3" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="197.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (523 samples, 0.03%)</title><rect x="194.6" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (523 samples, 0.03%)</title><rect x="194.6" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.get$Lambda (523 samples, 0.03%)</title><rect x="194.6" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$309 (523 samples, 0.03%)</title><rect x="194.6" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="197.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (837 samples, 0.05%)</title><rect x="195.0" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (837 samples, 0.05%)</title><rect x="195.0" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="198.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (779 samples, 0.04%)</title><rect x="195.5" y="531.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="198.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,081 samples, 0.06%)</title><rect x="196.0" y="531.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="199.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (4,089 samples, 0.23%)</title><rect x="196.8" y="531.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (837 samples, 0.05%)</title><rect x="196.8" y="515.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="199.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1,074 samples, 0.06%)</title><rect x="197.3" y="515.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="200.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (554 samples, 0.03%)</title><rect x="198.0" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (554 samples, 0.03%)</title><rect x="198.0" y="499.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="201.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1,624 samples, 0.09%)</title><rect x="198.4" y="515.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (541 samples, 0.03%)</title><rect x="198.4" y="499.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="201.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (510 samples, 0.03%)</title><rect x="198.8" y="499.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="201.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (573 samples, 0.03%)</title><rect x="199.1" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="202.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (6,329 samples, 0.36%)</title><rect x="199.5" y="547.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (524 samples, 0.03%)</title><rect x="199.5" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="202.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (540 samples, 0.03%)</title><rect x="199.8" y="531.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="202.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (515 samples, 0.03%)</title><rect x="200.2" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="203.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (811 samples, 0.05%)</title><rect x="200.5" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (811 samples, 0.05%)</title><rect x="200.5" y="515.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="203.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (3,939 samples, 0.22%)</title><rect x="201.1" y="531.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (795 samples, 0.04%)</title><rect x="201.1" y="515.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="204.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1,037 samples, 0.06%)</title><rect x="201.6" y="515.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="204.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (532 samples, 0.03%)</title><rect x="202.3" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (532 samples, 0.03%)</title><rect x="202.3" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="205.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1,575 samples, 0.09%)</title><rect x="202.7" y="515.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (501 samples, 0.03%)</title><rect x="202.7" y="499.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="205.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (533 samples, 0.03%)</title><rect x="203.0" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="206.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (541 samples, 0.03%)</title><rect x="203.3" y="499.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="206.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (948 samples, 0.05%)</title><rect x="203.7" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (944 samples, 0.05%)</title><rect x="203.7" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (944 samples, 0.05%)</title><rect x="203.7" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (944 samples, 0.05%)</title><rect x="203.7" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (944 samples, 0.05%)</title><rect x="203.7" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (944 samples, 0.05%)</title><rect x="203.7" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (944 samples, 0.05%)</title><rect x="203.7" y="451.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="206.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (3,042 samples, 0.17%)</title><rect x="204.3" y="547.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (781 samples, 0.04%)</title><rect x="204.3" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (781 samples, 0.04%)</title><rect x="204.3" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$233/1238270558.get$Lambda (781 samples, 0.04%)</title><rect x="204.3" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$233 (781 samples, 0.04%)</title><rect x="204.3" y="483.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="207.3" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2,261 samples, 0.13%)</title><rect x="204.9" y="531.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$233/1238270558.run (2,261 samples, 0.13%)</title><rect x="204.9" y="515.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2,261 samples, 0.13%)</title><rect x="204.9" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.9" y="510.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (653 samples, 0.04%)</title><rect x="204.9" y="483.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="207.9" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1,608 samples, 0.09%)</title><rect x="205.3" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.3" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (818 samples, 0.05%)</title><rect x="205.3" y="467.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="208.3" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (790 samples, 0.04%)</title><rect x="205.8" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.8" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (790 samples, 0.04%)</title><rect x="205.8" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.8" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (790 samples, 0.04%)</title><rect x="205.8" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.8" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (790 samples, 0.04%)</title><rect x="205.8" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.8" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (790 samples, 0.04%)</title><rect x="205.8" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="208.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,064 samples, 0.06%)</title><rect x="206.4" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,064 samples, 0.06%)</title><rect x="206.4" y="547.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="209.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/28457964.apply (302,446 samples, 17.10%)</title><rect x="207.1" y="707.0" width="201.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.1" y="718.0">ru/mail/polis/service/bori..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (302,446 samples, 17.10%)</title><rect x="207.1" y="691.0" width="201.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.1" y="702.0">ru/mail/polis/service/bori..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (302,446 samples, 17.10%)</title><rect x="207.1" y="675.0" width="201.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.1" y="686.0">ru/mail/polis/service/bori..</text>
</g>
<g>
<title>java.util.ArrayList (1,026 samples, 0.06%)</title><rect x="207.1" y="659.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="210.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7,488 samples, 0.42%)</title><rect x="207.8" y="659.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (7,488 samples, 0.42%)</title><rect x="207.8" y="643.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7,488 samples, 0.42%)</title><rect x="207.8" y="627.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2,012 samples, 0.11%)</title><rect x="207.8" y="611.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String (2,012 samples, 0.11%)</title><rect x="207.8" y="595.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="210.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5,476 samples, 0.31%)</title><rect x="209.1" y="611.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5,476 samples, 0.31%)</title><rect x="209.1" y="595.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.1" y="606.0"></text>
</g>
<g>
<title>byte[] (5,421 samples, 0.31%)</title><rect x="209.1" y="579.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="212.1" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (32,966 samples, 1.86%)</title><rect x="212.8" y="659.0" width="22.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.8" y="670.0">j..</text>
</g>
<g>
<title>java.net.URI (6,678 samples, 0.38%)</title><rect x="212.8" y="643.0" width="4.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="215.8" y="654.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (26,076 samples, 1.47%)</title><rect x="217.4" y="643.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.4" y="654.0"></text>
</g>
<g>
<title>java.net.URI$Parser (2,564 samples, 0.15%)</title><rect x="217.4" y="627.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="220.4" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (23,512 samples, 1.33%)</title><rect x="219.1" y="627.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,335 samples, 0.25%)</title><rect x="219.1" y="611.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,335 samples, 0.25%)</title><rect x="219.1" y="595.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (2,076 samples, 0.12%)</title><rect x="219.1" y="579.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="222.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,259 samples, 0.13%)</title><rect x="220.5" y="579.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.5" y="590.0"></text>
</g>
<g>
<title>byte[] (2,259 samples, 0.13%)</title><rect x="220.5" y="563.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="223.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (19,177 samples, 1.08%)</title><rect x="222.0" y="611.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (9,561 samples, 0.54%)</title><rect x="222.0" y="595.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9,561 samples, 0.54%)</title><rect x="222.0" y="579.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (4,087 samples, 0.23%)</title><rect x="222.0" y="563.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="225.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,474 samples, 0.31%)</title><rect x="224.7" y="563.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.7" y="574.0"></text>
</g>
<g>
<title>byte[] (5,474 samples, 0.31%)</title><rect x="224.7" y="547.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="227.7" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (9,616 samples, 0.54%)</title><rect x="228.3" y="595.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,709 samples, 0.27%)</title><rect x="228.3" y="579.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,709 samples, 0.27%)</title><rect x="228.3" y="563.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2,015 samples, 0.11%)</title><rect x="228.3" y="547.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="231.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,694 samples, 0.15%)</title><rect x="229.7" y="547.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.7" y="558.0"></text>
</g>
<g>
<title>byte[] (2,694 samples, 0.15%)</title><rect x="229.7" y="531.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="232.7" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4,907 samples, 0.28%)</title><rect x="231.5" y="579.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (4,907 samples, 0.28%)</title><rect x="231.5" y="563.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,907 samples, 0.28%)</title><rect x="231.5" y="547.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,907 samples, 0.28%)</title><rect x="231.5" y="531.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (2,163 samples, 0.12%)</title><rect x="231.5" y="515.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="234.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,744 samples, 0.16%)</title><rect x="232.9" y="515.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.9" y="526.0"></text>
</g>
<g>
<title>byte[] (2,744 samples, 0.16%)</title><rect x="232.9" y="499.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="235.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (2,677 samples, 0.15%)</title><rect x="234.8" y="659.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.8" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (2,677 samples, 0.15%)</title><rect x="234.8" y="643.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="237.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (8,822 samples, 0.50%)</title><rect x="236.5" y="659.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (3,447 samples, 0.19%)</title><rect x="236.5" y="643.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="239.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (5,375 samples, 0.30%)</title><rect x="238.8" y="643.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (1,354 samples, 0.08%)</title><rect x="238.8" y="627.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="241.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (4,021 samples, 0.23%)</title><rect x="239.8" y="627.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (4,021 samples, 0.23%)</title><rect x="239.8" y="611.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="242.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,424 samples, 0.14%)</title><rect x="242.4" y="659.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,424 samples, 0.14%)</title><rect x="242.4" y="643.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,424 samples, 0.14%)</title><rect x="242.4" y="627.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,424 samples, 0.14%)</title><rect x="242.4" y="611.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,424 samples, 0.14%)</title><rect x="242.4" y="595.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,420 samples, 0.14%)</title><rect x="242.4" y="579.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="245.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,353 samples, 0.08%)</title><rect x="244.1" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.1" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,353 samples, 0.08%)</title><rect x="244.1" y="643.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="247.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (166,889 samples, 9.44%)</title><rect x="245.0" y="659.0" width="111.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.0" y="670.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (166,889 samples, 9.44%)</title><rect x="245.0" y="643.0" width="111.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.0" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (166,889 samples, 9.44%)</title><rect x="245.0" y="627.0" width="111.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.0" y="638.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (166,889 samples, 9.44%)</title><rect x="245.0" y="611.0" width="111.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.0" y="622.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,476 samples, 0.08%)</title><rect x="245.0" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,476 samples, 0.08%)</title><rect x="245.0" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$199/469762584.get$Lambda (1,476 samples, 0.08%)</title><rect x="245.0" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$199 (1,476 samples, 0.08%)</title><rect x="245.0" y="547.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="248.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5,930 samples, 0.34%)</title><rect x="245.9" y="595.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5,930 samples, 0.34%)</title><rect x="245.9" y="579.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,338 samples, 0.19%)</title><rect x="245.9" y="563.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="248.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,592 samples, 0.15%)</title><rect x="248.2" y="563.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,592 samples, 0.15%)</title><rect x="248.2" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,592 samples, 0.15%)</title><rect x="248.2" y="531.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="251.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6,066 samples, 0.34%)</title><rect x="249.9" y="595.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6,066 samples, 0.34%)</title><rect x="249.9" y="579.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,314 samples, 0.19%)</title><rect x="249.9" y="563.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="252.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,752 samples, 0.16%)</title><rect x="252.1" y="563.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,752 samples, 0.16%)</title><rect x="252.1" y="547.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,752 samples, 0.16%)</title><rect x="252.1" y="531.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="255.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (4,817 samples, 0.27%)</title><rect x="253.9" y="595.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="256.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (7,592 samples, 0.43%)</title><rect x="257.2" y="595.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="260.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (484 samples, 0.03%)</title><rect x="262.3" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (78,374 samples, 4.43%)</title><rect x="262.6" y="595.0" width="52.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.6" y="606.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9,615 samples, 0.54%)</title><rect x="262.6" y="579.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.6" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7,527 samples, 0.43%)</title><rect x="262.6" y="563.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.6" y="574.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2,786 samples, 0.16%)</title><rect x="262.6" y="547.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.6" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2,786 samples, 0.16%)</title><rect x="262.6" y="531.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="265.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4,741 samples, 0.27%)</title><rect x="264.4" y="547.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.4" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4,737 samples, 0.27%)</title><rect x="264.4" y="531.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="267.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2,088 samples, 0.12%)</title><rect x="267.6" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,088 samples, 0.12%)</title><rect x="267.6" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2,088 samples, 0.12%)</title><rect x="267.6" y="531.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (2,088 samples, 0.12%)</title><rect x="267.6" y="515.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2,088 samples, 0.12%)</title><rect x="267.6" y="499.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="270.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (30,636 samples, 1.73%)</title><rect x="269.0" y="579.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (30,636 samples, 1.73%)</title><rect x="269.0" y="563.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.0" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1,383 samples, 0.08%)</title><rect x="269.0" y="547.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="272.0" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,995 samples, 0.11%)</title><rect x="269.9" y="547.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="272.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (4,143 samples, 0.23%)</title><rect x="271.2" y="547.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="274.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (1,399 samples, 0.08%)</title><rect x="274.0" y="547.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="277.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,780 samples, 0.16%)</title><rect x="274.9" y="547.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,780 samples, 0.16%)</title><rect x="274.9" y="531.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.get$Lambda (2,780 samples, 0.16%)</title><rect x="274.9" y="515.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.9" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (2,780 samples, 0.16%)</title><rect x="274.9" y="499.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="277.9" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (12,259 samples, 0.69%)</title><rect x="276.8" y="547.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12,259 samples, 0.69%)</title><rect x="276.8" y="531.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.8" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (12,259 samples, 0.69%)</title><rect x="276.8" y="515.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12,259 samples, 0.69%)</title><rect x="276.8" y="499.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4,766 samples, 0.27%)</title><rect x="276.8" y="483.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (4,766 samples, 0.27%)</title><rect x="276.8" y="467.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4,766 samples, 0.27%)</title><rect x="276.8" y="451.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4,766 samples, 0.27%)</title><rect x="276.8" y="435.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4,766 samples, 0.27%)</title><rect x="276.8" y="419.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4,766 samples, 0.27%)</title><rect x="276.8" y="403.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4,766 samples, 0.27%)</title><rect x="276.8" y="387.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,766 samples, 0.27%)</title><rect x="276.8" y="371.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4,754 samples, 0.27%)</title><rect x="276.8" y="355.0" width="3.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="279.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4,064 samples, 0.23%)</title><rect x="280.0" y="483.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.0" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4,064 samples, 0.23%)</title><rect x="280.0" y="467.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2,080 samples, 0.12%)</title><rect x="280.0" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,080 samples, 0.12%)</title><rect x="280.0" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,080 samples, 0.12%)</title><rect x="280.0" y="419.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="283.0" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (1,984 samples, 0.11%)</title><rect x="281.4" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.4" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,984 samples, 0.11%)</title><rect x="281.4" y="435.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="284.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3,429 samples, 0.19%)</title><rect x="282.7" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.7" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3,429 samples, 0.19%)</title><rect x="282.7" y="467.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="285.7" y="478.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2,644 samples, 0.15%)</title><rect x="285.0" y="547.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2,644 samples, 0.15%)</title><rect x="285.0" y="531.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="288.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4,033 samples, 0.23%)</title><rect x="286.7" y="547.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (4,033 samples, 0.23%)</title><rect x="286.7" y="531.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="289.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (1,331 samples, 0.08%)</title><rect x="289.4" y="579.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="292.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (25,235 samples, 1.43%)</title><rect x="290.3" y="579.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.3" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (25,235 samples, 1.43%)</title><rect x="290.3" y="563.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.3" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (22,473 samples, 1.27%)</title><rect x="290.3" y="547.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.3" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (22,473 samples, 1.27%)</title><rect x="290.3" y="531.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.3" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (22,473 samples, 1.27%)</title><rect x="290.3" y="515.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.3" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6,290 samples, 0.36%)</title><rect x="290.3" y="499.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="293.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (8,074 samples, 0.46%)</title><rect x="294.5" y="499.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.5" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8,074 samples, 0.46%)</title><rect x="294.5" y="483.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.5" y="494.0"></text>
</g>
<g>
<title>byte[] (8,074 samples, 0.46%)</title><rect x="294.5" y="467.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="297.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8,109 samples, 0.46%)</title><rect x="299.9" y="499.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,109 samples, 0.46%)</title><rect x="299.9" y="483.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.9" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8,109 samples, 0.46%)</title><rect x="299.9" y="467.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.9" y="478.0"></text>
</g>
<g>
<title>byte[] (8,109 samples, 0.46%)</title><rect x="299.9" y="451.0" width="5.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="302.9" y="462.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (2,762 samples, 0.16%)</title><rect x="305.3" y="547.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="308.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (4,064 samples, 0.23%)</title><rect x="307.2" y="579.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (4,064 samples, 0.23%)</title><rect x="307.2" y="563.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="310.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7,493 samples, 0.42%)</title><rect x="309.9" y="579.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.9" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (2,066 samples, 0.12%)</title><rect x="309.9" y="563.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="312.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,998 samples, 0.11%)</title><rect x="311.3" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,998 samples, 0.11%)</title><rect x="311.3" y="547.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="314.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3,429 samples, 0.19%)</title><rect x="312.6" y="563.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3,429 samples, 0.19%)</title><rect x="312.6" y="547.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="315.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (40,113 samples, 2.27%)</title><rect x="314.9" y="595.0" width="26.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.9" y="606.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1,298 samples, 0.07%)</title><rect x="314.9" y="579.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="317.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (5,961 samples, 0.34%)</title><rect x="315.7" y="579.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="318.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1,351 samples, 0.08%)</title><rect x="319.8" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (1,351 samples, 0.08%)</title><rect x="319.8" y="563.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="322.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (31,364 samples, 1.77%)</title><rect x="320.7" y="579.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (31,364 samples, 1.77%)</title><rect x="320.7" y="563.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Class[] (2,731 samples, 0.15%)</title><rect x="320.7" y="547.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="323.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,661 samples, 0.15%)</title><rect x="322.5" y="547.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="325.5" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (2,762 samples, 0.16%)</title><rect x="324.3" y="547.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="327.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (14,192 samples, 0.80%)</title><rect x="326.2" y="547.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (14,192 samples, 0.80%)</title><rect x="326.2" y="531.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.2" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (14,192 samples, 0.80%)</title><rect x="326.2" y="515.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.2" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (14,192 samples, 0.80%)</title><rect x="326.2" y="499.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.2" y="510.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (13,773 samples, 0.78%)</title><rect x="326.2" y="483.0" width="9.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="329.2" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (419 samples, 0.02%)</title><rect x="335.3" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="338.3" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4,760 samples, 0.27%)</title><rect x="335.6" y="547.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (4,760 samples, 0.27%)</title><rect x="335.6" y="531.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (3,456 samples, 0.20%)</title><rect x="335.6" y="515.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (3,456 samples, 0.20%)</title><rect x="335.6" y="499.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="338.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1,304 samples, 0.07%)</title><rect x="337.9" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (1,304 samples, 0.07%)</title><rect x="337.9" y="499.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="340.9" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4,258 samples, 0.24%)</title><rect x="338.8" y="547.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.8" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4,258 samples, 0.24%)</title><rect x="338.8" y="531.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.8" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4,258 samples, 0.24%)</title><rect x="338.8" y="515.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="341.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (21,998 samples, 1.24%)</title><rect x="341.6" y="595.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4,072 samples, 0.23%)</title><rect x="341.6" y="579.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1,984 samples, 0.11%)</title><rect x="341.6" y="563.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="344.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,088 samples, 0.12%)</title><rect x="343.0" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,088 samples, 0.12%)</title><rect x="343.0" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,067 samples, 0.12%)</title><rect x="343.0" y="531.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="346.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,662 samples, 0.15%)</title><rect x="344.4" y="579.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="347.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (15,264 samples, 0.86%)</title><rect x="346.1" y="579.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,915 samples, 0.16%)</title><rect x="346.1" y="563.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,915 samples, 0.16%)</title><rect x="346.1" y="547.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/63339538.get$Lambda (1,441 samples, 0.08%)</title><rect x="346.1" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$181 (1,441 samples, 0.08%)</title><rect x="346.1" y="515.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="349.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$188/1227969850.get$Lambda (1,474 samples, 0.08%)</title><rect x="347.1" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$188 (1,474 samples, 0.08%)</title><rect x="347.1" y="515.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (12,349 samples, 0.70%)</title><rect x="348.1" y="563.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (12,349 samples, 0.70%)</title><rect x="348.1" y="547.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6,839 samples, 0.39%)</title><rect x="348.1" y="531.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="351.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5,510 samples, 0.31%)</title><rect x="352.6" y="531.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="355.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5,510 samples, 0.31%)</title><rect x="352.6" y="515.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5,510 samples, 0.31%)</title><rect x="352.6" y="499.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="355.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (35,537 samples, 2.01%)</title><rect x="356.3" y="659.0" width="23.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.3" y="670.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (3,459 samples, 0.20%)</title><rect x="356.3" y="643.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="359.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (32,078 samples, 1.81%)</title><rect x="358.6" y="643.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.6" y="654.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (30,689 samples, 1.74%)</title><rect x="358.6" y="627.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.6" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (30,689 samples, 1.74%)</title><rect x="358.6" y="611.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="361.6" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (1,315 samples, 0.07%)</title><rect x="358.6" y="595.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="361.6" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (2,064 samples, 0.12%)</title><rect x="359.5" y="595.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="362.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (4,092 samples, 0.23%)</title><rect x="360.9" y="595.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="363.9" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (1,322 samples, 0.07%)</title><rect x="363.6" y="595.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="366.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,740 samples, 0.15%)</title><rect x="364.5" y="595.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,740 samples, 0.15%)</title><rect x="364.5" y="579.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.get$Lambda (2,740 samples, 0.15%)</title><rect x="364.5" y="563.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.5" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (2,740 samples, 0.15%)</title><rect x="364.5" y="547.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="367.5" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2,890 samples, 0.16%)</title><rect x="366.3" y="595.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.3" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2,890 samples, 0.16%)</title><rect x="366.3" y="579.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="369.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12,208 samples, 0.69%)</title><rect x="368.3" y="595.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (12,208 samples, 0.69%)</title><rect x="368.3" y="579.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12,208 samples, 0.69%)</title><rect x="368.3" y="563.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4,839 samples, 0.27%)</title><rect x="368.3" y="547.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (4,839 samples, 0.27%)</title><rect x="368.3" y="531.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4,839 samples, 0.27%)</title><rect x="368.3" y="515.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4,839 samples, 0.27%)</title><rect x="368.3" y="499.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4,839 samples, 0.27%)</title><rect x="368.3" y="483.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4,839 samples, 0.27%)</title><rect x="368.3" y="467.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4,839 samples, 0.27%)</title><rect x="368.3" y="451.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,839 samples, 0.27%)</title><rect x="368.3" y="435.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (4,834 samples, 0.27%)</title><rect x="368.3" y="419.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="371.3" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,959 samples, 0.22%)</title><rect x="371.5" y="547.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.5" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,959 samples, 0.22%)</title><rect x="371.5" y="531.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,972 samples, 0.11%)</title><rect x="371.5" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,972 samples, 0.11%)</title><rect x="371.5" y="499.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,972 samples, 0.11%)</title><rect x="371.5" y="483.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="374.5" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (1,987 samples, 0.11%)</title><rect x="372.8" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.8" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,987 samples, 0.11%)</title><rect x="372.8" y="499.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="375.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3,410 samples, 0.19%)</title><rect x="374.1" y="547.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3,410 samples, 0.19%)</title><rect x="374.1" y="531.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="377.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4,058 samples, 0.23%)</title><rect x="376.4" y="595.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (4,058 samples, 0.23%)</title><rect x="376.4" y="579.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="379.4" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1,389 samples, 0.08%)</title><rect x="379.1" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (1,389 samples, 0.08%)</title><rect x="379.1" y="611.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.1" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (1,389 samples, 0.08%)</title><rect x="379.1" y="595.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="382.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7,468 samples, 0.42%)</title><rect x="380.0" y="659.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7,468 samples, 0.42%)</title><rect x="380.0" y="643.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7,468 samples, 0.42%)</title><rect x="380.0" y="627.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.0" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (2,066 samples, 0.12%)</title><rect x="380.0" y="611.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="383.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2,114 samples, 0.12%)</title><rect x="381.4" y="611.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,114 samples, 0.12%)</title><rect x="381.4" y="595.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="384.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3,288 samples, 0.19%)</title><rect x="382.8" y="611.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3,288 samples, 0.19%)</title><rect x="382.8" y="595.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="385.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (35,796 samples, 2.02%)</title><rect x="385.0" y="659.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.0" y="670.0">r..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,034 samples, 0.06%)</title><rect x="385.0" y="643.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="388.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (994 samples, 0.06%)</title><rect x="385.7" y="643.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="388.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (772 samples, 0.04%)</title><rect x="386.4" y="643.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="389.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (658 samples, 0.04%)</title><rect x="386.9" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (658 samples, 0.04%)</title><rect x="386.9" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$214/2080116879.get$Lambda (658 samples, 0.04%)</title><rect x="386.9" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.9" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.FuturesWorker$$Lambda$214 (658 samples, 0.04%)</title><rect x="386.9" y="595.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="389.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1439056954.linkToTargetMethod (1,417 samples, 0.08%)</title><rect x="387.3" y="643.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/884381010.invokeStatic (1,417 samples, 0.08%)</title><rect x="387.3" y="627.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$204/1435990821.get$Lambda (1,417 samples, 0.08%)</title><rect x="387.3" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.FuturesWorker$$Lambda$204 (1,417 samples, 0.08%)</title><rect x="387.3" y="595.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="390.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (29,597 samples, 1.67%)</title><rect x="388.3" y="643.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$214/2080116879.accept (29,597 samples, 1.67%)</title><rect x="388.3" y="627.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (29,597 samples, 1.67%)</title><rect x="388.3" y="611.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (6,131 samples, 0.35%)</title><rect x="388.3" y="595.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (6,131 samples, 0.35%)</title><rect x="388.3" y="579.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (3,393 samples, 0.19%)</title><rect x="388.3" y="563.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="391.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,738 samples, 0.15%)</title><rect x="390.5" y="563.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,738 samples, 0.15%)</title><rect x="390.5" y="547.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,738 samples, 0.15%)</title><rect x="390.5" y="531.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="393.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (17,112 samples, 0.97%)</title><rect x="392.4" y="595.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Canceller (1,402 samples, 0.08%)</title><rect x="392.4" y="579.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="395.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Timeout (1,281 samples, 0.07%)</title><rect x="393.3" y="579.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="396.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (8,237 samples, 0.47%)</title><rect x="394.2" y="579.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (8,237 samples, 0.47%)</title><rect x="394.2" y="563.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (6,090 samples, 0.34%)</title><rect x="394.2" y="547.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="397.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (2,018 samples, 0.11%)</title><rect x="398.3" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (2,018 samples, 0.11%)</title><rect x="398.3" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (2,018 samples, 0.11%)</title><rect x="398.3" y="515.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (2,018 samples, 0.11%)</title><rect x="398.3" y="499.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="401.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6,192 samples, 0.35%)</title><rect x="399.7" y="579.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6,192 samples, 0.35%)</title><rect x="399.7" y="563.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,482 samples, 0.20%)</title><rect x="399.7" y="547.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="402.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,710 samples, 0.15%)</title><rect x="402.0" y="547.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,710 samples, 0.15%)</title><rect x="402.0" y="531.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,710 samples, 0.15%)</title><rect x="402.0" y="515.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="405.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (6,354 samples, 0.36%)</title><rect x="403.8" y="595.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6,354 samples, 0.36%)</title><rect x="403.8" y="579.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,669 samples, 0.21%)</title><rect x="403.8" y="563.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="406.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,685 samples, 0.15%)</title><rect x="406.2" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2,685 samples, 0.15%)</title><rect x="406.2" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2,685 samples, 0.15%)</title><rect x="406.2" y="531.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="409.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (1,324 samples, 0.07%)</title><rect x="408.0" y="643.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.0" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (679 samples, 0.04%)</title><rect x="408.0" y="627.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="411.0" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (645 samples, 0.04%)</title><rect x="408.5" y="627.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="411.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$126/245683815.get (8,958 samples, 0.51%)</title><rect x="408.9" y="739.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (8,958 samples, 0.51%)</title><rect x="408.9" y="723.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$118/533758526.run (8,958 samples, 0.51%)</title><rect x="408.9" y="707.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$7 (8,958 samples, 0.51%)</title><rect x="408.9" y="691.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,652 samples, 0.09%)</title><rect x="408.9" y="675.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,652 samples, 0.09%)</title><rect x="408.9" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,652 samples, 0.09%)</title><rect x="408.9" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,652 samples, 0.09%)</title><rect x="408.9" y="627.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.9" y="638.0"></text>
</g>
<g>
<title>byte[] (1,652 samples, 0.09%)</title><rect x="408.9" y="611.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="411.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,000 samples, 0.11%)</title><rect x="410.0" y="675.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,000 samples, 0.11%)</title><rect x="410.0" y="659.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.0" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,000 samples, 0.11%)</title><rect x="410.0" y="643.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="413.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.upsert (5,306 samples, 0.30%)</title><rect x="411.4" y="675.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.upsert (4,993 samples, 0.28%)</title><rect x="411.4" y="659.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3,963 samples, 0.22%)</title><rect x="411.4" y="643.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.4" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,963 samples, 0.22%)</title><rect x="411.4" y="627.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="414.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.boriskin.Value (1,011 samples, 0.06%)</title><rect x="414.0" y="643.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="417.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (23,541 samples, 1.33%)</title><rect x="414.9" y="755.0" width="15.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (23,508 samples, 1.33%)</title><rect x="414.9" y="739.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23,135 samples, 1.31%)</title><rect x="414.9" y="723.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (23,135 samples, 1.31%)</title><rect x="414.9" y="707.0" width="15.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (23,135 samples, 1.31%)</title><rect x="414.9" y="691.0" width="15.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="417.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1765573268.run (39,202 samples, 2.22%)</title><rect x="430.6" y="755.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.6" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (39,202 samples, 2.22%)</title><rect x="430.6" y="739.0" width="26.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.6" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (39,202 samples, 2.22%)</title><rect x="430.6" y="723.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.6" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (39,202 samples, 2.22%)</title><rect x="430.6" y="707.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.6" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39,202 samples, 2.22%)</title><rect x="430.6" y="691.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.6" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39,202 samples, 2.22%)</title><rect x="430.6" y="675.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.6" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (39,202 samples, 2.22%)</title><rect x="430.6" y="659.0" width="26.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.6" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (39,202 samples, 2.22%)</title><rect x="430.6" y="643.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.6" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (39,202 samples, 2.22%)</title><rect x="430.6" y="627.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.6" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (39,202 samples, 2.22%)</title><rect x="430.6" y="611.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.6" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (39,202 samples, 2.22%)</title><rect x="430.6" y="595.0" width="26.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.6" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (35,709 samples, 2.02%)</title><rect x="430.6" y="579.0" width="23.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.6" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,544 samples, 0.14%)</title><rect x="430.6" y="563.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,544 samples, 0.14%)</title><rect x="430.6" y="547.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$407/374842750.get$Lambda (598 samples, 0.03%)</title><rect x="430.6" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$407 (598 samples, 0.03%)</title><rect x="430.6" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="433.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$435/1807893648.get$Lambda (1,108 samples, 0.06%)</title><rect x="431.0" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$435 (1,108 samples, 0.06%)</title><rect x="431.0" y="515.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="434.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/2077801692.get$Lambda (838 samples, 0.05%)</title><rect x="431.7" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$436 (838 samples, 0.05%)</title><rect x="431.7" y="515.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="434.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (33,165 samples, 1.88%)</title><rect x="432.3" y="563.0" width="22.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.3" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1,392 samples, 0.08%)</title><rect x="432.3" y="547.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="435.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31,773 samples, 1.80%)</title><rect x="433.2" y="547.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (31,773 samples, 1.80%)</title><rect x="433.2" y="531.0" width="21.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31,773 samples, 1.80%)</title><rect x="433.2" y="515.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5,470 samples, 0.31%)</title><rect x="433.2" y="499.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2,015 samples, 0.11%)</title><rect x="433.2" y="483.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="436.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$428/2006974621.apply (3,436 samples, 0.19%)</title><rect x="434.6" y="483.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3,436 samples, 0.19%)</title><rect x="434.6" y="467.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3,436 samples, 0.19%)</title><rect x="434.6" y="451.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (761 samples, 0.04%)</title><rect x="434.6" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (761 samples, 0.04%)</title><rect x="434.6" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (761 samples, 0.04%)</title><rect x="434.6" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="437.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2,675 samples, 0.15%)</title><rect x="435.1" y="435.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (498 samples, 0.03%)</title><rect x="435.1" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (498 samples, 0.03%)</title><rect x="435.1" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$437/109749654.get$Lambda (498 samples, 0.03%)</title><rect x="435.1" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$437 (498 samples, 0.03%)</title><rect x="435.1" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="438.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2,177 samples, 0.12%)</title><rect x="435.4" y="419.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2,177 samples, 0.12%)</title><rect x="435.4" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1,254 samples, 0.07%)</title><rect x="435.4" y="387.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="438.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (921 samples, 0.05%)</title><rect x="436.3" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (921 samples, 0.05%)</title><rect x="436.3" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (921 samples, 0.05%)</title><rect x="436.3" y="355.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="439.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (26,303 samples, 1.49%)</title><rect x="436.9" y="499.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (26,303 samples, 1.49%)</title><rect x="436.9" y="483.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$371/1785628412.apply (26,303 samples, 1.49%)</title><rect x="436.9" y="467.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (26,303 samples, 1.49%)</title><rect x="436.9" y="451.0" width="17.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (26,303 samples, 1.49%)</title><rect x="436.9" y="435.0" width="17.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/885000023.apply (26,303 samples, 1.49%)</title><rect x="436.9" y="419.0" width="17.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (26,303 samples, 1.49%)</title><rect x="436.9" y="403.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (541 samples, 0.03%)</title><rect x="436.9" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (541 samples, 0.03%)</title><rect x="436.9" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$428/2006974621.get$Lambda (541 samples, 0.03%)</title><rect x="436.9" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$428 (541 samples, 0.03%)</title><rect x="436.9" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="439.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,197 samples, 0.12%)</title><rect x="437.2" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,197 samples, 0.12%)</title><rect x="437.2" y="371.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,202 samples, 0.07%)</title><rect x="437.2" y="355.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="440.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (995 samples, 0.06%)</title><rect x="438.0" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (995 samples, 0.06%)</title><rect x="438.0" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (995 samples, 0.06%)</title><rect x="438.0" y="323.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="441.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (23,565 samples, 1.33%)</title><rect x="438.7" y="387.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (996 samples, 0.06%)</title><rect x="438.7" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (996 samples, 0.06%)</title><rect x="438.7" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$410/313701495.get$Lambda (495 samples, 0.03%)</title><rect x="438.7" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$410 (495 samples, 0.03%)</title><rect x="438.7" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="441.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$423/249141808.get$Lambda (501 samples, 0.03%)</title><rect x="439.0" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$423 (501 samples, 0.03%)</title><rect x="439.0" y="323.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="442.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (8,607 samples, 0.49%)</title><rect x="439.4" y="371.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (8,607 samples, 0.49%)</title><rect x="439.4" y="355.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (8,607 samples, 0.49%)</title><rect x="439.4" y="339.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$410/313701495.accept (3,015 samples, 0.17%)</title><rect x="439.4" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (3,015 samples, 0.17%)</title><rect x="439.4" y="307.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (3,015 samples, 0.17%)</title><rect x="439.4" y="291.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (734 samples, 0.04%)</title><rect x="439.4" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (734 samples, 0.04%)</title><rect x="439.4" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/1783187328.get$Lambda (734 samples, 0.04%)</title><rect x="439.4" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$417 (734 samples, 0.04%)</title><rect x="439.4" y="227.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="442.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2,281 samples, 0.13%)</title><rect x="439.9" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,281 samples, 0.13%)</title><rect x="439.9" y="259.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,254 samples, 0.07%)</title><rect x="439.9" y="243.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="442.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,027 samples, 0.06%)</title><rect x="440.7" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,027 samples, 0.06%)</title><rect x="440.7" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,027 samples, 0.06%)</title><rect x="440.7" y="211.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="443.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$423/249141808.accept (3,693 samples, 0.21%)</title><rect x="441.4" y="323.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (3,693 samples, 0.21%)</title><rect x="441.4" y="307.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3,693 samples, 0.21%)</title><rect x="441.4" y="291.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (3,693 samples, 0.21%)</title><rect x="441.4" y="275.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (3,693 samples, 0.21%)</title><rect x="441.4" y="259.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,693 samples, 0.21%)</title><rect x="441.4" y="243.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3,693 samples, 0.21%)</title><rect x="441.4" y="227.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,693 samples, 0.21%)</title><rect x="441.4" y="211.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,693 samples, 0.21%)</title><rect x="441.4" y="195.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3,693 samples, 0.21%)</title><rect x="441.4" y="179.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1,445 samples, 0.08%)</title><rect x="441.4" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,445 samples, 0.08%)</title><rect x="441.4" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (749 samples, 0.04%)</title><rect x="441.4" y="131.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="444.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (696 samples, 0.04%)</title><rect x="441.9" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (696 samples, 0.04%)</title><rect x="441.9" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (696 samples, 0.04%)</title><rect x="441.9" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (696 samples, 0.04%)</title><rect x="441.9" y="83.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (696 samples, 0.04%)</title><rect x="441.9" y="67.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (696 samples, 0.04%)</title><rect x="441.9" y="51.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="444.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2,248 samples, 0.13%)</title><rect x="442.3" y="163.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2,248 samples, 0.13%)</title><rect x="442.3" y="147.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.3" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (796 samples, 0.05%)</title><rect x="442.3" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.3" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (796 samples, 0.05%)</title><rect x="442.3" y="115.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="445.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,452 samples, 0.08%)</title><rect x="442.9" y="131.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="445.9" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (722 samples, 0.04%)</title><rect x="442.9" y="115.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="445.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (730 samples, 0.04%)</title><rect x="443.4" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (730 samples, 0.04%)</title><rect x="443.4" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (730 samples, 0.04%)</title><rect x="443.4" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (730 samples, 0.04%)</title><rect x="443.4" y="67.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (730 samples, 0.04%)</title><rect x="443.4" y="51.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (730 samples, 0.04%)</title><rect x="443.4" y="35.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="446.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,899 samples, 0.11%)</title><rect x="443.8" y="323.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="446.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,899 samples, 0.11%)</title><rect x="443.8" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,899 samples, 0.11%)</title><rect x="443.8" y="291.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="446.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (13,962 samples, 0.79%)</title><rect x="445.1" y="371.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (1,203 samples, 0.07%)</title><rect x="445.1" y="355.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="448.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (1,033 samples, 0.06%)</title><rect x="445.9" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1,033 samples, 0.06%)</title><rect x="445.9" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,033 samples, 0.06%)</title><rect x="445.9" y="323.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="448.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (11,726 samples, 0.66%)</title><rect x="446.6" y="355.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (717 samples, 0.04%)</title><rect x="446.6" y="339.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="449.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (6,181 samples, 0.35%)</title><rect x="447.1" y="339.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (950 samples, 0.05%)</title><rect x="447.1" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (950 samples, 0.05%)</title><rect x="447.1" y="307.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="450.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (1,184 samples, 0.07%)</title><rect x="447.7" y="323.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="450.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (4,047 samples, 0.23%)</title><rect x="448.5" y="323.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (500 samples, 0.03%)</title><rect x="448.5" y="307.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="451.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (468 samples, 0.03%)</title><rect x="448.8" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="451.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (906 samples, 0.05%)</title><rect x="449.2" y="307.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="452.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (736 samples, 0.04%)</title><rect x="449.8" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (736 samples, 0.04%)</title><rect x="449.8" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="452.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1,437 samples, 0.08%)</title><rect x="450.3" y="307.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (471 samples, 0.03%)</title><rect x="450.3" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="453.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (471 samples, 0.03%)</title><rect x="450.6" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="453.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (495 samples, 0.03%)</title><rect x="450.9" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="453.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (4,828 samples, 0.27%)</title><rect x="451.2" y="339.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.2" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (717 samples, 0.04%)</title><rect x="451.2" y="323.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="454.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,377 samples, 0.13%)</title><rect x="451.7" y="323.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,428 samples, 0.08%)</title><rect x="451.7" y="307.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="454.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (949 samples, 0.05%)</title><rect x="452.6" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.6" y="318.0"></text>
</g>
<g>
<title>byte[] (949 samples, 0.05%)</title><rect x="452.6" y="291.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="455.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,734 samples, 0.10%)</title><rect x="453.3" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,734 samples, 0.10%)</title><rect x="453.3" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,734 samples, 0.10%)</title><rect x="453.3" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,734 samples, 0.10%)</title><rect x="453.3" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,734 samples, 0.10%)</title><rect x="453.3" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,734 samples, 0.10%)</title><rect x="453.3" y="243.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="456.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3,493 samples, 0.20%)</title><rect x="454.4" y="579.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3,493 samples, 0.20%)</title><rect x="454.4" y="563.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3,493 samples, 0.20%)</title><rect x="454.4" y="547.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3,493 samples, 0.20%)</title><rect x="454.4" y="531.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3,493 samples, 0.20%)</title><rect x="454.4" y="515.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.4" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,493 samples, 0.20%)</title><rect x="454.4" y="499.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1,444 samples, 0.08%)</title><rect x="454.4" y="483.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.4" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (1,444 samples, 0.08%)</title><rect x="454.4" y="467.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="457.4" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2,049 samples, 0.12%)</title><rect x="455.4" y="483.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.4" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (2,049 samples, 0.12%)</title><rect x="455.4" y="467.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="458.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (127,985 samples, 7.24%)</title><rect x="456.8" y="755.0" width="85.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.8" y="766.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (127,985 samples, 7.24%)</title><rect x="456.8" y="739.0" width="85.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.8" y="750.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (107,170 samples, 6.06%)</title><rect x="456.8" y="723.0" width="71.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.8" y="734.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (107,170 samples, 6.06%)</title><rect x="456.8" y="707.0" width="71.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.8" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (107,170 samples, 6.06%)</title><rect x="456.8" y="691.0" width="71.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.8" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2,055 samples, 0.12%)</title><rect x="456.8" y="675.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2,055 samples, 0.12%)</title><rect x="456.8" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2,055 samples, 0.12%)</title><rect x="456.8" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2,055 samples, 0.12%)</title><rect x="456.8" y="627.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (1,300 samples, 0.07%)</title><rect x="456.8" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (1,300 samples, 0.07%)</title><rect x="456.8" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,300 samples, 0.07%)</title><rect x="456.8" y="579.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,300 samples, 0.07%)</title><rect x="456.8" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,300 samples, 0.07%)</title><rect x="456.8" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.8" y="558.0"></text>
</g>
<g>
<title>byte[] (1,300 samples, 0.07%)</title><rect x="456.8" y="531.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="459.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (755 samples, 0.04%)</title><rect x="457.6" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (755 samples, 0.04%)</title><rect x="457.6" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (755 samples, 0.04%)</title><rect x="457.6" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405/227400038.get$Lambda (755 samples, 0.04%)</title><rect x="457.6" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405 (755 samples, 0.04%)</title><rect x="457.6" y="547.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="460.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (105,115 samples, 5.94%)</title><rect x="458.1" y="675.0" width="70.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.1" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (105,115 samples, 5.94%)</title><rect x="458.1" y="659.0" width="70.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.1" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (105,115 samples, 5.94%)</title><rect x="458.1" y="643.0" width="70.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.1" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (105,115 samples, 5.94%)</title><rect x="458.1" y="627.0" width="70.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.1" y="638.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (49,923 samples, 2.82%)</title><rect x="458.1" y="611.0" width="33.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.1" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (49,923 samples, 2.82%)</title><rect x="458.1" y="595.0" width="33.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.1" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (49,923 samples, 2.82%)</title><rect x="458.1" y="579.0" width="33.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.1" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (49,923 samples, 2.82%)</title><rect x="458.1" y="563.0" width="33.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.1" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49,923 samples, 2.82%)</title><rect x="458.1" y="547.0" width="33.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.1" y="558.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (49,923 samples, 2.82%)</title><rect x="458.1" y="531.0" width="33.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (49,923 samples, 2.82%)</title><rect x="458.1" y="515.0" width="33.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (48,447 samples, 2.74%)</title><rect x="458.1" y="499.0" width="32.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48,447 samples, 2.74%)</title><rect x="458.1" y="483.0" width="32.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.1" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (47,445 samples, 2.68%)</title><rect x="458.1" y="467.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.1" y="478.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,022 samples, 0.06%)</title><rect x="458.1" y="451.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="461.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$188/1227969850.apply (44,307 samples, 2.51%)</title><rect x="458.8" y="451.0" width="29.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.8" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (44,307 samples, 2.51%)</title><rect x="458.8" y="435.0" width="29.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.8" y="446.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (770 samples, 0.04%)</title><rect x="458.8" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (770 samples, 0.04%)</title><rect x="458.8" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$488/398166842.get$Lambda (770 samples, 0.04%)</title><rect x="458.8" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$488 (770 samples, 0.04%)</title><rect x="458.8" y="371.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="461.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2,269 samples, 0.13%)</title><rect x="459.3" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2,269 samples, 0.13%)</title><rect x="459.3" y="403.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (1,264 samples, 0.07%)</title><rect x="459.3" y="387.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="462.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,005 samples, 0.06%)</title><rect x="460.2" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,005 samples, 0.06%)</title><rect x="460.2" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,005 samples, 0.06%)</title><rect x="460.2" y="355.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="463.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (41,268 samples, 2.33%)</title><rect x="460.8" y="419.0" width="27.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.8" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (488 samples, 0.03%)</title><rect x="460.8" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (488 samples, 0.03%)</title><rect x="460.8" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$484/1119876627.get$Lambda (488 samples, 0.03%)</title><rect x="460.8" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$484 (488 samples, 0.03%)</title><rect x="460.8" y="355.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="463.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,266 samples, 0.13%)</title><rect x="461.2" y="403.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,266 samples, 0.13%)</title><rect x="461.2" y="387.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,259 samples, 0.07%)</title><rect x="461.2" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="464.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,007 samples, 0.06%)</title><rect x="462.0" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,007 samples, 0.06%)</title><rect x="462.0" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,007 samples, 0.06%)</title><rect x="462.0" y="339.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="465.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (38,514 samples, 2.18%)</title><rect x="462.7" y="403.0" width="25.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.7" y="414.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$158/212951193.apply (2,878 samples, 0.16%)</title><rect x="462.7" y="387.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2,878 samples, 0.16%)</title><rect x="462.7" y="371.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2,878 samples, 0.16%)</title><rect x="462.7" y="355.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (1,052 samples, 0.06%)</title><rect x="462.7" y="339.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="465.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1,826 samples, 0.10%)</title><rect x="463.4" y="339.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.4" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (788 samples, 0.04%)</title><rect x="463.4" y="323.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="466.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,038 samples, 0.06%)</title><rect x="463.9" y="323.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="466.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (35,636 samples, 2.02%)</title><rect x="464.6" y="387.0" width="23.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.6" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,070 samples, 0.06%)</title><rect x="464.6" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,070 samples, 0.06%)</title><rect x="464.6" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$476/955279240.get$Lambda (573 samples, 0.03%)</title><rect x="464.6" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$476 (573 samples, 0.03%)</title><rect x="464.6" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="467.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$479/2146793429.get$Lambda (497 samples, 0.03%)</title><rect x="465.0" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$479 (497 samples, 0.03%)</title><rect x="465.0" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="468.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/749517334.linkToTargetMethod (1,257 samples, 0.07%)</title><rect x="465.3" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/452483990.invokeStatic (1,257 samples, 0.07%)</title><rect x="465.3" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/611855769.get$Lambda (1,257 samples, 0.07%)</title><rect x="465.3" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$448 (1,257 samples, 0.07%)</title><rect x="465.3" y="323.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="468.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (7,060 samples, 0.40%)</title><rect x="466.2" y="371.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,763 samples, 0.16%)</title><rect x="466.2" y="355.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1,045 samples, 0.06%)</title><rect x="466.2" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.2" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,045 samples, 0.06%)</title><rect x="466.2" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="469.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,718 samples, 0.10%)</title><rect x="466.9" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,718 samples, 0.10%)</title><rect x="466.9" y="323.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="469.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2,253 samples, 0.13%)</title><rect x="468.0" y="355.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,253 samples, 0.13%)</title><rect x="468.0" y="339.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2,253 samples, 0.13%)</title><rect x="468.0" y="323.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (718 samples, 0.04%)</title><rect x="468.0" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (718 samples, 0.04%)</title><rect x="468.0" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (718 samples, 0.04%)</title><rect x="468.0" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.0" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (718 samples, 0.04%)</title><rect x="468.0" y="259.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="471.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$443/1991057533.get (794 samples, 0.04%)</title><rect x="468.5" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.5" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (794 samples, 0.04%)</title><rect x="468.5" y="291.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="471.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (741 samples, 0.04%)</title><rect x="469.0" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (741 samples, 0.04%)</title><rect x="469.0" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.0" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (741 samples, 0.04%)</title><rect x="469.0" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.0" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (741 samples, 0.04%)</title><rect x="469.0" y="259.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="472.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2,044 samples, 0.12%)</title><rect x="469.5" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (2,044 samples, 0.12%)</title><rect x="469.5" y="339.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="472.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4,449 samples, 0.25%)</title><rect x="470.9" y="371.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,221 samples, 0.13%)</title><rect x="470.9" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,219 samples, 0.07%)</title><rect x="470.9" y="339.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="473.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,002 samples, 0.06%)</title><rect x="471.7" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,002 samples, 0.06%)</title><rect x="471.7" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,002 samples, 0.06%)</title><rect x="471.7" y="307.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="474.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,228 samples, 0.13%)</title><rect x="472.4" y="355.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,228 samples, 0.13%)</title><rect x="472.4" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,256 samples, 0.07%)</title><rect x="472.4" y="323.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="475.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (972 samples, 0.05%)</title><rect x="473.2" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (972 samples, 0.05%)</title><rect x="473.2" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (972 samples, 0.05%)</title><rect x="473.2" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="476.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (767 samples, 0.04%)</title><rect x="473.8" y="371.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="476.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (973 samples, 0.06%)</title><rect x="474.3" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="477.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (996 samples, 0.06%)</title><rect x="475.0" y="371.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="478.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (541 samples, 0.03%)</title><rect x="475.7" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (541 samples, 0.03%)</title><rect x="475.7" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="478.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18,523 samples, 1.05%)</title><rect x="476.0" y="371.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/611855769.run (18,523 samples, 1.05%)</title><rect x="476.0" y="355.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (18,523 samples, 1.05%)</title><rect x="476.0" y="339.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,263 samples, 0.13%)</title><rect x="476.0" y="323.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,263 samples, 0.13%)</title><rect x="476.0" y="307.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/287410361.get$Lambda (522 samples, 0.03%)</title><rect x="476.0" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$453 (522 samples, 0.03%)</title><rect x="476.0" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="479.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/1806290182.get$Lambda (774 samples, 0.04%)</title><rect x="476.4" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$457 (774 samples, 0.04%)</title><rect x="476.4" y="275.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="479.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$467/260729516.get$Lambda (967 samples, 0.05%)</title><rect x="476.9" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$467 (967 samples, 0.05%)</title><rect x="476.9" y="275.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="479.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,210 samples, 0.12%)</title><rect x="477.5" y="323.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,210 samples, 0.12%)</title><rect x="477.5" y="307.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,231 samples, 0.07%)</title><rect x="477.5" y="291.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="480.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (979 samples, 0.06%)</title><rect x="478.4" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (979 samples, 0.06%)</title><rect x="478.4" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (979 samples, 0.06%)</title><rect x="478.4" y="259.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="481.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (1,298 samples, 0.07%)</title><rect x="479.0" y="323.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="482.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (1,057 samples, 0.06%)</title><rect x="479.9" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,057 samples, 0.06%)</title><rect x="479.9" y="307.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="482.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3,115 samples, 0.18%)</title><rect x="480.6" y="323.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3,115 samples, 0.18%)</title><rect x="480.6" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (781 samples, 0.04%)</title><rect x="480.6" y="291.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (781 samples, 0.04%)</title><rect x="480.6" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$471/1154418669.get$Lambda (781 samples, 0.04%)</title><rect x="480.6" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$471 (781 samples, 0.04%)</title><rect x="480.6" y="243.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="483.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,334 samples, 0.13%)</title><rect x="481.1" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,334 samples, 0.13%)</title><rect x="481.1" y="275.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,334 samples, 0.13%)</title><rect x="481.1" y="259.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,267 samples, 0.07%)</title><rect x="481.1" y="243.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="484.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,067 samples, 0.06%)</title><rect x="481.9" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,067 samples, 0.06%)</title><rect x="481.9" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,067 samples, 0.06%)</title><rect x="481.9" y="211.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="484.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2,944 samples, 0.17%)</title><rect x="482.7" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,942 samples, 0.17%)</title><rect x="482.7" y="307.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (2,942 samples, 0.17%)</title><rect x="482.7" y="291.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,942 samples, 0.17%)</title><rect x="482.7" y="275.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (761 samples, 0.04%)</title><rect x="482.7" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (761 samples, 0.04%)</title><rect x="482.7" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="485.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,181 samples, 0.12%)</title><rect x="483.2" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,181 samples, 0.12%)</title><rect x="483.2" y="243.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.2" y="254.0"></text>
</g>
<g>
<title>byte[] (2,181 samples, 0.12%)</title><rect x="483.2" y="227.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="486.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (5,636 samples, 0.32%)</title><rect x="484.6" y="323.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (1,788 samples, 0.10%)</title><rect x="484.6" y="307.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="487.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3,848 samples, 0.22%)</title><rect x="485.8" y="307.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,848 samples, 0.22%)</title><rect x="485.8" y="291.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1928931046.invoke (3,848 samples, 0.22%)</title><rect x="485.8" y="275.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,848 samples, 0.22%)</title><rect x="485.8" y="259.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (795 samples, 0.04%)</title><rect x="485.8" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (795 samples, 0.04%)</title><rect x="485.8" y="227.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="488.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3,053 samples, 0.17%)</title><rect x="486.3" y="243.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3,053 samples, 0.17%)</title><rect x="486.3" y="227.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.3" y="238.0"></text>
</g>
<g>
<title>byte[] (3,053 samples, 0.17%)</title><rect x="486.3" y="211.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="489.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/137991968.apply (2,116 samples, 0.12%)</title><rect x="488.4" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2,116 samples, 0.12%)</title><rect x="488.4" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1,077 samples, 0.06%)</title><rect x="488.4" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.4" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1,077 samples, 0.06%)</title><rect x="488.4" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.4" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1,077 samples, 0.06%)</title><rect x="488.4" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.4" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1,077 samples, 0.06%)</title><rect x="488.4" y="371.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="491.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,039 samples, 0.06%)</title><rect x="489.1" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,039 samples, 0.06%)</title><rect x="489.1" y="403.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="492.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,002 samples, 0.06%)</title><rect x="489.8" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,002 samples, 0.06%)</title><rect x="489.8" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$380/905457088.apply (1,002 samples, 0.06%)</title><rect x="489.8" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,002 samples, 0.06%)</title><rect x="489.8" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1,002 samples, 0.06%)</title><rect x="489.8" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,002 samples, 0.06%)</title><rect x="489.8" y="387.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="492.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$437/109749654.apply (1,476 samples, 0.08%)</title><rect x="490.5" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1,476 samples, 0.08%)</title><rect x="490.5" y="483.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (1,476 samples, 0.08%)</title><rect x="490.5" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="493.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (55,192 samples, 3.12%)</title><rect x="491.5" y="611.0" width="36.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.5" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3,445 samples, 0.19%)</title><rect x="491.5" y="595.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,445 samples, 0.19%)</title><rect x="491.5" y="579.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,445 samples, 0.19%)</title><rect x="491.5" y="563.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,445 samples, 0.19%)</title><rect x="491.5" y="547.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,445 samples, 0.19%)</title><rect x="491.5" y="531.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.5" y="542.0"></text>
</g>
<g>
<title>byte[] (3,445 samples, 0.19%)</title><rect x="491.5" y="515.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="494.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2,490 samples, 0.14%)</title><rect x="493.8" y="595.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2,490 samples, 0.14%)</title><rect x="493.8" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2,490 samples, 0.14%)</title><rect x="493.8" y="563.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,490 samples, 0.14%)</title><rect x="493.8" y="547.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,490 samples, 0.14%)</title><rect x="493.8" y="531.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.8" y="542.0"></text>
</g>
<g>
<title>byte[] (2,490 samples, 0.14%)</title><rect x="493.8" y="515.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="496.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4,692 samples, 0.27%)</title><rect x="495.4" y="595.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.4" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (748 samples, 0.04%)</title><rect x="495.4" y="579.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="498.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (778 samples, 0.04%)</title><rect x="495.9" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (778 samples, 0.04%)</title><rect x="495.9" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (778 samples, 0.04%)</title><rect x="495.9" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.9" y="558.0"></text>
</g>
<g>
<title>byte[] (778 samples, 0.04%)</title><rect x="495.9" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="498.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,067 samples, 0.06%)</title><rect x="496.4" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,067 samples, 0.06%)</title><rect x="496.4" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.4" y="574.0"></text>
</g>
<g>
<title>byte[] (1,067 samples, 0.06%)</title><rect x="496.4" y="547.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="499.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,099 samples, 0.12%)</title><rect x="497.1" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,099 samples, 0.12%)</title><rect x="497.1" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (809 samples, 0.05%)</title><rect x="497.1" y="547.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="500.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,290 samples, 0.07%)</title><rect x="497.7" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.7" y="558.0"></text>
</g>
<g>
<title>byte[] (1,290 samples, 0.07%)</title><rect x="497.7" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="500.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (14,041 samples, 0.79%)</title><rect x="498.5" y="595.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14,041 samples, 0.79%)</title><rect x="498.5" y="579.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14,041 samples, 0.79%)</title><rect x="498.5" y="563.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.5" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (500 samples, 0.03%)</title><rect x="498.5" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="501.5" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (755 samples, 0.04%)</title><rect x="498.9" y="547.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="501.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,521 samples, 0.09%)</title><rect x="499.4" y="547.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="502.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (465 samples, 0.03%)</title><rect x="500.4" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="503.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,026 samples, 0.06%)</title><rect x="500.7" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,026 samples, 0.06%)</title><rect x="500.7" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.get$Lambda (1,026 samples, 0.06%)</title><rect x="500.7" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.7" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$146 (1,026 samples, 0.06%)</title><rect x="500.7" y="499.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="503.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (979 samples, 0.06%)</title><rect x="501.4" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.4" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (979 samples, 0.06%)</title><rect x="501.4" y="531.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="504.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (7,260 samples, 0.41%)</title><rect x="502.0" y="547.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (7,260 samples, 0.41%)</title><rect x="502.0" y="531.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7,260 samples, 0.41%)</title><rect x="502.0" y="515.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,728 samples, 0.10%)</title><rect x="502.0" y="499.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (1,728 samples, 0.10%)</title><rect x="502.0" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,728 samples, 0.10%)</title><rect x="502.0" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,728 samples, 0.10%)</title><rect x="502.0" y="451.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,728 samples, 0.10%)</title><rect x="502.0" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,728 samples, 0.10%)</title><rect x="502.0" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,728 samples, 0.10%)</title><rect x="502.0" y="403.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,728 samples, 0.10%)</title><rect x="502.0" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,728 samples, 0.10%)</title><rect x="502.0" y="371.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="505.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,033 samples, 0.17%)</title><rect x="503.2" y="499.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,033 samples, 0.17%)</title><rect x="503.2" y="483.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,567 samples, 0.09%)</title><rect x="503.2" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,567 samples, 0.09%)</title><rect x="503.2" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,567 samples, 0.09%)</title><rect x="503.2" y="435.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="506.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (1,466 samples, 0.08%)</title><rect x="504.2" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.2" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,466 samples, 0.08%)</title><rect x="504.2" y="451.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="507.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,499 samples, 0.14%)</title><rect x="505.2" y="499.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,499 samples, 0.14%)</title><rect x="505.2" y="483.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="508.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,535 samples, 0.09%)</title><rect x="506.9" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,535 samples, 0.09%)</title><rect x="506.9" y="531.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="509.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (30,524 samples, 1.73%)</title><rect x="507.9" y="595.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.9" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1,436 samples, 0.08%)</title><rect x="507.9" y="579.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="510.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2,003 samples, 0.11%)</title><rect x="508.9" y="579.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2,003 samples, 0.11%)</title><rect x="508.9" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.9" y="574.0"></text>
</g>
<g>
<title>byte[] (2,003 samples, 0.11%)</title><rect x="508.9" y="547.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="511.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4,009 samples, 0.23%)</title><rect x="510.2" y="579.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,009 samples, 0.23%)</title><rect x="510.2" y="563.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1,552 samples, 0.09%)</title><rect x="510.2" y="547.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="513.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,457 samples, 0.14%)</title><rect x="511.2" y="547.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.2" y="558.0"></text>
</g>
<g>
<title>byte[] (2,457 samples, 0.14%)</title><rect x="511.2" y="531.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="514.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (23,076 samples, 1.31%)</title><rect x="512.9" y="579.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,669 samples, 0.38%)</title><rect x="512.9" y="563.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,669 samples, 0.38%)</title><rect x="512.9" y="547.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2,914 samples, 0.16%)</title><rect x="512.9" y="531.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="515.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,755 samples, 0.21%)</title><rect x="514.8" y="531.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.8" y="542.0"></text>
</g>
<g>
<title>byte[] (3,755 samples, 0.21%)</title><rect x="514.8" y="515.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="517.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3,514 samples, 0.20%)</title><rect x="517.3" y="563.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3,514 samples, 0.20%)</title><rect x="517.3" y="547.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.3" y="558.0"></text>
</g>
<g>
<title>byte[] (2,001 samples, 0.11%)</title><rect x="517.3" y="531.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="520.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1,513 samples, 0.09%)</title><rect x="518.7" y="531.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="521.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (3,287 samples, 0.19%)</title><rect x="519.7" y="563.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3,287 samples, 0.19%)</title><rect x="519.7" y="547.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,287 samples, 0.19%)</title><rect x="519.7" y="531.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1,514 samples, 0.09%)</title><rect x="519.7" y="515.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="522.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,773 samples, 0.10%)</title><rect x="520.7" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.7" y="526.0"></text>
</g>
<g>
<title>byte[] (1,773 samples, 0.10%)</title><rect x="520.7" y="499.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="523.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,578 samples, 0.20%)</title><rect x="521.9" y="563.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3,578 samples, 0.20%)</title><rect x="521.9" y="547.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,578 samples, 0.20%)</title><rect x="521.9" y="531.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3,578 samples, 0.20%)</title><rect x="521.9" y="515.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,578 samples, 0.20%)</title><rect x="521.9" y="499.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,578 samples, 0.20%)</title><rect x="521.9" y="483.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="524.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6,028 samples, 0.34%)</title><rect x="524.3" y="563.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,996 samples, 0.11%)</title><rect x="524.3" y="547.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,996 samples, 0.11%)</title><rect x="524.3" y="531.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="527.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,519 samples, 0.14%)</title><rect x="525.6" y="547.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,519 samples, 0.14%)</title><rect x="525.6" y="531.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="528.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$440/1537378334.apply (1,513 samples, 0.09%)</title><rect x="527.3" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1,513 samples, 0.09%)</title><rect x="527.3" y="531.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,513 samples, 0.09%)</title><rect x="527.3" y="515.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="530.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (20,815 samples, 1.18%)</title><rect x="528.3" y="723.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (20,815 samples, 1.18%)</title><rect x="528.3" y="707.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (20,815 samples, 1.18%)</title><rect x="528.3" y="691.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (20,815 samples, 1.18%)</title><rect x="528.3" y="675.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (20,815 samples, 1.18%)</title><rect x="528.3" y="659.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (20,455 samples, 1.16%)</title><rect x="528.3" y="643.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,303 samples, 0.07%)</title><rect x="528.3" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,303 samples, 0.07%)</title><rect x="528.3" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$343/1636786673.get$Lambda (527 samples, 0.03%)</title><rect x="528.3" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$343 (527 samples, 0.03%)</title><rect x="528.3" y="579.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="531.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$348/1253487553.get$Lambda (776 samples, 0.04%)</title><rect x="528.6" y="595.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$348 (776 samples, 0.04%)</title><rect x="528.6" y="579.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="531.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (968 samples, 0.05%)</title><rect x="529.2" y="627.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="532.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1,331 samples, 0.08%)</title><rect x="529.8" y="627.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1,331 samples, 0.08%)</title><rect x="529.8" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (515 samples, 0.03%)</title><rect x="529.8" y="595.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="532.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (816 samples, 0.05%)</title><rect x="530.1" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (816 samples, 0.05%)</title><rect x="530.1" y="579.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="533.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (16,853 samples, 0.95%)</title><rect x="530.7" y="627.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (16,853 samples, 0.95%)</title><rect x="530.7" y="611.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/287410361.run (14,227 samples, 0.80%)</title><rect x="530.7" y="595.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (14,227 samples, 0.80%)</title><rect x="530.7" y="579.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (14,227 samples, 0.80%)</title><rect x="530.7" y="563.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4,017 samples, 0.23%)</title><rect x="530.7" y="547.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.7" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2,762 samples, 0.16%)</title><rect x="530.7" y="531.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.7" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (987 samples, 0.06%)</title><rect x="530.7" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.7" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (987 samples, 0.06%)</title><rect x="530.7" y="499.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="533.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,775 samples, 0.10%)</title><rect x="531.3" y="515.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.3" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,775 samples, 0.10%)</title><rect x="531.3" y="499.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="534.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1,255 samples, 0.07%)</title><rect x="532.5" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,255 samples, 0.07%)</title><rect x="532.5" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,255 samples, 0.07%)</title><rect x="532.5" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/22600334.get (743 samples, 0.04%)</title><rect x="532.5" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.5" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (743 samples, 0.04%)</title><rect x="532.5" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="535.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (512 samples, 0.03%)</title><rect x="533.0" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (512 samples, 0.03%)</title><rect x="533.0" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.0" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (512 samples, 0.03%)</title><rect x="533.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.0" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (512 samples, 0.03%)</title><rect x="533.0" y="435.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="536.0" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.map (528 samples, 0.03%)</title><rect x="533.4" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.4" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (528 samples, 0.03%)</title><rect x="533.4" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.4" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (528 samples, 0.03%)</title><rect x="533.4" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.4" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (528 samples, 0.03%)</title><rect x="533.4" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="536.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (9,682 samples, 0.55%)</title><rect x="533.7" y="547.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.7" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (701 samples, 0.04%)</title><rect x="533.7" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.7" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (701 samples, 0.04%)</title><rect x="533.7" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (701 samples, 0.04%)</title><rect x="533.7" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (701 samples, 0.04%)</title><rect x="533.7" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.7" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (701 samples, 0.04%)</title><rect x="533.7" y="467.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="536.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8,981 samples, 0.51%)</title><rect x="534.2" y="531.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (3,171 samples, 0.18%)</title><rect x="534.2" y="515.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (739 samples, 0.04%)</title><rect x="534.2" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (739 samples, 0.04%)</title><rect x="534.2" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (739 samples, 0.04%)</title><rect x="534.2" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (739 samples, 0.04%)</title><rect x="534.2" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (739 samples, 0.04%)</title><rect x="534.2" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.2" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (739 samples, 0.04%)</title><rect x="534.2" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="537.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (759 samples, 0.04%)</title><rect x="534.7" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (759 samples, 0.04%)</title><rect x="534.7" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (759 samples, 0.04%)</title><rect x="534.7" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (759 samples, 0.04%)</title><rect x="534.7" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (759 samples, 0.04%)</title><rect x="534.7" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.7" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (759 samples, 0.04%)</title><rect x="534.7" y="419.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="537.7" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (728 samples, 0.04%)</title><rect x="535.2" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (728 samples, 0.04%)</title><rect x="535.2" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (728 samples, 0.04%)</title><rect x="535.2" y="467.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="538.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (933 samples, 0.05%)</title><rect x="535.7" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="538.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2,204 samples, 0.12%)</title><rect x="536.3" y="515.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1,420 samples, 0.08%)</title><rect x="536.3" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1,420 samples, 0.08%)</title><rect x="536.3" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1,420 samples, 0.08%)</title><rect x="536.3" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,420 samples, 0.08%)</title><rect x="536.3" y="451.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="539.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (784 samples, 0.04%)</title><rect x="537.3" y="499.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (784 samples, 0.04%)</title><rect x="537.3" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (784 samples, 0.04%)</title><rect x="537.3" y="467.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="540.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3,606 samples, 0.20%)</title><rect x="537.8" y="515.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (789 samples, 0.04%)</title><rect x="537.8" y="499.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="540.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2,817 samples, 0.16%)</title><rect x="538.3" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (997 samples, 0.06%)</title><rect x="538.3" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (997 samples, 0.06%)</title><rect x="538.3" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (997 samples, 0.06%)</title><rect x="538.3" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (997 samples, 0.06%)</title><rect x="538.3" y="435.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="541.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1,820 samples, 0.10%)</title><rect x="539.0" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1,820 samples, 0.10%)</title><rect x="539.0" y="467.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (1,295 samples, 0.07%)</title><rect x="539.0" y="451.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="542.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (525 samples, 0.03%)</title><rect x="539.8" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (525 samples, 0.03%)</title><rect x="539.8" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="542.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2,626 samples, 0.15%)</title><rect x="540.2" y="595.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2,626 samples, 0.15%)</title><rect x="540.2" y="579.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2,626 samples, 0.15%)</title><rect x="540.2" y="563.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,093 samples, 0.12%)</title><rect x="540.2" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,093 samples, 0.12%)</title><rect x="540.2" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,093 samples, 0.12%)</title><rect x="540.2" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,093 samples, 0.12%)</title><rect x="540.2" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$476/955279240.accept (2,093 samples, 0.12%)</title><rect x="540.2" y="483.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2,093 samples, 0.12%)</title><rect x="540.2" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,093 samples, 0.12%)</title><rect x="540.2" y="451.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,093 samples, 0.12%)</title><rect x="540.2" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="543.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,093 samples, 0.12%)</title><rect x="540.2" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$488/398166842.apply (2,093 samples, 0.12%)</title><rect x="540.2" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2,093 samples, 0.12%)</title><rect x="540.2" y="387.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (2,093 samples, 0.12%)</title><rect x="540.2" y="371.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="543.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (533 samples, 0.03%)</title><rect x="541.6" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.6" y="558.0"></text>
</g>
<g>
<title>byte[] (533 samples, 0.03%)</title><rect x="541.6" y="531.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="544.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/972466412.run (162,482 samples, 9.19%)</title><rect x="542.2" y="755.0" width="108.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.2" y="766.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (162,482 samples, 9.19%)</title><rect x="542.2" y="739.0" width="108.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.2" y="750.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (162,482 samples, 9.19%)</title><rect x="542.2" y="723.0" width="108.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.2" y="734.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19,801 samples, 1.12%)</title><rect x="542.2" y="707.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (19,801 samples, 1.12%)</title><rect x="542.2" y="691.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19,801 samples, 1.12%)</title><rect x="542.2" y="675.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (14,215 samples, 0.80%)</title><rect x="542.2" y="659.0" width="9.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="545.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,586 samples, 0.32%)</title><rect x="551.7" y="659.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.7" y="670.0"></text>
</g>
<g>
<title>byte[] (5,586 samples, 0.32%)</title><rect x="551.7" y="643.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="554.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.MetaInfoRequest (14,829 samples, 0.84%)</title><rect x="555.4" y="707.0" width="9.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="558.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (44,472 samples, 2.52%)</title><rect x="565.3" y="707.0" width="29.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.3" y="718.0">ru..</text>
</g>
<g>
<title>java/lang/String.substring (13,975 samples, 0.79%)</title><rect x="565.3" y="691.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13,975 samples, 0.79%)</title><rect x="565.3" y="675.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (7,032 samples, 0.40%)</title><rect x="565.3" y="659.0" width="4.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="568.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,943 samples, 0.39%)</title><rect x="570.0" y="659.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.0" y="670.0"></text>
</g>
<g>
<title>byte[] (6,943 samples, 0.39%)</title><rect x="570.0" y="643.0" width="4.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="573.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,796 samples, 0.84%)</title><rect x="574.6" y="691.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,796 samples, 0.84%)</title><rect x="574.6" y="675.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.6" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14,796 samples, 0.84%)</title><rect x="574.6" y="659.0" width="9.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="577.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15,701 samples, 0.89%)</title><rect x="584.5" y="691.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="587.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (15,701 samples, 0.89%)</title><rect x="584.5" y="675.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15,701 samples, 0.89%)</title><rect x="584.5" y="659.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (7,935 samples, 0.45%)</title><rect x="584.5" y="643.0" width="5.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="587.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7,766 samples, 0.44%)</title><rect x="589.8" y="643.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.8" y="654.0"></text>
</g>
<g>
<title>byte[] (7,766 samples, 0.44%)</title><rect x="589.8" y="627.0" width="5.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="592.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.upserting (83,380 samples, 4.72%)</title><rect x="595.0" y="707.0" width="55.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.0" y="718.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (979 samples, 0.06%)</title><rect x="595.0" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (979 samples, 0.06%)</title><rect x="595.0" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (979 samples, 0.06%)</title><rect x="595.0" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="598.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (979 samples, 0.06%)</title><rect x="595.0" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.0" y="654.0"></text>
</g>
<g>
<title>byte[] (979 samples, 0.06%)</title><rect x="595.0" y="627.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="598.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3,329 samples, 0.19%)</title><rect x="595.6" y="691.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,329 samples, 0.19%)</title><rect x="595.6" y="675.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$118/533758526.get$Lambda (1,021 samples, 0.06%)</title><rect x="595.6" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.6" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$118 (1,021 samples, 0.06%)</title><rect x="595.6" y="643.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="598.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/28457964.get$Lambda (949 samples, 0.05%)</title><rect x="596.3" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$130 (949 samples, 0.05%)</title><rect x="596.3" y="643.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="599.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$137/1878611042.get$Lambda (1,359 samples, 0.08%)</title><rect x="596.9" y="659.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.9" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$137 (1,359 samples, 0.08%)</title><rect x="596.9" y="643.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,085 samples, 0.12%)</title><rect x="597.8" y="691.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,085 samples, 0.12%)</title><rect x="597.8" y="675.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.8" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,085 samples, 0.12%)</title><rect x="597.8" y="659.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="600.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2,758 samples, 0.16%)</title><rect x="599.2" y="691.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2,758 samples, 0.16%)</title><rect x="599.2" y="675.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,723 samples, 0.10%)</title><rect x="599.2" y="659.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="602.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,035 samples, 0.06%)</title><rect x="600.4" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,035 samples, 0.06%)</title><rect x="600.4" y="643.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="603.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,342 samples, 0.19%)</title><rect x="601.1" y="691.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,342 samples, 0.19%)</title><rect x="601.1" y="675.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,694 samples, 0.10%)</title><rect x="601.1" y="659.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="604.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,029 samples, 0.06%)</title><rect x="602.2" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.2" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,029 samples, 0.06%)</title><rect x="602.2" y="643.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="605.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$130/28457964.apply (516 samples, 0.03%)</title><rect x="603.0" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$8 (516 samples, 0.03%)</title><rect x="603.0" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (516 samples, 0.03%)</title><rect x="603.0" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,761 samples, 0.16%)</title><rect x="603.3" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,761 samples, 0.16%)</title><rect x="603.3" y="675.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,702 samples, 0.10%)</title><rect x="603.3" y="659.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="606.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,059 samples, 0.06%)</title><rect x="604.4" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,059 samples, 0.06%)</title><rect x="604.4" y="643.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="607.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (19,880 samples, 1.12%)</title><rect x="605.1" y="691.0" width="13.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.1" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,021 samples, 0.06%)</title><rect x="605.1" y="675.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="608.1" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3,998 samples, 0.23%)</title><rect x="605.8" y="675.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.8" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (1,024 samples, 0.06%)</title><rect x="605.8" y="659.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="608.8" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2,974 samples, 0.17%)</title><rect x="606.5" y="659.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1,637 samples, 0.09%)</title><rect x="606.5" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.5" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (1,637 samples, 0.09%)</title><rect x="606.5" y="627.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="609.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,337 samples, 0.08%)</title><rect x="607.6" y="643.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.6" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,337 samples, 0.08%)</title><rect x="607.6" y="627.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="610.6" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (637 samples, 0.04%)</title><rect x="608.5" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.5" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (637 samples, 0.04%)</title><rect x="608.5" y="659.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="611.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,347 samples, 0.13%)</title><rect x="608.9" y="675.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,347 samples, 0.13%)</title><rect x="608.9" y="659.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,347 samples, 0.13%)</title><rect x="608.9" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,347 samples, 0.13%)</title><rect x="608.9" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.9" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,347 samples, 0.13%)</title><rect x="608.9" y="611.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,343 samples, 0.13%)</title><rect x="608.9" y="595.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="611.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,991 samples, 0.11%)</title><rect x="610.6" y="675.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,991 samples, 0.11%)</title><rect x="610.6" y="659.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.6" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (1,991 samples, 0.11%)</title><rect x="610.6" y="643.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="613.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (9,783 samples, 0.55%)</title><rect x="611.9" y="675.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (7,771 samples, 0.44%)</title><rect x="611.9" y="659.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (5,738 samples, 0.32%)</title><rect x="611.9" y="643.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (5,738 samples, 0.32%)</title><rect x="611.9" y="627.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.9" y="638.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (2,008 samples, 0.11%)</title><rect x="611.9" y="611.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="614.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (3,730 samples, 0.21%)</title><rect x="613.2" y="611.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.2" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (3,730 samples, 0.21%)</title><rect x="613.2" y="595.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (3,730 samples, 0.21%)</title><rect x="613.2" y="579.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="616.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,730 samples, 0.21%)</title><rect x="613.2" y="563.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.2" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,999 samples, 0.11%)</title><rect x="613.2" y="547.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="616.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,731 samples, 0.10%)</title><rect x="614.6" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.6" y="558.0"></text>
</g>
<g>
<title>byte[] (1,731 samples, 0.10%)</title><rect x="614.6" y="531.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="617.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2,033 samples, 0.11%)</title><rect x="615.7" y="643.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2,033 samples, 0.11%)</title><rect x="615.7" y="627.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.7" y="638.0"></text>
</g>
<g>
<title>byte[] (1,377 samples, 0.08%)</title><rect x="615.7" y="611.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="618.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode.fromBytesNoCopy (656 samples, 0.04%)</title><rect x="616.6" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.6" y="622.0"></text>
</g>
<g>
<title>com.google.common.hash.HashCode$BytesHashCode (656 samples, 0.04%)</title><rect x="616.6" y="595.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="619.6" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,034 samples, 0.06%)</title><rect x="617.1" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Long (1,034 samples, 0.06%)</title><rect x="617.1" y="643.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="620.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (950 samples, 0.05%)</title><rect x="617.8" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (950 samples, 0.05%)</title><rect x="617.8" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.8" y="654.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (950 samples, 0.05%)</title><rect x="617.8" y="627.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="620.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doUpsert (44,198 samples, 2.50%)</title><rect x="618.4" y="691.0" width="29.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.4" y="702.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5,809 samples, 0.33%)</title><rect x="618.4" y="675.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,809 samples, 0.33%)</title><rect x="618.4" y="659.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$438/2076361235.get$Lambda (5,809 samples, 0.33%)</title><rect x="618.4" y="643.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.4" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$438 (5,809 samples, 0.33%)</title><rect x="618.4" y="627.0" width="3.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="621.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (19,083 samples, 1.08%)</title><rect x="622.3" y="675.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (19,083 samples, 1.08%)</title><rect x="622.3" y="659.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (12,425 samples, 0.70%)</title><rect x="622.3" y="643.0" width="8.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="625.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (6,658 samples, 0.38%)</title><rect x="630.6" y="643.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (6,658 samples, 0.38%)</title><rect x="630.6" y="627.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="633.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (19,306 samples, 1.09%)</title><rect x="635.0" y="675.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (19,306 samples, 1.09%)</title><rect x="635.0" y="659.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncRun (6,470 samples, 0.37%)</title><rect x="635.0" y="643.0" width="4.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="638.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (5,298 samples, 0.30%)</title><rect x="639.3" y="643.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="642.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7,538 samples, 0.43%)</title><rect x="642.9" y="643.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7,538 samples, 0.43%)</title><rect x="642.9" y="627.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7,502 samples, 0.42%)</title><rect x="642.9" y="611.0" width="5.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="645.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.runAsyncIfReplicasContainNode (4,048 samples, 0.23%)</title><rect x="647.9" y="691.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,064 samples, 0.06%)</title><rect x="647.9" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,064 samples, 0.06%)</title><rect x="647.9" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$126/245683815.get$Lambda (1,064 samples, 0.06%)</title><rect x="647.9" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.9" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.ReplicaWorker$$Lambda$126 (1,064 samples, 0.06%)</title><rect x="647.9" y="627.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="650.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2,984 samples, 0.17%)</title><rect x="648.6" y="675.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2,984 samples, 0.17%)</title><rect x="648.6" y="659.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (998 samples, 0.06%)</title><rect x="648.6" y="643.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="651.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (981 samples, 0.06%)</title><rect x="649.3" y="643.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="652.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,005 samples, 0.06%)</title><rect x="649.9" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,005 samples, 0.06%)</title><rect x="649.9" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,003 samples, 0.06%)</title><rect x="649.9" y="611.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="652.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (45,033 samples, 2.55%)</title><rect x="650.6" y="803.0" width="30.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.6" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (45,033 samples, 2.55%)</title><rect x="650.6" y="787.0" width="30.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.6" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (45,033 samples, 2.55%)</title><rect x="650.6" y="771.0" width="30.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.6" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (45,033 samples, 2.55%)</title><rect x="650.6" y="755.0" width="30.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.6" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (45,033 samples, 2.55%)</title><rect x="650.6" y="739.0" width="30.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.6" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (45,033 samples, 2.55%)</title><rect x="650.6" y="723.0" width="30.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.6" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (45,033 samples, 2.55%)</title><rect x="650.6" y="707.0" width="30.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.6" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (470 samples, 0.03%)</title><rect x="650.6" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (470 samples, 0.03%)</title><rect x="650.6" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (470 samples, 0.03%)</title><rect x="650.6" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (470 samples, 0.03%)</title><rect x="650.6" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (470 samples, 0.03%)</title><rect x="650.6" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (470 samples, 0.03%)</title><rect x="650.6" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (470 samples, 0.03%)</title><rect x="650.6" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (470 samples, 0.03%)</title><rect x="650.6" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (470 samples, 0.03%)</title><rect x="650.6" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (470 samples, 0.03%)</title><rect x="650.6" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (470 samples, 0.03%)</title><rect x="650.6" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (470 samples, 0.03%)</title><rect x="650.6" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (470 samples, 0.03%)</title><rect x="650.6" y="499.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="653.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (44,563 samples, 2.52%)</title><rect x="650.9" y="691.0" width="29.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.9" y="702.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$204/1435990821.accept (44,563 samples, 2.52%)</title><rect x="650.9" y="675.0" width="29.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.9" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (44,563 samples, 2.52%)</title><rect x="650.9" y="659.0" width="29.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.9" y="670.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36,434 samples, 2.06%)</title><rect x="650.9" y="643.0" width="24.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36,434 samples, 2.06%)</title><rect x="650.9" y="627.0" width="24.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.9" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36,434 samples, 2.06%)</title><rect x="650.9" y="611.0" width="24.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (36,434 samples, 2.06%)</title><rect x="650.9" y="595.0" width="24.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.9" y="606.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$137/1878611042.accept (36,434 samples, 2.06%)</title><rect x="650.9" y="579.0" width="24.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.9" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$upserting$9 (36,434 samples, 2.06%)</title><rect x="650.9" y="563.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.9" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getSuccessAndSendIfReachedExpected (36,434 samples, 2.06%)</title><rect x="650.9" y="547.0" width="24.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.9" y="558.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (1,830 samples, 0.10%)</title><rect x="650.9" y="531.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="653.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12,898 samples, 0.73%)</title><rect x="652.1" y="531.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.1" y="542.0"></text>
</g>
<g>
<title>byte[] (8,868 samples, 0.50%)</title><rect x="652.1" y="515.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="655.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (2,203 samples, 0.12%)</title><rect x="658.1" y="515.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="661.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1,827 samples, 0.10%)</title><rect x="659.5" y="515.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="662.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (21,706 samples, 1.23%)</title><rect x="660.7" y="531.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (21,706 samples, 1.23%)</title><rect x="660.7" y="515.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21,706 samples, 1.23%)</title><rect x="660.7" y="499.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21,706 samples, 1.23%)</title><rect x="660.7" y="483.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14,084 samples, 0.80%)</title><rect x="660.7" y="467.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.7" y="478.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14,084 samples, 0.80%)</title><rect x="660.7" y="451.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.7" y="462.0"></text>
</g>
<g>
<title>byte[] (10,664 samples, 0.60%)</title><rect x="660.7" y="435.0" width="7.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="663.7" y="446.0"></text>
</g>
<g>
<title>byte[] (3,420 samples, 0.19%)</title><rect x="667.9" y="435.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="670.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7,622 samples, 0.43%)</title><rect x="670.1" y="467.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.1" y="478.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7,622 samples, 0.43%)</title><rect x="670.1" y="451.0" width="5.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="673.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (8,129 samples, 0.46%)</title><rect x="675.2" y="643.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.2" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8,129 samples, 0.46%)</title><rect x="675.2" y="627.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.2" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (8,129 samples, 0.46%)</title><rect x="675.2" y="611.0" width="5.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="678.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (40,335 samples, 2.28%)</title><rect x="680.7" y="803.0" width="26.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.7" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (897 samples, 0.05%)</title><rect x="680.7" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (897 samples, 0.05%)</title><rect x="680.7" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$386/1698123332.get$Lambda (810 samples, 0.05%)</title><rect x="680.7" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$386 (810 samples, 0.05%)</title><rect x="680.7" y="739.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="683.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/298430307.linkToTargetMethod (1,219 samples, 0.07%)</title><rect x="681.3" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,219 samples, 0.07%)</title><rect x="681.3" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$387/771141945.get$Lambda (1,219 samples, 0.07%)</title><rect x="681.3" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$387 (1,219 samples, 0.07%)</title><rect x="681.3" y="739.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="684.3" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (11,671 samples, 0.66%)</title><rect x="682.1" y="787.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/2075659030.accept (9,603 samples, 0.54%)</title><rect x="682.1" y="771.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (9,603 samples, 0.54%)</title><rect x="682.1" y="755.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (9,603 samples, 0.54%)</title><rect x="682.1" y="739.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (9,602 samples, 0.54%)</title><rect x="682.1" y="723.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (9,602 samples, 0.54%)</title><rect x="682.1" y="707.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (9,602 samples, 0.54%)</title><rect x="682.1" y="691.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,602 samples, 0.54%)</title><rect x="682.1" y="675.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9,602 samples, 0.54%)</title><rect x="682.1" y="659.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9,602 samples, 0.54%)</title><rect x="682.1" y="643.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (9,602 samples, 0.54%)</title><rect x="682.1" y="627.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (9,602 samples, 0.54%)</title><rect x="682.1" y="611.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (9,602 samples, 0.54%)</title><rect x="682.1" y="595.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2,499 samples, 0.14%)</title><rect x="682.1" y="579.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2,499 samples, 0.14%)</title><rect x="682.1" y="563.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (2,499 samples, 0.14%)</title><rect x="682.1" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1,251 samples, 0.07%)</title><rect x="682.1" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1,251 samples, 0.07%)</title><rect x="682.1" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1,251 samples, 0.07%)</title><rect x="682.1" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1,251 samples, 0.07%)</title><rect x="682.1" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1,251 samples, 0.07%)</title><rect x="682.1" y="467.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="685.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,248 samples, 0.07%)</title><rect x="682.9" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,248 samples, 0.07%)</title><rect x="682.9" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,248 samples, 0.07%)</title><rect x="682.9" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,248 samples, 0.07%)</title><rect x="682.9" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,248 samples, 0.07%)</title><rect x="682.9" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,243 samples, 0.07%)</title><rect x="682.9" y="451.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="685.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (831 samples, 0.05%)</title><rect x="683.7" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (831 samples, 0.05%)</title><rect x="683.7" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (831 samples, 0.05%)</title><rect x="683.7" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405/227400038.get$Lambda (831 samples, 0.05%)</title><rect x="683.7" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405 (831 samples, 0.05%)</title><rect x="683.7" y="515.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="686.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (6,271 samples, 0.35%)</title><rect x="684.3" y="579.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (3,902 samples, 0.22%)</title><rect x="684.3" y="563.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,568 samples, 0.15%)</title><rect x="684.3" y="547.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.3" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,568 samples, 0.15%)</title><rect x="684.3" y="531.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="687.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1,334 samples, 0.08%)</title><rect x="686.0" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.0" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (1,334 samples, 0.08%)</title><rect x="686.0" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.0" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,334 samples, 0.08%)</title><rect x="686.0" y="515.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="689.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2,369 samples, 0.13%)</title><rect x="686.9" y="563.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$250/1111380793.get (2,369 samples, 0.13%)</title><rect x="686.9" y="547.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (2,369 samples, 0.13%)</title><rect x="686.9" y="531.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,369 samples, 0.13%)</title><rect x="686.9" y="515.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,357 samples, 0.13%)</title><rect x="686.9" y="499.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.9" y="510.0"></text>
</g>
<g>
<title>byte[] (2,323 samples, 0.13%)</title><rect x="686.9" y="483.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="689.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$391/625058377.accept (2,068 samples, 0.12%)</title><rect x="688.5" y="771.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2,068 samples, 0.12%)</title><rect x="688.5" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$387/771141945.run (2,068 samples, 0.12%)</title><rect x="688.5" y="739.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2,068 samples, 0.12%)</title><rect x="688.5" y="723.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2,068 samples, 0.12%)</title><rect x="688.5" y="707.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,068 samples, 0.12%)</title><rect x="688.5" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2,068 samples, 0.12%)</title><rect x="688.5" y="675.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.5" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2,068 samples, 0.12%)</title><rect x="688.5" y="659.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="691.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (985 samples, 0.06%)</title><rect x="689.9" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.9" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (985 samples, 0.06%)</title><rect x="689.9" y="771.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="692.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (2,443 samples, 0.14%)</title><rect x="690.5" y="787.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,259 samples, 0.07%)</title><rect x="690.5" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1,259 samples, 0.07%)</title><rect x="690.5" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1,259 samples, 0.07%)</title><rect x="690.5" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,259 samples, 0.07%)</title><rect x="690.5" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,259 samples, 0.07%)</title><rect x="690.5" y="707.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1,259 samples, 0.07%)</title><rect x="690.5" y="691.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.5" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1,259 samples, 0.07%)</title><rect x="690.5" y="675.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="693.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (1,184 samples, 0.07%)</title><rect x="691.4" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (1,184 samples, 0.07%)</title><rect x="691.4" y="755.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="694.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (8,214 samples, 0.46%)</title><rect x="692.1" y="787.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$276/960955001.run (4,049 samples, 0.23%)</title><rect x="692.1" y="771.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (4,049 samples, 0.23%)</title><rect x="692.1" y="755.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,049 samples, 0.23%)</title><rect x="692.1" y="739.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,049 samples, 0.23%)</title><rect x="692.1" y="723.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,049 samples, 0.23%)</title><rect x="692.1" y="707.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4,049 samples, 0.23%)</title><rect x="692.1" y="691.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (4,049 samples, 0.23%)</title><rect x="692.1" y="675.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (4,049 samples, 0.23%)</title><rect x="692.1" y="659.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (4,049 samples, 0.23%)</title><rect x="692.1" y="643.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4,049 samples, 0.23%)</title><rect x="692.1" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2,842 samples, 0.16%)</title><rect x="692.1" y="611.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2,842 samples, 0.16%)</title><rect x="692.1" y="595.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2,842 samples, 0.16%)</title><rect x="692.1" y="579.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (2,045 samples, 0.12%)</title><rect x="692.1" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.invoke (2,045 samples, 0.12%)</title><rect x="692.1" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,045 samples, 0.12%)</title><rect x="692.1" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,045 samples, 0.12%)</title><rect x="692.1" y="515.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,045 samples, 0.12%)</title><rect x="692.1" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.1" y="510.0"></text>
</g>
<g>
<title>byte[] (2,045 samples, 0.12%)</title><rect x="692.1" y="483.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="695.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (797 samples, 0.05%)</title><rect x="693.5" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (797 samples, 0.05%)</title><rect x="693.5" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (797 samples, 0.05%)</title><rect x="693.5" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405/227400038.get$Lambda (797 samples, 0.05%)</title><rect x="693.5" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$405 (797 samples, 0.05%)</title><rect x="693.5" y="499.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="696.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1,207 samples, 0.07%)</title><rect x="694.0" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,207 samples, 0.07%)</title><rect x="694.0" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,207 samples, 0.07%)</title><rect x="694.0" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,207 samples, 0.07%)</title><rect x="694.0" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,207 samples, 0.07%)</title><rect x="694.0" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,207 samples, 0.07%)</title><rect x="694.0" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,205 samples, 0.07%)</title><rect x="694.0" y="515.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="697.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$289/1211432.run (4,165 samples, 0.24%)</title><rect x="694.8" y="771.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (4,165 samples, 0.24%)</title><rect x="694.8" y="755.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,697 samples, 0.10%)</title><rect x="694.8" y="739.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,697 samples, 0.10%)</title><rect x="694.8" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1765573268.get$Lambda (1,697 samples, 0.10%)</title><rect x="694.8" y="707.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$401 (1,697 samples, 0.10%)</title><rect x="694.8" y="691.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="697.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,468 samples, 0.14%)</title><rect x="696.0" y="739.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,468 samples, 0.14%)</title><rect x="696.0" y="723.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,468 samples, 0.14%)</title><rect x="696.0" y="707.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,462 samples, 0.14%)</title><rect x="696.0" y="691.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="699.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,773 samples, 0.10%)</title><rect x="697.6" y="787.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,478 samples, 0.08%)</title><rect x="697.8" y="771.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (746 samples, 0.04%)</title><rect x="698.3" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.3" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (398 samples, 0.02%)</title><rect x="698.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (398 samples, 0.02%)</title><rect x="698.5" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.5" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (398 samples, 0.02%)</title><rect x="698.5" y="707.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="701.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (9,151 samples, 0.52%)</title><rect x="698.8" y="787.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (828 samples, 0.05%)</title><rect x="698.8" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (828 samples, 0.05%)</title><rect x="698.8" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$385/1587615542.get$Lambda (828 samples, 0.05%)</title><rect x="698.8" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.8" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$385 (828 samples, 0.05%)</title><rect x="698.8" y="723.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="701.8" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4,968 samples, 0.28%)</title><rect x="699.4" y="771.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (2,174 samples, 0.12%)</title><rect x="699.4" y="755.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.4" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (2,174 samples, 0.12%)</title><rect x="699.4" y="739.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="702.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,794 samples, 0.16%)</title><rect x="700.8" y="755.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,794 samples, 0.16%)</title><rect x="700.8" y="739.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="703.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3,355 samples, 0.19%)</title><rect x="702.7" y="771.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.7" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (3,355 samples, 0.19%)</title><rect x="702.7" y="755.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="705.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2,535 samples, 0.14%)</title><rect x="704.9" y="787.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2,535 samples, 0.14%)</title><rect x="704.9" y="771.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2,535 samples, 0.14%)</title><rect x="704.9" y="755.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2,531 samples, 0.14%)</title><rect x="704.9" y="739.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (894 samples, 0.05%)</title><rect x="704.9" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.9" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (894 samples, 0.05%)</title><rect x="704.9" y="707.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="707.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1,637 samples, 0.09%)</title><rect x="705.5" y="723.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,637 samples, 0.09%)</title><rect x="705.5" y="707.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,637 samples, 0.09%)</title><rect x="705.5" y="691.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,637 samples, 0.09%)</title><rect x="705.5" y="675.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,637 samples, 0.09%)</title><rect x="705.5" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.5" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,637 samples, 0.09%)</title><rect x="705.5" y="643.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="708.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1,189 samples, 0.07%)</title><rect x="706.6" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1,189 samples, 0.07%)</title><rect x="706.6" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1,189 samples, 0.07%)</title><rect x="706.6" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1,189 samples, 0.07%)</title><rect x="706.6" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (973 samples, 0.06%)</title><rect x="706.6" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.6" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (973 samples, 0.06%)</title><rect x="706.6" y="707.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="709.6" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (722,870 samples, 40.88%)</title><rect x="707.6" y="803.0" width="482.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.6" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36,205 samples, 2.05%)</title><rect x="707.6" y="787.0" width="24.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.6" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (36,205 samples, 2.05%)</title><rect x="707.6" y="771.0" width="24.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="710.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (686,665 samples, 38.83%)</title><rect x="731.8" y="787.0" width="458.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.8" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (686,665 samples, 38.83%)</title><rect x="731.8" y="771.0" width="458.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.8" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (686,665 samples, 38.83%)</title><rect x="731.8" y="755.0" width="458.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.8" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (280,036 samples, 15.84%)</title><rect x="731.8" y="739.0" width="186.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.8" y="750.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (280,036 samples, 15.84%)</title><rect x="731.8" y="723.0" width="186.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.8" y="734.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (258,123 samples, 14.60%)</title><rect x="731.8" y="707.0" width="172.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="718.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13,194 samples, 0.75%)</title><rect x="731.8" y="691.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (13,194 samples, 0.75%)</title><rect x="731.8" y="675.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13,194 samples, 0.75%)</title><rect x="731.8" y="659.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (6,631 samples, 0.38%)</title><rect x="731.8" y="643.0" width="4.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="734.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,563 samples, 0.37%)</title><rect x="736.2" y="643.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.2" y="654.0"></text>
</g>
<g>
<title>byte[] (6,563 samples, 0.37%)</title><rect x="736.2" y="627.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="739.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (244,929 samples, 13.85%)</title><rect x="740.6" y="691.0" width="163.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.6" y="702.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (8,547 samples, 0.48%)</title><rect x="740.6" y="675.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5,832 samples, 0.33%)</title><rect x="740.6" y="659.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,832 samples, 0.33%)</title><rect x="740.6" y="643.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/972466412.get$Lambda (5,832 samples, 0.33%)</title><rect x="740.6" y="627.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.6" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.boriskin.NewService$$Lambda$110 (5,832 samples, 0.33%)</title><rect x="740.6" y="611.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="743.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,715 samples, 0.15%)</title><rect x="744.5" y="659.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,715 samples, 0.15%)</title><rect x="744.5" y="643.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,518 samples, 0.14%)</title><rect x="744.5" y="627.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="747.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (236,382 samples, 13.37%)</title><rect x="746.3" y="675.0" width="157.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.3" y="686.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/util/Set.copyOf (236,382 samples, 13.37%)</title><rect x="746.3" y="659.0" width="157.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.3" y="670.0">java/util/Set.copyOf</text>
</g>
<g>
<title>java.util.HashSet (6,521 samples, 0.37%)</title><rect x="746.3" y="643.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="749.3" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (28,251 samples, 1.60%)</title><rect x="750.6" y="643.0" width="18.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.6" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (8,973 samples, 0.51%)</title><rect x="750.6" y="627.0" width="6.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="753.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (19,278 samples, 1.09%)</title><rect x="756.6" y="627.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13,482 samples, 0.76%)</title><rect x="756.6" y="611.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (13,482 samples, 0.76%)</title><rect x="756.6" y="595.0" width="9.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="759.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (5,796 samples, 0.33%)</title><rect x="765.6" y="611.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (5,796 samples, 0.33%)</title><rect x="765.6" y="595.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="768.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (146,257 samples, 8.27%)</title><rect x="769.5" y="643.0" width="97.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.5" y="654.0">java/util/H..</text>
</g>
<g>
<title>java.util.HashMap (10,559 samples, 0.60%)</title><rect x="769.5" y="627.0" width="7.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="772.5" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (135,698 samples, 7.67%)</title><rect x="776.5" y="627.0" width="90.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.5" y="638.0">java/util/..</text>
</g>
<g>
<title>java/util/HashSet.add (128,850 samples, 7.29%)</title><rect x="776.5" y="611.0" width="86.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.5" y="622.0">java/util/..</text>
</g>
<g>
<title>java/util/HashMap.put (128,850 samples, 7.29%)</title><rect x="776.5" y="595.0" width="86.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.5" y="606.0">java/util/..</text>
</g>
<g>
<title>java/util/HashMap.putVal (128,850 samples, 7.29%)</title><rect x="776.5" y="579.0" width="86.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.5" y="590.0">java/util/..</text>
</g>
<g>
<title>java/util/HashMap.newNode (86,247 samples, 4.88%)</title><rect x="776.5" y="563.0" width="57.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.5" y="574.0">java/u..</text>
</g>
<g>
<title>java.util.HashMap$Node (86,247 samples, 4.88%)</title><rect x="776.5" y="547.0" width="57.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="779.5" y="558.0">java.u..</text>
</g>
<g>
<title>java/util/HashMap.resize (42,603 samples, 2.41%)</title><rect x="834.1" y="563.0" width="28.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.1" y="574.0">ja..</text>
</g>
<g>
<title>java.util.HashMap$Node[] (9,851 samples, 0.56%)</title><rect x="834.1" y="547.0" width="6.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="837.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (32,752 samples, 1.85%)</title><rect x="840.6" y="547.0" width="21.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="843.6" y="558.0">j..</text>
</g>
<g>
<title>java/util/TreeSet.iterator (6,848 samples, 0.39%)</title><rect x="862.5" y="611.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (6,848 samples, 0.39%)</title><rect x="862.5" y="595.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (6,848 samples, 0.39%)</title><rect x="862.5" y="579.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (6,848 samples, 0.39%)</title><rect x="862.5" y="563.0" width="4.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="865.5" y="574.0"></text>
</g>
<g>
<title>java/util/Set.of (55,353 samples, 3.13%)</title><rect x="867.1" y="643.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.1" y="654.0">jav..</text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (4,606 samples, 0.26%)</title><rect x="867.1" y="627.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="870.1" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (50,747 samples, 2.87%)</title><rect x="870.1" y="627.0" width="33.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.1" y="638.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (50,747 samples, 2.87%)</title><rect x="870.1" y="611.0" width="33.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="873.1" y="622.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (21,913 samples, 1.24%)</title><rect x="904.0" y="707.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (21,913 samples, 1.24%)</title><rect x="904.0" y="691.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21,913 samples, 1.24%)</title><rect x="904.0" y="675.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (8,415 samples, 0.48%)</title><rect x="904.0" y="659.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="907.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13,498 samples, 0.76%)</title><rect x="909.6" y="659.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.6" y="670.0"></text>
</g>
<g>
<title>byte[] (13,498 samples, 0.76%)</title><rect x="909.6" y="643.0" width="9.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="912.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (80,237 samples, 4.54%)</title><rect x="918.6" y="739.0" width="53.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.6" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (8,109 samples, 0.46%)</title><rect x="918.6" y="723.0" width="5.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="921.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26,903 samples, 1.52%)</title><rect x="924.0" y="723.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.0" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (8,185 samples, 0.46%)</title><rect x="924.0" y="707.0" width="5.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="927.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (18,718 samples, 1.06%)</title><rect x="929.5" y="707.0" width="12.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="932.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45,225 samples, 2.56%)</title><rect x="942.0" y="723.0" width="30.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.0" y="734.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (45,225 samples, 2.56%)</title><rect x="942.0" y="707.0" width="30.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.0" y="718.0">on..</text>
</g>
<g>
<title>char[] (25,242 samples, 1.43%)</title><rect x="942.0" y="691.0" width="16.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="945.0" y="702.0"></text>
</g>
<g>
<title>char[] (2,619 samples, 0.15%)</title><rect x="958.8" y="691.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="961.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String (6,235 samples, 0.35%)</title><rect x="960.6" y="691.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="963.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11,129 samples, 0.63%)</title><rect x="964.8" y="691.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11,129 samples, 0.63%)</title><rect x="964.8" y="675.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11,129 samples, 0.63%)</title><rect x="964.8" y="659.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.8" y="670.0"></text>
</g>
<g>
<title>byte[] (11,129 samples, 0.63%)</title><rect x="964.8" y="643.0" width="7.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="967.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19,514 samples, 1.10%)</title><rect x="972.2" y="739.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.2" y="750.0"></text>
</g>
<g>
<title>byte[] (19,514 samples, 1.10%)</title><rect x="972.2" y="723.0" width="13.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="975.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6,932 samples, 0.39%)</title><rect x="985.2" y="739.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="988.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,932 samples, 0.39%)</title><rect x="985.2" y="723.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,932 samples, 0.39%)</title><rect x="985.2" y="707.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.2" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,602 samples, 0.37%)</title><rect x="985.4" y="691.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.4" y="702.0"></text>
</g>
<g>
<title>byte[] (6,602 samples, 0.37%)</title><rect x="985.4" y="675.0" width="4.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="988.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (299,946 samples, 16.96%)</title><rect x="989.8" y="739.0" width="200.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.8" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (299,946 samples, 16.96%)</title><rect x="989.8" y="723.0" width="200.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.8" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (99,178 samples, 5.61%)</title><rect x="989.8" y="707.0" width="66.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="992.8" y="718.0">char[]</text>
</g>
<g>
<title>char[] (80,319 samples, 4.54%)</title><rect x="1056.0" y="707.0" width="53.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1059.0" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (44,950 samples, 2.54%)</title><rect x="1109.6" y="707.0" width="30.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1112.6" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (75,499 samples, 4.27%)</title><rect x="1139.6" y="707.0" width="50.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.6" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (75,499 samples, 4.27%)</title><rect x="1139.6" y="691.0" width="50.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.6" y="702.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (75,499 samples, 4.27%)</title><rect x="1139.6" y="675.0" width="50.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.6" y="686.0">java/..</text>
</g>
<g>
<title>byte[] (71,706 samples, 4.06%)</title><rect x="1139.6" y="659.0" width="47.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1142.6" y="670.0">byte[]</text>
</g>
<g>
<title>byte[] (3,793 samples, 0.21%)</title><rect x="1187.5" y="659.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1190.5" y="670.0"></text>
</g>
</g>
</svg>
