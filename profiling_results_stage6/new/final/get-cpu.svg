<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (22,513 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (40 samples, 0.18%)</title><rect x="10.0" y="1139.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (40 samples, 0.18%)</title><rect x="10.0" y="1123.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (40 samples, 0.18%)</title><rect x="10.0" y="1107.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (39 samples, 0.17%)</title><rect x="10.1" y="1091.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.1" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (35 samples, 0.16%)</title><rect x="10.1" y="1075.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.1" y="1086.0"></text>
</g>
<g>
<title>[no_Java_frame] (16 samples, 0.07%)</title><rect x="12.1" y="1139.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="15.1" y="1150.0"></text>
</g>
<g>
<title>[not_walkable_Java] (16 samples, 0.07%)</title><rect x="12.9" y="1139.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="15.9" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.03%)</title><rect x="13.2" y="1123.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.2" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.03%)</title><rect x="13.2" y="1107.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.04%)</title><rect x="13.8" y="1139.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="16.8" y="1150.0"></text>
</g>
<g>
<title>[unknown_Java] (27 samples, 0.12%)</title><rect x="14.2" y="1139.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="17.2" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.08%)</title><rect x="14.6" y="1123.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.6" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (17 samples, 0.08%)</title><rect x="14.6" y="1107.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.run (20,943 samples, 93.03%)</title><rect x="15.9" y="1139.0" width="1097.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.9" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20,943 samples, 93.03%)</title><rect x="15.9" y="1123.0" width="1097.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.9" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20,943 samples, 93.03%)</title><rect x="15.9" y="1107.0" width="1097.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.9" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (8 samples, 0.04%)</title><rect x="16.3" y="1091.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="19.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (12,960 samples, 57.57%)</title><rect x="16.7" y="1091.0" width="679.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.7" y="1102.0">java/util/concurrent/CompletableFuture$AsyncRun.run</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$527/406022516.run (12,958 samples, 57.56%)</title><rect x="16.8" y="1075.0" width="679.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.8" y="1086.0">ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$527/406022516.run</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5 (12,958 samples, 57.56%)</title><rect x="16.8" y="1059.0" width="679.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.8" y="1070.0">ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (270 samples, 1.20%)</title><rect x="17.0" y="1043.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (269 samples, 1.19%)</title><rect x="17.0" y="1027.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (251 samples, 1.11%)</title><rect x="17.4" y="1011.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.05%)</title><rect x="17.4" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="17.8" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.8" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (239 samples, 1.06%)</title><rect x="18.1" y="995.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (239 samples, 1.06%)</title><rect x="18.1" y="979.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.1" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (239 samples, 1.06%)</title><rect x="18.1" y="963.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.1" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (239 samples, 1.06%)</title><rect x="18.1" y="947.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.1" y="958.0"></text>
</g>
<g>
<title>__send (233 samples, 1.03%)</title><rect x="18.4" y="931.0" width="12.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="21.4" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (224 samples, 0.99%)</title><rect x="18.9" y="915.0" width="11.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (223 samples, 0.99%)</title><rect x="18.9" y="899.0" width="11.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.9" y="910.0"></text>
</g>
<g>
<title>__x64_sys_sendto (222 samples, 0.99%)</title><rect x="18.9" y="883.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.9" y="894.0"></text>
</g>
<g>
<title>__sys_sendto (221 samples, 0.98%)</title><rect x="18.9" y="867.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.9" y="878.0"></text>
</g>
<g>
<title>sock_sendmsg (214 samples, 0.95%)</title><rect x="19.0" y="851.0" width="11.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="22.0" y="862.0"></text>
</g>
<g>
<title>inet6_sendmsg (211 samples, 0.94%)</title><rect x="19.1" y="835.0" width="11.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.1" y="846.0"></text>
</g>
<g>
<title>tcp_sendmsg (211 samples, 0.94%)</title><rect x="19.1" y="819.0" width="11.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="22.1" y="830.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (205 samples, 0.91%)</title><rect x="19.3" y="803.0" width="10.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="22.3" y="814.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="20.0" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.0" y="798.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="20.0" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="23.0" y="782.0"></text>
</g>
<g>
<title>tcp_push (183 samples, 0.81%)</title><rect x="20.4" y="787.0" width="9.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="23.4" y="798.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (182 samples, 0.81%)</title><rect x="20.4" y="771.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="23.4" y="782.0"></text>
</g>
<g>
<title>tcp_write_xmit (181 samples, 0.80%)</title><rect x="20.4" y="755.0" width="9.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="23.4" y="766.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (170 samples, 0.76%)</title><rect x="20.6" y="739.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="23.6" y="750.0"></text>
</g>
<g>
<title>ip_queue_xmit (164 samples, 0.73%)</title><rect x="20.9" y="723.0" width="8.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.9" y="734.0"></text>
</g>
<g>
<title>__ip_queue_xmit (163 samples, 0.72%)</title><rect x="20.9" y="707.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.9" y="718.0"></text>
</g>
<g>
<title>ip_local_out (162 samples, 0.72%)</title><rect x="20.9" y="691.0" width="8.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.9" y="702.0"></text>
</g>
<g>
<title>__ip_local_out (37 samples, 0.16%)</title><rect x="20.9" y="675.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.9" y="686.0"></text>
</g>
<g>
<title>nf_hook_slow (34 samples, 0.15%)</title><rect x="21.1" y="659.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="24.1" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (26 samples, 0.12%)</title><rect x="21.3" y="643.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.3" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (24 samples, 0.11%)</title><rect x="21.4" y="627.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.4" y="638.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (10 samples, 0.04%)</title><rect x="21.4" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="24.4" y="622.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (11 samples, 0.05%)</title><rect x="22.1" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.1" y="622.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.03%)</title><rect x="22.3" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.3" y="606.0"></text>
</g>
<g>
<title>ip_output (123 samples, 0.55%)</title><rect x="22.8" y="675.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="25.8" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (120 samples, 0.53%)</title><rect x="22.9" y="659.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="25.9" y="670.0"></text>
</g>
<g>
<title>__ip_finish_output (119 samples, 0.53%)</title><rect x="22.9" y="643.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.9" y="654.0"></text>
</g>
<g>
<title>ip_finish_output2 (118 samples, 0.52%)</title><rect x="23.0" y="627.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.0" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (103 samples, 0.46%)</title><rect x="23.2" y="611.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="26.2" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.0 (103 samples, 0.46%)</title><rect x="23.2" y="595.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.2" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (103 samples, 0.46%)</title><rect x="23.2" y="579.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="26.2" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (103 samples, 0.46%)</title><rect x="23.2" y="563.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="26.2" y="574.0"></text>
</g>
<g>
<title>net_rx_action (100 samples, 0.44%)</title><rect x="23.4" y="547.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="26.4" y="558.0"></text>
</g>
<g>
<title>process_backlog (98 samples, 0.44%)</title><rect x="23.5" y="531.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.5" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (94 samples, 0.42%)</title><rect x="23.7" y="515.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.7" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (93 samples, 0.41%)</title><rect x="23.7" y="499.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="26.7" y="510.0"></text>
</g>
<g>
<title>ip_rcv (89 samples, 0.40%)</title><rect x="23.9" y="483.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.9" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (80 samples, 0.36%)</title><rect x="24.0" y="467.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="27.0" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (80 samples, 0.36%)</title><rect x="24.0" y="451.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.0" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (75 samples, 0.33%)</title><rect x="24.0" y="435.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.0" y="446.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (75 samples, 0.33%)</title><rect x="24.0" y="419.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.0" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (73 samples, 0.32%)</title><rect x="24.1" y="403.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.1" y="414.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.02%)</title><rect x="24.2" y="387.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="27.2" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (64 samples, 0.28%)</title><rect x="24.6" y="387.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.6" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (62 samples, 0.28%)</title><rect x="24.7" y="371.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="27.7" y="382.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.03%)</title><rect x="25.1" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.1" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.03%)</title><rect x="25.1" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.1" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.03%)</title><rect x="25.1" y="323.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="28.1" y="334.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.03%)</title><rect x="25.1" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="28.1" y="318.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.09%)</title><rect x="25.6" y="355.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="28.6" y="366.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.05%)</title><rect x="26.0" y="339.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.0" y="350.0"></text>
</g>
<g>
<title>tcp_data_ready (21 samples, 0.09%)</title><rect x="26.7" y="355.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.7" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (21 samples, 0.09%)</title><rect x="26.7" y="339.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.7" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.09%)</title><rect x="26.7" y="323.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.7" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.09%)</title><rect x="26.7" y="307.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="29.7" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.09%)</title><rect x="26.7" y="291.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.7" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 0.05%)</title><rect x="28.6" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="31.6" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.04%)</title><rect x="28.7" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.7" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.03%)</title><rect x="28.7" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="30.2" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.2" y="862.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.03%)</title><rect x="30.2" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.2" y="846.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="30.2" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.2" y="830.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.03%)</title><rect x="30.2" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.04%)</title><rect x="30.6" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.02%)</title><rect x="30.8" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.02%)</title><rect x="30.8" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (12,678 samples, 56.31%)</title><rect x="31.1" y="1043.0" width="664.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.1" y="1054.0">ru/mail/polis/service/boriskin/Value.from</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (323 samples, 1.43%)</title><rect x="31.3" y="1027.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.3" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (321 samples, 1.43%)</title><rect x="31.3" y="1011.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (11 samples, 0.05%)</title><rect x="31.3" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.3" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (11 samples, 0.05%)</title><rect x="31.3" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.3" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (11 samples, 0.05%)</title><rect x="31.3" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.3" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.05%)</title><rect x="31.3" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.3" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.05%)</title><rect x="31.3" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.3" y="942.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.04%)</title><rect x="31.4" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.4" y="926.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.04%)</title><rect x="31.4" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (10 samples, 0.04%)</title><rect x="31.4" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (10 samples, 0.04%)</title><rect x="31.4" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.4" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="31.4" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.4" y="862.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="31.5" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.5" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (310 samples, 1.38%)</title><rect x="31.9" y="995.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.9" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (310 samples, 1.38%)</title><rect x="31.9" y="979.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.9" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (310 samples, 1.38%)</title><rect x="31.9" y="963.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.9" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (310 samples, 1.38%)</title><rect x="31.9" y="947.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (310 samples, 1.38%)</title><rect x="31.9" y="931.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.9" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (310 samples, 1.38%)</title><rect x="31.9" y="915.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.9" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (303 samples, 1.35%)</title><rect x="31.9" y="899.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (300 samples, 1.33%)</title><rect x="32.1" y="883.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (300 samples, 1.33%)</title><rect x="32.1" y="867.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (299 samples, 1.33%)</title><rect x="32.1" y="851.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (104 samples, 0.46%)</title><rect x="32.3" y="835.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (103 samples, 0.46%)</title><rect x="32.3" y="819.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (103 samples, 0.46%)</title><rect x="32.3" y="803.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (94 samples, 0.42%)</title><rect x="32.5" y="787.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (88 samples, 0.39%)</title><rect x="32.8" y="771.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (76 samples, 0.34%)</title><rect x="32.8" y="755.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (76 samples, 0.34%)</title><rect x="32.8" y="739.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.8" y="750.0"></text>
</g>
<g>
<title>__libc_pread64 (70 samples, 0.31%)</title><rect x="33.1" y="723.0" width="3.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="36.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.22%)</title><rect x="34.1" y="707.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="37.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.21%)</title><rect x="34.2" y="691.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (35 samples, 0.16%)</title><rect x="34.9" y="675.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.9" y="686.0"></text>
</g>
<g>
<title>ksys_pread64 (34 samples, 0.15%)</title><rect x="34.9" y="659.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="37.9" y="670.0"></text>
</g>
<g>
<title>vfs_read (30 samples, 0.13%)</title><rect x="35.2" y="643.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.2" y="654.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.07%)</title><rect x="35.3" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="38.3" y="638.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.06%)</title><rect x="35.4" y="611.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.4" y="622.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.05%)</title><rect x="35.5" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="38.5" y="606.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.05%)</title><rect x="35.5" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.5" y="590.0"></text>
</g>
<g>
<title>generic_file_buffered_read (12 samples, 0.05%)</title><rect x="35.5" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="38.5" y="574.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.02%)</title><rect x="35.6" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="38.6" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.05%)</title><rect x="36.2" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.2" y="638.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.04%)</title><rect x="36.3" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="39.3" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.03%)</title><rect x="36.3" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="39.3" y="606.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.03%)</title><rect x="36.3" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="39.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (12 samples, 0.05%)</title><rect x="36.8" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (192 samples, 0.85%)</title><rect x="37.7" y="835.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (191 samples, 0.85%)</title><rect x="37.8" y="819.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (7 samples, 0.03%)</title><rect x="38.0" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.0" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.03%)</title><rect x="38.0" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (174 samples, 0.77%)</title><rect x="38.4" y="803.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.03%)</title><rect x="38.4" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.02%)</title><rect x="38.4" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.02%)</title><rect x="38.4" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (160 samples, 0.71%)</title><rect x="38.8" y="787.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (153 samples, 0.68%)</title><rect x="38.8" y="771.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (153 samples, 0.68%)</title><rect x="38.8" y="755.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.8" y="766.0"></text>
</g>
<g>
<title>__libc_pread64 (143 samples, 0.64%)</title><rect x="39.0" y="739.0" width="7.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="42.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (85 samples, 0.38%)</title><rect x="42.1" y="723.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="45.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (85 samples, 0.38%)</title><rect x="42.1" y="707.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="45.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (66 samples, 0.29%)</title><rect x="43.1" y="691.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.1" y="702.0"></text>
</g>
<g>
<title>ksys_pread64 (66 samples, 0.29%)</title><rect x="43.1" y="675.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.1" y="686.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.03%)</title><rect x="43.1" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="43.1" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="46.1" y="654.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.03%)</title><rect x="43.1" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="46.1" y="638.0"></text>
</g>
<g>
<title>vfs_read (56 samples, 0.25%)</title><rect x="43.6" y="659.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="46.6" y="670.0"></text>
</g>
<g>
<title>__vfs_read (31 samples, 0.14%)</title><rect x="43.9" y="643.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.9" y="654.0"></text>
</g>
<g>
<title>new_sync_read (27 samples, 0.12%)</title><rect x="44.1" y="627.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.1" y="638.0"></text>
</g>
<g>
<title>ext4_file_read_iter (22 samples, 0.10%)</title><rect x="44.3" y="611.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="47.3" y="622.0"></text>
</g>
<g>
<title>generic_file_read_iter (20 samples, 0.09%)</title><rect x="44.4" y="595.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.4" y="606.0"></text>
</g>
<g>
<title>generic_file_buffered_read (20 samples, 0.09%)</title><rect x="44.4" y="579.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="47.4" y="590.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.03%)</title><rect x="44.6" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.6" y="574.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.02%)</title><rect x="45.1" y="563.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.1" y="574.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.02%)</title><rect x="45.1" y="547.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="48.1" y="558.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.03%)</title><rect x="45.5" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="48.5" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (13 samples, 0.06%)</title><rect x="45.9" y="643.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.9" y="654.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.05%)</title><rect x="46.0" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="49.0" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.03%)</title><rect x="46.2" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="49.2" y="622.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.03%)</title><rect x="46.2" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (7 samples, 0.03%)</title><rect x="46.8" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.03%)</title><rect x="47.2" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.2" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.02%)</title><rect x="47.2" y="771.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.02%)</title><rect x="47.2" y="755.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (5 samples, 0.02%)</title><rect x="47.2" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.2" y="750.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="47.8" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.8" y="910.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="47.8" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.03%)</title><rect x="47.8" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.03%)</title><rect x="47.8" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.03%)</title><rect x="47.8" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.8" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="47.8" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (12,350 samples, 54.86%)</title><rect x="48.3" y="1027.0" width="647.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.3" y="1038.0">ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,333 samples, 5.92%)</title><rect x="48.3" y="1011.0" width="69.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.3" y="1022.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,332 samples, 5.92%)</title><rect x="48.4" y="995.0" width="69.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.4" y="1006.0">com/goo..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,318 samples, 5.85%)</title><rect x="49.1" y="979.0" width="69.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.1" y="990.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,318 samples, 5.85%)</title><rect x="49.1" y="963.0" width="69.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.1" y="974.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,317 samples, 5.85%)</title><rect x="49.2" y="947.0" width="69.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.2" y="958.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,317 samples, 5.85%)</title><rect x="49.2" y="931.0" width="69.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.2" y="942.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,317 samples, 5.85%)</title><rect x="49.2" y="915.0" width="69.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.2" y="926.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,317 samples, 5.85%)</title><rect x="49.2" y="899.0" width="69.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.2" y="910.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,305 samples, 5.80%)</title><rect x="49.2" y="883.0" width="68.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.2" y="894.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (10 samples, 0.04%)</title><rect x="49.2" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="49.4" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.03%)</title><rect x="49.4" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (6 samples, 0.03%)</title><rect x="49.4" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,294 samples, 5.75%)</title><rect x="49.7" y="867.0" width="67.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.7" y="878.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (1,294 samples, 5.75%)</title><rect x="49.7" y="851.0" width="67.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.7" y="862.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (1,293 samples, 5.74%)</title><rect x="49.8" y="835.0" width="67.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.8" y="846.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.03%)</title><rect x="49.8" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="49.9" y="803.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="49.9" y="787.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (424 samples, 1.88%)</title><rect x="50.3" y="819.0" width="22.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.3" y="830.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.03%)</title><rect x="50.3" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.3" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="50.3" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="50.3" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (417 samples, 1.85%)</title><rect x="50.6" y="803.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.6" y="814.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (412 samples, 1.83%)</title><rect x="50.9" y="787.0" width="21.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.9" y="798.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (14 samples, 0.06%)</title><rect x="50.9" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.9" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (14 samples, 0.06%)</title><rect x="50.9" y="755.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (11 samples, 0.05%)</title><rect x="51.7" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.7" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (9 samples, 0.04%)</title><rect x="51.8" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.8" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.02%)</title><rect x="52.0" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.0" y="750.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.02%)</title><rect x="52.0" y="723.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.02%)</title><rect x="52.0" y="707.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (356 samples, 1.58%)</title><rect x="52.2" y="771.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.04%)</title><rect x="52.2" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.2" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.02%)</title><rect x="52.5" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.02%)</title><rect x="52.5" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (325 samples, 1.44%)</title><rect x="52.8" y="755.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (304 samples, 1.35%)</title><rect x="52.9" y="739.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (304 samples, 1.35%)</title><rect x="52.9" y="723.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.9" y="734.0"></text>
</g>
<g>
<title>__libc_pread64 (290 samples, 1.29%)</title><rect x="53.2" y="707.0" width="15.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="56.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (180 samples, 0.80%)</title><rect x="59.0" y="691.0" width="9.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (177 samples, 0.79%)</title><rect x="59.1" y="675.0" width="9.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="62.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (126 samples, 0.56%)</title><rect x="61.8" y="659.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="64.8" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (124 samples, 0.55%)</title><rect x="61.9" y="643.0" width="6.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="64.9" y="654.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.06%)</title><rect x="62.1" y="627.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.06%)</title><rect x="62.1" y="611.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="65.1" y="622.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.05%)</title><rect x="62.2" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="65.2" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.02%)</title><rect x="62.8" y="627.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="65.8" y="638.0"></text>
</g>
<g>
<title>vfs_read (100 samples, 0.44%)</title><rect x="63.1" y="627.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="66.1" y="638.0"></text>
</g>
<g>
<title>__vfs_read (65 samples, 0.29%)</title><rect x="63.5" y="611.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="66.5" y="622.0"></text>
</g>
<g>
<title>new_sync_read (62 samples, 0.28%)</title><rect x="63.7" y="595.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="66.7" y="606.0"></text>
</g>
<g>
<title>ext4_file_read_iter (56 samples, 0.25%)</title><rect x="63.9" y="579.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="66.9" y="590.0"></text>
</g>
<g>
<title>generic_file_read_iter (51 samples, 0.23%)</title><rect x="64.2" y="563.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="67.2" y="574.0"></text>
</g>
<g>
<title>generic_file_buffered_read (51 samples, 0.23%)</title><rect x="64.2" y="547.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.2" y="558.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 0.05%)</title><rect x="64.7" y="531.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.7" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.02%)</title><rect x="65.0" y="515.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="68.0" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (18 samples, 0.08%)</title><rect x="65.4" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.4" y="542.0"></text>
</g>
<g>
<title>find_get_entry (17 samples, 0.08%)</title><rect x="65.5" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="68.5" y="526.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.02%)</title><rect x="65.9" y="499.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="68.9" y="510.0"></text>
</g>
<g>
<title>touch_atime (8 samples, 0.04%)</title><rect x="66.5" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.5" y="542.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.03%)</title><rect x="66.6" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.6" y="526.0"></text>
</g>
<g>
<title>current_time (6 samples, 0.03%)</title><rect x="66.6" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="69.6" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (23 samples, 0.10%)</title><rect x="67.1" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.1" y="622.0"></text>
</g>
<g>
<title>security_file_permission (18 samples, 0.08%)</title><rect x="67.3" y="595.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.3" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (11 samples, 0.05%)</title><rect x="67.4" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.4" y="590.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.04%)</title><rect x="67.5" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.5" y="574.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.02%)</title><rect x="68.5" y="707.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="71.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (18 samples, 0.08%)</title><rect x="68.9" y="739.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (21 samples, 0.09%)</title><rect x="69.8" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.8" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (20 samples, 0.09%)</title><rect x="69.8" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.8" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (20 samples, 0.09%)</title><rect x="69.8" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (20 samples, 0.09%)</title><rect x="69.8" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (23 samples, 0.10%)</title><rect x="70.9" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.9" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="71.4" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="74.4" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.02%)</title><rect x="71.4" y="739.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="74.4" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="71.4" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.02%)</title><rect x="71.4" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="74.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.04%)</title><rect x="71.7" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (7 samples, 0.03%)</title><rect x="72.1" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (860 samples, 3.82%)</title><rect x="72.5" y="819.0" width="45.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.5" y="830.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (860 samples, 3.82%)</title><rect x="72.5" y="803.0" width="45.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.5" y="814.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (48 samples, 0.21%)</title><rect x="72.8" y="787.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.8" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (47 samples, 0.21%)</title><rect x="72.8" y="771.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.8" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (14 samples, 0.06%)</title><rect x="74.6" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.6" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (14 samples, 0.06%)</title><rect x="74.6" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (14 samples, 0.06%)</title><rect x="74.6" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (18 samples, 0.08%)</title><rect x="75.3" y="787.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.3" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (18 samples, 0.08%)</title><rect x="75.3" y="771.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.3" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.03%)</title><rect x="75.9" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.9" y="766.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.03%)</title><rect x="75.9" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.03%)</title><rect x="75.9" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (746 samples, 3.31%)</title><rect x="76.3" y="787.0" width="39.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.3" y="798.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (15 samples, 0.07%)</title><rect x="76.4" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (13 samples, 0.06%)</title><rect x="76.4" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (13 samples, 0.06%)</title><rect x="76.4" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (693 samples, 3.08%)</title><rect x="77.1" y="771.0" width="36.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.1" y="782.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (667 samples, 2.96%)</title><rect x="77.2" y="755.0" width="35.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.2" y="766.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (667 samples, 2.96%)</title><rect x="77.2" y="739.0" width="35.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.2" y="750.0">su..</text>
</g>
<g>
<title>__libc_pread64 (627 samples, 2.79%)</title><rect x="78.4" y="723.0" width="32.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.4" y="734.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (409 samples, 1.82%)</title><rect x="89.8" y="707.0" width="21.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.8" y="718.0">e..</text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.04%)</title><rect x="89.8" y="691.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="92.8" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.03%)</title><rect x="90.4" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="93.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (393 samples, 1.75%)</title><rect x="90.7" y="691.0" width="20.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="93.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (307 samples, 1.36%)</title><rect x="95.2" y="675.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.2" y="686.0"></text>
</g>
<g>
<title>ksys_pread64 (306 samples, 1.36%)</title><rect x="95.2" y="659.0" width="16.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.2" y="670.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.07%)</title><rect x="95.5" y="643.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="98.5" y="654.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.07%)</title><rect x="95.5" y="627.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="98.5" y="638.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.07%)</title><rect x="95.5" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="98.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.05%)</title><rect x="96.3" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="99.3" y="654.0"></text>
</g>
<g>
<title>fput_many (11 samples, 0.05%)</title><rect x="97.2" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="100.2" y="654.0"></text>
</g>
<g>
<title>vfs_read (257 samples, 1.14%)</title><rect x="97.8" y="643.0" width="13.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="100.8" y="654.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.03%)</title><rect x="98.8" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.8" y="638.0"></text>
</g>
<g>
<title>__vfs_read (165 samples, 0.73%)</title><rect x="99.2" y="627.0" width="8.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.2" y="638.0"></text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.05%)</title><rect x="99.2" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="102.2" y="622.0"></text>
</g>
<g>
<title>new_sync_read (153 samples, 0.68%)</title><rect x="99.8" y="611.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.8" y="622.0"></text>
</g>
<g>
<title>ext4_file_read_iter (141 samples, 0.63%)</title><rect x="100.4" y="595.0" width="7.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="103.4" y="606.0"></text>
</g>
<g>
<title>generic_file_read_iter (134 samples, 0.60%)</title><rect x="100.8" y="579.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.8" y="590.0"></text>
</g>
<g>
<title>generic_file_buffered_read (129 samples, 0.57%)</title><rect x="100.9" y="563.0" width="6.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="103.9" y="574.0"></text>
</g>
<g>
<title>copy_page_to_iter (29 samples, 0.13%)</title><rect x="102.7" y="547.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.7" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (15 samples, 0.07%)</title><rect x="103.3" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="106.3" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (35 samples, 0.16%)</title><rect x="104.3" y="547.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="107.3" y="558.0"></text>
</g>
<g>
<title>find_get_entry (30 samples, 0.13%)</title><rect x="104.5" y="531.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="107.5" y="542.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.03%)</title><rect x="105.6" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="108.6" y="526.0"></text>
</g>
<g>
<title>touch_atime (27 samples, 0.12%)</title><rect x="106.2" y="547.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.2" y="558.0"></text>
</g>
<g>
<title>atime_needs_update (21 samples, 0.09%)</title><rect x="106.5" y="531.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.5" y="542.0"></text>
</g>
<g>
<title>current_time (14 samples, 0.06%)</title><rect x="106.8" y="515.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.8" y="526.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (5 samples, 0.02%)</title><rect x="107.1" y="499.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.1" y="510.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.04%)</title><rect x="107.8" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.8" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (57 samples, 0.25%)</title><rect x="108.3" y="627.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.3" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.04%)</title><rect x="108.6" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.6" y="622.0"></text>
</g>
<g>
<title>security_file_permission (38 samples, 0.17%)</title><rect x="109.3" y="611.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.3" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (14 samples, 0.06%)</title><rect x="109.8" y="595.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="112.8" y="606.0"></text>
</g>
<g>
<title>common_file_perm (14 samples, 0.06%)</title><rect x="109.8" y="579.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="112.8" y="590.0"></text>
</g>
<g>
<title>fsnotify (12 samples, 0.05%)</title><rect x="110.6" y="595.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="113.6" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.02%)</title><rect x="111.3" y="723.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="114.3" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (10 samples, 0.04%)</title><rect x="111.5" y="723.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="114.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (25 samples, 0.11%)</title><rect x="112.2" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (36 samples, 0.16%)</title><rect x="113.5" y="771.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (35 samples, 0.16%)</title><rect x="113.5" y="755.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.5" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (35 samples, 0.16%)</title><rect x="113.5" y="739.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (35 samples, 0.16%)</title><rect x="113.5" y="723.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (24 samples, 0.11%)</title><rect x="115.4" y="787.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (13 samples, 0.06%)</title><rect x="115.9" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (18 samples, 0.08%)</title><rect x="116.6" y="787.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.6" y="798.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.05%)</title><rect x="117.6" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.6" y="894.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (12 samples, 0.05%)</title><rect x="117.6" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (12 samples, 0.05%)</title><rect x="117.6" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (12 samples, 0.05%)</title><rect x="117.6" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.05%)</title><rect x="117.6" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.6" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.04%)</title><rect x="117.6" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.6" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (10,834 samples, 48.12%)</title><rect x="118.2" y="1011.0" width="567.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.2" y="1022.0">java/util/Collections$UnmodifiableCollection.forEach</text>
</g>
<g>
<title>java/lang/Iterable.forEach (10,834 samples, 48.12%)</title><rect x="118.2" y="995.0" width="567.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.2" y="1006.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (6 samples, 0.03%)</title><rect x="118.3" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$521/61486316.accept (10,819 samples, 48.06%)</title><rect x="119.0" y="979.0" width="567.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.0" y="990.0">ru/mail/polis/service/boriskin/Value$$Lambda$521/61486316.accept</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (10,818 samples, 48.05%)</title><rect x="119.1" y="963.0" width="567.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.1" y="974.0">ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (10,816 samples, 48.04%)</title><rect x="119.2" y="947.0" width="566.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.2" y="958.0">ru/mail/polis/dao/boriskin/SortedStringTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (10,814 samples, 48.03%)</title><rect x="119.3" y="931.0" width="566.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.3" y="942.0">ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (10,814 samples, 48.03%)</title><rect x="119.3" y="915.0" width="566.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.3" y="926.0">ru/mail/polis/dao/boriskin/SortedStringTable.findNext</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (91 samples, 0.40%)</title><rect x="119.3" y="899.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.3" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="119.6" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.6" y="894.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (68 samples, 0.30%)</title><rect x="119.9" y="883.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.9" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (27 samples, 0.12%)</title><rect x="122.1" y="867.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.1" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (8 samples, 0.04%)</title><rect x="123.1" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.1" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.05%)</title><rect x="123.5" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (10,722 samples, 47.63%)</title><rect x="124.1" y="899.0" width="562.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.1" y="910.0">ru/mail/polis/dao/boriskin/SortedStringTable.findK</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (238 samples, 1.06%)</title><rect x="126.4" y="883.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.4" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.02%)</title><rect x="127.8" y="867.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="130.8" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (205 samples, 0.91%)</title><rect x="128.1" y="867.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.02%)</title><rect x="132.0" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="135.0" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.02%)</title><rect x="132.0" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="135.0" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.02%)</title><rect x="132.0" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="135.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (125 samples, 0.56%)</title><rect x="132.3" y="851.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.3" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (111 samples, 0.49%)</title><rect x="133.0" y="835.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (86 samples, 0.38%)</title><rect x="133.6" y="819.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (54 samples, 0.24%)</title><rect x="135.3" y="803.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.3" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (54 samples, 0.24%)</title><rect x="135.3" y="787.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (13 samples, 0.06%)</title><rect x="138.2" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (13 samples, 0.06%)</title><rect x="138.2" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.03%)</title><rect x="138.5" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (75 samples, 0.33%)</title><rect x="138.9" y="883.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (49 samples, 0.22%)</title><rect x="140.2" y="867.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (3,753 samples, 16.67%)</title><rect x="142.8" y="883.0" width="196.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.8" y="894.0">ru/mail/polis/dao/boriskin..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (102 samples, 0.45%)</title><rect x="143.7" y="867.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (93 samples, 0.41%)</title><rect x="144.2" y="851.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (91 samples, 0.40%)</title><rect x="144.3" y="835.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.3" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (38 samples, 0.17%)</title><rect x="146.9" y="819.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (14 samples, 0.06%)</title><rect x="147.5" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (13 samples, 0.06%)</title><rect x="148.2" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="148.5" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (20 samples, 0.09%)</title><rect x="149.1" y="867.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (11 samples, 0.05%)</title><rect x="149.6" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,613 samples, 16.05%)</title><rect x="150.2" y="867.0" width="189.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.2" y="878.0">sun/nio/ch/FileChannelImp..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,594 samples, 15.96%)</title><rect x="150.8" y="851.0" width="188.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.8" y="862.0">sun/nio/ch/FileChannelIm..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (272 samples, 1.21%)</title><rect x="151.5" y="835.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.5" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (262 samples, 1.16%)</title><rect x="152.0" y="819.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (12 samples, 0.05%)</title><rect x="160.8" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.8" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (14 samples, 0.06%)</title><rect x="161.5" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (13 samples, 0.06%)</title><rect x="161.5" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.03%)</title><rect x="161.9" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.9" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (57 samples, 0.25%)</title><rect x="162.2" y="803.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.2" y="814.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (56 samples, 0.25%)</title><rect x="162.3" y="787.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (56 samples, 0.25%)</title><rect x="162.3" y="771.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="164.8" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.03%)</title><rect x="165.2" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.02%)</title><rect x="165.5" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (6 samples, 0.03%)</title><rect x="165.8" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.8" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.02%)</title><rect x="165.8" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3,179 samples, 14.12%)</title><rect x="166.1" y="835.0" width="166.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.1" y="846.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (56 samples, 0.25%)</title><rect x="166.4" y="819.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (7 samples, 0.03%)</title><rect x="166.4" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.05%)</title><rect x="166.7" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (11 samples, 0.05%)</title><rect x="166.7" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.7" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (38 samples, 0.17%)</title><rect x="167.3" y="803.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (34 samples, 0.15%)</title><rect x="167.5" y="787.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.5" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.05%)</title><rect x="168.7" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (8 samples, 0.04%)</title><rect x="168.9" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3,000 samples, 13.33%)</title><rect x="169.3" y="819.0" width="157.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.3" y="830.0">sun/nio/ch/IOUtil.re..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,834 samples, 12.59%)</title><rect x="169.8" y="803.0" width="148.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.8" y="814.0">sun/nio/ch/FileDisp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,832 samples, 12.58%)</title><rect x="169.9" y="787.0" width="148.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.9" y="798.0">sun/nio/ch/FileDisp..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (19 samples, 0.08%)</title><rect x="173.3" y="771.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="176.3" y="782.0"></text>
</g>
<g>
<title>__libc_pread64 (2,660 samples, 11.82%)</title><rect x="174.3" y="771.0" width="139.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="177.3" y="782.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,618 samples, 7.19%)</title><rect x="228.9" y="755.0" width="84.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="231.9" y="766.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_pread64 (34 samples, 0.15%)</title><rect x="228.9" y="739.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="231.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1,583 samples, 7.03%)</title><rect x="230.7" y="739.0" width="83.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="233.7" y="750.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_pread64 (1,217 samples, 5.41%)</title><rect x="249.8" y="723.0" width="63.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="252.8" y="734.0">__x64_s..</text>
</g>
<g>
<title>__fdget (6 samples, 0.03%)</title><rect x="249.8" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="252.8" y="718.0"></text>
</g>
<g>
<title>ksys_pread64 (1,206 samples, 5.36%)</title><rect x="250.3" y="707.0" width="63.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="253.3" y="718.0">ksys_pr..</text>
</g>
<g>
<title>__fdget (98 samples, 0.44%)</title><rect x="251.3" y="691.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="254.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (96 samples, 0.43%)</title><rect x="251.4" y="675.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="254.4" y="686.0"></text>
</g>
<g>
<title>__fget (93 samples, 0.41%)</title><rect x="251.5" y="659.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.5" y="670.0"></text>
</g>
<g>
<title>__fget_light (28 samples, 0.12%)</title><rect x="256.4" y="691.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="259.4" y="702.0"></text>
</g>
<g>
<title>fput_many (24 samples, 0.11%)</title><rect x="258.3" y="691.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.3" y="702.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.03%)</title><rect x="259.5" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.5" y="702.0"></text>
</g>
<g>
<title>vfs_read (1,022 samples, 4.54%)</title><rect x="260.0" y="691.0" width="53.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="263.0" y="702.0">vfs_r..</text>
</g>
<g>
<title>__fsnotify_parent (16 samples, 0.07%)</title><rect x="262.7" y="675.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="265.7" y="686.0"></text>
</g>
<g>
<title>__vfs_read (702 samples, 3.12%)</title><rect x="263.6" y="675.0" width="36.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="266.6" y="686.0">__v..</text>
</g>
<g>
<title>ext4_file_read_iter (27 samples, 0.12%)</title><rect x="264.0" y="659.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="267.0" y="670.0"></text>
</g>
<g>
<title>iov_iter_init (6 samples, 0.03%)</title><rect x="265.4" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="268.4" y="670.0"></text>
</g>
<g>
<title>new_sync_read (661 samples, 2.94%)</title><rect x="265.7" y="659.0" width="34.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="268.7" y="670.0">ne..</text>
</g>
<g>
<title>ext4_file_read_iter (612 samples, 2.72%)</title><rect x="268.1" y="643.0" width="32.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="271.1" y="654.0">ex..</text>
</g>
<g>
<title>generic_file_read_iter (568 samples, 2.52%)</title><rect x="270.4" y="627.0" width="29.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="273.4" y="638.0">ge..</text>
</g>
<g>
<title>generic_file_buffered_read (549 samples, 2.44%)</title><rect x="271.2" y="611.0" width="28.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="274.2" y="622.0">ge..</text>
</g>
<g>
<title>_cond_resched (10 samples, 0.04%)</title><rect x="276.6" y="595.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="279.6" y="606.0"></text>
</g>
<g>
<title>copy_page_to_iter (161 samples, 0.72%)</title><rect x="277.4" y="595.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="280.4" y="606.0"></text>
</g>
<g>
<title>_cond_resched (6 samples, 0.03%)</title><rect x="279.8" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="282.8" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.06%)</title><rect x="280.1" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="283.1" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (75 samples, 0.33%)</title><rect x="280.8" y="579.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.8" y="590.0"></text>
</g>
<g>
<title>copyout (16 samples, 0.07%)</title><rect x="284.7" y="579.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="287.7" y="590.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.02%)</title><rect x="285.5" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="288.5" y="590.0"></text>
</g>
<g>
<title>mark_page_accessed (16 samples, 0.07%)</title><rect x="286.1" y="595.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="289.1" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (159 samples, 0.71%)</title><rect x="287.0" y="595.0" width="8.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.0" y="606.0"></text>
</g>
<g>
<title>find_get_entry (146 samples, 0.65%)</title><rect x="287.6" y="579.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.6" y="590.0"></text>
</g>
<g>
<title>xas_load (24 samples, 0.11%)</title><rect x="292.5" y="563.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.5" y="574.0"></text>
</g>
<g>
<title>xas_start (28 samples, 0.12%)</title><rect x="293.8" y="563.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="296.8" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (7 samples, 0.03%)</title><rect x="295.3" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="298.3" y="606.0"></text>
</g>
<g>
<title>touch_atime (83 samples, 0.37%)</title><rect x="295.7" y="595.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="298.7" y="606.0"></text>
</g>
<g>
<title>atime_needs_update (67 samples, 0.30%)</title><rect x="296.4" y="579.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="299.4" y="590.0"></text>
</g>
<g>
<title>current_time (37 samples, 0.16%)</title><rect x="297.7" y="563.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="300.7" y="574.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (18 samples, 0.08%)</title><rect x="298.4" y="547.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.4" y="558.0"></text>
</g>
<g>
<title>timestamp_truncate (6 samples, 0.03%)</title><rect x="299.3" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="302.3" y="558.0"></text>
</g>
<g>
<title>fsnotify (48 samples, 0.21%)</title><rect x="300.4" y="675.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.4" y="686.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.02%)</title><rect x="302.9" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.9" y="686.0"></text>
</g>
<g>
<title>rw_verify_area (197 samples, 0.88%)</title><rect x="303.2" y="675.0" width="10.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="306.2" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (33 samples, 0.15%)</title><rect x="303.8" y="659.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="306.8" y="670.0"></text>
</g>
<g>
<title>security_file_permission (151 samples, 0.67%)</title><rect x="305.6" y="659.0" width="7.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="308.6" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (19 samples, 0.08%)</title><rect x="306.2" y="643.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="309.2" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (63 samples, 0.28%)</title><rect x="307.2" y="643.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.2" y="654.0"></text>
</g>
<g>
<title>common_file_perm (61 samples, 0.27%)</title><rect x="307.3" y="627.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="310.3" y="638.0"></text>
</g>
<g>
<title>aa_file_perm (9 samples, 0.04%)</title><rect x="310.0" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.0" y="622.0"></text>
</g>
<g>
<title>common_file_perm (11 samples, 0.05%)</title><rect x="310.5" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="313.5" y="654.0"></text>
</g>
<g>
<title>fsnotify (46 samples, 0.20%)</title><rect x="311.1" y="643.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="314.1" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (39 samples, 0.17%)</title><rect x="313.7" y="771.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="316.7" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (37 samples, 0.16%)</title><rect x="315.7" y="771.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="318.7" y="782.0"></text>
</g>
<g>
<title>fdval (11 samples, 0.05%)</title><rect x="317.7" y="771.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="320.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (156 samples, 0.69%)</title><rect x="318.4" y="803.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (118 samples, 0.52%)</title><rect x="326.5" y="819.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.5" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (114 samples, 0.51%)</title><rect x="326.5" y="803.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.5" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (114 samples, 0.51%)</title><rect x="326.5" y="787.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.5" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (114 samples, 0.51%)</title><rect x="326.5" y="771.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (111 samples, 0.49%)</title><rect x="332.7" y="835.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.7" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.09%)</title><rect x="335.6" y="819.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="338.6" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21 samples, 0.09%)</title><rect x="335.6" y="803.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="338.6" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (21 samples, 0.09%)</title><rect x="335.6" y="787.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="338.6" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (21 samples, 0.09%)</title><rect x="335.6" y="771.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="338.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (35 samples, 0.16%)</title><rect x="336.7" y="819.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="339.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (13 samples, 0.06%)</title><rect x="338.5" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6,612 samples, 29.37%)</title><rect x="339.5" y="883.0" width="346.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.5" y="894.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6,582 samples, 29.24%)</title><rect x="341.1" y="867.0" width="345.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.1" y="878.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (10 samples, 0.04%)</title><rect x="345.9" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.9" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (10 samples, 0.04%)</title><rect x="345.9" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (137 samples, 0.61%)</title><rect x="346.4" y="851.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.4" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (101 samples, 0.45%)</title><rect x="348.3" y="835.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.3" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (67 samples, 0.30%)</title><rect x="350.1" y="819.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.1" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (58 samples, 0.26%)</title><rect x="350.6" y="803.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.03%)</title><rect x="353.3" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6,071 samples, 26.97%)</title><rect x="353.6" y="851.0" width="318.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.6" y="862.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (143 samples, 0.64%)</title><rect x="354.2" y="835.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (92 samples, 0.41%)</title><rect x="354.3" y="819.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.3" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (92 samples, 0.41%)</title><rect x="354.3" y="803.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.3" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.04%)</title><rect x="358.3" y="787.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="361.3" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (48 samples, 0.21%)</title><rect x="359.1" y="819.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (47 samples, 0.21%)</title><rect x="359.2" y="803.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.2" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (14 samples, 0.06%)</title><rect x="360.9" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (10 samples, 0.04%)</title><rect x="361.1" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5,673 samples, 25.20%)</title><rect x="361.7" y="835.0" width="297.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.7" y="846.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.05%)</title><rect x="362.4" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.4" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.05%)</title><rect x="362.4" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.05%)</title><rect x="362.4" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.4" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (12 samples, 0.05%)</title><rect x="362.4" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5,384 samples, 23.92%)</title><rect x="363.1" y="819.0" width="282.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.1" y="830.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5,379 samples, 23.89%)</title><rect x="363.3" y="803.0" width="282.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.3" y="814.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (28 samples, 0.12%)</title><rect x="369.7" y="787.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="372.7" y="798.0"></text>
</g>
<g>
<title>__libc_pread64 (5,070 samples, 22.52%)</title><rect x="371.2" y="787.0" width="265.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="374.2" y="798.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3,018 samples, 13.41%)</title><rect x="478.7" y="771.0" width="158.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="481.7" y="782.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>__x64_sys_pread64 (58 samples, 0.26%)</title><rect x="478.7" y="755.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="481.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2,957 samples, 13.13%)</title><rect x="481.9" y="755.0" width="155.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.9" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (2,282 samples, 10.14%)</title><rect x="516.8" y="739.0" width="119.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="519.8" y="750.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (6 samples, 0.03%)</title><rect x="516.8" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.8" y="734.0"></text>
</g>
<g>
<title>fput (6 samples, 0.03%)</title><rect x="517.1" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="520.1" y="734.0"></text>
</g>
<g>
<title>ksys_pread64 (2,268 samples, 10.07%)</title><rect x="517.4" y="723.0" width="118.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.4" y="734.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (188 samples, 0.84%)</title><rect x="519.2" y="707.0" width="9.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="522.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (184 samples, 0.82%)</title><rect x="519.4" y="691.0" width="9.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="522.4" y="702.0"></text>
</g>
<g>
<title>__fget (180 samples, 0.80%)</title><rect x="519.6" y="675.0" width="9.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="522.6" y="686.0"></text>
</g>
<g>
<title>__fget_light (56 samples, 0.25%)</title><rect x="529.1" y="707.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="532.1" y="718.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.03%)</title><rect x="532.0" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="535.0" y="718.0"></text>
</g>
<g>
<title>__vfs_read (17 samples, 0.08%)</title><rect x="532.4" y="707.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.4" y="718.0"></text>
</g>
<g>
<title>fput_many (83 samples, 0.37%)</title><rect x="533.4" y="707.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="536.4" y="718.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.03%)</title><rect x="537.7" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="540.7" y="718.0"></text>
</g>
<g>
<title>vfs_read (1,871 samples, 8.31%)</title><rect x="538.2" y="707.0" width="98.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="541.2" y="718.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (28 samples, 0.12%)</title><rect x="544.4" y="691.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="547.4" y="702.0"></text>
</g>
<g>
<title>__vfs_read (1,225 samples, 5.44%)</title><rect x="545.8" y="691.0" width="64.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="548.8" y="702.0">__vfs_r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.03%)</title><rect x="546.1" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="549.1" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (49 samples, 0.22%)</title><rect x="546.5" y="675.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="549.5" y="686.0"></text>
</g>
<g>
<title>iov_iter_init (17 samples, 0.08%)</title><rect x="549.1" y="675.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.1" y="686.0"></text>
</g>
<g>
<title>new_sync_read (1,146 samples, 5.09%)</title><rect x="550.0" y="675.0" width="60.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="553.0" y="686.0">new_sy..</text>
</g>
<g>
<title>ext4_file_read_iter (1,038 samples, 4.61%)</title><rect x="555.6" y="659.0" width="54.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="558.6" y="670.0">ext4_..</text>
</g>
<g>
<title>generic_file_buffered_read (8 samples, 0.04%)</title><rect x="560.2" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="563.2" y="654.0"></text>
</g>
<g>
<title>generic_file_read_iter (942 samples, 4.18%)</title><rect x="560.6" y="643.0" width="49.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.6" y="654.0">gener..</text>
</g>
<g>
<title>generic_file_buffered_read (912 samples, 4.05%)</title><rect x="561.7" y="627.0" width="47.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="564.7" y="638.0">gene..</text>
</g>
<g>
<title>_cond_resched (10 samples, 0.04%)</title><rect x="572.8" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.8" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (262 samples, 1.16%)</title><rect x="573.4" y="611.0" width="13.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="576.4" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (25 samples, 0.11%)</title><rect x="578.4" y="595.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="581.4" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (115 samples, 0.51%)</title><rect x="579.7" y="595.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="582.7" y="606.0"></text>
</g>
<g>
<title>copyout (16 samples, 0.07%)</title><rect x="585.8" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.8" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (9 samples, 0.04%)</title><rect x="586.7" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="589.7" y="606.0"></text>
</g>
<g>
<title>copyout (12 samples, 0.05%)</title><rect x="587.1" y="611.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="590.1" y="622.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.03%)</title><rect x="587.8" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="590.8" y="622.0"></text>
</g>
<g>
<title>mark_page_accessed (8 samples, 0.04%)</title><rect x="588.1" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.1" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (240 samples, 1.07%)</title><rect x="588.5" y="611.0" width="12.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.5" y="622.0"></text>
</g>
<g>
<title>find_get_entry (221 samples, 0.98%)</title><rect x="589.3" y="595.0" width="11.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.3" y="606.0"></text>
</g>
<g>
<title>PageHuge (6 samples, 0.03%)</title><rect x="596.0" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.0" y="590.0"></text>
</g>
<g>
<title>xas_load (33 samples, 0.15%)</title><rect x="596.4" y="579.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.4" y="590.0"></text>
</g>
<g>
<title>xas_start (52 samples, 0.23%)</title><rect x="598.1" y="579.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="601.1" y="590.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.02%)</title><rect x="600.9" y="595.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="603.9" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (16 samples, 0.07%)</title><rect x="601.1" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="604.1" y="622.0"></text>
</g>
<g>
<title>touch_atime (144 samples, 0.64%)</title><rect x="602.0" y="611.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.0" y="622.0"></text>
</g>
<g>
<title>atime_needs_update (114 samples, 0.51%)</title><rect x="603.4" y="595.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.4" y="606.0"></text>
</g>
<g>
<title>current_time (60 samples, 0.27%)</title><rect x="605.9" y="579.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="608.9" y="590.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (29 samples, 0.13%)</title><rect x="606.8" y="563.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.8" y="574.0"></text>
</g>
<g>
<title>timestamp_truncate (14 samples, 0.06%)</title><rect x="608.3" y="563.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="611.3" y="574.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.02%)</title><rect x="609.7" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="612.7" y="638.0"></text>
</g>
<g>
<title>fsnotify (93 samples, 0.41%)</title><rect x="610.0" y="691.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="613.0" y="702.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.04%)</title><rect x="614.9" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="617.9" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (398 samples, 1.77%)</title><rect x="615.3" y="691.0" width="20.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="618.3" y="702.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.03%)</title><rect x="616.5" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="619.5" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (57 samples, 0.25%)</title><rect x="617.0" y="675.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="620.0" y="686.0"></text>
</g>
<g>
<title>security_file_permission (306 samples, 1.36%)</title><rect x="620.2" y="675.0" width="16.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="623.2" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (33 samples, 0.15%)</title><rect x="621.7" y="659.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="624.7" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (141 samples, 0.63%)</title><rect x="623.5" y="659.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="626.5" y="670.0"></text>
</g>
<g>
<title>common_file_perm (133 samples, 0.59%)</title><rect x="623.9" y="643.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="626.9" y="654.0"></text>
</g>
<g>
<title>aa_file_perm (24 samples, 0.11%)</title><rect x="629.6" y="627.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.6" y="638.0"></text>
</g>
<g>
<title>common_file_perm (25 samples, 0.11%)</title><rect x="630.8" y="659.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="633.8" y="670.0"></text>
</g>
<g>
<title>fsnotify (77 samples, 0.34%)</title><rect x="632.2" y="659.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="635.2" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (8 samples, 0.04%)</title><rect x="636.5" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.5" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (72 samples, 0.32%)</title><rect x="637.0" y="787.0" width="3.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="640.0" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (60 samples, 0.27%)</title><rect x="640.8" y="787.0" width="3.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="643.8" y="798.0"></text>
</g>
<g>
<title>fdval (22 samples, 0.10%)</title><rect x="644.1" y="787.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="647.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (263 samples, 1.17%)</title><rect x="645.3" y="819.0" width="13.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (244 samples, 1.08%)</title><rect x="659.0" y="835.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (233 samples, 1.03%)</title><rect x="659.0" y="819.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (233 samples, 1.03%)</title><rect x="659.0" y="803.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (233 samples, 1.03%)</title><rect x="659.0" y="787.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (12 samples, 0.05%)</title><rect x="670.6" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.05%)</title><rect x="671.3" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.05%)</title><rect x="671.3" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (244 samples, 1.08%)</title><rect x="671.8" y="851.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (82 samples, 0.36%)</title><rect x="680.3" y="835.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (28 samples, 0.12%)</title><rect x="684.6" y="851.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.6" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.04%)</title><rect x="685.6" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="688.6" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (9 samples, 0.04%)</title><rect x="685.6" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="688.6" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.04%)</title><rect x="685.6" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="688.6" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.03%)</title><rect x="685.7" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="688.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (162 samples, 0.72%)</title><rect x="686.4" y="1011.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (162 samples, 0.72%)</title><rect x="686.4" y="995.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.4" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (161 samples, 0.72%)</title><rect x="686.4" y="979.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.4" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (12 samples, 0.05%)</title><rect x="686.4" y="963.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="689.4" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (12 samples, 0.05%)</title><rect x="686.4" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.4" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (12 samples, 0.05%)</title><rect x="686.4" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.05%)</title><rect x="686.4" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.4" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.05%)</title><rect x="686.4" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.4" y="910.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.04%)</title><rect x="686.5" y="883.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.5" y="894.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.04%)</title><rect x="686.5" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (9 samples, 0.04%)</title><rect x="686.5" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (9 samples, 0.04%)</title><rect x="686.5" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="686.6" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.6" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (148 samples, 0.66%)</title><rect x="687.0" y="963.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.0" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (148 samples, 0.66%)</title><rect x="687.0" y="947.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.0" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (148 samples, 0.66%)</title><rect x="687.0" y="931.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.0" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (148 samples, 0.66%)</title><rect x="687.0" y="915.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.0" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (148 samples, 0.66%)</title><rect x="687.0" y="899.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.0" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (148 samples, 0.66%)</title><rect x="687.0" y="883.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.0" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (146 samples, 0.65%)</title><rect x="687.0" y="867.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (146 samples, 0.65%)</title><rect x="687.0" y="851.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (146 samples, 0.65%)</title><rect x="687.0" y="835.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (146 samples, 0.65%)</title><rect x="687.0" y="819.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (56 samples, 0.25%)</title><rect x="687.0" y="803.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (55 samples, 0.24%)</title><rect x="687.1" y="787.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (54 samples, 0.24%)</title><rect x="687.1" y="771.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (49 samples, 0.22%)</title><rect x="687.3" y="755.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (46 samples, 0.20%)</title><rect x="687.4" y="739.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (42 samples, 0.19%)</title><rect x="687.4" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (42 samples, 0.19%)</title><rect x="687.4" y="707.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.4" y="718.0"></text>
</g>
<g>
<title>__libc_pread64 (42 samples, 0.19%)</title><rect x="687.4" y="691.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="690.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.12%)</title><rect x="688.1" y="675.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="691.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.12%)</title><rect x="688.1" y="659.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 0.09%)</title><rect x="688.5" y="643.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.5" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.09%)</title><rect x="688.5" y="627.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="691.5" y="638.0"></text>
</g>
<g>
<title>vfs_read (17 samples, 0.08%)</title><rect x="688.7" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="691.7" y="622.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.04%)</title><rect x="688.7" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="691.7" y="606.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.03%)</title><rect x="688.8" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="691.8" y="590.0"></text>
</g>
<g>
<title>ext4_file_read_iter (7 samples, 0.03%)</title><rect x="688.8" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="691.8" y="574.0"></text>
</g>
<g>
<title>generic_file_read_iter (7 samples, 0.03%)</title><rect x="688.8" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="691.8" y="558.0"></text>
</g>
<g>
<title>generic_file_buffered_read (7 samples, 0.03%)</title><rect x="688.8" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="691.8" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.04%)</title><rect x="689.1" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="692.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (89 samples, 0.40%)</title><rect x="690.0" y="803.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (88 samples, 0.39%)</title><rect x="690.0" y="787.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (81 samples, 0.36%)</title><rect x="690.1" y="771.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.02%)</title><rect x="690.1" y="755.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (75 samples, 0.33%)</title><rect x="690.3" y="755.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (73 samples, 0.32%)</title><rect x="690.3" y="739.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (73 samples, 0.32%)</title><rect x="690.3" y="723.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.3" y="734.0"></text>
</g>
<g>
<title>__libc_pread64 (70 samples, 0.31%)</title><rect x="690.4" y="707.0" width="3.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="693.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.13%)</title><rect x="692.5" y="691.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="695.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.13%)</title><rect x="692.5" y="675.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="695.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (24 samples, 0.11%)</title><rect x="692.8" y="659.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="695.8" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (24 samples, 0.11%)</title><rect x="692.8" y="643.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="695.8" y="654.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.10%)</title><rect x="692.9" y="627.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="695.9" y="638.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.07%)</title><rect x="692.9" y="611.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="695.9" y="622.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.06%)</title><rect x="693.0" y="595.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="696.0" y="606.0"></text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.06%)</title><rect x="693.0" y="579.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.0" y="590.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.05%)</title><rect x="693.1" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.1" y="574.0"></text>
</g>
<g>
<title>generic_file_buffered_read (12 samples, 0.05%)</title><rect x="693.1" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="696.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5 samples, 0.02%)</title><rect x="694.4" y="771.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (15 samples, 0.07%)</title><rect x="694.8" y="1011.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (14 samples, 0.06%)</title><rect x="694.8" y="995.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (13 samples, 0.06%)</title><rect x="694.9" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (13 samples, 0.06%)</title><rect x="694.9" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (13 samples, 0.06%)</title><rect x="694.9" y="947.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (13 samples, 0.06%)</title><rect x="694.9" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.04%)</title><rect x="695.1" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (6 samples, 0.03%)</title><rect x="695.6" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6,847 samples, 30.41%)</title><rect x="696.0" y="1091.0" width="358.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.0" y="1102.0">java/util/concurrent/CompletableFuture$AsyncSuppl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (460 samples, 2.04%)</title><rect x="696.2" y="1075.0" width="24.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.2" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (456 samples, 2.03%)</title><rect x="696.3" y="1059.0" width="23.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.3" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/63339538.apply (256 samples, 1.14%)</title><rect x="696.7" y="1043.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (256 samples, 1.14%)</title><rect x="696.7" y="1027.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (256 samples, 1.14%)</title><rect x="696.7" y="1011.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (248 samples, 1.10%)</title><rect x="696.9" y="995.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (248 samples, 1.10%)</title><rect x="696.9" y="979.0" width="13.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (248 samples, 1.10%)</title><rect x="696.9" y="963.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (140 samples, 0.62%)</title><rect x="696.9" y="947.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (140 samples, 0.62%)</title><rect x="696.9" y="931.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (139 samples, 0.62%)</title><rect x="696.9" y="915.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$323/1204452569.apply (139 samples, 0.62%)</title><rect x="696.9" y="899.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (139 samples, 0.62%)</title><rect x="696.9" y="883.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (139 samples, 0.62%)</title><rect x="696.9" y="867.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/414542976.apply (139 samples, 0.62%)</title><rect x="696.9" y="851.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (139 samples, 0.62%)</title><rect x="696.9" y="835.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (134 samples, 0.60%)</title><rect x="697.2" y="819.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (112 samples, 0.50%)</title><rect x="697.3" y="803.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (112 samples, 0.50%)</title><rect x="697.3" y="787.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$368/1963220307.apply (107 samples, 0.48%)</title><rect x="697.5" y="771.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (107 samples, 0.48%)</title><rect x="697.5" y="755.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (31 samples, 0.14%)</title><rect x="697.8" y="739.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (31 samples, 0.14%)</title><rect x="697.8" y="723.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.02%)</title><rect x="697.8" y="707.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.02%)</title><rect x="697.8" y="691.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.02%)</title><rect x="697.8" y="675.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.12%)</title><rect x="698.0" y="707.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.12%)</title><rect x="698.0" y="691.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (25 samples, 0.11%)</title><rect x="698.0" y="675.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (25 samples, 0.11%)</title><rect x="698.0" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (25 samples, 0.11%)</title><rect x="698.0" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (22 samples, 0.10%)</title><rect x="698.2" y="627.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (22 samples, 0.10%)</title><rect x="698.2" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.2" y="622.0"></text>
</g>
<g>
<title>__libc_write (22 samples, 0.10%)</title><rect x="698.2" y="595.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="701.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.08%)</title><rect x="698.4" y="579.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="701.4" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.08%)</title><rect x="698.4" y="563.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="701.4" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (18 samples, 0.08%)</title><rect x="698.4" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.4" y="558.0"></text>
</g>
<g>
<title>ksys_write (18 samples, 0.08%)</title><rect x="698.4" y="531.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="701.4" y="542.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.08%)</title><rect x="698.5" y="515.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.5" y="526.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.07%)</title><rect x="698.5" y="499.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.5" y="510.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.07%)</title><rect x="698.5" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.5" y="494.0"></text>
</g>
<g>
<title>pipe_write (12 samples, 0.05%)</title><rect x="698.7" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.7" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.04%)</title><rect x="698.7" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="701.7" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.04%)</title><rect x="698.7" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="701.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.04%)</title><rect x="698.7" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (70 samples, 0.31%)</title><rect x="699.4" y="739.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.03%)</title><rect x="699.6" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.6" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.03%)</title><rect x="699.6" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.6" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.02%)</title><rect x="699.6" y="691.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (37 samples, 0.16%)</title><rect x="699.9" y="723.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.03%)</title><rect x="699.9" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.9" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.03%)</title><rect x="699.9" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.9" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.03%)</title><rect x="699.9" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.03%)</title><rect x="699.9" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.03%)</title><rect x="699.9" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.02%)</title><rect x="699.9" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (15 samples, 0.07%)</title><rect x="700.2" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.2" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$396/1862624918.test (7 samples, 0.03%)</title><rect x="700.6" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.6" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (7 samples, 0.03%)</title><rect x="700.6" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (15 samples, 0.07%)</title><rect x="701.0" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.07%)</title><rect x="701.0" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.0" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.07%)</title><rect x="701.0" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.05%)</title><rect x="701.2" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (9 samples, 0.04%)</title><rect x="701.3" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.04%)</title><rect x="701.3" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.02%)</title><rect x="701.5" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.02%)</title><rect x="701.8" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (5 samples, 0.02%)</title><rect x="701.8" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (6 samples, 0.03%)</title><rect x="702.1" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (6 samples, 0.03%)</title><rect x="702.1" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (6 samples, 0.03%)</title><rect x="702.1" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (12 samples, 0.05%)</title><rect x="702.4" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.03%)</title><rect x="702.8" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (18 samples, 0.08%)</title><rect x="703.1" y="803.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (8 samples, 0.04%)</title><rect x="703.5" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.04%)</title><rect x="703.5" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.04%)</title><rect x="703.5" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.04%)</title><rect x="703.5" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.04%)</title><rect x="703.5" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.03%)</title><rect x="703.6" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (6 samples, 0.03%)</title><rect x="703.6" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.03%)</title><rect x="703.6" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.03%)</title><rect x="703.6" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (106 samples, 0.47%)</title><rect x="704.4" y="947.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.03%)</title><rect x="704.6" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.03%)</title><rect x="704.6" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (95 samples, 0.42%)</title><rect x="705.0" y="931.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (95 samples, 0.42%)</title><rect x="705.0" y="915.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (92 samples, 0.41%)</title><rect x="705.0" y="899.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (6 samples, 0.03%)</title><rect x="705.7" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.03%)</title><rect x="705.7" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.03%)</title><rect x="705.7" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.03%)</title><rect x="705.7" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (6 samples, 0.03%)</title><rect x="705.7" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (6 samples, 0.03%)</title><rect x="705.7" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.7" y="814.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (6 samples, 0.03%)</title><rect x="705.7" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (37 samples, 0.16%)</title><rect x="706.0" y="883.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (36 samples, 0.16%)</title><rect x="706.1" y="867.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="706.3" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="709.3" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.02%)</title><rect x="706.3" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="709.3" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="706.3" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="709.3" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.02%)</title><rect x="706.3" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="709.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (26 samples, 0.12%)</title><rect x="706.6" y="851.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (20 samples, 0.09%)</title><rect x="706.9" y="835.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.9" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (20 samples, 0.09%)</title><rect x="706.9" y="819.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.9" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (20 samples, 0.09%)</title><rect x="706.9" y="803.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.9" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (20 samples, 0.09%)</title><rect x="706.9" y="787.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.9" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (20 samples, 0.09%)</title><rect x="706.9" y="771.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (35 samples, 0.16%)</title><rect x="707.9" y="883.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.9" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (31 samples, 0.14%)</title><rect x="708.2" y="867.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.2" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (21 samples, 0.09%)</title><rect x="708.2" y="851.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="711.2" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.02%)</title><rect x="708.4" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="711.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$233/1238270558.run (6 samples, 0.03%)</title><rect x="709.4" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.02%)</title><rect x="709.4" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.4" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.02%)</title><rect x="709.4" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.4" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (5 samples, 0.02%)</title><rect x="709.4" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.4" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.02%)</title><rect x="709.4" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$507/476267620.apply (191 samples, 0.85%)</title><rect x="710.1" y="1043.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$1 (190 samples, 0.84%)</title><rect x="710.2" y="1027.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (190 samples, 0.84%)</title><rect x="710.2" y="1011.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.2" y="1022.0"></text>
</g>
<g>
<title>java/net/URI.create (8 samples, 0.04%)</title><rect x="710.4" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.4" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (8 samples, 0.04%)</title><rect x="710.4" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.4" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (8 samples, 0.04%)</title><rect x="710.4" y="963.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.4" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (7 samples, 0.03%)</title><rect x="710.5" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.5" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (6 samples, 0.03%)</title><rect x="710.5" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.5" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (5 samples, 0.02%)</title><rect x="710.5" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.5" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.ofByteArray (23 samples, 0.10%)</title><rect x="710.9" y="995.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (124 samples, 0.55%)</title><rect x="712.2" y="995.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (124 samples, 0.55%)</title><rect x="712.2" y="979.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (123 samples, 0.55%)</title><rect x="712.2" y="963.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (121 samples, 0.54%)</title><rect x="712.3" y="947.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (58 samples, 0.26%)</title><rect x="712.4" y="931.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.4" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.04%)</title><rect x="712.8" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.04%)</title><rect x="712.8" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.8" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (7 samples, 0.03%)</title><rect x="712.8" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.8" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.03%)</title><rect x="712.9" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (6 samples, 0.03%)</title><rect x="712.9" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.9" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.03%)</title><rect x="712.9" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.03%)</title><rect x="712.9" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.9" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$152/1791308546.accept (6 samples, 0.03%)</title><rect x="712.9" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.9" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.03%)</title><rect x="712.9" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (40 samples, 0.18%)</title><rect x="713.3" y="915.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.3" y="926.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (40 samples, 0.18%)</title><rect x="713.3" y="899.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.3" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.16%)</title><rect x="713.6" y="883.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.6" y="894.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (23 samples, 0.10%)</title><rect x="713.6" y="867.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="716.6" y="878.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.03%)</title><rect x="713.8" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="716.8" y="862.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.03%)</title><rect x="714.3" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="717.3" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.02%)</title><rect x="714.3" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="717.3" y="846.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.04%)</title><rect x="715.0" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.0" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.04%)</title><rect x="715.0" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.02%)</title><rect x="715.0" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.02%)</title><rect x="715.0" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.02%)</title><rect x="715.0" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (13 samples, 0.06%)</title><rect x="715.4" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (10 samples, 0.04%)</title><rect x="715.6" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (8 samples, 0.04%)</title><rect x="715.7" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (6 samples, 0.03%)</title><rect x="715.7" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (5 samples, 0.02%)</title><rect x="715.8" y="867.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.8" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.arrayContentsEq (5 samples, 0.02%)</title><rect x="715.8" y="851.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (49 samples, 0.22%)</title><rect x="716.1" y="931.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (44 samples, 0.20%)</title><rect x="716.1" y="915.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (43 samples, 0.19%)</title><rect x="716.1" y="899.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (43 samples, 0.19%)</title><rect x="716.1" y="883.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (38 samples, 0.17%)</title><rect x="716.2" y="867.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (35 samples, 0.16%)</title><rect x="716.4" y="851.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.16%)</title><rect x="716.4" y="835.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.16%)</title><rect x="716.4" y="819.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.16%)</title><rect x="716.4" y="803.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (35 samples, 0.16%)</title><rect x="716.4" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.14%)</title><rect x="716.6" y="771.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="719.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.11%)</title><rect x="716.9" y="755.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.11%)</title><rect x="717.0" y="739.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 0.11%)</title><rect x="717.0" y="723.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="720.0" y="734.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.11%)</title><rect x="717.0" y="707.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.0" y="718.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.10%)</title><rect x="717.0" y="691.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="720.0" y="702.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.09%)</title><rect x="717.1" y="675.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="720.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.09%)</title><rect x="717.1" y="659.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="720.1" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.09%)</title><rect x="717.1" y="643.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="720.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (5 samples, 0.02%)</title><rect x="718.4" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.02%)</title><rect x="718.4" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (13 samples, 0.06%)</title><rect x="718.8" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (13 samples, 0.06%)</title><rect x="718.8" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.8" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13 samples, 0.06%)</title><rect x="718.8" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.8" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.06%)</title><rect x="718.8" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.8" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.03%)</title><rect x="719.1" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (5 samples, 0.02%)</title><rect x="719.2" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.2" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.02%)</title><rect x="719.2" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (9 samples, 0.04%)</title><rect x="719.7" y="995.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.7" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.04%)</title><rect x="719.7" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$214/2080116879.accept (7 samples, 0.03%)</title><rect x="719.8" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (7 samples, 0.03%)</title><rect x="719.8" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (7 samples, 0.03%)</title><rect x="719.8" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (6 samples, 0.03%)</title><rect x="719.8" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (6 samples, 0.03%)</title><rect x="719.8" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (6 samples, 0.03%)</title><rect x="719.8" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (5 samples, 0.02%)</title><rect x="719.9" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (5 samples, 0.02%)</title><rect x="719.9" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (5 samples, 0.02%)</title><rect x="719.9" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$126/245683815.get (6,384 samples, 28.36%)</title><rect x="720.3" y="1075.0" width="334.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.3" y="1086.0">ru/mail/polis/service/boriskin/ReplicaWorker$..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$19 (6,384 samples, 28.36%)</title><rect x="720.3" y="1059.0" width="334.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.3" y="1070.0">ru/mail/polis/service/boriskin/ReplicaWorker...</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$503/1350247418.run (6,383 samples, 28.35%)</title><rect x="720.3" y="1043.0" width="334.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.3" y="1054.0">ru/mail/polis/service/boriskin/ReplicaWorker$..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$0 (6,382 samples, 28.35%)</title><rect x="720.4" y="1027.0" width="334.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.4" y="1038.0">ru/mail/polis/service/boriskin/ReplicaWorker...</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (6,378 samples, 28.33%)</title><rect x="720.6" y="1011.0" width="334.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.6" y="1022.0">ru/mail/polis/service/boriskin/Value.from</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (154 samples, 0.68%)</title><rect x="720.6" y="995.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.6" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (154 samples, 0.68%)</title><rect x="720.6" y="979.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.6" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.04%)</title><rect x="720.6" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.6" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.04%)</title><rect x="720.6" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.6" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.03%)</title><rect x="720.7" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.03%)</title><rect x="720.7" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.7" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.02%)</title><rect x="720.8" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.8" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (146 samples, 0.65%)</title><rect x="721.1" y="963.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.1" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (146 samples, 0.65%)</title><rect x="721.1" y="947.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.1" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (146 samples, 0.65%)</title><rect x="721.1" y="931.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.1" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (146 samples, 0.65%)</title><rect x="721.1" y="915.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.1" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (146 samples, 0.65%)</title><rect x="721.1" y="899.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.1" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (146 samples, 0.65%)</title><rect x="721.1" y="883.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.1" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (145 samples, 0.64%)</title><rect x="721.1" y="867.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (144 samples, 0.64%)</title><rect x="721.1" y="851.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (144 samples, 0.64%)</title><rect x="721.1" y="835.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (144 samples, 0.64%)</title><rect x="721.1" y="819.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (59 samples, 0.26%)</title><rect x="721.1" y="803.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (59 samples, 0.26%)</title><rect x="721.1" y="787.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (59 samples, 0.26%)</title><rect x="721.1" y="771.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (52 samples, 0.23%)</title><rect x="721.4" y="755.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (49 samples, 0.22%)</title><rect x="721.5" y="739.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (45 samples, 0.20%)</title><rect x="721.5" y="723.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (45 samples, 0.20%)</title><rect x="721.5" y="707.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.5" y="718.0"></text>
</g>
<g>
<title>__libc_pread64 (42 samples, 0.19%)</title><rect x="721.6" y="691.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="724.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.11%)</title><rect x="722.5" y="675.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="725.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.11%)</title><rect x="722.6" y="659.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (19 samples, 0.08%)</title><rect x="722.8" y="643.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.8" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (19 samples, 0.08%)</title><rect x="722.8" y="627.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="725.8" y="638.0"></text>
</g>
<g>
<title>vfs_read (16 samples, 0.07%)</title><rect x="723.0" y="611.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.0" y="622.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.05%)</title><rect x="723.0" y="595.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="726.0" y="606.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.05%)</title><rect x="723.0" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.0" y="590.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.04%)</title><rect x="723.1" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.1" y="574.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.04%)</title><rect x="723.3" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.3" y="558.0"></text>
</g>
<g>
<title>generic_file_buffered_read (7 samples, 0.03%)</title><rect x="723.3" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (85 samples, 0.38%)</title><rect x="724.2" y="803.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (85 samples, 0.38%)</title><rect x="724.2" y="787.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (77 samples, 0.34%)</title><rect x="724.5" y="771.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (71 samples, 0.32%)</title><rect x="724.7" y="755.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (69 samples, 0.31%)</title><rect x="724.7" y="739.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (69 samples, 0.31%)</title><rect x="724.7" y="723.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.7" y="734.0"></text>
</g>
<g>
<title>__libc_pread64 (62 samples, 0.28%)</title><rect x="724.9" y="707.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="727.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.19%)</title><rect x="726.0" y="691.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="729.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.18%)</title><rect x="726.1" y="675.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="729.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (28 samples, 0.12%)</title><rect x="726.7" y="659.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="729.7" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (28 samples, 0.12%)</title><rect x="726.7" y="643.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.7" y="654.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.02%)</title><rect x="726.7" y="627.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="729.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.02%)</title><rect x="726.7" y="611.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="729.7" y="622.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.10%)</title><rect x="727.0" y="627.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="730.0" y="638.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.07%)</title><rect x="727.1" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.1" y="622.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.06%)</title><rect x="727.2" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="730.2" y="606.0"></text>
</g>
<g>
<title>ext4_file_read_iter (11 samples, 0.05%)</title><rect x="727.3" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="730.3" y="590.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.04%)</title><rect x="727.4" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.4" y="574.0"></text>
</g>
<g>
<title>generic_file_buffered_read (9 samples, 0.04%)</title><rect x="727.4" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="730.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.getIteratorOverValuesForReplicas (6,223 samples, 27.64%)</title><rect x="728.7" y="995.0" width="326.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.7" y="1006.0">ru/mail/polis/service/boriskin/Value.getIter..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (700 samples, 3.11%)</title><rect x="728.8" y="979.0" width="36.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.8" y="990.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (699 samples, 3.10%)</title><rect x="728.8" y="963.0" width="36.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.8" y="974.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (692 samples, 3.07%)</title><rect x="729.2" y="947.0" width="36.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.2" y="958.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (692 samples, 3.07%)</title><rect x="729.2" y="931.0" width="36.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.2" y="942.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (691 samples, 3.07%)</title><rect x="729.2" y="915.0" width="36.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.2" y="926.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (691 samples, 3.07%)</title><rect x="729.2" y="899.0" width="36.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.2" y="910.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (691 samples, 3.07%)</title><rect x="729.2" y="883.0" width="36.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.2" y="894.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (691 samples, 3.07%)</title><rect x="729.2" y="867.0" width="36.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.2" y="878.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (684 samples, 3.04%)</title><rect x="729.2" y="851.0" width="35.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.2" y="862.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (682 samples, 3.03%)</title><rect x="729.3" y="835.0" width="35.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.3" y="846.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (682 samples, 3.03%)</title><rect x="729.3" y="819.0" width="35.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.3" y="830.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (679 samples, 3.02%)</title><rect x="729.5" y="803.0" width="35.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.5" y="814.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.03%)</title><rect x="729.5" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="729.5" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="729.5" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.5" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="729.6" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (240 samples, 1.07%)</title><rect x="729.9" y="787.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.02%)</title><rect x="729.9" y="771.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="729.9" y="755.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (234 samples, 1.04%)</title><rect x="730.2" y="771.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (232 samples, 1.03%)</title><rect x="730.3" y="755.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.05%)</title><rect x="730.3" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.3" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.05%)</title><rect x="730.3" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (6 samples, 0.03%)</title><rect x="730.9" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.9" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.02%)</title><rect x="731.0" y="723.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="734.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (202 samples, 0.90%)</title><rect x="731.2" y="739.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.03%)</title><rect x="731.3" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (187 samples, 0.83%)</title><rect x="731.6" y="723.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (175 samples, 0.78%)</title><rect x="731.6" y="707.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (175 samples, 0.78%)</title><rect x="731.6" y="691.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.6" y="702.0"></text>
</g>
<g>
<title>__libc_pread64 (168 samples, 0.75%)</title><rect x="731.8" y="675.0" width="8.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="734.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (95 samples, 0.42%)</title><rect x="735.6" y="659.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="738.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.03%)</title><rect x="735.6" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="738.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (88 samples, 0.39%)</title><rect x="736.0" y="643.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (71 samples, 0.32%)</title><rect x="736.9" y="627.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.9" y="638.0"></text>
</g>
<g>
<title>ksys_pread64 (71 samples, 0.32%)</title><rect x="736.9" y="611.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.9" y="622.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.04%)</title><rect x="737.0" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="740.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.04%)</title><rect x="737.0" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="740.0" y="590.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.04%)</title><rect x="737.0" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="740.0" y="574.0"></text>
</g>
<g>
<title>vfs_read (57 samples, 0.25%)</title><rect x="737.6" y="595.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="740.6" y="606.0"></text>
</g>
<g>
<title>__vfs_read (35 samples, 0.16%)</title><rect x="737.9" y="579.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.9" y="590.0"></text>
</g>
<g>
<title>new_sync_read (34 samples, 0.15%)</title><rect x="737.9" y="563.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="740.9" y="574.0"></text>
</g>
<g>
<title>ext4_file_read_iter (33 samples, 0.15%)</title><rect x="738.0" y="547.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="741.0" y="558.0"></text>
</g>
<g>
<title>generic_file_read_iter (31 samples, 0.14%)</title><rect x="738.1" y="531.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="741.1" y="542.0"></text>
</g>
<g>
<title>generic_file_buffered_read (28 samples, 0.12%)</title><rect x="738.2" y="515.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="741.2" y="526.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.03%)</title><rect x="738.3" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="741.3" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.04%)</title><rect x="738.8" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="741.8" y="510.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.04%)</title><rect x="738.8" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="741.8" y="494.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.02%)</title><rect x="739.4" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="742.4" y="510.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.02%)</title><rect x="739.4" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="742.4" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (17 samples, 0.08%)</title><rect x="739.7" y="579.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="742.7" y="590.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 0.05%)</title><rect x="740.0" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="743.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (11 samples, 0.05%)</title><rect x="740.8" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.04%)</title><rect x="741.4" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title><rect x="741.4" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.03%)</title><rect x="741.4" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.4" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (7 samples, 0.03%)</title><rect x="741.4" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.04%)</title><rect x="741.8" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (432 samples, 1.92%)</title><rect x="742.4" y="787.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.4" y="798.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (431 samples, 1.91%)</title><rect x="742.5" y="771.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.5" y="782.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (22 samples, 0.10%)</title><rect x="742.6" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.6" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (21 samples, 0.09%)</title><rect x="742.7" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.7" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.03%)</title><rect x="743.4" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.4" y="734.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.03%)</title><rect x="743.4" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.03%)</title><rect x="743.4" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (12 samples, 0.05%)</title><rect x="743.8" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.8" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (11 samples, 0.05%)</title><rect x="743.9" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.9" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.03%)</title><rect x="744.1" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.1" y="734.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.03%)</title><rect x="744.1" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.03%)</title><rect x="744.1" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (376 samples, 1.67%)</title><rect x="744.4" y="755.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.05%)</title><rect x="744.5" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.04%)</title><rect x="744.5" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.04%)</title><rect x="744.5" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (350 samples, 1.55%)</title><rect x="745.1" y="739.0" width="18.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (326 samples, 1.45%)</title><rect x="745.3" y="723.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (326 samples, 1.45%)</title><rect x="745.3" y="707.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.3" y="718.0"></text>
</g>
<g>
<title>__libc_pread64 (306 samples, 1.36%)</title><rect x="745.7" y="691.0" width="16.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="748.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (200 samples, 0.89%)</title><rect x="751.3" y="675.0" width="10.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="754.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.02%)</title><rect x="751.3" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="754.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (195 samples, 0.87%)</title><rect x="751.6" y="659.0" width="10.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (153 samples, 0.68%)</title><rect x="753.8" y="643.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="756.8" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (153 samples, 0.68%)</title><rect x="753.8" y="627.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.8" y="638.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.04%)</title><rect x="753.9" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="756.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.04%)</title><rect x="753.9" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="756.9" y="606.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.04%)</title><rect x="753.9" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="756.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.03%)</title><rect x="754.3" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="757.3" y="622.0"></text>
</g>
<g>
<title>vfs_read (129 samples, 0.57%)</title><rect x="755.0" y="611.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="758.0" y="622.0"></text>
</g>
<g>
<title>__vfs_read (88 samples, 0.39%)</title><rect x="755.6" y="595.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="758.6" y="606.0"></text>
</g>
<g>
<title>new_sync_read (85 samples, 0.38%)</title><rect x="755.7" y="579.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="758.7" y="590.0"></text>
</g>
<g>
<title>ext4_file_read_iter (73 samples, 0.32%)</title><rect x="756.4" y="563.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="759.4" y="574.0"></text>
</g>
<g>
<title>generic_file_read_iter (70 samples, 0.31%)</title><rect x="756.5" y="547.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="759.5" y="558.0"></text>
</g>
<g>
<title>generic_file_buffered_read (69 samples, 0.31%)</title><rect x="756.6" y="531.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="759.6" y="542.0"></text>
</g>
<g>
<title>copy_page_to_iter (19 samples, 0.08%)</title><rect x="757.4" y="515.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="760.4" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (10 samples, 0.04%)</title><rect x="757.8" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="760.8" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (19 samples, 0.08%)</title><rect x="758.5" y="515.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="761.5" y="526.0"></text>
</g>
<g>
<title>find_get_entry (17 samples, 0.08%)</title><rect x="758.6" y="499.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="761.6" y="510.0"></text>
</g>
<g>
<title>xas_start (7 samples, 0.03%)</title><rect x="759.1" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="762.1" y="494.0"></text>
</g>
<g>
<title>touch_atime (10 samples, 0.04%)</title><rect x="759.7" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="762.7" y="526.0"></text>
</g>
<g>
<title>atime_needs_update (8 samples, 0.04%)</title><rect x="759.7" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.7" y="510.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.02%)</title><rect x="759.9" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.9" y="494.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.03%)</title><rect x="760.2" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="763.2" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (21 samples, 0.09%)</title><rect x="760.6" y="595.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="763.6" y="606.0"></text>
</g>
<g>
<title>security_file_permission (15 samples, 0.07%)</title><rect x="760.9" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="763.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (20 samples, 0.09%)</title><rect x="762.4" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.06%)</title><rect x="763.4" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (14 samples, 0.06%)</title><rect x="763.4" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (14 samples, 0.06%)</title><rect x="763.4" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (14 samples, 0.06%)</title><rect x="763.4" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.04%)</title><rect x="764.1" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (10 samples, 0.04%)</title><rect x="764.6" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.6" y="766.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="765.1" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="768.1" y="862.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="765.1" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.03%)</title><rect x="765.1" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (7 samples, 0.03%)</title><rect x="765.1" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="765.1" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.1" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="765.1" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.1" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (5,424 samples, 24.09%)</title><rect x="765.4" y="979.0" width="284.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.4" y="990.0">java/util/Collections$UnmodifiableColl..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (5,424 samples, 24.09%)</title><rect x="765.4" y="963.0" width="284.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.4" y="974.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (8 samples, 0.04%)</title><rect x="765.7" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.7" y="958.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (8 samples, 0.04%)</title><rect x="765.7" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value$$Lambda$521/61486316.accept (5,412 samples, 24.04%)</title><rect x="766.1" y="947.0" width="283.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.1" y="958.0">ru/mail/polis/service/boriskin/Value$$..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.lambda$getIteratorOverValuesForReplicas$0 (5,412 samples, 24.04%)</title><rect x="766.1" y="931.0" width="283.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.1" y="942.0">ru/mail/polis/service/boriskin/Value.l..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (5,412 samples, 24.04%)</title><rect x="766.1" y="915.0" width="283.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.1" y="926.0">ru/mail/polis/dao/boriskin/SortedStrin..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (5,408 samples, 24.02%)</title><rect x="766.1" y="899.0" width="283.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.1" y="910.0">ru/mail/polis/dao/boriskin/SortedStrin..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (5,408 samples, 24.02%)</title><rect x="766.1" y="883.0" width="283.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.1" y="894.0">ru/mail/polis/dao/boriskin/SortedStrin..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (39 samples, 0.17%)</title><rect x="766.1" y="867.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.1" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (34 samples, 0.15%)</title><rect x="766.2" y="851.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.2" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 0.06%)</title><rect x="767.3" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (5,369 samples, 23.85%)</title><rect x="768.2" y="867.0" width="281.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.2" y="878.0">ru/mail/polis/dao/boriskin/SortedStrin..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (125 samples, 0.56%)</title><rect x="769.4" y="851.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.4" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (101 samples, 0.45%)</title><rect x="770.7" y="835.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (64 samples, 0.28%)</title><rect x="772.6" y="819.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.6" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (63 samples, 0.28%)</title><rect x="772.7" y="803.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (50 samples, 0.22%)</title><rect x="773.0" y="787.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (29 samples, 0.13%)</title><rect x="774.1" y="771.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.1" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (29 samples, 0.13%)</title><rect x="774.1" y="755.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="775.6" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="775.6" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.6" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (33 samples, 0.15%)</title><rect x="776.0" y="851.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (26 samples, 0.12%)</title><rect x="776.3" y="835.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (1,904 samples, 8.46%)</title><rect x="777.7" y="851.0" width="99.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.7" y="862.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (32 samples, 0.14%)</title><rect x="778.2" y="835.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.2" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.12%)</title><rect x="778.5" y="819.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.12%)</title><rect x="778.5" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.5" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.05%)</title><rect x="779.2" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="779.5" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="779.5" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (9 samples, 0.04%)</title><rect x="779.9" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,854 samples, 8.24%)</title><rect x="780.3" y="835.0" width="97.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.3" y="846.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,846 samples, 8.20%)</title><rect x="780.6" y="819.0" width="96.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.6" y="830.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (133 samples, 0.59%)</title><rect x="781.4" y="803.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.4" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (129 samples, 0.57%)</title><rect x="781.6" y="787.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.02%)</title><rect x="785.9" y="771.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.9" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (8 samples, 0.04%)</title><rect x="786.1" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (8 samples, 0.04%)</title><rect x="786.1" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.02%)</title><rect x="786.3" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.3" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (31 samples, 0.14%)</title><rect x="786.6" y="771.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.6" y="782.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (31 samples, 0.14%)</title><rect x="786.6" y="755.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (31 samples, 0.14%)</title><rect x="786.6" y="739.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (9 samples, 0.04%)</title><rect x="788.4" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.4" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.02%)</title><rect x="788.6" y="787.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,618 samples, 7.19%)</title><rect x="788.8" y="803.0" width="84.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.8" y="814.0">sun/nio/ch..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (41 samples, 0.18%)</title><rect x="788.9" y="787.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.02%)</title><rect x="788.9" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.05%)</title><rect x="789.2" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.2" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (11 samples, 0.05%)</title><rect x="789.2" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.2" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (25 samples, 0.11%)</title><rect x="789.8" y="771.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (24 samples, 0.11%)</title><rect x="789.8" y="755.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.8" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.03%)</title><rect x="790.7" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (6 samples, 0.03%)</title><rect x="790.7" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,523 samples, 6.76%)</title><rect x="791.1" y="787.0" width="79.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.1" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,446 samples, 6.42%)</title><rect x="791.4" y="771.0" width="75.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.4" y="782.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,446 samples, 6.42%)</title><rect x="791.4" y="755.0" width="75.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.4" y="766.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (5 samples, 0.02%)</title><rect x="793.0" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="796.0" y="750.0"></text>
</g>
<g>
<title>__libc_pread64 (1,371 samples, 6.09%)</title><rect x="793.3" y="739.0" width="71.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="796.3" y="750.0">__libc_p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (829 samples, 3.68%)</title><rect x="821.7" y="723.0" width="43.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="824.7" y="734.0">entr..</text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 0.09%)</title><rect x="821.7" y="707.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="824.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (807 samples, 3.58%)</title><rect x="822.8" y="707.0" width="42.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="825.8" y="718.0">do_s..</text>
</g>
<g>
<title>__x64_sys_pread64 (616 samples, 2.74%)</title><rect x="832.6" y="691.0" width="32.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="835.6" y="702.0">__..</text>
</g>
<g>
<title>ksys_pread64 (613 samples, 2.72%)</title><rect x="832.7" y="675.0" width="32.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.7" y="686.0">ks..</text>
</g>
<g>
<title>__fdget (53 samples, 0.24%)</title><rect x="833.1" y="659.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="836.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (52 samples, 0.23%)</title><rect x="833.2" y="643.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.2" y="654.0"></text>
</g>
<g>
<title>__fget (52 samples, 0.23%)</title><rect x="833.2" y="627.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.07%)</title><rect x="835.9" y="659.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.9" y="670.0"></text>
</g>
<g>
<title>fput_many (27 samples, 0.12%)</title><rect x="836.9" y="659.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="839.9" y="670.0"></text>
</g>
<g>
<title>vfs_read (504 samples, 2.24%)</title><rect x="838.5" y="659.0" width="26.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="841.5" y="670.0">v..</text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.04%)</title><rect x="839.7" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="842.7" y="654.0"></text>
</g>
<g>
<title>__vfs_read (365 samples, 1.62%)</title><rect x="840.1" y="643.0" width="19.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="843.1" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (19 samples, 0.08%)</title><rect x="840.2" y="627.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="843.2" y="638.0"></text>
</g>
<g>
<title>iov_iter_init (5 samples, 0.02%)</title><rect x="841.2" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="844.2" y="638.0"></text>
</g>
<g>
<title>new_sync_read (339 samples, 1.51%)</title><rect x="841.5" y="627.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="844.5" y="638.0"></text>
</g>
<g>
<title>ext4_file_read_iter (303 samples, 1.35%)</title><rect x="843.4" y="611.0" width="15.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="846.4" y="622.0"></text>
</g>
<g>
<title>generic_file_read_iter (278 samples, 1.23%)</title><rect x="844.7" y="595.0" width="14.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="847.7" y="606.0"></text>
</g>
<g>
<title>generic_file_buffered_read (271 samples, 1.20%)</title><rect x="845.0" y="579.0" width="14.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="848.0" y="590.0"></text>
</g>
<g>
<title>_cond_resched (7 samples, 0.03%)</title><rect x="848.3" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="851.3" y="574.0"></text>
</g>
<g>
<title>copy_page_to_iter (79 samples, 0.35%)</title><rect x="848.7" y="563.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="851.7" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.02%)</title><rect x="850.4" y="547.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="853.4" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (35 samples, 0.16%)</title><rect x="850.6" y="547.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="853.6" y="558.0"></text>
</g>
<g>
<title>mark_page_accessed (11 samples, 0.05%)</title><rect x="852.9" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.9" y="574.0"></text>
</g>
<g>
<title>pagecache_get_page (75 samples, 0.33%)</title><rect x="853.5" y="563.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.5" y="574.0"></text>
</g>
<g>
<title>find_get_entry (65 samples, 0.29%)</title><rect x="853.8" y="547.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="856.8" y="558.0"></text>
</g>
<g>
<title>xas_load (10 samples, 0.04%)</title><rect x="856.1" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.1" y="542.0"></text>
</g>
<g>
<title>xas_start (11 samples, 0.05%)</title><rect x="856.6" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="859.6" y="542.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.02%)</title><rect x="857.2" y="547.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="860.2" y="558.0"></text>
</g>
<g>
<title>touch_atime (32 samples, 0.14%)</title><rect x="857.5" y="563.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.5" y="574.0"></text>
</g>
<g>
<title>atime_needs_update (23 samples, 0.10%)</title><rect x="857.8" y="547.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="860.8" y="558.0"></text>
</g>
<g>
<title>current_time (10 samples, 0.04%)</title><rect x="858.5" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="861.5" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (6 samples, 0.03%)</title><rect x="858.5" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="861.5" y="526.0"></text>
</g>
<g>
<title>fsnotify (20 samples, 0.09%)</title><rect x="859.3" y="643.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.3" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (85 samples, 0.38%)</title><rect x="860.4" y="643.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="863.4" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (13 samples, 0.06%)</title><rect x="860.6" y="627.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="863.6" y="638.0"></text>
</g>
<g>
<title>security_file_permission (66 samples, 0.29%)</title><rect x="861.4" y="627.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.4" y="638.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.02%)</title><rect x="861.8" y="611.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="864.8" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (33 samples, 0.15%)</title><rect x="862.0" y="611.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="865.0" y="622.0"></text>
</g>
<g>
<title>common_file_perm (33 samples, 0.15%)</title><rect x="862.0" y="595.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="865.0" y="606.0"></text>
</g>
<g>
<title>aa_file_perm (6 samples, 0.03%)</title><rect x="863.5" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="866.5" y="590.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.04%)</title><rect x="863.8" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="866.8" y="622.0"></text>
</g>
<g>
<title>fsnotify (12 samples, 0.05%)</title><rect x="864.2" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.2" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (23 samples, 0.10%)</title><rect x="865.1" y="739.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="868.1" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (8 samples, 0.04%)</title><rect x="866.3" y="739.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="869.3" y="750.0"></text>
</g>
<g>
<title>fdval (5 samples, 0.02%)</title><rect x="866.9" y="739.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="869.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (71 samples, 0.32%)</title><rect x="867.2" y="771.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (52 samples, 0.23%)</title><rect x="870.9" y="787.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.9" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (49 samples, 0.22%)</title><rect x="870.9" y="771.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.9" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (49 samples, 0.22%)</title><rect x="870.9" y="755.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (49 samples, 0.22%)</title><rect x="870.9" y="739.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.02%)</title><rect x="873.2" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (64 samples, 0.28%)</title><rect x="873.6" y="803.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.6" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.05%)</title><rect x="875.3" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="878.3" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.04%)</title><rect x="875.4" y="771.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="878.4" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.04%)</title><rect x="875.4" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="878.4" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (10 samples, 0.04%)</title><rect x="875.4" y="739.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="878.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (21 samples, 0.09%)</title><rect x="875.9" y="787.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.04%)</title><rect x="877.0" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,283 samples, 14.58%)</title><rect x="877.5" y="851.0" width="172.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.5" y="862.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,264 samples, 14.50%)</title><rect x="878.5" y="835.0" width="171.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.5" y="846.0">sun/nio/ch/FileChannel..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (60 samples, 0.27%)</title><rect x="880.2" y="819.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.2" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (44 samples, 0.20%)</title><rect x="881.1" y="803.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.1" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (31 samples, 0.14%)</title><rect x="881.8" y="787.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.8" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (23 samples, 0.10%)</title><rect x="882.2" y="771.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3,022 samples, 13.42%)</title><rect x="883.4" y="819.0" width="158.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.4" y="830.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (60 samples, 0.27%)</title><rect x="883.6" y="803.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (34 samples, 0.15%)</title><rect x="883.6" y="787.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (34 samples, 0.15%)</title><rect x="883.6" y="771.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.6" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (26 samples, 0.12%)</title><rect x="885.4" y="787.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (24 samples, 0.11%)</title><rect x="885.5" y="771.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.5" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.04%)</title><rect x="886.3" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (7 samples, 0.03%)</title><rect x="886.4" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,864 samples, 12.72%)</title><rect x="886.7" y="803.0" width="150.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.7" y="814.0">sun/nio/ch/IOUtil.r..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.05%)</title><rect x="887.0" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.0" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.05%)</title><rect x="887.0" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.05%)</title><rect x="887.0" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (12 samples, 0.05%)</title><rect x="887.0" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,699 samples, 11.99%)</title><rect x="887.6" y="787.0" width="141.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.6" y="798.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,697 samples, 11.98%)</title><rect x="887.7" y="771.0" width="141.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.7" y="782.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (14 samples, 0.06%)</title><rect x="891.8" y="755.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="894.8" y="766.0"></text>
</g>
<g>
<title>__libc_pread64 (2,532 samples, 11.25%)</title><rect x="892.5" y="755.0" width="132.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="895.5" y="766.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,562 samples, 6.94%)</title><rect x="943.3" y="739.0" width="81.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="946.3" y="750.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_pread64 (27 samples, 0.12%)</title><rect x="943.3" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1,535 samples, 6.82%)</title><rect x="944.8" y="723.0" width="80.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="947.8" y="734.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_pread64 (1,171 samples, 5.20%)</title><rect x="963.4" y="707.0" width="61.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="966.4" y="718.0">__x64_..</text>
</g>
<g>
<title>ksys_pread64 (1,164 samples, 5.17%)</title><rect x="963.7" y="691.0" width="61.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.7" y="702.0">ksys_p..</text>
</g>
<g>
<title>__fdget (83 samples, 0.37%)</title><rect x="964.3" y="675.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.3" y="686.0"></text>
</g>
<g>
<title>__fget_light (82 samples, 0.36%)</title><rect x="964.3" y="659.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="967.3" y="670.0"></text>
</g>
<g>
<title>__fget (81 samples, 0.36%)</title><rect x="964.4" y="643.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="967.4" y="654.0"></text>
</g>
<g>
<title>__fget_light (28 samples, 0.12%)</title><rect x="968.6" y="675.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="971.6" y="686.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.03%)</title><rect x="970.2" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.2" y="686.0"></text>
</g>
<g>
<title>fput_many (33 samples, 0.15%)</title><rect x="970.5" y="675.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="973.5" y="686.0"></text>
</g>
<g>
<title>fsnotify (10 samples, 0.04%)</title><rect x="972.3" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="975.3" y="686.0"></text>
</g>
<g>
<title>vfs_read (988 samples, 4.39%)</title><rect x="972.9" y="675.0" width="51.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="975.9" y="686.0">vfs_r..</text>
</g>
<g>
<title>__fsnotify_parent (18 samples, 0.08%)</title><rect x="975.9" y="659.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="978.9" y="670.0"></text>
</g>
<g>
<title>__vfs_read (687 samples, 3.05%)</title><rect x="976.8" y="659.0" width="36.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="979.8" y="670.0">__v..</text>
</g>
<g>
<title>ext4_file_read_iter (25 samples, 0.11%)</title><rect x="977.1" y="643.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="980.1" y="654.0"></text>
</g>
<g>
<title>iov_iter_init (6 samples, 0.03%)</title><rect x="978.5" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="981.5" y="654.0"></text>
</g>
<g>
<title>new_sync_read (650 samples, 2.89%)</title><rect x="978.8" y="643.0" width="34.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="981.8" y="654.0">ne..</text>
</g>
<g>
<title>ext4_file_read_iter (596 samples, 2.65%)</title><rect x="981.4" y="627.0" width="31.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="984.4" y="638.0">ex..</text>
</g>
<g>
<title>generic_file_read_iter (553 samples, 2.46%)</title><rect x="983.7" y="611.0" width="29.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="986.7" y="622.0">ge..</text>
</g>
<g>
<title>generic_file_buffered_read (531 samples, 2.36%)</title><rect x="984.6" y="595.0" width="27.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="987.6" y="606.0">g..</text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.03%)</title><rect x="991.5" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="994.5" y="590.0"></text>
</g>
<g>
<title>copy_page_to_iter (165 samples, 0.73%)</title><rect x="991.8" y="579.0" width="8.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="994.8" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.06%)</title><rect x="995.2" y="563.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="998.2" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (74 samples, 0.33%)</title><rect x="995.9" y="563.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="998.9" y="574.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.04%)</title><rect x="999.8" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1002.8" y="574.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.03%)</title><rect x="1000.7" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1003.7" y="590.0"></text>
</g>
<g>
<title>pagecache_get_page (137 samples, 0.61%)</title><rect x="1001.0" y="579.0" width="7.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.0" y="590.0"></text>
</g>
<g>
<title>find_get_entry (126 samples, 0.56%)</title><rect x="1001.5" y="563.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.5" y="574.0"></text>
</g>
<g>
<title>xas_load (22 samples, 0.10%)</title><rect x="1005.9" y="547.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1008.9" y="558.0"></text>
</g>
<g>
<title>xas_start (19 samples, 0.08%)</title><rect x="1007.1" y="547.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1010.1" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (7 samples, 0.03%)</title><rect x="1008.2" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1011.2" y="590.0"></text>
</g>
<g>
<title>touch_atime (74 samples, 0.33%)</title><rect x="1008.5" y="579.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1011.5" y="590.0"></text>
</g>
<g>
<title>atime_needs_update (57 samples, 0.25%)</title><rect x="1009.3" y="563.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.3" y="574.0"></text>
</g>
<g>
<title>current_time (33 samples, 0.15%)</title><rect x="1010.4" y="547.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1013.4" y="558.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (12 samples, 0.05%)</title><rect x="1011.0" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1014.0" y="542.0"></text>
</g>
<g>
<title>timestamp_truncate (10 samples, 0.04%)</title><rect x="1011.6" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1014.6" y="542.0"></text>
</g>
<g>
<title>fsnotify (33 samples, 0.15%)</title><rect x="1012.8" y="659.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.8" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (191 samples, 0.85%)</title><rect x="1014.7" y="659.0" width="10.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1017.7" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.02%)</title><rect x="1015.3" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1018.3" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (26 samples, 0.12%)</title><rect x="1015.7" y="643.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1018.7" y="654.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.02%)</title><rect x="1017.0" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1020.0" y="654.0"></text>
</g>
<g>
<title>security_file_permission (141 samples, 0.63%)</title><rect x="1017.3" y="643.0" width="7.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.3" y="654.0"></text>
</g>
<g>
<title>__fsnotify_parent (16 samples, 0.07%)</title><rect x="1018.1" y="627.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1021.1" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (66 samples, 0.29%)</title><rect x="1019.0" y="627.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1022.0" y="638.0"></text>
</g>
<g>
<title>common_file_perm (62 samples, 0.28%)</title><rect x="1019.2" y="611.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1022.2" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (13 samples, 0.06%)</title><rect x="1021.8" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.8" y="606.0"></text>
</g>
<g>
<title>common_file_perm (15 samples, 0.07%)</title><rect x="1022.4" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1025.4" y="638.0"></text>
</g>
<g>
<title>fsnotify (28 samples, 0.12%)</title><rect x="1023.2" y="627.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.2" y="638.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.03%)</title><rect x="1024.8" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1027.8" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (30 samples, 0.13%)</title><rect x="1025.3" y="755.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1028.3" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (31 samples, 0.14%)</title><rect x="1026.8" y="755.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1029.8" y="766.0"></text>
</g>
<g>
<title>fdval (11 samples, 0.05%)</title><rect x="1028.5" y="755.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1031.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (148 samples, 0.66%)</title><rect x="1029.1" y="787.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (94 samples, 0.42%)</title><rect x="1036.8" y="803.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.8" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (88 samples, 0.39%)</title><rect x="1036.8" y="787.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.8" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (88 samples, 0.39%)</title><rect x="1036.8" y="771.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1039.8" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (88 samples, 0.39%)</title><rect x="1036.8" y="755.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.04%)</title><rect x="1040.9" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.03%)</title><rect x="1041.5" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.03%)</title><rect x="1041.5" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (133 samples, 0.59%)</title><rect x="1041.8" y="819.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (39 samples, 0.17%)</title><rect x="1046.7" y="803.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (16 samples, 0.07%)</title><rect x="1048.7" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (88 samples, 0.39%)</title><rect x="1049.7" y="979.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (88 samples, 0.39%)</title><rect x="1049.7" y="963.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (88 samples, 0.39%)</title><rect x="1049.7" y="947.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.7" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (84 samples, 0.37%)</title><rect x="1049.9" y="931.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1052.9" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (84 samples, 0.37%)</title><rect x="1049.9" y="915.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.9" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (84 samples, 0.37%)</title><rect x="1049.9" y="899.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.9" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (84 samples, 0.37%)</title><rect x="1049.9" y="883.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.9" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (84 samples, 0.37%)</title><rect x="1049.9" y="867.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (84 samples, 0.37%)</title><rect x="1049.9" y="851.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (83 samples, 0.37%)</title><rect x="1049.9" y="835.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (82 samples, 0.36%)</title><rect x="1050.0" y="819.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (82 samples, 0.36%)</title><rect x="1050.0" y="803.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (82 samples, 0.36%)</title><rect x="1050.0" y="787.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (23 samples, 0.10%)</title><rect x="1050.1" y="771.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.10%)</title><rect x="1050.1" y="755.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.10%)</title><rect x="1050.1" y="739.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 0.09%)</title><rect x="1050.1" y="723.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.08%)</title><rect x="1050.1" y="707.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.07%)</title><rect x="1050.1" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.07%)</title><rect x="1050.1" y="675.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.1" y="686.0"></text>
</g>
<g>
<title>__libc_pread64 (14 samples, 0.06%)</title><rect x="1050.2" y="659.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1053.2" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="1050.5" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1053.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="1050.5" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1053.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.03%)</title><rect x="1050.6" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1053.6" y="622.0"></text>
</g>
<g>
<title>ksys_pread64 (6 samples, 0.03%)</title><rect x="1050.6" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1053.6" y="606.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.02%)</title><rect x="1050.6" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1053.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (58 samples, 0.26%)</title><rect x="1051.3" y="771.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (58 samples, 0.26%)</title><rect x="1051.3" y="755.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (52 samples, 0.23%)</title><rect x="1051.5" y="739.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (46 samples, 0.20%)</title><rect x="1051.5" y="723.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (46 samples, 0.20%)</title><rect x="1051.5" y="707.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1054.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (46 samples, 0.20%)</title><rect x="1051.5" y="691.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.5" y="702.0"></text>
</g>
<g>
<title>__libc_pread64 (41 samples, 0.18%)</title><rect x="1051.7" y="675.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1054.7" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.12%)</title><rect x="1052.4" y="659.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.12%)</title><rect x="1052.4" y="643.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.09%)</title><rect x="1052.7" y="627.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.7" y="638.0"></text>
</g>
<g>
<title>ksys_pread64 (21 samples, 0.09%)</title><rect x="1052.7" y="611.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1055.7" y="622.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.08%)</title><rect x="1052.8" y="595.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1055.8" y="606.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.04%)</title><rect x="1052.9" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1055.9" y="590.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.04%)</title><rect x="1052.9" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1055.9" y="574.0"></text>
</g>
<g>
<title>ext4_file_read_iter (9 samples, 0.04%)</title><rect x="1052.9" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.9" y="558.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.04%)</title><rect x="1052.9" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1055.9" y="542.0"></text>
</g>
<g>
<title>generic_file_buffered_read (9 samples, 0.04%)</title><rect x="1052.9" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.9" y="526.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.03%)</title><rect x="1053.4" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1056.4" y="590.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.02%)</title><rect x="1053.5" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1056.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.03%)</title><rect x="1053.9" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.02%)</title><rect x="1053.9" y="707.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.02%)</title><rect x="1053.9" y="691.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (5 samples, 0.02%)</title><rect x="1053.9" y="675.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (10 samples, 0.04%)</title><rect x="1054.4" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (9 samples, 0.04%)</title><rect x="1054.4" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1054.4" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1054.4" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (7 samples, 0.03%)</title><rect x="1054.5" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.03%)</title><rect x="1054.5" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (317 samples, 1.41%)</title><rect x="1054.9" y="1091.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (316 samples, 1.40%)</title><rect x="1055.0" y="1075.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (262 samples, 1.16%)</title><rect x="1055.2" y="1059.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (69 samples, 0.31%)</title><rect x="1055.3" y="1043.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (69 samples, 0.31%)</title><rect x="1055.3" y="1027.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (56 samples, 0.25%)</title><rect x="1056.0" y="1011.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (56 samples, 0.25%)</title><rect x="1056.0" y="995.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (53 samples, 0.24%)</title><rect x="1056.1" y="979.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.1" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.03%)</title><rect x="1056.3" y="963.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1059.3" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (43 samples, 0.19%)</title><rect x="1056.7" y="963.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1059.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.16%)</title><rect x="1057.1" y="947.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1060.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.16%)</title><rect x="1057.1" y="931.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1060.1" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.14%)</title><rect x="1057.2" y="915.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1060.2" y="926.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.14%)</title><rect x="1057.2" y="899.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1060.2" y="910.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.14%)</title><rect x="1057.2" y="883.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1060.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.12%)</title><rect x="1057.5" y="867.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1060.5" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.12%)</title><rect x="1057.5" y="851.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1060.5" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.12%)</title><rect x="1057.5" y="835.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1060.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (188 samples, 0.84%)</title><rect x="1059.1" y="1043.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (183 samples, 0.81%)</title><rect x="1059.3" y="1027.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.3" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (59 samples, 0.26%)</title><rect x="1059.5" y="1011.0" width="3.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1062.5" y="1022.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.04%)</title><rect x="1059.9" y="995.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1062.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (40 samples, 0.18%)</title><rect x="1060.5" y="995.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1063.5" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.10%)</title><rect x="1061.4" y="979.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1064.4" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.10%)</title><rect x="1061.4" y="963.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1064.4" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.04%)</title><rect x="1062.1" y="947.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1065.1" y="958.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.04%)</title><rect x="1062.1" y="931.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1065.1" y="942.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.04%)</title><rect x="1062.1" y="915.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1065.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 0.53%)</title><rect x="1062.6" y="1011.0" width="6.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1065.6" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (106 samples, 0.47%)</title><rect x="1062.8" y="995.0" width="5.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1065.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.13%)</title><rect x="1066.8" y="979.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1069.8" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.13%)</title><rect x="1066.8" y="963.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1069.8" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.10%)</title><rect x="1067.1" y="947.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1070.1" y="958.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.09%)</title><rect x="1067.1" y="931.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.1" y="942.0"></text>
</g>
<g>
<title>futex_wait (19 samples, 0.08%)</title><rect x="1067.2" y="915.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.2" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.04%)</title><rect x="1067.2" y="899.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1070.2" y="910.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.03%)</title><rect x="1067.4" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.4" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.03%)</title><rect x="1067.4" y="867.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1070.4" y="878.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.03%)</title><rect x="1067.7" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1070.7" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.03%)</title><rect x="1068.3" y="995.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1071.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (46 samples, 0.20%)</title><rect x="1069.1" y="1059.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (46 samples, 0.20%)</title><rect x="1069.1" y="1043.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1072.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (46 samples, 0.20%)</title><rect x="1069.1" y="1027.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.19%)</title><rect x="1069.3" y="1011.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1072.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (43 samples, 0.19%)</title><rect x="1069.3" y="995.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.3" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.03%)</title><rect x="1069.3" y="979.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1072.3" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (36 samples, 0.16%)</title><rect x="1069.7" y="979.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1072.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.15%)</title><rect x="1069.8" y="963.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1072.8" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.15%)</title><rect x="1069.8" y="947.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1072.8" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.15%)</title><rect x="1069.8" y="931.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.8" y="942.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.15%)</title><rect x="1069.8" y="915.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1072.8" y="926.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 0.15%)</title><rect x="1069.8" y="899.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.8" y="910.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.12%)</title><rect x="1070.1" y="883.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1073.1" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.12%)</title><rect x="1070.1" y="867.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1073.1" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.12%)</title><rect x="1070.1" y="851.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1073.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$401/1765573268.run (280 samples, 1.24%)</title><rect x="1071.5" y="1091.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (277 samples, 1.23%)</title><rect x="1071.7" y="1075.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (275 samples, 1.22%)</title><rect x="1071.8" y="1059.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (274 samples, 1.22%)</title><rect x="1071.9" y="1043.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (274 samples, 1.22%)</title><rect x="1071.9" y="1027.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (272 samples, 1.21%)</title><rect x="1072.0" y="1011.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (272 samples, 1.21%)</title><rect x="1072.0" y="995.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (272 samples, 1.21%)</title><rect x="1072.0" y="979.0" width="14.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (272 samples, 1.21%)</title><rect x="1072.0" y="963.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (272 samples, 1.21%)</title><rect x="1072.0" y="947.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (271 samples, 1.20%)</title><rect x="1072.0" y="931.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (23 samples, 0.10%)</title><rect x="1072.0" y="915.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (19 samples, 0.08%)</title><rect x="1072.1" y="899.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.07%)</title><rect x="1072.3" y="883.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (16 samples, 0.07%)</title><rect x="1072.3" y="867.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.07%)</title><rect x="1072.3" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.02%)</title><rect x="1072.4" y="835.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.04%)</title><rect x="1072.6" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.04%)</title><rect x="1072.6" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$371/1785628412.apply (8 samples, 0.04%)</title><rect x="1072.6" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (8 samples, 0.04%)</title><rect x="1072.6" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (8 samples, 0.04%)</title><rect x="1072.6" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/885000023.apply (6 samples, 0.03%)</title><rect x="1072.6" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6 samples, 0.03%)</title><rect x="1072.6" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (247 samples, 1.10%)</title><rect x="1073.3" y="915.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (247 samples, 1.10%)</title><rect x="1073.3" y="899.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (247 samples, 1.10%)</title><rect x="1073.3" y="883.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (244 samples, 1.08%)</title><rect x="1073.4" y="867.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (240 samples, 1.07%)</title><rect x="1073.6" y="851.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.6" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (237 samples, 1.05%)</title><rect x="1073.6" y="835.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (237 samples, 1.05%)</title><rect x="1073.6" y="819.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (236 samples, 1.05%)</title><rect x="1073.7" y="803.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (235 samples, 1.04%)</title><rect x="1073.7" y="787.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (232 samples, 1.03%)</title><rect x="1073.9" y="771.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (228 samples, 1.01%)</title><rect x="1074.1" y="755.0" width="11.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.1" y="766.0"></text>
</g>
<g>
<title>writev (227 samples, 1.01%)</title><rect x="1074.1" y="739.0" width="11.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1077.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (214 samples, 0.95%)</title><rect x="1074.8" y="723.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (214 samples, 0.95%)</title><rect x="1074.8" y="707.0" width="11.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1077.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_writev (210 samples, 0.93%)</title><rect x="1075.0" y="691.0" width="11.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1078.0" y="702.0"></text>
</g>
<g>
<title>do_writev (210 samples, 0.93%)</title><rect x="1075.0" y="675.0" width="11.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1078.0" y="686.0"></text>
</g>
<g>
<title>vfs_writev (204 samples, 0.91%)</title><rect x="1075.3" y="659.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.3" y="670.0"></text>
</g>
<g>
<title>do_iter_write (199 samples, 0.88%)</title><rect x="1075.4" y="643.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1078.4" y="654.0"></text>
</g>
<g>
<title>do_iter_readv_writev (195 samples, 0.87%)</title><rect x="1075.5" y="627.0" width="10.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.5" y="638.0"></text>
</g>
<g>
<title>sock_write_iter (193 samples, 0.86%)</title><rect x="1075.6" y="611.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1078.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (192 samples, 0.85%)</title><rect x="1075.6" y="595.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1078.6" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (190 samples, 0.84%)</title><rect x="1075.7" y="579.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1078.7" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (190 samples, 0.84%)</title><rect x="1075.7" y="563.0" width="10.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1078.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (185 samples, 0.82%)</title><rect x="1075.9" y="547.0" width="9.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1078.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.05%)</title><rect x="1076.5" y="531.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1079.5" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.05%)</title><rect x="1076.5" y="515.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1079.5" y="526.0"></text>
</g>
<g>
<title>tcp_push (159 samples, 0.71%)</title><rect x="1077.2" y="531.0" width="8.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1080.2" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (159 samples, 0.71%)</title><rect x="1077.2" y="515.0" width="8.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1080.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (159 samples, 0.71%)</title><rect x="1077.2" y="499.0" width="8.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1080.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (145 samples, 0.64%)</title><rect x="1077.3" y="483.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1080.3" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (135 samples, 0.60%)</title><rect x="1077.6" y="467.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1080.6" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (135 samples, 0.60%)</title><rect x="1077.6" y="451.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1080.6" y="462.0"></text>
</g>
<g>
<title>ip_local_out (132 samples, 0.59%)</title><rect x="1077.6" y="435.0" width="6.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1080.6" y="446.0"></text>
</g>
<g>
<title>__ip_local_out (22 samples, 0.10%)</title><rect x="1077.6" y="419.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1080.6" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.08%)</title><rect x="1077.8" y="403.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1080.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (14 samples, 0.06%)</title><rect x="1077.9" y="387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1080.9" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (14 samples, 0.06%)</title><rect x="1077.9" y="371.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1080.9" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (9 samples, 0.04%)</title><rect x="1078.0" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.0" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (8 samples, 0.04%)</title><rect x="1078.1" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1081.1" y="350.0"></text>
</g>
<g>
<title>ip_output (109 samples, 0.48%)</title><rect x="1078.8" y="419.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.8" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (102 samples, 0.45%)</title><rect x="1079.0" y="403.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1082.0" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (100 samples, 0.44%)</title><rect x="1079.1" y="387.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1082.1" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (99 samples, 0.44%)</title><rect x="1079.1" y="371.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1082.1" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (90 samples, 0.40%)</title><rect x="1079.2" y="355.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1082.2" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (90 samples, 0.40%)</title><rect x="1079.2" y="339.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1082.2" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (90 samples, 0.40%)</title><rect x="1079.2" y="323.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1082.2" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (89 samples, 0.40%)</title><rect x="1079.2" y="307.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1082.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (85 samples, 0.38%)</title><rect x="1079.5" y="291.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1082.5" y="302.0"></text>
</g>
<g>
<title>process_backlog (84 samples, 0.37%)</title><rect x="1079.5" y="275.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1082.5" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (84 samples, 0.37%)</title><rect x="1079.5" y="259.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1082.5" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (84 samples, 0.37%)</title><rect x="1079.5" y="243.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1082.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv (80 samples, 0.36%)</title><rect x="1079.7" y="227.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1082.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (75 samples, 0.33%)</title><rect x="1079.7" y="211.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1082.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (74 samples, 0.33%)</title><rect x="1079.7" y="195.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1082.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (69 samples, 0.31%)</title><rect x="1079.8" y="179.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1082.8" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (69 samples, 0.31%)</title><rect x="1079.8" y="163.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1082.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (66 samples, 0.29%)</title><rect x="1079.9" y="147.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1082.9" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.04%)</title><rect x="1080.1" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1083.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (52 samples, 0.23%)</title><rect x="1080.7" y="131.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (52 samples, 0.23%)</title><rect x="1080.7" y="115.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1083.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (46 samples, 0.20%)</title><rect x="1080.9" y="99.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (46 samples, 0.20%)</title><rect x="1080.9" y="83.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1083.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 0.19%)</title><rect x="1081.1" y="67.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1084.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 0.19%)</title><rect x="1081.1" y="51.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1084.1" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (43 samples, 0.19%)</title><rect x="1081.1" y="35.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1084.1" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.03%)</title><rect x="1084.0" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1087.0" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.03%)</title><rect x="1084.0" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1087.0" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.03%)</title><rect x="1084.0" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1087.0" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.02%)</title><rect x="1084.1" y="307.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1087.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (487 samples, 2.16%)</title><rect x="1086.2" y="1091.0" width="25.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.2" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (486 samples, 2.16%)</title><rect x="1086.3" y="1075.0" width="25.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.3" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (239 samples, 1.06%)</title><rect x="1086.3" y="1059.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (239 samples, 1.06%)</title><rect x="1086.3" y="1043.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (238 samples, 1.06%)</title><rect x="1086.3" y="1027.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (35 samples, 0.16%)</title><rect x="1086.6" y="1011.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (35 samples, 0.16%)</title><rect x="1086.6" y="995.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (35 samples, 0.16%)</title><rect x="1086.6" y="979.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (35 samples, 0.16%)</title><rect x="1086.6" y="963.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (35 samples, 0.16%)</title><rect x="1086.6" y="947.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (33 samples, 0.15%)</title><rect x="1086.7" y="931.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (31 samples, 0.14%)</title><rect x="1086.7" y="915.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (30 samples, 0.13%)</title><rect x="1086.8" y="899.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29 samples, 0.13%)</title><rect x="1086.8" y="883.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.8" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (26 samples, 0.12%)</title><rect x="1087.0" y="867.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 0.11%)</title><rect x="1087.1" y="851.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.1" y="862.0"></text>
</g>
<g>
<title>__libc_write (25 samples, 0.11%)</title><rect x="1087.1" y="835.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1090.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.11%)</title><rect x="1087.1" y="819.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1090.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.10%)</title><rect x="1087.2" y="803.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1090.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_write (23 samples, 0.10%)</title><rect x="1087.2" y="787.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.2" y="798.0"></text>
</g>
<g>
<title>ksys_write (23 samples, 0.10%)</title><rect x="1087.2" y="771.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1090.2" y="782.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.10%)</title><rect x="1087.2" y="755.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1090.2" y="766.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.10%)</title><rect x="1087.2" y="739.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1090.2" y="750.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 0.10%)</title><rect x="1087.2" y="723.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1090.2" y="734.0"></text>
</g>
<g>
<title>pipe_write (19 samples, 0.08%)</title><rect x="1087.4" y="707.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1090.4" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (18 samples, 0.08%)</title><rect x="1087.4" y="691.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1090.4" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.08%)</title><rect x="1087.4" y="675.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1090.4" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.08%)</title><rect x="1087.4" y="659.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1090.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (197 samples, 0.88%)</title><rect x="1088.5" y="1011.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (195 samples, 0.87%)</title><rect x="1088.5" y="995.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1091.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (195 samples, 0.87%)</title><rect x="1088.5" y="979.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (195 samples, 0.87%)</title><rect x="1088.5" y="963.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (84 samples, 0.37%)</title><rect x="1088.5" y="947.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (84 samples, 0.37%)</title><rect x="1088.5" y="931.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (83 samples, 0.37%)</title><rect x="1088.5" y="915.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (82 samples, 0.36%)</title><rect x="1088.5" y="899.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (82 samples, 0.36%)</title><rect x="1088.5" y="883.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (82 samples, 0.36%)</title><rect x="1088.5" y="867.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (82 samples, 0.36%)</title><rect x="1088.5" y="851.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (69 samples, 0.31%)</title><rect x="1089.0" y="835.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (69 samples, 0.31%)</title><rect x="1089.0" y="819.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (62 samples, 0.28%)</title><rect x="1089.0" y="803.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1089.2" y="787.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1089.2" y="771.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$188/1227969850.apply (46 samples, 0.20%)</title><rect x="1089.4" y="787.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (46 samples, 0.20%)</title><rect x="1089.4" y="771.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (45 samples, 0.20%)</title><rect x="1089.5" y="755.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (43 samples, 0.19%)</title><rect x="1089.6" y="739.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (43 samples, 0.19%)</title><rect x="1089.6" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (17 samples, 0.08%)</title><rect x="1089.6" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1092.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.02%)</title><rect x="1089.6" y="691.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.6" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.02%)</title><rect x="1089.6" y="675.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.02%)</title><rect x="1089.6" y="659.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1092.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (12 samples, 0.05%)</title><rect x="1089.8" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1092.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.04%)</title><rect x="1090.0" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.03%)</title><rect x="1090.1" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.03%)</title><rect x="1090.1" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.03%)</title><rect x="1090.2" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (6 samples, 0.03%)</title><rect x="1090.2" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (6 samples, 0.03%)</title><rect x="1090.2" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.2" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (5 samples, 0.02%)</title><rect x="1090.2" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (5 samples, 0.02%)</title><rect x="1090.2" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.10%)</title><rect x="1090.7" y="707.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/611855769.run (21 samples, 0.09%)</title><rect x="1090.7" y="691.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (21 samples, 0.09%)</title><rect x="1090.7" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.03%)</title><rect x="1090.7" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.03%)</title><rect x="1090.8" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (13 samples, 0.06%)</title><rect x="1091.1" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (13 samples, 0.06%)</title><rect x="1091.1" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.1" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (9 samples, 0.04%)</title><rect x="1091.1" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.1" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.02%)</title><rect x="1091.4" y="611.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.4" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.02%)</title><rect x="1091.4" y="595.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$376/137991968.apply (8 samples, 0.04%)</title><rect x="1091.8" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (8 samples, 0.04%)</title><rect x="1091.8" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (7 samples, 0.03%)</title><rect x="1091.8" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (107 samples, 0.48%)</title><rect x="1092.9" y="947.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (21 samples, 0.09%)</title><rect x="1093.4" y="931.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.08%)</title><rect x="1093.6" y="915.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.6" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (17 samples, 0.08%)</title><rect x="1093.6" y="899.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (5 samples, 0.02%)</title><rect x="1094.5" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.02%)</title><rect x="1094.5" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.5" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.02%)</title><rect x="1094.5" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (27 samples, 0.12%)</title><rect x="1094.8" y="931.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (27 samples, 0.12%)</title><rect x="1094.8" y="915.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (27 samples, 0.12%)</title><rect x="1094.8" y="899.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (26 samples, 0.12%)</title><rect x="1094.9" y="883.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/301980258.accept (24 samples, 0.11%)</title><rect x="1095.0" y="867.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (24 samples, 0.11%)</title><rect x="1095.0" y="851.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.0" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (7 samples, 0.03%)</title><rect x="1095.2" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.2" y="846.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.02%)</title><rect x="1095.2" y="819.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1098.2" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.03%)</title><rect x="1095.8" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (43 samples, 0.19%)</title><rect x="1096.2" y="931.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (43 samples, 0.19%)</title><rect x="1096.2" y="915.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.05%)</title><rect x="1096.2" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.05%)</title><rect x="1096.2" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.05%)</title><rect x="1096.2" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (23 samples, 0.10%)</title><rect x="1096.9" y="899.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (10 samples, 0.04%)</title><rect x="1097.4" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.03%)</title><rect x="1098.2" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (247 samples, 1.10%)</title><rect x="1098.8" y="1059.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (247 samples, 1.10%)</title><rect x="1098.8" y="1043.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (246 samples, 1.09%)</title><rect x="1098.8" y="1027.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/1886963378.run (246 samples, 1.09%)</title><rect x="1098.8" y="1011.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (245 samples, 1.09%)</title><rect x="1098.9" y="995.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.02%)</title><rect x="1099.0" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (237 samples, 1.05%)</title><rect x="1099.3" y="979.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (237 samples, 1.05%)</title><rect x="1099.3" y="963.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (237 samples, 1.05%)</title><rect x="1099.3" y="947.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (237 samples, 1.05%)</title><rect x="1099.3" y="931.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (236 samples, 1.05%)</title><rect x="1099.3" y="915.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (235 samples, 1.04%)</title><rect x="1099.4" y="899.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$453/287410361.run (136 samples, 0.60%)</title><rect x="1099.4" y="883.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (136 samples, 0.60%)</title><rect x="1099.4" y="867.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (133 samples, 0.59%)</title><rect x="1099.5" y="851.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.5" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.04%)</title><rect x="1099.5" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (123 samples, 0.55%)</title><rect x="1100.0" y="835.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (122 samples, 0.54%)</title><rect x="1100.1" y="819.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (92 samples, 0.41%)</title><rect x="1100.2" y="803.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.2" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (27 samples, 0.12%)</title><rect x="1101.1" y="787.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (27 samples, 0.12%)</title><rect x="1101.1" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.1" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.plus (27 samples, 0.12%)</title><rect x="1101.1" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.03%)</title><rect x="1102.2" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.2" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.03%)</title><rect x="1102.2" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.2" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (9 samples, 0.04%)</title><rect x="1102.8" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.8" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (17 samples, 0.08%)</title><rect x="1103.5" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (13 samples, 0.06%)</title><rect x="1104.4" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (25 samples, 0.11%)</title><rect x="1105.1" y="803.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (25 samples, 0.11%)</title><rect x="1105.1" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (20 samples, 0.09%)</title><rect x="1105.4" y="771.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1108.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (20 samples, 0.09%)</title><rect x="1105.4" y="755.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (18 samples, 0.08%)</title><rect x="1105.4" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.08%)</title><rect x="1105.4" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1108.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.08%)</title><rect x="1105.4" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.06%)</title><rect x="1105.6" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.05%)</title><rect x="1105.7" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1108.7" y="686.0"></text>
</g>
<g>
<title>__libc_write (12 samples, 0.05%)</title><rect x="1105.7" y="659.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1108.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.05%)</title><rect x="1105.7" y="643.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1108.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.05%)</title><rect x="1105.7" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.7" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (11 samples, 0.05%)</title><rect x="1105.7" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1108.7" y="622.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.05%)</title><rect x="1105.7" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1108.7" y="606.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.04%)</title><rect x="1105.8" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1108.8" y="590.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.04%)</title><rect x="1105.8" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1108.8" y="574.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.04%)</title><rect x="1105.8" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1108.8" y="558.0"></text>
</g>
<g>
<title>pipe_write (8 samples, 0.04%)</title><rect x="1105.8" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.8" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.03%)</title><rect x="1105.9" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1108.9" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.03%)</title><rect x="1105.9" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.03%)</title><rect x="1105.9" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1108.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/1806290182.accept (12 samples, 0.05%)</title><rect x="1106.5" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (12 samples, 0.05%)</title><rect x="1106.5" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (11 samples, 0.05%)</title><rect x="1106.6" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.04%)</title><rect x="1106.6" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.04%)</title><rect x="1106.6" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 0.04%)</title><rect x="1106.6" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 0.04%)</title><rect x="1106.6" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$471/1154418669.accept (5 samples, 0.02%)</title><rect x="1106.8" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (5 samples, 0.02%)</title><rect x="1106.8" y="755.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (5 samples, 0.02%)</title><rect x="1106.8" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.8" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (5 samples, 0.02%)</title><rect x="1106.8" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (81 samples, 0.36%)</title><rect x="1107.1" y="883.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (81 samples, 0.36%)</title><rect x="1107.1" y="867.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (80 samples, 0.36%)</title><rect x="1107.2" y="851.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (78 samples, 0.35%)</title><rect x="1107.2" y="835.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78 samples, 0.35%)</title><rect x="1107.2" y="819.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (77 samples, 0.34%)</title><rect x="1107.2" y="803.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (76 samples, 0.34%)</title><rect x="1107.3" y="787.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$476/955279240.accept (76 samples, 0.34%)</title><rect x="1107.3" y="771.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (73 samples, 0.32%)</title><rect x="1107.4" y="755.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (73 samples, 0.32%)</title><rect x="1107.4" y="739.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (73 samples, 0.32%)</title><rect x="1107.4" y="723.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.03%)</title><rect x="1107.4" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$488/398166842.apply (6 samples, 0.03%)</title><rect x="1107.4" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1110.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (6 samples, 0.03%)</title><rect x="1107.4" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (66 samples, 0.29%)</title><rect x="1107.8" y="707.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1110.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (65 samples, 0.29%)</title><rect x="1107.8" y="691.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (61 samples, 0.27%)</title><rect x="1107.9" y="675.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (61 samples, 0.27%)</title><rect x="1107.9" y="659.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (61 samples, 0.27%)</title><rect x="1107.9" y="643.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.03%)</title><rect x="1107.9" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.03%)</title><rect x="1107.9" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="1107.9" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (55 samples, 0.24%)</title><rect x="1108.2" y="627.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (55 samples, 0.24%)</title><rect x="1108.2" y="611.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (55 samples, 0.24%)</title><rect x="1108.2" y="595.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 0.23%)</title><rect x="1108.4" y="579.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.4" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.03%)</title><rect x="1108.4" y="563.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1111.4" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (43 samples, 0.19%)</title><rect x="1108.8" y="563.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1111.8" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.16%)</title><rect x="1109.2" y="547.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1112.2" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.15%)</title><rect x="1109.3" y="531.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1112.3" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.14%)</title><rect x="1109.4" y="515.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1112.4" y="526.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.14%)</title><rect x="1109.4" y="499.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1112.4" y="510.0"></text>
</g>
<g>
<title>futex_wake (30 samples, 0.13%)</title><rect x="1109.4" y="483.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1112.4" y="494.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.12%)</title><rect x="1109.6" y="467.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1112.6" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.12%)</title><rect x="1109.6" y="451.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.6" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.12%)</title><rect x="1109.6" y="435.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1112.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$110/972466412.run (35 samples, 0.16%)</title><rect x="1111.7" y="1091.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (35 samples, 0.16%)</title><rect x="1111.7" y="1075.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (35 samples, 0.16%)</title><rect x="1111.7" y="1059.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.06%)</title><rect x="1111.7" y="1043.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.04%)</title><rect x="1111.9" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.04%)</title><rect x="1111.9" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1112.4" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getting (12 samples, 0.05%)</title><rect x="1112.9" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (11 samples, 0.05%)</title><rect x="1112.9" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (5 samples, 0.02%)</title><rect x="1113.2" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (379 samples, 1.68%)</title><rect x="1113.6" y="1139.0" width="19.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (379 samples, 1.68%)</title><rect x="1113.6" y="1123.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (258 samples, 1.15%)</title><rect x="1113.6" y="1107.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (255 samples, 1.13%)</title><rect x="1113.6" y="1091.0" width="13.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (250 samples, 1.11%)</title><rect x="1113.9" y="1075.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1116.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (250 samples, 1.11%)</title><rect x="1113.9" y="1059.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (250 samples, 1.11%)</title><rect x="1113.9" y="1043.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (66 samples, 0.29%)</title><rect x="1113.9" y="1027.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 0.28%)</title><rect x="1114.0" y="1011.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (63 samples, 0.28%)</title><rect x="1114.1" y="995.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (62 samples, 0.28%)</title><rect x="1114.1" y="979.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (11 samples, 0.05%)</title><rect x="1114.2" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (11 samples, 0.05%)</title><rect x="1114.2" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (11 samples, 0.05%)</title><rect x="1114.2" y="931.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (11 samples, 0.05%)</title><rect x="1114.2" y="915.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (11 samples, 0.05%)</title><rect x="1114.2" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1117.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (50 samples, 0.22%)</title><rect x="1114.7" y="963.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (50 samples, 0.22%)</title><rect x="1114.7" y="947.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (50 samples, 0.22%)</title><rect x="1114.7" y="931.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (50 samples, 0.22%)</title><rect x="1114.7" y="915.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (50 samples, 0.22%)</title><rect x="1114.7" y="899.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 0.22%)</title><rect x="1114.7" y="883.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 0.22%)</title><rect x="1114.8" y="867.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.8" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.04%)</title><rect x="1114.8" y="851.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1117.8" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (39 samples, 0.17%)</title><rect x="1115.3" y="851.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1118.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.13%)</title><rect x="1115.7" y="835.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1118.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.13%)</title><rect x="1115.8" y="819.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1118.8" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.12%)</title><rect x="1115.9" y="803.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1118.9" y="814.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.12%)</title><rect x="1115.9" y="787.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.12%)</title><rect x="1115.9" y="771.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1118.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.11%)</title><rect x="1116.0" y="755.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1119.0" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.11%)</title><rect x="1116.0" y="739.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.0" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 0.11%)</title><rect x="1116.0" y="723.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1119.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (184 samples, 0.82%)</title><rect x="1117.4" y="1027.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.03%)</title><rect x="1117.4" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.03%)</title><rect x="1117.4" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.03%)</title><rect x="1117.4" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.03%)</title><rect x="1117.4" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.03%)</title><rect x="1117.4" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="1117.4" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$204/1435990821.accept (178 samples, 0.79%)</title><rect x="1117.7" y="1011.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$0 (178 samples, 0.79%)</title><rect x="1117.7" y="995.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (177 samples, 0.79%)</title><rect x="1117.7" y="979.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (177 samples, 0.79%)</title><rect x="1117.7" y="963.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (173 samples, 0.77%)</title><rect x="1117.9" y="947.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (172 samples, 0.76%)</title><rect x="1117.9" y="931.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$509/575947167.accept (171 samples, 0.76%)</title><rect x="1118.0" y="915.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$3 (171 samples, 0.76%)</title><rect x="1118.0" y="899.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getNumberOfSuccessfulResponses (13 samples, 0.06%)</title><rect x="1118.0" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$529/591936526.test (11 samples, 0.05%)</title><rect x="1118.1" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$2 (11 samples, 0.05%)</title><rect x="1118.1" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (10 samples, 0.04%)</title><rect x="1118.1" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.1" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.04%)</title><rect x="1118.2" y="819.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getStartAcks (8 samples, 0.04%)</title><rect x="1118.7" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (6 samples, 0.03%)</title><rect x="1118.8" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (6 samples, 0.03%)</title><rect x="1118.8" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.8" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (6 samples, 0.03%)</title><rect x="1118.8" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.02%)</title><rect x="1118.8" y="819.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (141 samples, 0.63%)</title><rect x="1119.1" y="883.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (141 samples, 0.63%)</title><rect x="1119.1" y="867.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (141 samples, 0.63%)</title><rect x="1119.1" y="851.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (137 samples, 0.61%)</title><rect x="1119.2" y="835.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (132 samples, 0.59%)</title><rect x="1119.5" y="819.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (132 samples, 0.59%)</title><rect x="1119.5" y="803.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.5" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (131 samples, 0.58%)</title><rect x="1119.5" y="787.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (131 samples, 0.58%)</title><rect x="1119.5" y="771.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.5" y="782.0"></text>
</g>
<g>
<title>__send (125 samples, 0.56%)</title><rect x="1119.8" y="755.0" width="6.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1122.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (119 samples, 0.53%)</title><rect x="1120.1" y="739.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 0.52%)</title><rect x="1120.1" y="723.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_sendto (117 samples, 0.52%)</title><rect x="1120.2" y="707.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.2" y="718.0"></text>
</g>
<g>
<title>__sys_sendto (117 samples, 0.52%)</title><rect x="1120.2" y="691.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1123.2" y="702.0"></text>
</g>
<g>
<title>sock_sendmsg (115 samples, 0.51%)</title><rect x="1120.2" y="675.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.2" y="686.0"></text>
</g>
<g>
<title>inet6_sendmsg (112 samples, 0.50%)</title><rect x="1120.3" y="659.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1123.3" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg (112 samples, 0.50%)</title><rect x="1120.3" y="643.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1123.3" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (108 samples, 0.48%)</title><rect x="1120.5" y="627.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.5" y="638.0"></text>
</g>
<g>
<title>tcp_push (101 samples, 0.45%)</title><rect x="1120.8" y="611.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.8" y="622.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (101 samples, 0.45%)</title><rect x="1120.8" y="595.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1123.8" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (101 samples, 0.45%)</title><rect x="1120.8" y="579.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1123.8" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (93 samples, 0.41%)</title><rect x="1120.9" y="563.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.9" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (91 samples, 0.40%)</title><rect x="1120.9" y="547.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.9" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (90 samples, 0.40%)</title><rect x="1120.9" y="531.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.9" y="542.0"></text>
</g>
<g>
<title>ip_local_out (88 samples, 0.39%)</title><rect x="1121.0" y="515.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1124.0" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (18 samples, 0.08%)</title><rect x="1121.0" y="499.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1124.0" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.07%)</title><rect x="1121.0" y="483.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1124.0" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (12 samples, 0.05%)</title><rect x="1121.1" y="467.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.1" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (9 samples, 0.04%)</title><rect x="1121.2" y="451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.2" y="462.0"></text>
</g>
<g>
<title>ip_output (70 samples, 0.31%)</title><rect x="1122.0" y="499.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1125.0" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (67 samples, 0.30%)</title><rect x="1122.0" y="483.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.0" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (67 samples, 0.30%)</title><rect x="1122.0" y="467.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1125.0" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (65 samples, 0.29%)</title><rect x="1122.0" y="451.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1125.0" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (59 samples, 0.26%)</title><rect x="1122.0" y="435.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.0" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (59 samples, 0.26%)</title><rect x="1122.0" y="419.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1125.0" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (59 samples, 0.26%)</title><rect x="1122.0" y="403.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.0" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (58 samples, 0.26%)</title><rect x="1122.0" y="387.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1125.0" y="398.0"></text>
</g>
<g>
<title>net_rx_action (58 samples, 0.26%)</title><rect x="1122.0" y="371.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.0" y="382.0"></text>
</g>
<g>
<title>process_backlog (58 samples, 0.26%)</title><rect x="1122.0" y="355.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1125.0" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (57 samples, 0.25%)</title><rect x="1122.1" y="339.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1125.1" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (57 samples, 0.25%)</title><rect x="1122.1" y="323.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.1" y="334.0"></text>
</g>
<g>
<title>ip_rcv (55 samples, 0.24%)</title><rect x="1122.2" y="307.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.2" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (53 samples, 0.24%)</title><rect x="1122.2" y="291.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.2" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (52 samples, 0.23%)</title><rect x="1122.2" y="275.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1125.2" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (49 samples, 0.22%)</title><rect x="1122.2" y="259.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1125.2" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (49 samples, 0.22%)</title><rect x="1122.2" y="243.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1125.2" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 0.21%)</title><rect x="1122.2" y="227.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1125.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 0.20%)</title><rect x="1122.4" y="211.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.4" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (44 samples, 0.20%)</title><rect x="1122.4" y="195.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.4" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (40 samples, 0.18%)</title><rect x="1122.6" y="179.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1125.6" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (40 samples, 0.18%)</title><rect x="1122.6" y="163.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1125.6" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (39 samples, 0.17%)</title><rect x="1122.7" y="147.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1125.7" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (39 samples, 0.17%)</title><rect x="1122.7" y="131.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1125.7" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (39 samples, 0.17%)</title><rect x="1122.7" y="115.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1125.7" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.03%)</title><rect x="1125.1" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1128.1" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.03%)</title><rect x="1125.1" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1128.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.merge (7 samples, 0.03%)</title><rect x="1126.5" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.5" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (7 samples, 0.03%)</title><rect x="1126.5" y="867.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (7 samples, 0.03%)</title><rect x="1126.5" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.03%)</title><rect x="1126.5" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (5 samples, 0.02%)</title><rect x="1126.5" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.02%)</title><rect x="1126.5" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (80 samples, 0.36%)</title><rect x="1127.2" y="1107.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (77 samples, 0.34%)</title><rect x="1127.3" y="1091.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.3" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (27 samples, 0.12%)</title><rect x="1127.4" y="1075.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1130.4" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (20 samples, 0.09%)</title><rect x="1127.8" y="1059.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1130.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="1128.2" y="1043.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1131.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.06%)</title><rect x="1128.2" y="1027.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1131.2" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.03%)</title><rect x="1128.5" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="1128.5" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1131.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.21%)</title><rect x="1128.8" y="1075.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1131.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (38 samples, 0.17%)</title><rect x="1129.0" y="1059.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1132.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.08%)</title><rect x="1130.1" y="1043.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1133.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.08%)</title><rect x="1130.1" y="1027.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1133.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.06%)</title><rect x="1130.4" y="1011.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.05%)</title><rect x="1130.4" y="995.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.4" y="1006.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.05%)</title><rect x="1130.4" y="979.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1133.4" y="990.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.02%)</title><rect x="1130.7" y="963.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1133.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (39 samples, 0.17%)</title><rect x="1131.3" y="1107.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (37 samples, 0.16%)</title><rect x="1131.3" y="1091.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.3" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.06%)</title><rect x="1131.5" y="1075.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1134.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (9 samples, 0.04%)</title><rect x="1131.7" y="1059.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1134.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1131.8" y="1043.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="1131.9" y="1027.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1134.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.10%)</title><rect x="1132.1" y="1075.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1135.1" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (21 samples, 0.09%)</title><rect x="1132.2" y="1059.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1135.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (570 samples, 2.53%)</title><rect x="1133.4" y="1139.0" width="29.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.4" y="1150.0">jd..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (252 samples, 1.12%)</title><rect x="1134.5" y="1123.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/2075659030.accept (250 samples, 1.11%)</title><rect x="1134.5" y="1107.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (250 samples, 1.11%)</title><rect x="1134.5" y="1091.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (250 samples, 1.11%)</title><rect x="1134.5" y="1075.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (250 samples, 1.11%)</title><rect x="1134.5" y="1059.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (250 samples, 1.11%)</title><rect x="1134.5" y="1043.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (246 samples, 1.09%)</title><rect x="1134.7" y="1027.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (246 samples, 1.09%)</title><rect x="1134.7" y="1011.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (246 samples, 1.09%)</title><rect x="1134.7" y="995.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (246 samples, 1.09%)</title><rect x="1134.7" y="979.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (246 samples, 1.09%)</title><rect x="1134.7" y="963.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (244 samples, 1.08%)</title><rect x="1134.8" y="947.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (244 samples, 1.08%)</title><rect x="1134.8" y="931.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (58 samples, 0.26%)</title><rect x="1135.0" y="915.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (58 samples, 0.26%)</title><rect x="1135.0" y="899.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (58 samples, 0.26%)</title><rect x="1135.0" y="883.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (55 samples, 0.24%)</title><rect x="1135.2" y="867.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (55 samples, 0.24%)</title><rect x="1135.2" y="851.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (55 samples, 0.24%)</title><rect x="1135.2" y="835.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (55 samples, 0.24%)</title><rect x="1135.2" y="819.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (55 samples, 0.24%)</title><rect x="1135.2" y="803.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (55 samples, 0.24%)</title><rect x="1135.2" y="787.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (50 samples, 0.22%)</title><rect x="1135.4" y="771.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (50 samples, 0.22%)</title><rect x="1135.4" y="755.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (50 samples, 0.22%)</title><rect x="1135.4" y="739.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 0.22%)</title><rect x="1135.4" y="723.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (50 samples, 0.22%)</title><rect x="1135.4" y="707.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.4" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.02%)</title><rect x="1135.4" y="691.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1138.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 0.20%)</title><rect x="1135.8" y="691.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1138.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.14%)</title><rect x="1136.4" y="675.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.14%)</title><rect x="1136.4" y="659.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1139.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 0.13%)</title><rect x="1136.4" y="643.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1139.4" y="654.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.13%)</title><rect x="1136.5" y="627.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1139.5" y="638.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.12%)</title><rect x="1136.5" y="611.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1139.5" y="622.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.10%)</title><rect x="1136.7" y="595.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1139.7" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.10%)</title><rect x="1136.7" y="579.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1139.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.10%)</title><rect x="1136.7" y="563.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1139.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (176 samples, 0.78%)</title><rect x="1138.3" y="915.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (173 samples, 0.77%)</title><rect x="1138.5" y="899.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (172 samples, 0.76%)</title><rect x="1138.5" y="883.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (172 samples, 0.76%)</title><rect x="1138.5" y="867.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (172 samples, 0.76%)</title><rect x="1138.5" y="851.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (172 samples, 0.76%)</title><rect x="1138.5" y="835.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (169 samples, 0.75%)</title><rect x="1138.7" y="819.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.7" y="830.0"></text>
</g>
<g>
<title>__read (165 samples, 0.73%)</title><rect x="1138.8" y="803.0" width="8.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1141.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (149 samples, 0.66%)</title><rect x="1139.7" y="787.0" width="7.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1142.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (149 samples, 0.66%)</title><rect x="1139.7" y="771.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1142.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_read (144 samples, 0.64%)</title><rect x="1139.9" y="755.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1142.9" y="766.0"></text>
</g>
<g>
<title>ksys_read (143 samples, 0.64%)</title><rect x="1140.0" y="739.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1143.0" y="750.0"></text>
</g>
<g>
<title>vfs_read (139 samples, 0.62%)</title><rect x="1140.2" y="723.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1143.2" y="734.0"></text>
</g>
<g>
<title>__vfs_read (132 samples, 0.59%)</title><rect x="1140.2" y="707.0" width="6.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1143.2" y="718.0"></text>
</g>
<g>
<title>new_sync_read (132 samples, 0.59%)</title><rect x="1140.2" y="691.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1143.2" y="702.0"></text>
</g>
<g>
<title>sock_read_iter (129 samples, 0.57%)</title><rect x="1140.3" y="675.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1143.3" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (126 samples, 0.56%)</title><rect x="1140.5" y="659.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1143.5" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (122 samples, 0.54%)</title><rect x="1140.6" y="643.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1143.6" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (120 samples, 0.53%)</title><rect x="1140.7" y="627.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1143.7" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (110 samples, 0.49%)</title><rect x="1141.2" y="611.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1144.2" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (110 samples, 0.49%)</title><rect x="1141.2" y="595.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1144.2" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (109 samples, 0.48%)</title><rect x="1141.3" y="579.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1144.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.03%)</title><rect x="1141.3" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1144.3" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (98 samples, 0.44%)</title><rect x="1141.6" y="563.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1144.6" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (97 samples, 0.43%)</title><rect x="1141.6" y="547.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1144.6" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (97 samples, 0.43%)</title><rect x="1141.6" y="531.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1144.6" y="542.0"></text>
</g>
<g>
<title>ip_local_out (95 samples, 0.42%)</title><rect x="1141.7" y="515.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.7" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (31 samples, 0.14%)</title><rect x="1141.8" y="499.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1144.8" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (30 samples, 0.13%)</title><rect x="1141.8" y="483.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1144.8" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (21 samples, 0.09%)</title><rect x="1142.1" y="467.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1145.1" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (19 samples, 0.08%)</title><rect x="1142.2" y="451.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1145.2" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (7 samples, 0.03%)</title><rect x="1142.2" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (8 samples, 0.04%)</title><rect x="1142.7" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1145.7" y="446.0"></text>
</g>
<g>
<title>ip_output (62 samples, 0.28%)</title><rect x="1143.5" y="499.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1146.5" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (60 samples, 0.27%)</title><rect x="1143.5" y="483.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.5" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (59 samples, 0.26%)</title><rect x="1143.5" y="467.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (59 samples, 0.26%)</title><rect x="1143.5" y="451.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1146.5" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 0.22%)</title><rect x="1143.7" y="435.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.7" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (50 samples, 0.22%)</title><rect x="1143.7" y="419.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.7" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (49 samples, 0.22%)</title><rect x="1143.7" y="403.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.7" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (49 samples, 0.22%)</title><rect x="1143.7" y="387.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.7" y="398.0"></text>
</g>
<g>
<title>net_rx_action (47 samples, 0.21%)</title><rect x="1143.8" y="371.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1146.8" y="382.0"></text>
</g>
<g>
<title>process_backlog (47 samples, 0.21%)</title><rect x="1143.8" y="355.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1146.8" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 0.20%)</title><rect x="1143.8" y="339.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1146.8" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 0.20%)</title><rect x="1143.8" y="323.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1146.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv (42 samples, 0.19%)</title><rect x="1143.9" y="307.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (36 samples, 0.16%)</title><rect x="1144.0" y="291.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1147.0" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (34 samples, 0.15%)</title><rect x="1144.1" y="275.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.1" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 0.14%)</title><rect x="1144.1" y="259.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1147.1" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 0.14%)</title><rect x="1144.1" y="243.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1147.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (31 samples, 0.14%)</title><rect x="1144.1" y="227.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1147.1" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.03%)</title><rect x="1144.2" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1147.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.09%)</title><rect x="1144.7" y="211.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1147.7" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.08%)</title><rect x="1144.8" y="195.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1147.8" y="206.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.05%)</title><rect x="1145.1" y="179.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1148.1" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.03%)</title><rect x="1145.3" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.3" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.02%)</title><rect x="1146.3" y="435.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.3" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.02%)</title><rect x="1146.3" y="419.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.3" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.03%)</title><rect x="1147.1" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.1" y="718.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.03%)</title><rect x="1147.1" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (18 samples, 0.08%)</title><rect x="1147.8" y="1123.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.06%)</title><rect x="1148.0" y="1107.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.04%)</title><rect x="1148.2" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.04%)</title><rect x="1148.2" y="1075.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.04%)</title><rect x="1148.2" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.04%)</title><rect x="1148.2" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (8 samples, 0.04%)</title><rect x="1148.2" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.02%)</title><rect x="1148.4" y="1011.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1151.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (101 samples, 0.45%)</title><rect x="1148.8" y="1123.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$276/960955001.run (56 samples, 0.25%)</title><rect x="1148.8" y="1107.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (56 samples, 0.25%)</title><rect x="1148.8" y="1091.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (55 samples, 0.24%)</title><rect x="1148.8" y="1075.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (54 samples, 0.24%)</title><rect x="1148.9" y="1059.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (51 samples, 0.23%)</title><rect x="1149.0" y="1043.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (51 samples, 0.23%)</title><rect x="1149.0" y="1027.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/2104045898.run (49 samples, 0.22%)</title><rect x="1149.1" y="1011.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1152.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (49 samples, 0.22%)</title><rect x="1149.1" y="995.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (30 samples, 0.13%)</title><rect x="1149.2" y="979.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (24 samples, 0.11%)</title><rect x="1149.5" y="963.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (5 samples, 0.02%)</title><rect x="1149.5" y="947.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.02%)</title><rect x="1149.5" y="931.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.02%)</title><rect x="1149.5" y="915.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1152.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (19 samples, 0.08%)</title><rect x="1149.7" y="947.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.08%)</title><rect x="1149.7" y="931.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.05%)</title><rect x="1150.2" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.05%)</title><rect x="1150.2" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.05%)</title><rect x="1150.2" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.04%)</title><rect x="1150.2" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.04%)</title><rect x="1150.2" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.04%)</title><rect x="1150.3" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.04%)</title><rect x="1150.3" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.04%)</title><rect x="1150.3" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.04%)</title><rect x="1150.3" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.04%)</title><rect x="1150.3" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.03%)</title><rect x="1150.4" y="755.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1153.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1150.4" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1153.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1150.4" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="1150.4" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="1150.4" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="1150.4" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.4" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.02%)</title><rect x="1150.5" y="659.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.5" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.02%)</title><rect x="1150.5" y="643.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.5" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.02%)</title><rect x="1150.5" y="627.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (18 samples, 0.08%)</title><rect x="1150.7" y="979.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (18 samples, 0.08%)</title><rect x="1150.7" y="963.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.08%)</title><rect x="1150.8" y="947.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.08%)</title><rect x="1150.8" y="931.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (17 samples, 0.08%)</title><rect x="1150.8" y="915.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (17 samples, 0.08%)</title><rect x="1150.8" y="899.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (15 samples, 0.07%)</title><rect x="1150.9" y="883.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.9" y="894.0"></text>
</g>
<g>
<title>__read (14 samples, 0.06%)</title><rect x="1151.0" y="867.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1154.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.05%)</title><rect x="1151.1" y="851.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.04%)</title><rect x="1151.2" y="835.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1154.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_read (10 samples, 0.04%)</title><rect x="1151.2" y="819.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1154.2" y="830.0"></text>
</g>
<g>
<title>ksys_read (10 samples, 0.04%)</title><rect x="1151.2" y="803.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.2" y="814.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.04%)</title><rect x="1151.2" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1154.2" y="798.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.03%)</title><rect x="1151.2" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.2" y="782.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.03%)</title><rect x="1151.2" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.2" y="766.0"></text>
</g>
<g>
<title>sock_read_iter (7 samples, 0.03%)</title><rect x="1151.2" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1154.2" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.02%)</title><rect x="1151.3" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$289/1211432.run (45 samples, 0.20%)</title><rect x="1151.7" y="1107.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (45 samples, 0.20%)</title><rect x="1151.7" y="1091.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 0.20%)</title><rect x="1151.7" y="1075.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (45 samples, 0.20%)</title><rect x="1151.7" y="1059.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (43 samples, 0.19%)</title><rect x="1151.8" y="1043.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (43 samples, 0.19%)</title><rect x="1151.8" y="1027.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (43 samples, 0.19%)</title><rect x="1151.8" y="1011.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (43 samples, 0.19%)</title><rect x="1151.8" y="995.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1154.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (43 samples, 0.19%)</title><rect x="1151.8" y="979.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.19%)</title><rect x="1151.8" y="963.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (43 samples, 0.19%)</title><rect x="1151.8" y="947.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.8" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="1151.8" y="931.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1154.8" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (36 samples, 0.16%)</title><rect x="1152.1" y="931.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1155.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.12%)</title><rect x="1152.6" y="915.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1155.6" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.12%)</title><rect x="1152.6" y="899.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.6" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.11%)</title><rect x="1152.6" y="883.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1155.6" y="894.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.11%)</title><rect x="1152.6" y="867.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1155.6" y="878.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 0.11%)</title><rect x="1152.6" y="851.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.6" y="862.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.10%)</title><rect x="1152.7" y="835.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1155.7" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.10%)</title><rect x="1152.7" y="819.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.7" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.10%)</title><rect x="1152.7" y="803.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (24 samples, 0.11%)</title><rect x="1154.0" y="1123.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.0" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.03%)</title><rect x="1154.0" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.0" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.03%)</title><rect x="1154.0" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.02%)</title><rect x="1154.1" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.1" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.02%)</title><rect x="1154.1" y="1059.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1157.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (18 samples, 0.08%)</title><rect x="1154.4" y="1107.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5 samples, 0.02%)</title><rect x="1155.5" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (113 samples, 0.50%)</title><rect x="1155.8" y="1123.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.8" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (113 samples, 0.50%)</title><rect x="1155.8" y="1107.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (112 samples, 0.50%)</title><rect x="1155.8" y="1091.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.8" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (64 samples, 0.28%)</title><rect x="1155.8" y="1075.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.8" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (58 samples, 0.26%)</title><rect x="1156.1" y="1059.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1159.1" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.20%)</title><rect x="1156.8" y="1043.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1159.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.20%)</title><rect x="1156.8" y="1027.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1159.8" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (40 samples, 0.18%)</title><rect x="1157.1" y="1011.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1160.1" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (40 samples, 0.18%)</title><rect x="1157.1" y="995.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.1" y="1006.0"></text>
</g>
<g>
<title>ep_poll (35 samples, 0.16%)</title><rect x="1157.2" y="979.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.2" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (27 samples, 0.12%)</title><rect x="1157.2" y="963.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.2" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (24 samples, 0.11%)</title><rect x="1157.3" y="947.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.3" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (16 samples, 0.07%)</title><rect x="1157.6" y="931.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.6" y="942.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.02%)</title><rect x="1158.2" y="915.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (40 samples, 0.18%)</title><rect x="1159.2" y="1075.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (30 samples, 0.13%)</title><rect x="1159.3" y="1059.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (27 samples, 0.12%)</title><rect x="1159.5" y="1043.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1162.5" y="1054.0"></text>
</g>
<g>
<title>__read (25 samples, 0.11%)</title><rect x="1159.6" y="1027.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1162.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.08%)</title><rect x="1159.9" y="1011.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.9" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.08%)</title><rect x="1160.0" y="995.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (13 samples, 0.06%)</title><rect x="1160.2" y="979.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1163.2" y="990.0"></text>
</g>
<g>
<title>ksys_read (13 samples, 0.06%)</title><rect x="1160.2" y="963.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.2" y="974.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.06%)</title><rect x="1160.2" y="947.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.2" y="958.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.05%)</title><rect x="1160.2" y="931.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.2" y="942.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.05%)</title><rect x="1160.2" y="915.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.2" y="926.0"></text>
</g>
<g>
<title>pipe_read (8 samples, 0.04%)</title><rect x="1160.4" y="899.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.03%)</title><rect x="1160.9" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1163.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (12 samples, 0.05%)</title><rect x="1161.7" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.7" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (12 samples, 0.05%)</title><rect x="1161.7" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.05%)</title><rect x="1161.7" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (9 samples, 0.04%)</title><rect x="1161.7" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.7" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.03%)</title><rect x="1161.8" y="1059.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1164.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="1161.9" y="1043.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1164.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (5 samples, 0.02%)</title><rect x="1162.4" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.4" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (5 samples, 0.02%)</title><rect x="1162.4" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.02%)</title><rect x="1162.4" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (12 samples, 0.05%)</title><rect x="1162.7" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.05%)</title><rect x="1162.7" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12 samples, 0.05%)</title><rect x="1162.7" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (12 samples, 0.05%)</title><rect x="1162.7" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (12 samples, 0.05%)</title><rect x="1162.7" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (364 samples, 1.62%)</title><rect x="1163.3" y="1139.0" width="19.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (90 samples, 0.40%)</title><rect x="1163.7" y="1123.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (86 samples, 0.38%)</title><rect x="1163.9" y="1107.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.9" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (77 samples, 0.34%)</title><rect x="1164.4" y="1091.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1167.4" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.25%)</title><rect x="1165.5" y="1075.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1168.5" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.25%)</title><rect x="1165.5" y="1059.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1168.5" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (55 samples, 0.24%)</title><rect x="1165.5" y="1043.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1168.5" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (55 samples, 0.24%)</title><rect x="1165.5" y="1027.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1168.5" y="1038.0"></text>
</g>
<g>
<title>ep_poll (49 samples, 0.22%)</title><rect x="1165.7" y="1011.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1168.7" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (39 samples, 0.17%)</title><rect x="1165.8" y="995.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1168.8" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (27 samples, 0.12%)</title><rect x="1166.1" y="979.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1169.1" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (21 samples, 0.09%)</title><rect x="1166.4" y="963.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1169.4" y="974.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.07%)</title><rect x="1166.7" y="947.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1169.7" y="958.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.03%)</title><rect x="1167.1" y="931.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1170.1" y="942.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.03%)</title><rect x="1167.5" y="979.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.5" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.02%)</title><rect x="1168.0" y="995.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.0" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.02%)</title><rect x="1168.0" y="979.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1171.0" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (267 samples, 1.19%)</title><rect x="1168.4" y="1123.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (267 samples, 1.19%)</title><rect x="1168.4" y="1107.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (142 samples, 0.63%)</title><rect x="1168.4" y="1091.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (101 samples, 0.45%)</title><rect x="1168.5" y="1075.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (101 samples, 0.45%)</title><rect x="1168.5" y="1059.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.5" y="1070.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (70 samples, 0.31%)</title><rect x="1168.5" y="1043.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.07%)</title><rect x="1168.5" y="1027.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.03%)</title><rect x="1168.8" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1171.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.03%)</title><rect x="1168.8" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (54 samples, 0.24%)</title><rect x="1169.3" y="1027.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1172.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (14 samples, 0.06%)</title><rect x="1169.3" y="1011.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.05%)</title><rect x="1169.5" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.03%)</title><rect x="1169.7" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.02%)</title><rect x="1169.8" y="963.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.02%)</title><rect x="1169.8" y="947.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (40 samples, 0.18%)</title><rect x="1170.1" y="1011.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1173.1" y="1022.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (40 samples, 0.18%)</title><rect x="1170.1" y="995.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1173.1" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.04%)</title><rect x="1170.2" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1173.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (24 samples, 0.11%)</title><rect x="1170.7" y="979.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.7" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (21 samples, 0.09%)</title><rect x="1170.8" y="963.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.add (13 samples, 0.06%)</title><rect x="1171.0" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.put (12 samples, 0.05%)</title><rect x="1171.0" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.05%)</title><rect x="1171.0" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.03%)</title><rect x="1171.3" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (21 samples, 0.09%)</title><rect x="1172.3" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (21 samples, 0.09%)</title><rect x="1172.3" y="1027.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1175.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (15 samples, 0.07%)</title><rect x="1172.3" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1175.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.equals (15 samples, 0.07%)</title><rect x="1172.3" y="995.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.3" y="1006.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.02%)</title><rect x="1172.8" y="979.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1175.8" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.04%)</title><rect x="1173.4" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.04%)</title><rect x="1173.4" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.03%)</title><rect x="1173.5" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1176.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.07%)</title><rect x="1173.8" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.04%)</title><rect x="1174.2" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.03%)</title><rect x="1174.3" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.02%)</title><rect x="1174.7" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.08%)</title><rect x="1175.0" y="1075.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.08%)</title><rect x="1175.0" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (124 samples, 0.55%)</title><rect x="1175.9" y="1091.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1178.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (122 samples, 0.54%)</title><rect x="1176.0" y="1075.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.0" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.06%)</title><rect x="1176.0" y="1059.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1179.0" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.05%)</title><rect x="1176.1" y="1043.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1179.1" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.03%)</title><rect x="1176.4" y="1027.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1179.4" y="1038.0"></text>
</g>
<g>
<title>recv (105 samples, 0.47%)</title><rect x="1176.8" y="1059.0" width="5.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1179.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 0.43%)</title><rect x="1177.3" y="1043.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1180.3" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 0.43%)</title><rect x="1177.3" y="1027.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.3" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (93 samples, 0.41%)</title><rect x="1177.5" y="1011.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.5" y="1022.0"></text>
</g>
<g>
<title>__sys_recvfrom (91 samples, 0.40%)</title><rect x="1177.5" y="995.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1180.5" y="1006.0"></text>
</g>
<g>
<title>sock_recvmsg (87 samples, 0.39%)</title><rect x="1177.5" y="979.0" width="4.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.5" y="990.0"></text>
</g>
<g>
<title>inet6_recvmsg (84 samples, 0.37%)</title><rect x="1177.5" y="963.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1180.5" y="974.0"></text>
</g>
<g>
<title>tcp_recvmsg (83 samples, 0.37%)</title><rect x="1177.6" y="947.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1180.6" y="958.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.03%)</title><rect x="1178.3" y="931.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.3" y="942.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.03%)</title><rect x="1178.3" y="915.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.3" y="926.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.02%)</title><rect x="1178.4" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1181.4" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (60 samples, 0.27%)</title><rect x="1178.7" y="931.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.7" y="942.0"></text>
</g>
<g>
<title>tcp_send_ack (59 samples, 0.26%)</title><rect x="1178.7" y="915.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.7" y="926.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (59 samples, 0.26%)</title><rect x="1178.7" y="899.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1181.7" y="910.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (57 samples, 0.25%)</title><rect x="1178.8" y="883.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1181.8" y="894.0"></text>
</g>
<g>
<title>ip_queue_xmit (57 samples, 0.25%)</title><rect x="1178.8" y="867.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.8" y="878.0"></text>
</g>
<g>
<title>__ip_queue_xmit (57 samples, 0.25%)</title><rect x="1178.8" y="851.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.8" y="862.0"></text>
</g>
<g>
<title>ip_local_out (52 samples, 0.23%)</title><rect x="1179.0" y="835.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.0" y="846.0"></text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.04%)</title><rect x="1179.0" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.0" y="830.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="1179.2" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (5 samples, 0.02%)</title><rect x="1179.2" y="787.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.2" y="798.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.02%)</title><rect x="1179.2" y="771.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>ip_output (44 samples, 0.20%)</title><rect x="1179.5" y="819.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.5" y="830.0"></text>
</g>
<g>
<title>ip_finish_output (42 samples, 0.19%)</title><rect x="1179.5" y="803.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.5" y="814.0"></text>
</g>
<g>
<title>__ip_finish_output (40 samples, 0.18%)</title><rect x="1179.6" y="787.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.6" y="798.0"></text>
</g>
<g>
<title>ip_finish_output2 (40 samples, 0.18%)</title><rect x="1179.6" y="771.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1182.6" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (35 samples, 0.16%)</title><rect x="1179.6" y="755.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.6" y="766.0"></text>
</g>
<g>
<title>do_softirq.part.0 (35 samples, 0.16%)</title><rect x="1179.6" y="739.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.6" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (35 samples, 0.16%)</title><rect x="1179.6" y="723.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.6" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (34 samples, 0.15%)</title><rect x="1179.6" y="707.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>net_rx_action (32 samples, 0.14%)</title><rect x="1179.7" y="691.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1182.7" y="702.0"></text>
</g>
<g>
<title>process_backlog (30 samples, 0.13%)</title><rect x="1179.8" y="675.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.8" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (29 samples, 0.13%)</title><rect x="1179.9" y="659.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.9" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (28 samples, 0.12%)</title><rect x="1179.9" y="643.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1182.9" y="654.0"></text>
</g>
<g>
<title>ip_rcv (26 samples, 0.12%)</title><rect x="1180.0" y="627.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.0" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (25 samples, 0.11%)</title><rect x="1180.0" y="611.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.0" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 0.11%)</title><rect x="1180.0" y="595.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1183.0" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 0.09%)</title><rect x="1180.0" y="579.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1183.0" y="590.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 0.09%)</title><rect x="1180.0" y="563.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1183.0" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 0.08%)</title><rect x="1180.1" y="547.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.06%)</title><rect x="1180.4" y="531.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.4" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.06%)</title><rect x="1180.4" y="515.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.4" y="526.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.03%)</title><rect x="1180.6" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.6" y="510.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.02%)</title><rect x="1180.7" y="483.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1183.7" y="494.0"></text>
</g>
<g>
<title>start_thread (144 samples, 0.64%)</title><rect x="1182.4" y="1139.0" width="7.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1185.4" y="1150.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (144 samples, 0.64%)</title><rect x="1182.4" y="1123.0" width="7.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1185.4" y="1134.0"></text>
</g>
<g>
<title>Thread::call_run() (144 samples, 0.64%)</title><rect x="1182.4" y="1107.0" width="7.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.4" y="1118.0"></text>
</g>
<g>
<title>GangWorker::loop() (94 samples, 0.42%)</title><rect x="1182.4" y="1091.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.4" y="1102.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (88 samples, 0.39%)</title><rect x="1182.5" y="1075.0" width="4.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.5" y="1086.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (22 samples, 0.10%)</title><rect x="1182.5" y="1059.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.5" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (14 samples, 0.06%)</title><rect x="1182.5" y="1043.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.5" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.03%)</title><rect x="1182.7" y="1027.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1185.7" y="1038.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.03%)</title><rect x="1183.2" y="1043.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1186.2" y="1054.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (57 samples, 0.25%)</title><rect x="1183.6" y="1059.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.6" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (57 samples, 0.25%)</title><rect x="1183.6" y="1043.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.6" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (57 samples, 0.25%)</title><rect x="1183.6" y="1027.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.6" y="1038.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (57 samples, 0.25%)</title><rect x="1183.6" y="1011.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="1022.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (57 samples, 0.25%)</title><rect x="1183.6" y="995.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.6" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (27 samples, 0.12%)</title><rect x="1183.6" y="979.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.04%)</title><rect x="1184.0" y="963.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1187.0" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.04%)</title><rect x="1184.5" y="963.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.5" y="974.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (30 samples, 0.13%)</title><rect x="1185.0" y="979.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.0" y="990.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (28 samples, 0.12%)</title><rect x="1185.0" y="963.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.0" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (11 samples, 0.05%)</title><rect x="1185.6" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.6" y="958.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (8 samples, 0.04%)</title><rect x="1186.6" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.6" y="1070.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.03%)</title><rect x="1186.6" y="1043.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.6" y="1054.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (6 samples, 0.03%)</title><rect x="1186.6" y="1027.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.6" y="1038.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (5 samples, 0.02%)</title><rect x="1186.7" y="1011.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.7" y="1022.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (5 samples, 0.02%)</title><rect x="1187.1" y="1075.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="1086.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (5 samples, 0.02%)</title><rect x="1187.1" y="1059.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="1070.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (5 samples, 0.02%)</title><rect x="1187.1" y="1043.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>JavaThread::run() (43 samples, 0.19%)</title><rect x="1187.3" y="1091.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (43 samples, 0.19%)</title><rect x="1187.3" y="1075.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.3" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (43 samples, 0.19%)</title><rect x="1187.3" y="1059.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.3" y="1070.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (43 samples, 0.19%)</title><rect x="1187.3" y="1043.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="1054.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (43 samples, 0.19%)</title><rect x="1187.3" y="1027.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="1038.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (26 samples, 0.12%)</title><rect x="1187.3" y="1011.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.3" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (22 samples, 0.10%)</title><rect x="1187.5" y="995.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.03%)</title><rect x="1187.9" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.9" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (12 samples, 0.05%)</title><rect x="1188.7" y="1011.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.7" y="1022.0"></text>
</g>
<g>
<title>VMThread::run() (7 samples, 0.03%)</title><rect x="1189.6" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.6" y="1102.0"></text>
</g>
<g>
<title>VMThread::loop() (7 samples, 0.03%)</title><rect x="1189.6" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.6" y="1086.0"></text>
</g>
</g>
</svg>
