<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (20,854 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (67 samples, 0.32%)</title><rect x="10.1" y="1139.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.1" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (67 samples, 0.32%)</title><rect x="10.1" y="1123.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.1" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (65 samples, 0.31%)</title><rect x="10.2" y="1107.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (60 samples, 0.29%)</title><rect x="10.4" y="1091.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.4" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (32 samples, 0.15%)</title><rect x="10.7" y="1075.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.7" y="1086.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.04%)</title><rect x="12.5" y="1075.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (10 samples, 0.05%)</title><rect x="13.0" y="1075.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="16.0" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="13.2" y="1059.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.2" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="13.2" y="1043.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="16.2" y="1054.0"></text>
</g>
<g>
<title>[no_Java_frame] (11 samples, 0.05%)</title><rect x="13.9" y="1139.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.9" y="1150.0"></text>
</g>
<g>
<title>[not_walkable_Java] (29 samples, 0.14%)</title><rect x="14.5" y="1139.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="17.5" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (15 samples, 0.07%)</title><rect x="14.8" y="1123.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="17.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (14 samples, 0.07%)</title><rect x="14.8" y="1107.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.8" y="1118.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.02%)</title><rect x="14.9" y="1091.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.9" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.02%)</title><rect x="14.9" y="1075.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.9" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.04%)</title><rect x="15.1" y="1091.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.19%)</title><rect x="16.2" y="1139.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="19.2" y="1150.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (7 samples, 0.03%)</title><rect x="16.2" y="1123.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="19.2" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (20 samples, 0.10%)</title><rect x="17.2" y="1123.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="20.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="17.9" y="1107.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="20.9" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="17.9" y="1091.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="20.9" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.04%)</title><rect x="17.9" y="1075.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.9" y="1086.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.03%)</title><rect x="17.9" y="1059.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="20.9" y="1070.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.03%)</title><rect x="17.9" y="1043.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.9" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (84 samples, 0.40%)</title><rect x="18.4" y="1139.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="21.4" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.10%)</title><rect x="18.9" y="1123.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.9" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (21 samples, 0.10%)</title><rect x="18.9" y="1107.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.9" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (6 samples, 0.03%)</title><rect x="20.1" y="1123.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.1" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (41 samples, 0.20%)</title><rect x="20.5" y="1123.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.5" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.13%)</title><rect x="21.3" y="1107.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.3" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.13%)</title><rect x="21.3" y="1091.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="24.3" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.13%)</title><rect x="21.3" y="1075.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.3" y="1086.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.13%)</title><rect x="21.3" y="1059.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.3" y="1070.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.13%)</title><rect x="21.3" y="1043.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.3" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 0.11%)</title><rect x="21.6" y="1027.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.6" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.10%)</title><rect x="21.7" y="1011.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="24.7" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.10%)</title><rect x="21.7" y="995.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,539 samples, 12.18%)</title><rect x="23.4" y="1139.0" width="143.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.4" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,539 samples, 12.18%)</title><rect x="23.4" y="1123.0" width="143.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.4" y="1134.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,539 samples, 12.18%)</title><rect x="23.4" y="1107.0" width="143.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.4" y="1118.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (459 samples, 2.20%)</title><rect x="24.0" y="1091.0" width="26.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.0" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (456 samples, 2.19%)</title><rect x="24.2" y="1075.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.2" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (451 samples, 2.16%)</title><rect x="24.4" y="1059.0" width="25.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.4" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$170/1528611040.apply (448 samples, 2.15%)</title><rect x="24.6" y="1043.0" width="25.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.6" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (448 samples, 2.15%)</title><rect x="24.6" y="1027.0" width="25.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.6" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (448 samples, 2.15%)</title><rect x="24.6" y="1011.0" width="25.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.6" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.02%)</title><rect x="25.1" y="995.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.02%)</title><rect x="25.1" y="979.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (421 samples, 2.02%)</title><rect x="25.3" y="995.0" width="23.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.3" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (421 samples, 2.02%)</title><rect x="25.3" y="979.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.3" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (419 samples, 2.01%)</title><rect x="25.4" y="963.0" width="23.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.4" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (270 samples, 1.29%)</title><rect x="25.6" y="947.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (270 samples, 1.29%)</title><rect x="25.6" y="931.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (267 samples, 1.28%)</title><rect x="25.6" y="915.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$299/855035991.apply (267 samples, 1.28%)</title><rect x="25.6" y="899.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (267 samples, 1.28%)</title><rect x="25.6" y="883.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (267 samples, 1.28%)</title><rect x="25.6" y="867.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1330536006.apply (267 samples, 1.28%)</title><rect x="25.6" y="851.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (267 samples, 1.28%)</title><rect x="25.6" y="835.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (263 samples, 1.26%)</title><rect x="25.8" y="819.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (230 samples, 1.10%)</title><rect x="25.9" y="803.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (230 samples, 1.10%)</title><rect x="25.9" y="787.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (6 samples, 0.03%)</title><rect x="26.1" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$344/2067301772.apply (220 samples, 1.05%)</title><rect x="26.5" y="771.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (220 samples, 1.05%)</title><rect x="26.5" y="755.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.05%)</title><rect x="26.9" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.04%)</title><rect x="27.0" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.04%)</title><rect x="27.0" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.04%)</title><rect x="27.0" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.03%)</title><rect x="27.1" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.02%)</title><rect x="27.2" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.02%)</title><rect x="27.2" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (60 samples, 0.29%)</title><rect x="27.5" y="739.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (60 samples, 0.29%)</title><rect x="27.5" y="723.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (11 samples, 0.05%)</title><rect x="27.5" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (11 samples, 0.05%)</title><rect x="27.5" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (11 samples, 0.05%)</title><rect x="27.5" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.05%)</title><rect x="27.5" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.05%)</title><rect x="27.5" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.04%)</title><rect x="27.6" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (49 samples, 0.23%)</title><rect x="28.1" y="707.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (49 samples, 0.23%)</title><rect x="28.1" y="691.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (47 samples, 0.23%)</title><rect x="28.2" y="675.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (45 samples, 0.22%)</title><rect x="28.2" y="659.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (45 samples, 0.22%)</title><rect x="28.2" y="643.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="28.6" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.6" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.02%)</title><rect x="28.6" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.6" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="28.6" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (32 samples, 0.15%)</title><rect x="28.9" y="627.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (29 samples, 0.14%)</title><rect x="29.1" y="611.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.1" y="622.0"></text>
</g>
<g>
<title>__libc_write (27 samples, 0.13%)</title><rect x="29.1" y="595.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="32.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.11%)</title><rect x="29.4" y="579.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.4" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.11%)</title><rect x="29.4" y="563.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="32.4" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (20 samples, 0.10%)</title><rect x="29.5" y="547.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="32.5" y="558.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 0.10%)</title><rect x="29.5" y="531.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="32.5" y="542.0"></text>
</g>
<g>
<title>vfs_write (19 samples, 0.09%)</title><rect x="29.5" y="515.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="32.5" y="526.0"></text>
</g>
<g>
<title>__vfs_write (18 samples, 0.09%)</title><rect x="29.6" y="499.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.6" y="510.0"></text>
</g>
<g>
<title>new_sync_write (18 samples, 0.09%)</title><rect x="29.6" y="483.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.6" y="494.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.09%)</title><rect x="29.6" y="467.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="32.6" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 0.08%)</title><rect x="29.7" y="451.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="32.7" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.08%)</title><rect x="29.7" y="435.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.08%)</title><rect x="29.7" y="419.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (142 samples, 0.68%)</title><rect x="30.9" y="739.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.toString (5 samples, 0.02%)</title><rect x="31.1" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.02%)</title><rect x="31.4" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.4" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.02%)</title><rect x="31.4" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (98 samples, 0.47%)</title><rect x="31.7" y="723.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (8 samples, 0.04%)</title><rect x="31.7" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (8 samples, 0.04%)</title><rect x="31.7" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.7" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.04%)</title><rect x="31.7" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.04%)</title><rect x="31.7" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.03%)</title><rect x="31.8" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.03%)</title><rect x="31.8" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (39 samples, 0.19%)</title><rect x="32.2" y="707.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.03%)</title><rect x="32.6" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.6" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.03%)</title><rect x="32.6" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.6" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.03%)</title><rect x="32.6" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.03%)</title><rect x="32.6" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.6" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.02%)</title><rect x="32.6" y="627.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="35.6" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (5 samples, 0.02%)</title><rect x="33.1" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.1" y="702.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (5 samples, 0.02%)</title><rect x="33.1" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.1" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$374/2064307929.test (13 samples, 0.06%)</title><rect x="33.4" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.4" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (12 samples, 0.06%)</title><rect x="33.4" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/201576232.test (12 samples, 0.06%)</title><rect x="33.4" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (12 samples, 0.06%)</title><rect x="33.4" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.4" y="654.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$70/231786897.test (12 samples, 0.06%)</title><rect x="33.4" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.4" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (12 samples, 0.06%)</title><rect x="33.4" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/1019298652.test (12 samples, 0.06%)</title><rect x="33.4" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (10 samples, 0.05%)</title><rect x="33.5" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.04%)</title><rect x="33.5" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.04%)</title><rect x="33.5" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.04%)</title><rect x="33.5" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (47 samples, 0.23%)</title><rect x="34.6" y="707.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (47 samples, 0.23%)</title><rect x="34.6" y="691.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.6" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (45 samples, 0.22%)</title><rect x="34.7" y="675.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (37 samples, 0.18%)</title><rect x="35.1" y="659.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.1" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (32 samples, 0.15%)</title><rect x="35.3" y="643.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (32 samples, 0.15%)</title><rect x="35.3" y="627.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.06%)</title><rect x="35.9" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.9" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.accept (12 samples, 0.06%)</title><rect x="35.9" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.04%)</title><rect x="36.0" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.03%)</title><rect x="36.1" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.03%)</title><rect x="36.1" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.04%)</title><rect x="36.7" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (6 samples, 0.03%)</title><rect x="37.4" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (6 samples, 0.03%)</title><rect x="37.4" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (6 samples, 0.03%)</title><rect x="37.4" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (20 samples, 0.10%)</title><rect x="37.8" y="723.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.03%)</title><rect x="37.9" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.03%)</title><rect x="37.9" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.02%)</title><rect x="38.0" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.02%)</title><rect x="38.0" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.05%)</title><rect x="38.3" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (30 samples, 0.14%)</title><rect x="38.9" y="803.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (27 samples, 0.13%)</title><rect x="39.0" y="787.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (9 samples, 0.04%)</title><rect x="39.0" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (9 samples, 0.04%)</title><rect x="39.0" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.09%)</title><rect x="39.5" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.09%)</title><rect x="39.5" y="755.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17 samples, 0.08%)</title><rect x="39.5" y="739.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16 samples, 0.08%)</title><rect x="39.6" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.05%)</title><rect x="39.6" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/1400081447.run (8 samples, 0.04%)</title><rect x="39.7" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.03%)</title><rect x="39.8" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.02%)</title><rect x="39.9" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.03%)</title><rect x="40.2" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.02%)</title><rect x="40.2" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (144 samples, 0.69%)</title><rect x="41.0" y="947.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.03%)</title><rect x="41.1" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.03%)</title><rect x="41.1" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.02%)</title><rect x="41.4" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.02%)</title><rect x="41.4" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (131 samples, 0.63%)</title><rect x="41.7" y="931.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (131 samples, 0.63%)</title><rect x="41.7" y="915.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (131 samples, 0.63%)</title><rect x="41.7" y="899.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (6 samples, 0.03%)</title><rect x="42.4" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (33 samples, 0.16%)</title><rect x="42.8" y="883.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (30 samples, 0.14%)</title><rect x="42.9" y="867.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.9" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="43.3" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="46.3" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.03%)</title><rect x="43.3" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="46.3" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.03%)</title><rect x="43.3" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="46.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (16 samples, 0.08%)</title><rect x="43.7" y="851.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (13 samples, 0.06%)</title><rect x="43.8" y="835.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.8" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (13 samples, 0.06%)</title><rect x="43.8" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.8" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (13 samples, 0.06%)</title><rect x="43.8" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.8" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (13 samples, 0.06%)</title><rect x="43.8" y="787.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.8" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (13 samples, 0.06%)</title><rect x="43.8" y="771.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (80 samples, 0.38%)</title><rect x="44.6" y="883.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.6" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (67 samples, 0.32%)</title><rect x="45.4" y="867.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.4" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (48 samples, 0.23%)</title><rect x="45.6" y="851.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="48.6" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (11 samples, 0.05%)</title><rect x="46.2" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="49.2" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (13 samples, 0.06%)</title><rect x="47.0" y="835.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="50.0" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (9 samples, 0.04%)</title><rect x="47.1" y="819.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="50.1" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.02%)</title><rect x="47.2" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="50.2" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.05%)</title><rect x="47.7" y="835.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="50.7" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.02%)</title><rect x="48.0" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="51.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$224/522784531.run (10 samples, 0.05%)</title><rect x="48.5" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (10 samples, 0.05%)</title><rect x="48.5" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.5" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (10 samples, 0.05%)</title><rect x="48.5" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.5" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (10 samples, 0.05%)</title><rect x="48.5" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.5" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.05%)</title><rect x="48.5" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.5" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.04%)</title><rect x="48.5" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.5" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (9 samples, 0.04%)</title><rect x="48.5" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.02%)</title><rect x="48.8" y="739.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.02%)</title><rect x="48.8" y="723.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.02%)</title><rect x="48.8" y="707.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (12 samples, 0.06%)</title><rect x="49.2" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (8 samples, 0.04%)</title><rect x="49.2" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (827 samples, 3.97%)</title><rect x="50.2" y="1091.0" width="46.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.2" y="1102.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (824 samples, 3.95%)</title><rect x="50.4" y="1075.0" width="46.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.4" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (661 samples, 3.17%)</title><rect x="51.8" y="1059.0" width="37.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.8" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (116 samples, 0.56%)</title><rect x="52.1" y="1043.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (116 samples, 0.56%)</title><rect x="52.1" y="1027.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (105 samples, 0.50%)</title><rect x="52.6" y="1011.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (105 samples, 0.50%)</title><rect x="52.6" y="995.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (105 samples, 0.50%)</title><rect x="52.6" y="979.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.6" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.08%)</title><rect x="52.8" y="963.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="55.8" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (83 samples, 0.40%)</title><rect x="53.8" y="963.0" width="4.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="56.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 0.28%)</title><rect x="55.2" y="947.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 0.28%)</title><rect x="55.2" y="931.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (56 samples, 0.27%)</title><rect x="55.3" y="915.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.3" y="926.0"></text>
</g>
<g>
<title>do_futex (54 samples, 0.26%)</title><rect x="55.4" y="899.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="58.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (53 samples, 0.25%)</title><rect x="55.5" y="883.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="58.5" y="894.0"></text>
</g>
<g>
<title>wake_up_q (48 samples, 0.23%)</title><rect x="55.8" y="867.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (47 samples, 0.23%)</title><rect x="55.8" y="851.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="58.8" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (47 samples, 0.23%)</title><rect x="55.8" y="835.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="58.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (8 samples, 0.04%)</title><rect x="58.7" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (8 samples, 0.04%)</title><rect x="58.7" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (527 samples, 2.53%)</title><rect x="59.1" y="1043.0" width="29.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.1" y="1054.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (504 samples, 2.42%)</title><rect x="60.4" y="1027.0" width="28.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.4" y="1038.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (205 samples, 0.98%)</title><rect x="60.9" y="1011.0" width="11.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="63.9" y="1022.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (30 samples, 0.14%)</title><rect x="61.7" y="995.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="64.7" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.02%)</title><rect x="62.6" y="979.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="65.6" y="990.0"></text>
</g>
<g>
<title>Monitor::unlock() (7 samples, 0.03%)</title><rect x="62.8" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="65.8" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.02%)</title><rect x="63.4" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="66.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (142 samples, 0.68%)</title><rect x="64.1" y="995.0" width="8.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="67.1" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.35%)</title><rect x="68.0" y="979.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="71.0" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.04%)</title><rect x="68.0" y="963.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 0.31%)</title><rect x="68.5" y="963.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="71.5" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.16%)</title><rect x="70.3" y="947.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="73.3" y="958.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.15%)</title><rect x="70.3" y="931.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.3" y="942.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.13%)</title><rect x="70.4" y="915.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.4" y="926.0"></text>
</g>
<g>
<title>get_futex_key (14 samples, 0.07%)</title><rect x="71.0" y="899.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="74.0" y="910.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (8 samples, 0.04%)</title><rect x="71.3" y="883.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (290 samples, 1.39%)</title><rect x="72.5" y="1011.0" width="16.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="75.5" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (253 samples, 1.21%)</title><rect x="72.8" y="995.0" width="14.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="75.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 0.41%)</title><rect x="82.2" y="979.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.2" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.02%)</title><rect x="82.2" y="963.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="85.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (81 samples, 0.39%)</title><rect x="82.5" y="963.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.5" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (60 samples, 0.29%)</title><rect x="83.7" y="947.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.7" y="958.0"></text>
</g>
<g>
<title>do_futex (56 samples, 0.27%)</title><rect x="83.9" y="931.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.9" y="942.0"></text>
</g>
<g>
<title>futex_wait (53 samples, 0.25%)</title><rect x="84.0" y="915.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.0" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.08%)</title><rect x="84.6" y="899.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.6" y="910.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.07%)</title><rect x="84.7" y="883.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="87.7" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.05%)</title><rect x="84.9" y="867.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="87.9" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.02%)</title><rect x="85.2" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.2" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (19 samples, 0.09%)</title><rect x="85.5" y="899.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.5" y="910.0"></text>
</g>
<g>
<title>get_futex_value_locked (7 samples, 0.03%)</title><rect x="86.2" y="883.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.2" y="894.0"></text>
</g>
<g>
<title>plist_add (6 samples, 0.03%)</title><rect x="86.7" y="899.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="89.7" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (22 samples, 0.11%)</title><rect x="87.1" y="995.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="90.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (5 samples, 0.02%)</title><rect x="88.5" y="995.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="91.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (15 samples, 0.07%)</title><rect x="89.3" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (15 samples, 0.07%)</title><rect x="89.3" y="1043.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (15 samples, 0.07%)</title><rect x="89.3" y="1027.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.07%)</title><rect x="89.3" y="1011.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.07%)</title><rect x="89.3" y="995.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.03%)</title><rect x="89.7" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (122 samples, 0.59%)</title><rect x="90.1" y="1059.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (122 samples, 0.59%)</title><rect x="90.1" y="1043.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (122 samples, 0.59%)</title><rect x="90.1" y="1027.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (122 samples, 0.59%)</title><rect x="90.1" y="1011.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (121 samples, 0.58%)</title><rect x="90.2" y="995.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.2" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.07%)</title><rect x="90.3" y="979.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="93.3" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.03%)</title><rect x="90.9" y="963.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="93.9" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (103 samples, 0.49%)</title><rect x="91.2" y="979.0" width="5.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="94.2" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (85 samples, 0.41%)</title><rect x="92.2" y="963.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="95.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 0.40%)</title><rect x="92.3" y="947.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="95.3" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (78 samples, 0.37%)</title><rect x="92.6" y="931.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="95.6" y="942.0"></text>
</g>
<g>
<title>do_futex (78 samples, 0.37%)</title><rect x="92.6" y="915.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="95.6" y="926.0"></text>
</g>
<g>
<title>futex_wake (76 samples, 0.36%)</title><rect x="92.7" y="899.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="95.7" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (8 samples, 0.04%)</title><rect x="92.8" y="883.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="95.8" y="894.0"></text>
</g>
<g>
<title>wake_up_q (64 samples, 0.31%)</title><rect x="93.3" y="883.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.3" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (64 samples, 0.31%)</title><rect x="93.3" y="867.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="96.3" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (64 samples, 0.31%)</title><rect x="93.3" y="851.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$378/269063177.run (414 samples, 1.99%)</title><rect x="97.0" y="1091.0" width="23.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.0" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (411 samples, 1.97%)</title><rect x="97.2" y="1075.0" width="23.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.2" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (409 samples, 1.96%)</title><rect x="97.2" y="1059.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.2" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (404 samples, 1.94%)</title><rect x="97.5" y="1043.0" width="22.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.5" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (404 samples, 1.94%)</title><rect x="97.5" y="1027.0" width="22.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.5" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (398 samples, 1.91%)</title><rect x="97.8" y="1011.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.8" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (397 samples, 1.90%)</title><rect x="97.9" y="995.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.9" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (396 samples, 1.90%)</title><rect x="97.9" y="979.0" width="22.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.9" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (396 samples, 1.90%)</title><rect x="97.9" y="963.0" width="22.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.9" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (395 samples, 1.89%)</title><rect x="97.9" y="947.0" width="22.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.9" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (392 samples, 1.88%)</title><rect x="98.1" y="931.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.1" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (54 samples, 0.26%)</title><rect x="98.3" y="915.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (50 samples, 0.24%)</title><rect x="98.3" y="899.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.23%)</title><rect x="98.4" y="883.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (46 samples, 0.22%)</title><rect x="98.5" y="867.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 0.20%)</title><rect x="98.8" y="851.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (19 samples, 0.09%)</title><rect x="98.8" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.04%)</title><rect x="98.9" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$407/2026337483.apply (10 samples, 0.05%)</title><rect x="99.3" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (10 samples, 0.05%)</title><rect x="99.3" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (9 samples, 0.04%)</title><rect x="99.4" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (5 samples, 0.02%)</title><rect x="99.6" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.02%)</title><rect x="99.6" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.02%)</title><rect x="99.6" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (17 samples, 0.08%)</title><rect x="99.9" y="835.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (17 samples, 0.08%)</title><rect x="99.9" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$349/1378120992.apply (16 samples, 0.08%)</title><rect x="100.0" y="803.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (16 samples, 0.08%)</title><rect x="100.0" y="787.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (16 samples, 0.08%)</title><rect x="100.0" y="771.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/1756033759.apply (11 samples, 0.05%)</title><rect x="100.0" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (10 samples, 0.05%)</title><rect x="100.0" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (5 samples, 0.02%)</title><rect x="100.3" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1330536006.apply (5 samples, 0.02%)</title><rect x="100.6" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5 samples, 0.02%)</title><rect x="100.6" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (5 samples, 0.02%)</title><rect x="100.6" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (5 samples, 0.02%)</title><rect x="101.3" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.02%)</title><rect x="101.3" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.02%)</title><rect x="101.3" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (330 samples, 1.58%)</title><rect x="101.6" y="915.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (330 samples, 1.58%)</title><rect x="101.6" y="899.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (330 samples, 1.58%)</title><rect x="101.6" y="883.0" width="18.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (326 samples, 1.56%)</title><rect x="101.8" y="867.0" width="18.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (323 samples, 1.55%)</title><rect x="102.0" y="851.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.0" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (317 samples, 1.52%)</title><rect x="102.0" y="835.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (317 samples, 1.52%)</title><rect x="102.0" y="819.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (314 samples, 1.51%)</title><rect x="102.2" y="803.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (312 samples, 1.50%)</title><rect x="102.3" y="787.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.3" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (9 samples, 0.04%)</title><rect x="102.3" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.3" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (9 samples, 0.04%)</title><rect x="102.3" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (9 samples, 0.04%)</title><rect x="102.3" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (303 samples, 1.45%)</title><rect x="102.8" y="771.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (301 samples, 1.44%)</title><rect x="102.9" y="755.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.9" y="766.0"></text>
</g>
<g>
<title>writev (292 samples, 1.40%)</title><rect x="103.4" y="739.0" width="16.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="106.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (280 samples, 1.34%)</title><rect x="104.1" y="723.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="107.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (277 samples, 1.33%)</title><rect x="104.3" y="707.0" width="15.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="107.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_writev (273 samples, 1.31%)</title><rect x="104.4" y="691.0" width="15.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.4" y="702.0"></text>
</g>
<g>
<title>do_writev (273 samples, 1.31%)</title><rect x="104.4" y="675.0" width="15.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="107.4" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.03%)</title><rect x="104.4" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.4" y="670.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.03%)</title><rect x="104.4" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.4" y="654.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.03%)</title><rect x="104.4" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="107.4" y="638.0"></text>
</g>
<g>
<title>vfs_writev (262 samples, 1.26%)</title><rect x="105.0" y="659.0" width="14.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="108.0" y="670.0"></text>
</g>
<g>
<title>do_iter_write (254 samples, 1.22%)</title><rect x="105.4" y="643.0" width="14.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="108.4" y="654.0"></text>
</g>
<g>
<title>do_iter_readv_writev (248 samples, 1.19%)</title><rect x="105.6" y="627.0" width="14.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="108.6" y="638.0"></text>
</g>
<g>
<title>sock_write_iter (243 samples, 1.17%)</title><rect x="105.9" y="611.0" width="13.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="108.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (238 samples, 1.14%)</title><rect x="106.2" y="595.0" width="13.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.2" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (230 samples, 1.10%)</title><rect x="106.5" y="579.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="109.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (229 samples, 1.10%)</title><rect x="106.6" y="563.0" width="12.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="109.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (222 samples, 1.06%)</title><rect x="106.9" y="547.0" width="12.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.02%)</title><rect x="107.4" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="110.4" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.02%)</title><rect x="107.4" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.4" y="526.0"></text>
</g>
<g>
<title>tcp_push (198 samples, 0.95%)</title><rect x="108.0" y="531.0" width="11.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.0" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (198 samples, 0.95%)</title><rect x="108.0" y="515.0" width="11.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (197 samples, 0.94%)</title><rect x="108.1" y="499.0" width="11.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.1" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (177 samples, 0.85%)</title><rect x="108.3" y="483.0" width="10.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="111.3" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (167 samples, 0.80%)</title><rect x="108.6" y="467.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.6" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (164 samples, 0.79%)</title><rect x="108.7" y="451.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="111.7" y="462.0"></text>
</g>
<g>
<title>ip_local_out (157 samples, 0.75%)</title><rect x="108.9" y="435.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="111.9" y="446.0"></text>
</g>
<g>
<title>ip_output (156 samples, 0.75%)</title><rect x="109.0" y="419.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (156 samples, 0.75%)</title><rect x="109.0" y="403.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.0" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (152 samples, 0.73%)</title><rect x="109.1" y="387.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="112.1" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (150 samples, 0.72%)</title><rect x="109.2" y="371.0" width="8.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.2" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (126 samples, 0.60%)</title><rect x="109.5" y="355.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="112.5" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (126 samples, 0.60%)</title><rect x="109.5" y="339.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.5" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (125 samples, 0.60%)</title><rect x="109.5" y="323.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="112.5" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (124 samples, 0.59%)</title><rect x="109.5" y="307.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.5" y="318.0"></text>
</g>
<g>
<title>net_rx_action (119 samples, 0.57%)</title><rect x="109.7" y="291.0" width="6.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.7" y="302.0"></text>
</g>
<g>
<title>process_backlog (117 samples, 0.56%)</title><rect x="109.8" y="275.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.8" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (115 samples, 0.55%)</title><rect x="109.9" y="259.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.9" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (115 samples, 0.55%)</title><rect x="109.9" y="243.0" width="6.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv (114 samples, 0.55%)</title><rect x="110.0" y="227.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (110 samples, 0.53%)</title><rect x="110.2" y="211.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (109 samples, 0.52%)</title><rect x="110.2" y="195.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (109 samples, 0.52%)</title><rect x="110.2" y="179.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.2" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (108 samples, 0.52%)</title><rect x="110.2" y="163.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (106 samples, 0.51%)</title><rect x="110.3" y="147.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="113.3" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.06%)</title><rect x="110.5" y="131.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (85 samples, 0.41%)</title><rect x="111.5" y="131.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (81 samples, 0.39%)</title><rect x="111.7" y="115.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="114.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (69 samples, 0.33%)</title><rect x="112.2" y="99.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (69 samples, 0.33%)</title><rect x="112.2" y="83.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="115.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (69 samples, 0.33%)</title><rect x="112.2" y="67.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (69 samples, 0.33%)</title><rect x="112.2" y="51.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="115.2" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (69 samples, 0.33%)</title><rect x="112.2" y="35.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="115.2" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.10%)</title><rect x="116.6" y="355.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.10%)</title><rect x="116.6" y="339.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="119.6" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.05%)</title><rect x="116.7" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="119.7" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.04%)</title><rect x="116.8" y="307.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.8" y="318.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.02%)</title><rect x="116.9" y="291.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="119.9" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.02%)</title><rect x="117.4" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.4" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.05%)</title><rect x="118.3" y="483.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.3" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.03%)</title><rect x="118.5" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.5" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.03%)</title><rect x="118.5" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="121.5" y="462.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.03%)</title><rect x="118.5" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="121.5" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.03%)</title><rect x="119.9" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (755 samples, 3.62%)</title><rect x="120.5" y="1091.0" width="42.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.5" y="1102.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (746 samples, 3.58%)</title><rect x="121.0" y="1075.0" width="42.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.0" y="1086.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (396 samples, 1.90%)</title><rect x="121.1" y="1059.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/1400081447.run (394 samples, 1.89%)</title><rect x="121.2" y="1043.0" width="22.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.2" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (393 samples, 1.88%)</title><rect x="121.2" y="1027.0" width="22.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.2" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (45 samples, 0.22%)</title><rect x="121.5" y="1011.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (42 samples, 0.20%)</title><rect x="121.6" y="995.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (42 samples, 0.20%)</title><rect x="121.6" y="979.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (42 samples, 0.20%)</title><rect x="121.6" y="963.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (37 samples, 0.18%)</title><rect x="121.9" y="947.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (37 samples, 0.18%)</title><rect x="121.9" y="931.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (35 samples, 0.17%)</title><rect x="122.0" y="915.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (33 samples, 0.16%)</title><rect x="122.1" y="899.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29 samples, 0.14%)</title><rect x="122.4" y="883.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (26 samples, 0.12%)</title><rect x="122.5" y="867.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 0.12%)</title><rect x="122.6" y="851.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.6" y="862.0"></text>
</g>
<g>
<title>__libc_write (24 samples, 0.12%)</title><rect x="122.7" y="835.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="125.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.11%)</title><rect x="122.8" y="819.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="125.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.11%)</title><rect x="122.8" y="803.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="125.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_write (21 samples, 0.10%)</title><rect x="122.8" y="787.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="125.8" y="798.0"></text>
</g>
<g>
<title>ksys_write (21 samples, 0.10%)</title><rect x="122.8" y="771.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="125.8" y="782.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.08%)</title><rect x="123.0" y="755.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="126.0" y="766.0"></text>
</g>
<g>
<title>__vfs_write (15 samples, 0.07%)</title><rect x="123.1" y="739.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.1" y="750.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.07%)</title><rect x="123.1" y="723.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.1" y="734.0"></text>
</g>
<g>
<title>pipe_write (13 samples, 0.06%)</title><rect x="123.2" y="707.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="126.2" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.05%)</title><rect x="123.2" y="691.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="126.2" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.05%)</title><rect x="123.2" y="675.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.2" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.05%)</title><rect x="123.2" y="659.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="126.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (342 samples, 1.64%)</title><rect x="124.1" y="1011.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (332 samples, 1.59%)</title><rect x="124.7" y="995.0" width="18.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (7 samples, 0.03%)</title><rect x="124.7" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (325 samples, 1.56%)</title><rect x="125.1" y="979.0" width="18.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (325 samples, 1.56%)</title><rect x="125.1" y="963.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (152 samples, 0.73%)</title><rect x="125.3" y="947.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (152 samples, 0.73%)</title><rect x="125.3" y="931.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (149 samples, 0.71%)</title><rect x="125.4" y="915.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (148 samples, 0.71%)</title><rect x="125.4" y="899.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (145 samples, 0.70%)</title><rect x="125.6" y="883.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (141 samples, 0.68%)</title><rect x="125.6" y="867.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (141 samples, 0.68%)</title><rect x="125.6" y="851.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (136 samples, 0.65%)</title><rect x="125.6" y="835.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (136 samples, 0.65%)</title><rect x="125.6" y="819.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (116 samples, 0.56%)</title><rect x="126.0" y="803.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.05%)</title><rect x="126.2" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.2" y="798.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="126.2" y="771.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="129.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1024378022.apply (96 samples, 0.46%)</title><rect x="126.8" y="787.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (96 samples, 0.46%)</title><rect x="126.8" y="771.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (91 samples, 0.44%)</title><rect x="127.0" y="755.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (90 samples, 0.43%)</title><rect x="127.1" y="739.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (90 samples, 0.43%)</title><rect x="127.1" y="723.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.1" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (29 samples, 0.14%)</title><rect x="127.3" y="707.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.3" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.03%)</title><rect x="127.3" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.3" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.03%)</title><rect x="127.3" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.03%)</title><rect x="127.3" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (21 samples, 0.10%)</title><rect x="127.8" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.08%)</title><rect x="128.0" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.05%)</title><rect x="128.3" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.04%)</title><rect x="128.3" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.03%)</title><rect x="128.3" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.02%)</title><rect x="128.9" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 0.23%)</title><rect x="129.4" y="707.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/990169612.run (49 samples, 0.23%)</title><rect x="129.4" y="691.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (49 samples, 0.23%)</title><rect x="129.4" y="675.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (13 samples, 0.06%)</title><rect x="129.9" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (6 samples, 0.03%)</title><rect x="129.9" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (6 samples, 0.03%)</title><rect x="129.9" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.03%)</title><rect x="130.2" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (20 samples, 0.10%)</title><rect x="130.8" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (20 samples, 0.10%)</title><rect x="130.8" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.8" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (16 samples, 0.08%)</title><rect x="130.9" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.9" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (15 samples, 0.07%)</title><rect x="130.9" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.9" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (15 samples, 0.07%)</title><rect x="130.9" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.9" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (12 samples, 0.06%)</title><rect x="130.9" y="579.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="133.9" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (6 samples, 0.03%)</title><rect x="131.2" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="134.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/47785189.apply (6 samples, 0.03%)</title><rect x="132.2" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (6 samples, 0.03%)</title><rect x="132.2" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (6 samples, 0.03%)</title><rect x="132.2" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (11 samples, 0.05%)</title><rect x="132.7" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.05%)</title><rect x="132.7" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.05%)</title><rect x="132.7" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$423/1342523852.apply (5 samples, 0.02%)</title><rect x="133.3" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.02%)</title><rect x="133.3" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.02%)</title><rect x="133.3" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (169 samples, 0.81%)</title><rect x="133.9" y="947.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (7 samples, 0.03%)</title><rect x="134.7" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (33 samples, 0.16%)</title><rect x="135.1" y="931.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (30 samples, 0.14%)</title><rect x="135.3" y="915.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.3" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (30 samples, 0.14%)</title><rect x="135.3" y="899.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (7 samples, 0.03%)</title><rect x="137.0" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.03%)</title><rect x="137.0" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.0" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.03%)</title><rect x="137.0" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (33 samples, 0.16%)</title><rect x="137.4" y="931.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.4" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (33 samples, 0.16%)</title><rect x="137.4" y="915.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (31 samples, 0.15%)</title><rect x="137.5" y="899.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (26 samples, 0.12%)</title><rect x="137.8" y="883.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (23 samples, 0.11%)</title><rect x="138.0" y="867.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (23 samples, 0.11%)</title><rect x="138.0" y="851.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.0" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.04%)</title><rect x="138.2" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.2" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.04%)</title><rect x="138.7" y="835.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (73 samples, 0.35%)</title><rect x="139.3" y="931.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (70 samples, 0.34%)</title><rect x="139.5" y="915.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.06%)</title><rect x="139.5" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.06%)</title><rect x="139.5" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.06%)</title><rect x="139.5" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (28 samples, 0.13%)</title><rect x="140.4" y="899.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (13 samples, 0.06%)</title><rect x="140.9" y="883.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.trim (9 samples, 0.04%)</title><rect x="142.0" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (9 samples, 0.04%)</title><rect x="142.0" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (7 samples, 0.03%)</title><rect x="142.5" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (9 samples, 0.04%)</title><rect x="142.9" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.02%)</title><rect x="143.0" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (348 samples, 1.67%)</title><rect x="143.5" y="1059.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (345 samples, 1.65%)</title><rect x="143.7" y="1043.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (344 samples, 1.65%)</title><rect x="143.7" y="1027.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$287/1400081447.run (344 samples, 1.65%)</title><rect x="143.7" y="1011.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (344 samples, 1.65%)</title><rect x="143.7" y="995.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.02%)</title><rect x="143.9" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (333 samples, 1.60%)</title><rect x="144.2" y="979.0" width="18.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (333 samples, 1.60%)</title><rect x="144.2" y="963.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (332 samples, 1.59%)</title><rect x="144.2" y="947.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (330 samples, 1.58%)</title><rect x="144.3" y="931.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (330 samples, 1.58%)</title><rect x="144.3" y="915.0" width="18.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (329 samples, 1.58%)</title><rect x="144.3" y="899.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/618927023.run (270 samples, 1.29%)</title><rect x="144.3" y="883.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (270 samples, 1.29%)</title><rect x="144.3" y="867.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (270 samples, 1.29%)</title><rect x="144.3" y="851.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.3" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (16 samples, 0.08%)</title><rect x="144.3" y="835.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (8 samples, 0.04%)</title><rect x="144.3" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.3" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.04%)</title><rect x="144.3" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.04%)</title><rect x="144.3" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.3" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.04%)</title><rect x="144.3" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.3" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (8 samples, 0.04%)</title><rect x="144.3" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.02%)</title><rect x="145.0" y="819.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (253 samples, 1.21%)</title><rect x="145.2" y="835.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.2" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.03%)</title><rect x="145.2" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.2" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.03%)</title><rect x="145.2" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (246 samples, 1.18%)</title><rect x="145.6" y="819.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.6" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.05%)</title><rect x="145.9" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="148.9" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.04%)</title><rect x="146.0" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="149.0" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.04%)</title><rect x="146.0" y="771.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="149.0" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.04%)</title><rect x="146.0" y="755.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="149.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (143 samples, 0.69%)</title><rect x="146.5" y="803.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (9 samples, 0.04%)</title><rect x="154.6" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.04%)</title><rect x="154.6" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.04%)</title><rect x="154.6" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (7 samples, 0.03%)</title><rect x="154.6" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.6" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.equals (7 samples, 0.03%)</title><rect x="154.6" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.6" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (7 samples, 0.03%)</title><rect x="154.6" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.6" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (7 samples, 0.03%)</title><rect x="154.6" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (79 samples, 0.38%)</title><rect x="155.1" y="803.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (75 samples, 0.36%)</title><rect x="155.3" y="787.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (8 samples, 0.04%)</title><rect x="155.3" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.04%)</title><rect x="155.3" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.04%)</title><rect x="155.3" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6 samples, 0.03%)</title><rect x="155.4" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.03%)</title><rect x="155.4" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.02%)</title><rect x="155.4" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (66 samples, 0.32%)</title><rect x="155.8" y="771.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (66 samples, 0.32%)</title><rect x="155.8" y="755.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (61 samples, 0.29%)</title><rect x="155.9" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (58 samples, 0.28%)</title><rect x="155.9" y="723.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (58 samples, 0.28%)</title><rect x="155.9" y="707.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.9" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="156.0" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="159.0" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.03%)</title><rect x="156.0" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="159.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.03%)</title><rect x="156.0" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="159.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (51 samples, 0.24%)</title><rect x="156.3" y="691.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (47 samples, 0.23%)</title><rect x="156.6" y="675.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.6" y="686.0"></text>
</g>
<g>
<title>__libc_write (47 samples, 0.23%)</title><rect x="156.6" y="659.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="159.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.19%)</title><rect x="157.0" y="643.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="160.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.18%)</title><rect x="157.1" y="627.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="160.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (33 samples, 0.16%)</title><rect x="157.3" y="611.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="160.3" y="622.0"></text>
</g>
<g>
<title>ksys_write (33 samples, 0.16%)</title><rect x="157.3" y="595.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="160.3" y="606.0"></text>
</g>
<g>
<title>vfs_write (31 samples, 0.15%)</title><rect x="157.4" y="579.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="160.4" y="590.0"></text>
</g>
<g>
<title>__vfs_write (26 samples, 0.12%)</title><rect x="157.6" y="563.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.6" y="574.0"></text>
</g>
<g>
<title>new_sync_write (26 samples, 0.12%)</title><rect x="157.6" y="547.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="160.6" y="558.0"></text>
</g>
<g>
<title>pipe_write (25 samples, 0.12%)</title><rect x="157.6" y="531.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.6" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (22 samples, 0.11%)</title><rect x="157.7" y="515.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.7" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.10%)</title><rect x="157.7" y="499.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="160.7" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.10%)</title><rect x="157.7" y="483.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="160.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$447/44248419.accept (11 samples, 0.05%)</title><rect x="159.6" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (11 samples, 0.05%)</title><rect x="159.6" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (11 samples, 0.05%)</title><rect x="159.6" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.04%)</title><rect x="159.6" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.04%)</title><rect x="159.6" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.03%)</title><rect x="159.7" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.03%)</title><rect x="159.7" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (36 samples, 0.17%)</title><rect x="160.2" y="883.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (36 samples, 0.17%)</title><rect x="160.2" y="867.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (31 samples, 0.15%)</title><rect x="160.5" y="851.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (27 samples, 0.13%)</title><rect x="160.6" y="835.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.13%)</title><rect x="160.6" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (26 samples, 0.12%)</title><rect x="160.6" y="803.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (26 samples, 0.12%)</title><rect x="160.6" y="787.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$468/253612861.accept (22 samples, 0.11%)</title><rect x="160.9" y="771.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (21 samples, 0.10%)</title><rect x="160.9" y="755.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (21 samples, 0.10%)</title><rect x="160.9" y="739.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.10%)</title><rect x="160.9" y="723.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.04%)</title><rect x="161.0" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$479/1130867921.apply (5 samples, 0.02%)</title><rect x="161.2" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (5 samples, 0.02%)</title><rect x="161.2" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 0.04%)</title><rect x="161.5" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.04%)</title><rect x="161.6" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.03%)</title><rect x="161.6" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.03%)</title><rect x="161.6" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.03%)</title><rect x="161.6" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.02%)</title><rect x="161.6" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.02%)</title><rect x="161.6" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.02%)</title><rect x="161.6" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (8 samples, 0.04%)</title><rect x="162.3" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (8 samples, 0.04%)</title><rect x="162.3" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (8 samples, 0.04%)</title><rect x="162.3" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (8 samples, 0.04%)</title><rect x="162.3" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService$$Lambda$109/388268451.run (69 samples, 0.33%)</title><rect x="163.2" y="1091.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.lambda$runExecutorService$0 (69 samples, 0.33%)</title><rect x="163.2" y="1075.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.operation (69 samples, 0.33%)</title><rect x="163.2" y="1059.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.03%)</title><rect x="163.3" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/MetaInfoRequest.&lt;init&gt; (14 samples, 0.07%)</title><rect x="163.6" y="1043.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.05%)</title><rect x="163.9" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getting (47 samples, 0.23%)</title><rect x="164.4" y="1043.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.replicas (29 samples, 0.14%)</title><rect x="164.8" y="1027.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.getFirstOne (12 samples, 0.06%)</title><rect x="165.8" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.8" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (9 samples, 0.04%)</title><rect x="165.8" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.8" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (7 samples, 0.03%)</title><rect x="165.9" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.doGet (8 samples, 0.04%)</title><rect x="166.5" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (6 samples, 0.03%)</title><rect x="166.6" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (6 samples, 0.03%)</title><rect x="166.6" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.02%)</title><rect x="166.6" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.02%)</title><rect x="166.6" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.02%)</title><rect x="166.6" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.02%)</title><rect x="166.6" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.02%)</title><rect x="166.6" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (15,142 samples, 72.61%)</title><rect x="167.1" y="1139.0" width="856.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.1" y="1150.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (15,142 samples, 72.61%)</title><rect x="167.1" y="1123.0" width="856.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.1" y="1134.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (15,139 samples, 72.60%)</title><rect x="167.1" y="1107.0" width="856.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.1" y="1118.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (15,138 samples, 72.59%)</title><rect x="167.1" y="1091.0" width="856.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.1" y="1102.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (6 samples, 0.03%)</title><rect x="167.2" y="1075.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (7 samples, 0.03%)</title><rect x="167.6" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (15,123 samples, 72.52%)</title><rect x="168.0" y="1075.0" width="855.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.0" y="1086.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (9,581 samples, 45.94%)</title><rect x="168.4" y="1059.0" width="542.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.4" y="1070.0">java/util/concurrent/CompletableFuture$AsyncRun.exec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (9,580 samples, 45.94%)</title><rect x="168.5" y="1043.0" width="542.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.5" y="1054.0">java/util/concurrent/CompletableFuture$AsyncRun.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.04%)</title><rect x="168.7" y="1027.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$533/1873845241.run (9,567 samples, 45.88%)</title><rect x="169.2" y="1027.0" width="541.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.2" y="1038.0">ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$533/1873845241.run</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5 (9,567 samples, 45.88%)</title><rect x="169.2" y="1011.0" width="541.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.2" y="1022.0">ru/mail/polis/service/boriskin/ReplicaWorker.lambda$doGet$5</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="169.3" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.getTableCell (9,198 samples, 44.11%)</title><rect x="169.6" y="995.0" width="520.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.6" y="1006.0">ru/mail/polis/dao/boriskin/NewDAO.getTableCell</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (240 samples, 1.15%)</title><rect x="169.7" y="979.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (240 samples, 1.15%)</title><rect x="169.7" y="963.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (240 samples, 1.15%)</title><rect x="169.7" y="947.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (239 samples, 1.15%)</title><rect x="169.7" y="931.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (233 samples, 1.12%)</title><rect x="169.9" y="915.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.9" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.04%)</title><rect x="169.9" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.9" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.04%)</title><rect x="169.9" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.9" y="894.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.04%)</title><rect x="169.9" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="170.0" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.0" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="170.0" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.0" y="846.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="170.1" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.1" y="830.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="170.1" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="170.1" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (5 samples, 0.02%)</title><rect x="170.1" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.1" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (225 samples, 1.08%)</title><rect x="170.4" y="899.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.4" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (225 samples, 1.08%)</title><rect x="170.4" y="883.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.4" y="894.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (224 samples, 1.07%)</title><rect x="170.4" y="867.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.4" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (224 samples, 1.07%)</title><rect x="170.4" y="851.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.4" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (223 samples, 1.07%)</title><rect x="170.5" y="835.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.5" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (223 samples, 1.07%)</title><rect x="170.5" y="819.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.5" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (221 samples, 1.06%)</title><rect x="170.5" y="803.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (221 samples, 1.06%)</title><rect x="170.5" y="787.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (221 samples, 1.06%)</title><rect x="170.5" y="771.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (221 samples, 1.06%)</title><rect x="170.5" y="755.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (77 samples, 0.37%)</title><rect x="170.7" y="739.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (77 samples, 0.37%)</title><rect x="170.7" y="723.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (77 samples, 0.37%)</title><rect x="170.7" y="707.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (66 samples, 0.32%)</title><rect x="170.8" y="691.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (64 samples, 0.31%)</title><rect x="170.9" y="675.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (56 samples, 0.27%)</title><rect x="171.3" y="659.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (56 samples, 0.27%)</title><rect x="171.3" y="643.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.3" y="654.0"></text>
</g>
<g>
<title>__libc_pread64 (53 samples, 0.25%)</title><rect x="171.4" y="627.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="174.4" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.12%)</title><rect x="173.0" y="611.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.12%)</title><rect x="173.0" y="595.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="176.0" y="606.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.10%)</title><rect x="173.2" y="579.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="176.2" y="590.0"></text>
</g>
<g>
<title>ksys_pread64 (21 samples, 0.10%)</title><rect x="173.2" y="563.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="176.2" y="574.0"></text>
</g>
<g>
<title>vfs_read (16 samples, 0.08%)</title><rect x="173.5" y="547.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="176.5" y="558.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.06%)</title><rect x="173.8" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="176.8" y="542.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.05%)</title><rect x="173.8" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="176.8" y="526.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.05%)</title><rect x="173.9" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="176.9" y="510.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.05%)</title><rect x="173.9" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="176.9" y="494.0"></text>
</g>
<g>
<title>generic_file_buffered_read (9 samples, 0.04%)</title><rect x="173.9" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="176.9" y="478.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.02%)</title><rect x="174.1" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="177.1" y="462.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.02%)</title><rect x="174.1" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9 samples, 0.04%)</title><rect x="174.5" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (141 samples, 0.68%)</title><rect x="175.1" y="739.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (141 samples, 0.68%)</title><rect x="175.1" y="723.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (119 samples, 0.57%)</title><rect x="175.3" y="707.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (112 samples, 0.54%)</title><rect x="175.6" y="691.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (106 samples, 0.51%)</title><rect x="176.0" y="675.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (106 samples, 0.51%)</title><rect x="176.0" y="659.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.0" y="670.0"></text>
</g>
<g>
<title>__libc_pread64 (102 samples, 0.49%)</title><rect x="176.1" y="643.0" width="5.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="179.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 0.28%)</title><rect x="178.5" y="627.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="181.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.27%)</title><rect x="178.6" y="611.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.6" y="622.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (45 samples, 0.22%)</title><rect x="179.3" y="595.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.3" y="606.0"></text>
</g>
<g>
<title>ksys_pread64 (45 samples, 0.22%)</title><rect x="179.3" y="579.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.3" y="590.0"></text>
</g>
<g>
<title>vfs_read (41 samples, 0.20%)</title><rect x="179.5" y="563.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.5" y="574.0"></text>
</g>
<g>
<title>__vfs_read (30 samples, 0.14%)</title><rect x="179.8" y="547.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.8" y="558.0"></text>
</g>
<g>
<title>new_sync_read (28 samples, 0.13%)</title><rect x="179.9" y="531.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.9" y="542.0"></text>
</g>
<g>
<title>ext4_file_read_iter (26 samples, 0.12%)</title><rect x="180.0" y="515.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.0" y="526.0"></text>
</g>
<g>
<title>generic_file_read_iter (23 samples, 0.11%)</title><rect x="180.2" y="499.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="183.2" y="510.0"></text>
</g>
<g>
<title>generic_file_buffered_read (21 samples, 0.10%)</title><rect x="180.3" y="483.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.3" y="494.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.03%)</title><rect x="180.5" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.5" y="478.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.03%)</title><rect x="180.8" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="183.8" y="478.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.02%)</title><rect x="180.8" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="183.8" y="462.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.03%)</title><rect x="181.2" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.2" y="478.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.03%)</title><rect x="181.2" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="184.2" y="462.0"></text>
</g>
<g>
<title>current_time (6 samples, 0.03%)</title><rect x="181.2" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.2" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.02%)</title><rect x="181.6" y="547.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (16 samples, 0.08%)</title><rect x="182.0" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (8,953 samples, 42.93%)</title><rect x="183.5" y="979.0" width="506.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.5" y="990.0">ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.03%)</title><rect x="184.3" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.03%)</title><rect x="184.3" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.03%)</title><rect x="184.3" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (28 samples, 0.13%)</title><rect x="184.7" y="963.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (28 samples, 0.13%)</title><rect x="184.7" y="947.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (7 samples, 0.03%)</title><rect x="184.7" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (21 samples, 0.10%)</title><rect x="185.1" y="931.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.1" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.06%)</title><rect x="185.2" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.2" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (11 samples, 0.05%)</title><rect x="185.3" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (25 samples, 0.12%)</title><rect x="186.3" y="963.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (23 samples, 0.11%)</title><rect x="186.3" y="947.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (23 samples, 0.11%)</title><rect x="186.3" y="931.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (23 samples, 0.11%)</title><rect x="186.3" y="915.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (23 samples, 0.11%)</title><rect x="186.3" y="899.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (23 samples, 0.11%)</title><rect x="186.3" y="883.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.04%)</title><rect x="186.3" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.3" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="186.3" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="186.3" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.3" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.04%)</title><rect x="186.3" y="819.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (15 samples, 0.07%)</title><rect x="186.7" y="867.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.06%)</title><rect x="186.8" y="851.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.06%)</title><rect x="186.9" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.06%)</title><rect x="186.9" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.9" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.06%)</title><rect x="186.9" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (8,879 samples, 42.58%)</title><rect x="187.7" y="963.0" width="502.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.7" y="974.0">ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFi..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,029 samples, 4.93%)</title><rect x="187.7" y="947.0" width="58.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.7" y="958.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,027 samples, 4.92%)</title><rect x="187.7" y="931.0" width="58.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.7" y="942.0">com/go..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,014 samples, 4.86%)</title><rect x="188.2" y="915.0" width="57.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.2" y="926.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,014 samples, 4.86%)</title><rect x="188.2" y="899.0" width="57.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.2" y="910.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,014 samples, 4.86%)</title><rect x="188.2" y="883.0" width="57.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.2" y="894.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,011 samples, 4.85%)</title><rect x="188.4" y="867.0" width="57.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.4" y="878.0">java/u..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,010 samples, 4.84%)</title><rect x="188.5" y="851.0" width="57.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.5" y="862.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,010 samples, 4.84%)</title><rect x="188.5" y="835.0" width="57.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.5" y="846.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (994 samples, 4.77%)</title><rect x="188.6" y="819.0" width="56.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.6" y="830.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.02%)</title><rect x="188.6" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.6" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.02%)</title><rect x="188.6" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable$$Lambda$498/1948696738.apply (5 samples, 0.02%)</title><rect x="188.6" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.lambda$iterator$0 (5 samples, 0.02%)</title><rect x="188.6" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (989 samples, 4.74%)</title><rect x="188.9" y="803.0" width="55.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.9" y="814.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (988 samples, 4.74%)</title><rect x="188.9" y="787.0" width="55.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.9" y="798.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (987 samples, 4.73%)</title><rect x="189.0" y="771.0" width="55.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.0" y="782.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.03%)</title><rect x="189.3" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.3" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="189.4" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (334 samples, 1.60%)</title><rect x="189.8" y="755.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (331 samples, 1.59%)</title><rect x="190.0" y="739.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (331 samples, 1.59%)</title><rect x="190.0" y="723.0" width="18.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (280 samples, 1.34%)</title><rect x="190.2" y="707.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.03%)</title><rect x="190.3" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.3" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.03%)</title><rect x="190.4" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (6 samples, 0.03%)</title><rect x="190.4" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (267 samples, 1.28%)</title><rect x="190.8" y="691.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (250 samples, 1.20%)</title><rect x="191.7" y="675.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (249 samples, 1.19%)</title><rect x="191.7" y="659.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.7" y="670.0"></text>
</g>
<g>
<title>__libc_pread64 (238 samples, 1.14%)</title><rect x="192.1" y="643.0" width="13.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="195.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (145 samples, 0.70%)</title><rect x="197.3" y="627.0" width="8.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (142 samples, 0.68%)</title><rect x="197.5" y="611.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (111 samples, 0.53%)</title><rect x="199.2" y="595.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.2" y="606.0"></text>
</g>
<g>
<title>ksys_pread64 (110 samples, 0.53%)</title><rect x="199.3" y="579.0" width="6.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.3" y="590.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.07%)</title><rect x="199.3" y="563.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="202.3" y="574.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.07%)</title><rect x="199.3" y="547.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="202.3" y="558.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.07%)</title><rect x="199.3" y="531.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="202.3" y="542.0"></text>
</g>
<g>
<title>vfs_read (88 samples, 0.42%)</title><rect x="200.5" y="563.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="203.5" y="574.0"></text>
</g>
<g>
<title>__vfs_read (67 samples, 0.32%)</title><rect x="200.7" y="547.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="203.7" y="558.0"></text>
</g>
<g>
<title>new_sync_read (64 samples, 0.31%)</title><rect x="200.9" y="531.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="203.9" y="542.0"></text>
</g>
<g>
<title>ext4_file_read_iter (59 samples, 0.28%)</title><rect x="201.1" y="515.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.1" y="526.0"></text>
</g>
<g>
<title>generic_file_read_iter (55 samples, 0.26%)</title><rect x="201.3" y="499.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="204.3" y="510.0"></text>
</g>
<g>
<title>generic_file_buffered_read (53 samples, 0.25%)</title><rect x="201.4" y="483.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.4" y="494.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 0.05%)</title><rect x="202.2" y="467.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.2" y="478.0"></text>
</g>
<g>
<title>pagecache_get_page (22 samples, 0.11%)</title><rect x="202.8" y="467.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="205.8" y="478.0"></text>
</g>
<g>
<title>find_get_entry (18 samples, 0.09%)</title><rect x="203.0" y="451.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="206.0" y="462.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.03%)</title><rect x="204.0" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="207.0" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (16 samples, 0.08%)</title><rect x="204.6" y="547.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.6" y="558.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.03%)</title><rect x="204.7" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.7" y="542.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.04%)</title><rect x="205.0" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="208.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (44 samples, 0.21%)</title><rect x="206.1" y="707.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (638 samples, 3.06%)</title><rect x="208.7" y="755.0" width="36.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.7" y="766.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (638 samples, 3.06%)</title><rect x="208.7" y="739.0" width="36.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.7" y="750.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (8 samples, 0.04%)</title><rect x="208.8" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.8" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (8 samples, 0.04%)</title><rect x="208.8" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.8" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.04%)</title><rect x="208.8" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.8" y="702.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.03%)</title><rect x="208.9" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.03%)</title><rect x="208.9" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (548 samples, 2.63%)</title><rect x="209.3" y="723.0" width="31.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.3" y="734.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.05%)</title><rect x="209.5" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="209.5" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.5" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.03%)</title><rect x="209.5" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (529 samples, 2.54%)</title><rect x="210.1" y="707.0" width="30.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.1" y="718.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (501 samples, 2.40%)</title><rect x="211.7" y="691.0" width="28.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.7" y="702.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (501 samples, 2.40%)</title><rect x="211.7" y="675.0" width="28.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.7" y="686.0">su..</text>
</g>
<g>
<title>__libc_pread64 (483 samples, 2.32%)</title><rect x="212.2" y="659.0" width="27.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="215.2" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (290 samples, 1.39%)</title><rect x="223.0" y="643.0" width="16.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (286 samples, 1.37%)</title><rect x="223.3" y="627.0" width="16.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="226.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (209 samples, 1.00%)</title><rect x="227.5" y="611.0" width="11.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.5" y="622.0"></text>
</g>
<g>
<title>ksys_pread64 (208 samples, 1.00%)</title><rect x="227.5" y="595.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.5" y="606.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.08%)</title><rect x="227.8" y="579.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="230.8" y="590.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.08%)</title><rect x="227.8" y="563.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="230.8" y="574.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.07%)</title><rect x="227.8" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.8" y="558.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.04%)</title><rect x="228.7" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="231.7" y="590.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.02%)</title><rect x="229.4" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.4" y="590.0"></text>
</g>
<g>
<title>vfs_read (168 samples, 0.81%)</title><rect x="229.8" y="579.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.8" y="590.0"></text>
</g>
<g>
<title>__vfs_read (117 samples, 0.56%)</title><rect x="230.1" y="563.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="233.1" y="574.0"></text>
</g>
<g>
<title>ext4_file_read_iter (6 samples, 0.03%)</title><rect x="230.1" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="233.1" y="558.0"></text>
</g>
<g>
<title>new_sync_read (111 samples, 0.53%)</title><rect x="230.5" y="547.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="233.5" y="558.0"></text>
</g>
<g>
<title>ext4_file_read_iter (105 samples, 0.50%)</title><rect x="230.8" y="531.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.8" y="542.0"></text>
</g>
<g>
<title>generic_file_read_iter (100 samples, 0.48%)</title><rect x="231.1" y="515.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.1" y="526.0"></text>
</g>
<g>
<title>generic_file_buffered_read (97 samples, 0.47%)</title><rect x="231.2" y="499.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="234.2" y="510.0"></text>
</g>
<g>
<title>copy_page_to_iter (38 samples, 0.18%)</title><rect x="232.2" y="483.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.2" y="494.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (14 samples, 0.07%)</title><rect x="233.3" y="467.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="236.3" y="478.0"></text>
</g>
<g>
<title>pagecache_get_page (21 samples, 0.10%)</title><rect x="234.5" y="483.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.5" y="494.0"></text>
</g>
<g>
<title>find_get_entry (21 samples, 0.10%)</title><rect x="234.5" y="467.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="237.5" y="478.0"></text>
</g>
<g>
<title>touch_atime (15 samples, 0.07%)</title><rect x="235.8" y="483.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="238.8" y="494.0"></text>
</g>
<g>
<title>atime_needs_update (10 samples, 0.05%)</title><rect x="236.1" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="239.1" y="478.0"></text>
</g>
<g>
<title>current_time (7 samples, 0.03%)</title><rect x="236.2" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.2" y="462.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.03%)</title><rect x="236.7" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="239.7" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (37 samples, 0.18%)</title><rect x="237.2" y="563.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="240.2" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.02%)</title><rect x="237.4" y="547.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.4" y="558.0"></text>
</g>
<g>
<title>security_file_permission (28 samples, 0.13%)</title><rect x="237.7" y="547.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="240.7" y="558.0"></text>
</g>
<g>
<title>apparmor_file_permission (12 samples, 0.06%)</title><rect x="237.9" y="531.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="240.9" y="542.0"></text>
</g>
<g>
<title>common_file_perm (12 samples, 0.06%)</title><rect x="237.9" y="515.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.9" y="526.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.04%)</title><rect x="238.8" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (67 samples, 0.32%)</title><rect x="240.3" y="723.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.04%)</title><rect x="243.6" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (13 samples, 0.06%)</title><rect x="244.1" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.1" y="734.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.07%)</title><rect x="244.8" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.8" y="830.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (14 samples, 0.07%)</title><rect x="244.8" y="803.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (14 samples, 0.07%)</title><rect x="244.8" y="787.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (14 samples, 0.07%)</title><rect x="244.8" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="245.1" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.1" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="245.1" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.1" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.next (9 samples, 0.04%)</title><rect x="246.0" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.0" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (6 samples, 0.03%)</title><rect x="246.0" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.0" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="246.0" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next (6 samples, 0.03%)</title><rect x="246.0" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.0" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (6 samples, 0.03%)</title><rect x="246.0" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.predecessor (5 samples, 0.02%)</title><rect x="246.0" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (22 samples, 0.11%)</title><rect x="246.5" y="947.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.5" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (22 samples, 0.11%)</title><rect x="246.5" y="931.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.5" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (21 samples, 0.10%)</title><rect x="246.5" y="915.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.5" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (21 samples, 0.10%)</title><rect x="246.5" y="899.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.5" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (5 samples, 0.02%)</title><rect x="246.7" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.7" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (5 samples, 0.02%)</title><rect x="246.7" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.7" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (9 samples, 0.04%)</title><rect x="247.0" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.0" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="247.0" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (238 samples, 1.14%)</title><rect x="247.8" y="947.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (238 samples, 1.14%)</title><rect x="247.8" y="931.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.8" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (238 samples, 1.14%)</title><rect x="247.8" y="915.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.8" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (234 samples, 1.12%)</title><rect x="248.0" y="899.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.0" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (234 samples, 1.12%)</title><rect x="248.0" y="883.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.0" y="894.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (234 samples, 1.12%)</title><rect x="248.0" y="867.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.0" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (234 samples, 1.12%)</title><rect x="248.0" y="851.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.0" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (233 samples, 1.12%)</title><rect x="248.0" y="835.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.0" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (233 samples, 1.12%)</title><rect x="248.0" y="819.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.0" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (228 samples, 1.09%)</title><rect x="248.2" y="803.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (228 samples, 1.09%)</title><rect x="248.2" y="787.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (227 samples, 1.09%)</title><rect x="248.3" y="771.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (227 samples, 1.09%)</title><rect x="248.3" y="755.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (81 samples, 0.39%)</title><rect x="248.4" y="739.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (78 samples, 0.37%)</title><rect x="248.6" y="723.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (78 samples, 0.37%)</title><rect x="248.6" y="707.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (66 samples, 0.32%)</title><rect x="248.7" y="691.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (61 samples, 0.29%)</title><rect x="249.0" y="675.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (59 samples, 0.28%)</title><rect x="249.1" y="659.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (59 samples, 0.28%)</title><rect x="249.1" y="643.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.1" y="654.0"></text>
</g>
<g>
<title>__libc_pread64 (55 samples, 0.26%)</title><rect x="249.2" y="627.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="252.2" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.16%)</title><rect x="250.5" y="611.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.5" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.16%)</title><rect x="250.5" y="595.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (23 samples, 0.11%)</title><rect x="251.0" y="579.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="254.0" y="590.0"></text>
</g>
<g>
<title>ksys_pread64 (23 samples, 0.11%)</title><rect x="251.0" y="563.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="254.0" y="574.0"></text>
</g>
<g>
<title>vfs_read (19 samples, 0.09%)</title><rect x="251.3" y="547.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="254.3" y="558.0"></text>
</g>
<g>
<title>__vfs_read (13 samples, 0.06%)</title><rect x="251.4" y="531.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="254.4" y="542.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.05%)</title><rect x="251.5" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="254.5" y="526.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.05%)</title><rect x="251.6" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="254.6" y="510.0"></text>
</g>
<g>
<title>generic_file_read_iter (9 samples, 0.04%)</title><rect x="251.6" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.6" y="494.0"></text>
</g>
<g>
<title>generic_file_buffered_read (9 samples, 0.04%)</title><rect x="251.6" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.04%)</title><rect x="252.4" y="691.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (143 samples, 0.69%)</title><rect x="253.0" y="739.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (143 samples, 0.69%)</title><rect x="253.0" y="723.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (126 samples, 0.60%)</title><rect x="253.1" y="707.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (123 samples, 0.59%)</title><rect x="253.3" y="691.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (115 samples, 0.55%)</title><rect x="253.7" y="675.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (115 samples, 0.55%)</title><rect x="253.7" y="659.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.7" y="670.0"></text>
</g>
<g>
<title>__libc_pread64 (109 samples, 0.52%)</title><rect x="253.9" y="643.0" width="6.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="256.9" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.32%)</title><rect x="256.3" y="627.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.31%)</title><rect x="256.4" y="611.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="259.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (47 samples, 0.23%)</title><rect x="257.3" y="595.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.3" y="606.0"></text>
</g>
<g>
<title>ksys_pread64 (46 samples, 0.22%)</title><rect x="257.4" y="579.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="260.4" y="590.0"></text>
</g>
<g>
<title>vfs_read (38 samples, 0.18%)</title><rect x="257.8" y="563.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.8" y="574.0"></text>
</g>
<g>
<title>__vfs_read (28 samples, 0.13%)</title><rect x="258.0" y="547.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="261.0" y="558.0"></text>
</g>
<g>
<title>new_sync_read (26 samples, 0.12%)</title><rect x="258.1" y="531.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="261.1" y="542.0"></text>
</g>
<g>
<title>ext4_file_read_iter (26 samples, 0.12%)</title><rect x="258.1" y="515.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="261.1" y="526.0"></text>
</g>
<g>
<title>generic_file_read_iter (24 samples, 0.12%)</title><rect x="258.2" y="499.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.2" y="510.0"></text>
</g>
<g>
<title>generic_file_buffered_read (24 samples, 0.12%)</title><rect x="258.2" y="483.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="261.2" y="494.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.03%)</title><rect x="258.6" y="467.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.6" y="478.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.03%)</title><rect x="259.3" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (11 samples, 0.05%)</title><rect x="260.2" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5 samples, 0.02%)</title><rect x="260.8" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (7,578 samples, 36.34%)</title><rect x="261.3" y="947.0" width="428.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.3" y="958.0">ru/mail/polis/dao/boriskin/SortedStringTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (7,578 samples, 36.34%)</title><rect x="261.3" y="931.0" width="428.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.3" y="942.0">ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (7,578 samples, 36.34%)</title><rect x="261.3" y="915.0" width="428.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="264.3" y="926.0">ru/mail/polis/dao/boriskin/SortedStringTable.findNext</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (88 samples, 0.42%)</title><rect x="261.7" y="899.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.7" y="910.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (85 samples, 0.41%)</title><rect x="261.9" y="883.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (7,481 samples, 35.87%)</title><rect x="266.8" y="899.0" width="423.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.8" y="910.0">ru/mail/polis/dao/boriskin/SortedStringTable.findK</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.08%)</title><rect x="266.8" y="883.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (10 samples, 0.05%)</title><rect x="266.8" y="867.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="269.8" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.05%)</title><rect x="266.8" y="851.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="269.8" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (10 samples, 0.05%)</title><rect x="266.8" y="835.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="269.8" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.04%)</title><rect x="266.8" y="819.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="269.8" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="267.5" y="867.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (2,583 samples, 12.39%)</title><rect x="267.8" y="883.0" width="146.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.8" y="894.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.07%)</title><rect x="267.8" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.04%)</title><rect x="267.9" y="851.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="270.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.04%)</title><rect x="267.9" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="270.9" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.04%)</title><rect x="267.9" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="270.9" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.03%)</title><rect x="267.9" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="270.9" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="268.3" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.3" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="268.3" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="271.3" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.03%)</title><rect x="268.3" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="271.3" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.03%)</title><rect x="268.3" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="271.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,568 samples, 12.31%)</title><rect x="268.6" y="867.0" width="145.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.6" y="878.0">sun/nio/ch/FileCha..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,568 samples, 12.31%)</title><rect x="268.6" y="851.0" width="145.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.6" y="862.0">sun/nio/ch/FileCha..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (23 samples, 0.11%)</title><rect x="268.6" y="835.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.6" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (23 samples, 0.11%)</title><rect x="268.6" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.6" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (23 samples, 0.11%)</title><rect x="268.6" y="803.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.6" y="814.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (23 samples, 0.11%)</title><rect x="268.6" y="787.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (23 samples, 0.11%)</title><rect x="268.6" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (29 samples, 0.14%)</title><rect x="269.9" y="835.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.9" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (29 samples, 0.14%)</title><rect x="269.9" y="819.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.9" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (29 samples, 0.14%)</title><rect x="269.9" y="803.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.9" y="814.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (24 samples, 0.12%)</title><rect x="270.2" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (24 samples, 0.12%)</title><rect x="270.2" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,184 samples, 10.47%)</title><rect x="271.6" y="835.0" width="123.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.6" y="846.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (40 samples, 0.19%)</title><rect x="272.2" y="819.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (17 samples, 0.08%)</title><rect x="272.2" y="803.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (17 samples, 0.08%)</title><rect x="272.2" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.2" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (23 samples, 0.11%)</title><rect x="273.1" y="803.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (23 samples, 0.11%)</title><rect x="273.1" y="787.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.1" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (12 samples, 0.06%)</title><rect x="273.7" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (12 samples, 0.06%)</title><rect x="273.7" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.03%)</title><rect x="274.4" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,099 samples, 10.07%)</title><rect x="274.8" y="819.0" width="118.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.8" y="830.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,961 samples, 9.40%)</title><rect x="282.5" y="803.0" width="111.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.5" y="814.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,957 samples, 9.38%)</title><rect x="282.7" y="787.0" width="110.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.7" y="798.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (14 samples, 0.07%)</title><rect x="285.8" y="771.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="288.8" y="782.0"></text>
</g>
<g>
<title>__libc_pread64 (1,834 samples, 8.79%)</title><rect x="286.6" y="771.0" width="103.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="289.6" y="782.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,102 samples, 5.28%)</title><rect x="328.0" y="755.0" width="62.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.0" y="766.0">entry_..</text>
</g>
<g>
<title>__x64_sys_pread64 (24 samples, 0.12%)</title><rect x="328.0" y="739.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1,077 samples, 5.16%)</title><rect x="329.4" y="739.0" width="61.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.4" y="750.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_pread64 (852 samples, 4.09%)</title><rect x="341.9" y="723.0" width="48.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.9" y="734.0">__x6..</text>
</g>
<g>
<title>ksys_pread64 (847 samples, 4.06%)</title><rect x="342.1" y="707.0" width="47.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="345.1" y="718.0">ksys..</text>
</g>
<g>
<title>__fdget (78 samples, 0.37%)</title><rect x="343.0" y="691.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="346.0" y="702.0"></text>
</g>
<g>
<title>__fget_light (77 samples, 0.37%)</title><rect x="343.1" y="675.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="346.1" y="686.0"></text>
</g>
<g>
<title>__fget (77 samples, 0.37%)</title><rect x="343.1" y="659.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="346.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (25 samples, 0.12%)</title><rect x="347.4" y="691.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.4" y="702.0"></text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.04%)</title><rect x="348.8" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="351.8" y="702.0"></text>
</g>
<g>
<title>fput_many (24 samples, 0.12%)</title><rect x="349.5" y="691.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="352.5" y="702.0"></text>
</g>
<g>
<title>vfs_read (690 samples, 3.31%)</title><rect x="351.0" y="691.0" width="39.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.0" y="702.0">vfs..</text>
</g>
<g>
<title>__fsnotify_parent (13 samples, 0.06%)</title><rect x="353.4" y="675.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="356.4" y="686.0"></text>
</g>
<g>
<title>__vfs_read (470 samples, 2.25%)</title><rect x="354.1" y="675.0" width="26.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="357.1" y="686.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (18 samples, 0.09%)</title><rect x="354.4" y="659.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="357.4" y="670.0"></text>
</g>
<g>
<title>iov_iter_init (8 samples, 0.04%)</title><rect x="355.4" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.4" y="670.0"></text>
</g>
<g>
<title>new_sync_read (439 samples, 2.11%)</title><rect x="355.8" y="659.0" width="24.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.8" y="670.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (401 samples, 1.92%)</title><rect x="357.9" y="643.0" width="22.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="360.9" y="654.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (363 samples, 1.74%)</title><rect x="360.1" y="627.0" width="20.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="363.1" y="638.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.02%)</title><rect x="360.4" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.4" y="622.0"></text>
</g>
<g>
<title>generic_file_buffered_read (348 samples, 1.67%)</title><rect x="360.7" y="611.0" width="19.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.7" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (115 samples, 0.55%)</title><rect x="364.5" y="595.0" width="6.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="367.5" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (16 samples, 0.08%)</title><rect x="366.8" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="369.8" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (53 samples, 0.25%)</title><rect x="367.7" y="579.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="370.7" y="590.0"></text>
</g>
<g>
<title>mark_page_accessed (8 samples, 0.04%)</title><rect x="371.3" y="595.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.3" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (103 samples, 0.49%)</title><rect x="371.8" y="595.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="374.8" y="606.0"></text>
</g>
<g>
<title>find_get_entry (97 samples, 0.47%)</title><rect x="372.0" y="579.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="375.0" y="590.0"></text>
</g>
<g>
<title>xas_load (14 samples, 0.07%)</title><rect x="375.8" y="563.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="378.8" y="574.0"></text>
</g>
<g>
<title>xas_start (15 samples, 0.07%)</title><rect x="376.6" y="563.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.6" y="574.0"></text>
</g>
<g>
<title>touch_atime (44 samples, 0.21%)</title><rect x="377.9" y="595.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.9" y="606.0"></text>
</g>
<g>
<title>atime_needs_update (34 samples, 0.16%)</title><rect x="378.3" y="579.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="381.3" y="590.0"></text>
</g>
<g>
<title>current_time (19 samples, 0.09%)</title><rect x="379.0" y="563.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.0" y="574.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (10 samples, 0.05%)</title><rect x="379.3" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="382.3" y="558.0"></text>
</g>
<g>
<title>timestamp_truncate (5 samples, 0.02%)</title><rect x="379.8" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="382.8" y="558.0"></text>
</g>
<g>
<title>fsnotify (19 samples, 0.09%)</title><rect x="380.7" y="675.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="383.7" y="686.0"></text>
</g>
<g>
<title>rw_verify_area (146 samples, 0.70%)</title><rect x="381.8" y="675.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="384.8" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (19 samples, 0.09%)</title><rect x="382.3" y="659.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="385.3" y="670.0"></text>
</g>
<g>
<title>security_file_permission (115 samples, 0.55%)</title><rect x="383.5" y="659.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="386.5" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (9 samples, 0.04%)</title><rect x="384.7" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.7" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (43 samples, 0.21%)</title><rect x="385.2" y="643.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.2" y="654.0"></text>
</g>
<g>
<title>common_file_perm (42 samples, 0.20%)</title><rect x="385.3" y="627.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="388.3" y="638.0"></text>
</g>
<g>
<title>aa_file_perm (16 samples, 0.08%)</title><rect x="386.7" y="611.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="389.7" y="622.0"></text>
</g>
<g>
<title>common_file_perm (13 samples, 0.06%)</title><rect x="387.6" y="643.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.6" y="654.0"></text>
</g>
<g>
<title>fsnotify (29 samples, 0.14%)</title><rect x="388.4" y="643.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="391.4" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (29 samples, 0.14%)</title><rect x="390.4" y="771.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="393.4" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (16 samples, 0.08%)</title><rect x="392.1" y="771.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="395.1" y="782.0"></text>
</g>
<g>
<title>fdval (7 samples, 0.03%)</title><rect x="393.0" y="771.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="396.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (28 samples, 0.13%)</title><rect x="393.6" y="819.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.6" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.05%)</title><rect x="393.6" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (17 samples, 0.08%)</title><rect x="394.2" y="803.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (289 samples, 1.39%)</title><rect x="395.2" y="835.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.2" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.04%)</title><rect x="409.1" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="412.1" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.03%)</title><rect x="409.2" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="412.2" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="409.3" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="412.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (33 samples, 0.16%)</title><rect x="409.6" y="819.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (43 samples, 0.21%)</title><rect x="411.5" y="835.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4,876 samples, 23.38%)</title><rect x="414.2" y="883.0" width="275.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.2" y="894.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4,876 samples, 23.38%)</title><rect x="414.2" y="867.0" width="275.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.2" y="878.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.03%)</title><rect x="418.4" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (85 samples, 0.41%)</title><rect x="418.8" y="851.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.8" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (85 samples, 0.41%)</title><rect x="418.8" y="835.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.8" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (85 samples, 0.41%)</title><rect x="418.8" y="819.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.8" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (52 samples, 0.25%)</title><rect x="420.7" y="803.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (52 samples, 0.25%)</title><rect x="420.7" y="787.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (89 samples, 0.43%)</title><rect x="423.6" y="851.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.6" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (77 samples, 0.37%)</title><rect x="424.3" y="835.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.3" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (77 samples, 0.37%)</title><rect x="424.3" y="819.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.3" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (49 samples, 0.23%)</title><rect x="425.9" y="803.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (49 samples, 0.23%)</title><rect x="425.9" y="787.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4,036 samples, 19.35%)</title><rect x="428.8" y="851.0" width="228.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.8" y="862.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (86 samples, 0.41%)</title><rect x="429.9" y="835.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (51 samples, 0.24%)</title><rect x="429.9" y="819.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.9" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (51 samples, 0.24%)</title><rect x="429.9" y="803.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.9" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (35 samples, 0.17%)</title><rect x="432.7" y="819.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (35 samples, 0.17%)</title><rect x="432.7" y="803.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.7" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.05%)</title><rect x="434.1" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.1" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (11 samples, 0.05%)</title><rect x="434.1" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.02%)</title><rect x="434.7" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3,901 samples, 18.71%)</title><rect x="435.0" y="835.0" width="220.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.0" y="846.0">sun/nio/ch/IOUtil.readIntoNat..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3,774 samples, 18.10%)</title><rect x="442.1" y="819.0" width="213.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.1" y="830.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3,762 samples, 18.04%)</title><rect x="442.8" y="803.0" width="212.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.8" y="814.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (13 samples, 0.06%)</title><rect x="447.4" y="787.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="450.4" y="798.0"></text>
</g>
<g>
<title>__libc_pread64 (3,573 samples, 17.13%)</title><rect x="448.1" y="787.0" width="202.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="451.1" y="798.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,082 samples, 9.98%)</title><rect x="532.4" y="771.0" width="117.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="535.4" y="782.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_pread64 (50 samples, 0.24%)</title><rect x="532.4" y="755.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="535.4" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.02%)</title><rect x="535.2" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="538.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2,027 samples, 9.72%)</title><rect x="535.5" y="755.0" width="114.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.5" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (1,527 samples, 7.32%)</title><rect x="563.1" y="739.0" width="86.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="566.1" y="750.0">__x64_sys_..</text>
</g>
<g>
<title>ksys_pread64 (1,521 samples, 7.29%)</title><rect x="563.4" y="723.0" width="86.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.4" y="734.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (119 samples, 0.57%)</title><rect x="565.2" y="707.0" width="6.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="568.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (117 samples, 0.56%)</title><rect x="565.3" y="691.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="568.3" y="702.0"></text>
</g>
<g>
<title>__fget (114 samples, 0.55%)</title><rect x="565.5" y="675.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="568.5" y="686.0"></text>
</g>
<g>
<title>__fget_light (35 samples, 0.17%)</title><rect x="571.9" y="707.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="574.9" y="718.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.03%)</title><rect x="573.9" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="576.9" y="718.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.03%)</title><rect x="574.3" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="577.3" y="718.0"></text>
</g>
<g>
<title>fput_many (52 samples, 0.25%)</title><rect x="574.7" y="707.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="577.7" y="718.0"></text>
</g>
<g>
<title>vfs_read (1,270 samples, 6.09%)</title><rect x="577.6" y="707.0" width="71.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="580.6" y="718.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (25 samples, 0.12%)</title><rect x="582.0" y="691.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="585.0" y="702.0"></text>
</g>
<g>
<title>__vfs_read (844 samples, 4.05%)</title><rect x="583.4" y="691.0" width="47.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="586.4" y="702.0">__vf..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.02%)</title><rect x="583.6" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="586.6" y="686.0"></text>
</g>
<g>
<title>ext4_file_read_iter (51 samples, 0.24%)</title><rect x="583.9" y="675.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.9" y="686.0"></text>
</g>
<g>
<title>iov_iter_init (11 samples, 0.05%)</title><rect x="586.8" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="589.8" y="686.0"></text>
</g>
<g>
<title>new_sync_read (773 samples, 3.71%)</title><rect x="587.4" y="675.0" width="43.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="590.4" y="686.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (709 samples, 3.40%)</title><rect x="590.9" y="659.0" width="40.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="593.9" y="670.0">ext..</text>
</g>
<g>
<title>generic_file_read_iter (665 samples, 3.19%)</title><rect x="593.4" y="643.0" width="37.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="596.4" y="654.0">gen..</text>
</g>
<g>
<title>generic_file_buffered_read (643 samples, 3.08%)</title><rect x="594.2" y="627.0" width="36.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="597.2" y="638.0">gen..</text>
</g>
<g>
<title>_cond_resched (14 samples, 0.07%)</title><rect x="602.9" y="611.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="605.9" y="622.0"></text>
</g>
<g>
<title>copy_page_to_iter (207 samples, 0.99%)</title><rect x="603.9" y="611.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="606.9" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (31 samples, 0.15%)</title><rect x="607.2" y="595.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.2" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (100 samples, 0.48%)</title><rect x="609.0" y="595.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="612.0" y="606.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.05%)</title><rect x="614.7" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="617.7" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (7 samples, 0.03%)</title><rect x="615.2" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.2" y="606.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.04%)</title><rect x="615.6" y="611.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="618.6" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (159 samples, 0.76%)</title><rect x="616.4" y="611.0" width="8.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="619.4" y="622.0"></text>
</g>
<g>
<title>find_get_entry (144 samples, 0.69%)</title><rect x="617.1" y="595.0" width="8.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.1" y="606.0"></text>
</g>
<g>
<title>xas_load (16 samples, 0.08%)</title><rect x="622.9" y="579.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="625.9" y="590.0"></text>
</g>
<g>
<title>xas_start (26 samples, 0.12%)</title><rect x="623.8" y="579.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="626.8" y="590.0"></text>
</g>
<g>
<title>rcu_all_qs (7 samples, 0.03%)</title><rect x="625.3" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.3" y="622.0"></text>
</g>
<g>
<title>touch_atime (85 samples, 0.41%)</title><rect x="625.7" y="611.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="628.7" y="622.0"></text>
</g>
<g>
<title>atime_needs_update (65 samples, 0.31%)</title><rect x="626.8" y="595.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="629.8" y="606.0"></text>
</g>
<g>
<title>current_time (40 samples, 0.19%)</title><rect x="628.0" y="579.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="631.0" y="590.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (21 samples, 0.10%)</title><rect x="628.6" y="563.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="631.6" y="574.0"></text>
</g>
<g>
<title>timestamp_truncate (8 samples, 0.04%)</title><rect x="629.8" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.8" y="574.0"></text>
</g>
<g>
<title>fsnotify (44 samples, 0.21%)</title><rect x="631.2" y="691.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="634.2" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (274 samples, 1.31%)</title><rect x="633.9" y="691.0" width="15.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="636.9" y="702.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.02%)</title><rect x="634.6" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="637.6" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (38 samples, 0.18%)</title><rect x="635.0" y="675.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.0" y="686.0"></text>
</g>
<g>
<title>security_file_permission (213 samples, 1.02%)</title><rect x="637.3" y="675.0" width="12.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="640.3" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (27 samples, 0.13%)</title><rect x="638.9" y="659.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.9" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (84 samples, 0.40%)</title><rect x="640.5" y="659.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="643.5" y="670.0"></text>
</g>
<g>
<title>common_file_perm (81 samples, 0.39%)</title><rect x="640.6" y="643.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="643.6" y="654.0"></text>
</g>
<g>
<title>aa_file_perm (23 samples, 0.11%)</title><rect x="643.9" y="627.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="646.9" y="638.0"></text>
</g>
<g>
<title>common_file_perm (17 samples, 0.08%)</title><rect x="645.2" y="659.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="648.2" y="670.0"></text>
</g>
<g>
<title>fsnotify (57 samples, 0.27%)</title><rect x="646.2" y="659.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="649.2" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (9 samples, 0.04%)</title><rect x="649.7" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.7" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (39 samples, 0.19%)</title><rect x="650.4" y="787.0" width="2.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="653.4" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (43 samples, 0.21%)</title><rect x="652.6" y="787.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="655.6" y="798.0"></text>
</g>
<g>
<title>fdval (12 samples, 0.06%)</title><rect x="655.0" y="787.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="658.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (25 samples, 0.12%)</title><rect x="655.7" y="835.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.7" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.05%)</title><rect x="655.7" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (15 samples, 0.07%)</title><rect x="656.3" y="819.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (480 samples, 2.30%)</title><rect x="657.1" y="851.0" width="27.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.1" y="862.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="680.2" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="683.2" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.05%)</title><rect x="680.6" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (56 samples, 0.27%)</title><rect x="681.1" y="835.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (101 samples, 0.48%)</title><rect x="684.3" y="851.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.3" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="689.6" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="692.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (344 samples, 1.65%)</title><rect x="690.1" y="995.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (344 samples, 1.65%)</title><rect x="690.1" y="979.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.03%)</title><rect x="690.2" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.03%)</title><rect x="690.2" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.03%)</title><rect x="690.2" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (329 samples, 1.58%)</title><rect x="690.5" y="963.0" width="18.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.07%)</title><rect x="690.6" y="947.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (314 samples, 1.51%)</title><rect x="691.4" y="947.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (314 samples, 1.51%)</title><rect x="691.4" y="931.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (312 samples, 1.50%)</title><rect x="691.5" y="915.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (312 samples, 1.50%)</title><rect x="691.5" y="899.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.5" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 0.05%)</title><rect x="691.6" y="883.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="694.6" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.04%)</title><rect x="691.7" y="867.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="694.7" y="878.0"></text>
</g>
<g>
<title>__send (298 samples, 1.43%)</title><rect x="692.2" y="883.0" width="16.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="695.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (284 samples, 1.36%)</title><rect x="693.0" y="867.0" width="16.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (283 samples, 1.36%)</title><rect x="693.1" y="851.0" width="16.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="696.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_sendto (275 samples, 1.32%)</title><rect x="693.5" y="835.0" width="15.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.5" y="846.0"></text>
</g>
<g>
<title>__sys_sendto (273 samples, 1.31%)</title><rect x="693.5" y="819.0" width="15.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.5" y="830.0"></text>
</g>
<g>
<title>sock_sendmsg (264 samples, 1.27%)</title><rect x="693.7" y="803.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.7" y="814.0"></text>
</g>
<g>
<title>inet6_sendmsg (260 samples, 1.25%)</title><rect x="693.9" y="787.0" width="14.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="696.9" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg (259 samples, 1.24%)</title><rect x="693.9" y="771.0" width="14.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.9" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (248 samples, 1.19%)</title><rect x="694.4" y="755.0" width="14.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.4" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.05%)</title><rect x="695.2" y="739.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="698.2" y="750.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.04%)</title><rect x="695.2" y="723.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.2" y="734.0"></text>
</g>
<g>
<title>tcp_push (212 samples, 1.02%)</title><rect x="695.9" y="739.0" width="12.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="698.9" y="750.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (211 samples, 1.01%)</title><rect x="695.9" y="723.0" width="11.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="698.9" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (207 samples, 0.99%)</title><rect x="696.1" y="707.0" width="11.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="699.1" y="718.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (185 samples, 0.89%)</title><rect x="696.7" y="691.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.7" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (178 samples, 0.85%)</title><rect x="696.8" y="675.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="699.8" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (175 samples, 0.84%)</title><rect x="696.8" y="659.0" width="9.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="699.8" y="670.0"></text>
</g>
<g>
<title>ip_local_out (169 samples, 0.81%)</title><rect x="697.0" y="643.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.0" y="654.0"></text>
</g>
<g>
<title>ip_output (168 samples, 0.81%)</title><rect x="697.1" y="627.0" width="9.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.1" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (165 samples, 0.79%)</title><rect x="697.3" y="611.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="700.3" y="622.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.02%)</title><rect x="697.3" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="700.3" y="606.0"></text>
</g>
<g>
<title>__ip_finish_output (158 samples, 0.76%)</title><rect x="697.6" y="595.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="700.6" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (157 samples, 0.75%)</title><rect x="697.6" y="579.0" width="8.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="700.6" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (142 samples, 0.68%)</title><rect x="697.7" y="563.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="700.7" y="574.0"></text>
</g>
<g>
<title>do_softirq.part.0 (141 samples, 0.68%)</title><rect x="697.7" y="547.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="700.7" y="558.0"></text>
</g>
<g>
<title>do_softirq_own_stack (141 samples, 0.68%)</title><rect x="697.7" y="531.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.7" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (141 samples, 0.68%)</title><rect x="697.7" y="515.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="700.7" y="526.0"></text>
</g>
<g>
<title>net_rx_action (135 samples, 0.65%)</title><rect x="697.9" y="499.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.9" y="510.0"></text>
</g>
<g>
<title>process_backlog (132 samples, 0.63%)</title><rect x="698.1" y="483.0" width="7.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.1" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb (131 samples, 0.63%)</title><rect x="698.1" y="467.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="701.1" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (129 samples, 0.62%)</title><rect x="698.2" y="451.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="701.2" y="462.0"></text>
</g>
<g>
<title>ip_rcv (127 samples, 0.61%)</title><rect x="698.3" y="435.0" width="7.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.3" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (125 samples, 0.60%)</title><rect x="698.4" y="419.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="701.4" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (123 samples, 0.59%)</title><rect x="698.4" y="403.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="701.4" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (121 samples, 0.58%)</title><rect x="698.5" y="387.0" width="6.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="701.5" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (121 samples, 0.58%)</title><rect x="698.5" y="371.0" width="6.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="701.5" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (116 samples, 0.56%)</title><rect x="698.8" y="355.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.8" y="366.0"></text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.05%)</title><rect x="699.1" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="702.1" y="350.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.02%)</title><rect x="699.7" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="702.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (94 samples, 0.45%)</title><rect x="700.0" y="339.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="703.0" y="350.0"></text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.03%)</title><rect x="700.0" y="323.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="703.0" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (85 samples, 0.41%)</title><rect x="700.5" y="323.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.5" y="334.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.04%)</title><rect x="700.7" y="307.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="703.7" y="318.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.04%)</title><rect x="700.7" y="291.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.7" y="302.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.04%)</title><rect x="700.7" y="275.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="703.7" y="286.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.04%)</title><rect x="700.8" y="259.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="703.8" y="270.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.02%)</title><rect x="700.9" y="243.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="703.9" y="254.0"></text>
</g>
<g>
<title>tcp_ack (32 samples, 0.15%)</title><rect x="701.4" y="307.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.4" y="318.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.08%)</title><rect x="702.1" y="291.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.1" y="302.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.03%)</title><rect x="702.3" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.3" y="286.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.02%)</title><rect x="702.4" y="259.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.4" y="270.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.02%)</title><rect x="702.4" y="243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="705.4" y="254.0"></text>
</g>
<g>
<title>tcp_data_ready (31 samples, 0.15%)</title><rect x="703.2" y="307.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.2" y="318.0"></text>
</g>
<g>
<title>sock_def_readable (31 samples, 0.15%)</title><rect x="703.2" y="291.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.2" y="302.0"></text>
</g>
<g>
<title>__wake_up_sync_key (30 samples, 0.14%)</title><rect x="703.3" y="275.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="706.3" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 0.14%)</title><rect x="703.3" y="259.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.3" y="270.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 0.14%)</title><rect x="703.3" y="243.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.3" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.07%)</title><rect x="705.7" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.7" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.07%)</title><rect x="705.7" y="547.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.7" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.04%)</title><rect x="705.9" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.9" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.03%)</title><rect x="706.0" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="709.0" y="526.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.02%)</title><rect x="706.1" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="709.1" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.03%)</title><rect x="707.3" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="710.3" y="702.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.02%)</title><rect x="707.4" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.4" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.03%)</title><rect x="708.1" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="711.1" y="750.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.03%)</title><rect x="708.1" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="711.1" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="708.6" y="803.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.6" y="814.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.02%)</title><rect x="708.6" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="711.6" y="798.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.02%)</title><rect x="708.6" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="711.6" y="782.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.02%)</title><rect x="708.6" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.03%)</title><rect x="709.2" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.transform (14 samples, 0.07%)</title><rect x="709.8" y="995.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.linkToTargetMethod (6 samples, 0.03%)</title><rect x="709.8" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1479111435.invoke (6 samples, 0.03%)</title><rect x="709.8" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.03%)</title><rect x="710.2" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (4,936 samples, 23.67%)</title><rect x="710.6" y="1059.0" width="279.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.6" y="1070.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,935 samples, 23.66%)</title><rect x="710.6" y="1043.0" width="279.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.6" y="1054.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$121/75551341.get (4,931 samples, 23.65%)</title><rect x="710.8" y="1027.0" width="279.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.8" y="1038.0">ru/mail/polis/service/boriskin/Replic..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$runAsyncIfReplicasContainNode$21 (4,931 samples, 23.65%)</title><rect x="710.8" y="1011.0" width="279.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.8" y="1022.0">ru/mail/polis/service/boriskin/Replic..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$500/1769167198.run (4,928 samples, 23.63%)</title><rect x="711.0" y="995.0" width="278.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.0" y="1006.0">ru/mail/polis/service/boriskin/Replic..</text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$0 (4,927 samples, 23.63%)</title><rect x="711.1" y="979.0" width="278.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.1" y="990.0">ru/mail/polis/service/boriskin/Replic..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.getTableCell (4,922 samples, 23.60%)</title><rect x="711.2" y="963.0" width="278.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.2" y="974.0">ru/mail/polis/dao/boriskin/NewDAO.get..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (119 samples, 0.57%)</title><rect x="711.4" y="947.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.4" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (119 samples, 0.57%)</title><rect x="711.4" y="931.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (118 samples, 0.57%)</title><rect x="711.4" y="915.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (117 samples, 0.56%)</title><rect x="711.5" y="899.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (115 samples, 0.55%)</title><rect x="711.5" y="883.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.5" y="894.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (111 samples, 0.53%)</title><rect x="711.8" y="867.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.8" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (111 samples, 0.53%)</title><rect x="711.8" y="851.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.8" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (111 samples, 0.53%)</title><rect x="711.8" y="835.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.8" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (111 samples, 0.53%)</title><rect x="711.8" y="819.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (111 samples, 0.53%)</title><rect x="711.8" y="803.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (111 samples, 0.53%)</title><rect x="711.8" y="787.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (108 samples, 0.52%)</title><rect x="711.9" y="771.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (108 samples, 0.52%)</title><rect x="711.9" y="755.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (108 samples, 0.52%)</title><rect x="711.9" y="739.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (108 samples, 0.52%)</title><rect x="711.9" y="723.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (34 samples, 0.16%)</title><rect x="711.9" y="707.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (31 samples, 0.15%)</title><rect x="712.0" y="691.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (31 samples, 0.15%)</title><rect x="712.0" y="675.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.12%)</title><rect x="712.1" y="659.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (24 samples, 0.12%)</title><rect x="712.1" y="643.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (23 samples, 0.11%)</title><rect x="712.2" y="627.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (23 samples, 0.11%)</title><rect x="712.2" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.2" y="622.0"></text>
</g>
<g>
<title>__libc_pread64 (23 samples, 0.11%)</title><rect x="712.2" y="595.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="715.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.08%)</title><rect x="712.6" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="715.6" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.08%)</title><rect x="712.6" y="563.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.6" y="574.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (13 samples, 0.06%)</title><rect x="712.8" y="547.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.8" y="558.0"></text>
</g>
<g>
<title>ksys_pread64 (13 samples, 0.06%)</title><rect x="712.8" y="531.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.8" y="542.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.05%)</title><rect x="712.9" y="515.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="715.9" y="526.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.03%)</title><rect x="713.0" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="716.0" y="510.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.02%)</title><rect x="713.1" y="483.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="716.1" y="494.0"></text>
</g>
<g>
<title>ext4_file_read_iter (5 samples, 0.02%)</title><rect x="713.1" y="467.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.1" y="478.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.02%)</title><rect x="713.1" y="451.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.1" y="462.0"></text>
</g>
<g>
<title>generic_file_buffered_read (5 samples, 0.02%)</title><rect x="713.1" y="435.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="716.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.02%)</title><rect x="713.5" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (74 samples, 0.35%)</title><rect x="713.8" y="707.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (74 samples, 0.35%)</title><rect x="713.8" y="691.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (66 samples, 0.32%)</title><rect x="713.8" y="675.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (66 samples, 0.32%)</title><rect x="713.8" y="659.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (65 samples, 0.31%)</title><rect x="713.8" y="643.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (65 samples, 0.31%)</title><rect x="713.8" y="627.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.8" y="638.0"></text>
</g>
<g>
<title>__libc_pread64 (62 samples, 0.30%)</title><rect x="714.0" y="611.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="717.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.20%)</title><rect x="715.1" y="595.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="718.1" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.19%)</title><rect x="715.2" y="579.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="718.2" y="590.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (31 samples, 0.15%)</title><rect x="715.7" y="563.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.7" y="574.0"></text>
</g>
<g>
<title>ksys_pread64 (31 samples, 0.15%)</title><rect x="715.7" y="547.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="718.7" y="558.0"></text>
</g>
<g>
<title>vfs_read (26 samples, 0.12%)</title><rect x="716.0" y="531.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="719.0" y="542.0"></text>
</g>
<g>
<title>__vfs_read (18 samples, 0.09%)</title><rect x="716.2" y="515.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="719.2" y="526.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.08%)</title><rect x="716.3" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="719.3" y="510.0"></text>
</g>
<g>
<title>ext4_file_read_iter (14 samples, 0.07%)</title><rect x="716.4" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="719.4" y="494.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.06%)</title><rect x="716.5" y="467.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.5" y="478.0"></text>
</g>
<g>
<title>generic_file_buffered_read (12 samples, 0.06%)</title><rect x="716.5" y="451.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="719.5" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.02%)</title><rect x="717.2" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.03%)</title><rect x="717.5" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.iterateThroughTableCells (4,799 samples, 23.01%)</title><rect x="718.2" y="947.0" width="271.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.2" y="958.0">ru/mail/polis/dao/boriskin/NewDAO.it..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (15 samples, 0.07%)</title><rect x="718.7" y="931.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (15 samples, 0.07%)</title><rect x="718.7" y="915.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (13 samples, 0.06%)</title><rect x="718.8" y="899.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.03%)</title><rect x="719.1" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.02%)</title><rect x="719.1" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/MemTable.iterator (10 samples, 0.05%)</title><rect x="719.6" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (10 samples, 0.05%)</title><rect x="719.6" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (10 samples, 0.05%)</title><rect x="719.6" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.05%)</title><rect x="719.6" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (8 samples, 0.04%)</title><rect x="719.7" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.04%)</title><rect x="719.7" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.03%)</title><rect x="719.7" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="719.8" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="719.8" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="719.8" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.8" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="719.8" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/NewDAO.returnIteratorOverMergedCollapsedFiltered (4,765 samples, 22.85%)</title><rect x="720.1" y="931.0" width="269.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.1" y="942.0">ru/mail/polis/dao/boriskin/NewDAO.re..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (644 samples, 3.09%)</title><rect x="720.1" y="915.0" width="36.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="723.1" y="926.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (643 samples, 3.08%)</title><rect x="720.1" y="899.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.1" y="910.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (637 samples, 3.05%)</title><rect x="720.4" y="883.0" width="36.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.4" y="894.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (637 samples, 3.05%)</title><rect x="720.4" y="867.0" width="36.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.4" y="878.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (636 samples, 3.05%)</title><rect x="720.5" y="851.0" width="36.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.5" y="862.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (634 samples, 3.04%)</title><rect x="720.6" y="835.0" width="35.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.6" y="846.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (634 samples, 3.04%)</title><rect x="720.6" y="819.0" width="35.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.6" y="830.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (634 samples, 3.04%)</title><rect x="720.6" y="803.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.6" y="814.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (624 samples, 2.99%)</title><rect x="720.7" y="787.0" width="35.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.7" y="798.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (621 samples, 2.98%)</title><rect x="720.9" y="771.0" width="35.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.9" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (621 samples, 2.98%)</title><rect x="720.9" y="755.0" width="35.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="723.9" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (621 samples, 2.98%)</title><rect x="720.9" y="739.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.9" y="750.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.04%)</title><rect x="720.9" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="721.0" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="721.0" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (232 samples, 1.11%)</title><rect x="721.5" y="723.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.02%)</title><rect x="721.5" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (227 samples, 1.09%)</title><rect x="721.8" y="707.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (227 samples, 1.09%)</title><rect x="721.8" y="691.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (189 samples, 0.91%)</title><rect x="722.2" y="675.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (184 samples, 0.88%)</title><rect x="722.4" y="659.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (177 samples, 0.85%)</title><rect x="722.8" y="643.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (177 samples, 0.85%)</title><rect x="722.8" y="627.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.8" y="638.0"></text>
</g>
<g>
<title>__libc_pread64 (170 samples, 0.82%)</title><rect x="723.0" y="611.0" width="9.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="726.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 0.48%)</title><rect x="727.0" y="595.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="730.0" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (98 samples, 0.47%)</title><rect x="727.1" y="579.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="730.1" y="590.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (74 samples, 0.35%)</title><rect x="728.4" y="563.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.4" y="574.0"></text>
</g>
<g>
<title>ksys_pread64 (74 samples, 0.35%)</title><rect x="728.4" y="547.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="731.4" y="558.0"></text>
</g>
<g>
<title>__fdget (12 samples, 0.06%)</title><rect x="728.6" y="531.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.6" y="542.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.05%)</title><rect x="728.6" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.6" y="526.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.05%)</title><rect x="728.6" y="499.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="731.6" y="510.0"></text>
</g>
<g>
<title>vfs_read (58 samples, 0.28%)</title><rect x="729.4" y="531.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="732.4" y="542.0"></text>
</g>
<g>
<title>__vfs_read (38 samples, 0.18%)</title><rect x="729.6" y="515.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="732.6" y="526.0"></text>
</g>
<g>
<title>new_sync_read (35 samples, 0.17%)</title><rect x="729.8" y="499.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="732.8" y="510.0"></text>
</g>
<g>
<title>ext4_file_read_iter (30 samples, 0.14%)</title><rect x="730.1" y="483.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="733.1" y="494.0"></text>
</g>
<g>
<title>generic_file_read_iter (27 samples, 0.13%)</title><rect x="730.3" y="467.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.3" y="478.0"></text>
</g>
<g>
<title>generic_file_buffered_read (26 samples, 0.12%)</title><rect x="730.3" y="451.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="733.3" y="462.0"></text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.05%)</title><rect x="731.0" y="435.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="734.0" y="446.0"></text>
</g>
<g>
<title>find_get_entry (9 samples, 0.04%)</title><rect x="731.0" y="419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="734.0" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.07%)</title><rect x="731.8" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.8" y="526.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.05%)</title><rect x="732.1" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="735.1" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.02%)</title><rect x="732.1" y="483.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.1" y="494.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.02%)</title><rect x="732.1" y="467.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.15%)</title><rect x="732.9" y="675.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (377 samples, 1.81%)</title><rect x="734.7" y="723.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.7" y="734.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (377 samples, 1.81%)</title><rect x="734.7" y="707.0" width="21.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.7" y="718.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (331 samples, 1.59%)</title><rect x="735.1" y="691.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.05%)</title><rect x="735.3" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.03%)</title><rect x="735.3" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.03%)</title><rect x="735.3" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (314 samples, 1.51%)</title><rect x="735.9" y="675.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (297 samples, 1.42%)</title><rect x="736.9" y="659.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (297 samples, 1.42%)</title><rect x="736.9" y="643.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.9" y="654.0"></text>
</g>
<g>
<title>__libc_pread64 (283 samples, 1.36%)</title><rect x="737.2" y="627.0" width="16.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="740.2" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (159 samples, 0.76%)</title><rect x="744.2" y="611.0" width="9.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.2" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (155 samples, 0.74%)</title><rect x="744.5" y="595.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="747.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (117 samples, 0.56%)</title><rect x="746.4" y="579.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.4" y="590.0"></text>
</g>
<g>
<title>ksys_pread64 (117 samples, 0.56%)</title><rect x="746.4" y="563.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.4" y="574.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.03%)</title><rect x="746.4" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="749.4" y="558.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="746.4" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="749.4" y="542.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.03%)</title><rect x="746.4" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="749.4" y="526.0"></text>
</g>
<g>
<title>vfs_read (104 samples, 0.50%)</title><rect x="747.2" y="547.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="750.2" y="558.0"></text>
</g>
<g>
<title>__vfs_read (71 samples, 0.34%)</title><rect x="747.6" y="531.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="750.6" y="542.0"></text>
</g>
<g>
<title>new_sync_read (68 samples, 0.33%)</title><rect x="747.8" y="515.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.8" y="526.0"></text>
</g>
<g>
<title>ext4_file_read_iter (66 samples, 0.32%)</title><rect x="747.9" y="499.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="750.9" y="510.0"></text>
</g>
<g>
<title>generic_file_read_iter (63 samples, 0.30%)</title><rect x="748.1" y="483.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="751.1" y="494.0"></text>
</g>
<g>
<title>generic_file_buffered_read (60 samples, 0.29%)</title><rect x="748.2" y="467.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="751.2" y="478.0"></text>
</g>
<g>
<title>copy_page_to_iter (20 samples, 0.10%)</title><rect x="749.0" y="451.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="752.0" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (9 samples, 0.04%)</title><rect x="749.6" y="435.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="752.6" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (19 samples, 0.09%)</title><rect x="750.2" y="451.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="753.2" y="462.0"></text>
</g>
<g>
<title>find_get_entry (19 samples, 0.09%)</title><rect x="750.2" y="435.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="753.2" y="446.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.03%)</title><rect x="751.3" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="754.3" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (23 samples, 0.11%)</title><rect x="751.7" y="531.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="754.7" y="542.0"></text>
</g>
<g>
<title>security_file_permission (18 samples, 0.09%)</title><rect x="752.0" y="515.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.0" y="526.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.03%)</title><rect x="752.6" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (32 samples, 0.15%)</title><rect x="753.8" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (7 samples, 0.03%)</title><rect x="755.6" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="758.6" y="702.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.04%)</title><rect x="756.0" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.0" y="798.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.04%)</title><rect x="756.0" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (8 samples, 0.04%)</title><rect x="756.0" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/TableCell.compareTo (8 samples, 0.04%)</title><rect x="756.0" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.0" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.next (7 samples, 0.03%)</title><rect x="756.6" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.6" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (5 samples, 0.02%)</title><rect x="756.6" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.6" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (9 samples, 0.04%)</title><rect x="757.0" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.0" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (9 samples, 0.04%)</title><rect x="757.0" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.0" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.04%)</title><rect x="757.0" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.0" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (9 samples, 0.04%)</title><rect x="757.0" y="867.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.0" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.entrySet (5 samples, 0.02%)</title><rect x="757.2" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (130 samples, 0.62%)</title><rect x="757.5" y="915.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (130 samples, 0.62%)</title><rect x="757.5" y="899.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (130 samples, 0.62%)</title><rect x="757.5" y="883.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.5" y="894.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (125 samples, 0.60%)</title><rect x="757.8" y="867.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.8" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (125 samples, 0.60%)</title><rect x="757.8" y="851.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.8" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (125 samples, 0.60%)</title><rect x="757.8" y="835.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.8" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (125 samples, 0.60%)</title><rect x="757.8" y="819.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (125 samples, 0.60%)</title><rect x="757.8" y="803.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.8" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (125 samples, 0.60%)</title><rect x="757.8" y="787.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.8" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (125 samples, 0.60%)</title><rect x="757.8" y="771.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (124 samples, 0.59%)</title><rect x="757.8" y="755.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.next (124 samples, 0.59%)</title><rect x="757.8" y="739.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findCell (124 samples, 0.59%)</title><rect x="757.8" y="723.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (41 samples, 0.20%)</title><rect x="758.0" y="707.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (40 samples, 0.19%)</title><rect x="758.0" y="691.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (40 samples, 0.19%)</title><rect x="758.0" y="675.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (32 samples, 0.15%)</title><rect x="758.2" y="659.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (28 samples, 0.13%)</title><rect x="758.4" y="643.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (26 samples, 0.12%)</title><rect x="758.5" y="627.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (26 samples, 0.12%)</title><rect x="758.5" y="611.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.5" y="622.0"></text>
</g>
<g>
<title>__libc_pread64 (23 samples, 0.11%)</title><rect x="758.6" y="595.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="761.6" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="759.3" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="762.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="759.4" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="762.4" y="574.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.03%)</title><rect x="759.5" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="762.5" y="558.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.03%)</title><rect x="759.5" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="762.5" y="542.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.02%)</title><rect x="759.6" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="762.6" y="526.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.02%)</title><rect x="759.6" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="762.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.03%)</title><rect x="760.0" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (80 samples, 0.38%)</title><rect x="760.3" y="707.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (80 samples, 0.38%)</title><rect x="760.3" y="691.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (74 samples, 0.35%)</title><rect x="760.4" y="675.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (71 samples, 0.34%)</title><rect x="760.5" y="659.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (68 samples, 0.33%)</title><rect x="760.7" y="643.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (68 samples, 0.33%)</title><rect x="760.7" y="627.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.7" y="638.0"></text>
</g>
<g>
<title>__libc_pread64 (64 samples, 0.31%)</title><rect x="760.8" y="611.0" width="3.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="763.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.21%)</title><rect x="761.9" y="595.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="764.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.20%)</title><rect x="762.1" y="579.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="765.1" y="590.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (29 samples, 0.14%)</title><rect x="762.7" y="563.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="765.7" y="574.0"></text>
</g>
<g>
<title>ksys_pread64 (29 samples, 0.14%)</title><rect x="762.7" y="547.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.7" y="558.0"></text>
</g>
<g>
<title>vfs_read (25 samples, 0.12%)</title><rect x="762.9" y="531.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.9" y="542.0"></text>
</g>
<g>
<title>__vfs_read (17 samples, 0.08%)</title><rect x="763.1" y="515.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="766.1" y="526.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.08%)</title><rect x="763.1" y="499.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.1" y="510.0"></text>
</g>
<g>
<title>ext4_file_read_iter (15 samples, 0.07%)</title><rect x="763.2" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="766.2" y="494.0"></text>
</g>
<g>
<title>generic_file_read_iter (14 samples, 0.07%)</title><rect x="763.2" y="467.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="766.2" y="478.0"></text>
</g>
<g>
<title>generic_file_buffered_read (12 samples, 0.06%)</title><rect x="763.4" y="451.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="766.4" y="462.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.02%)</title><rect x="763.6" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="766.6" y="446.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.02%)</title><rect x="763.6" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="766.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.iterator (3,974 samples, 19.06%)</title><rect x="764.9" y="915.0" width="224.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.9" y="926.0">ru/mail/polis/dao/boriskin/Sor..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable$1.&lt;init&gt; (3,974 samples, 19.06%)</title><rect x="764.9" y="899.0" width="224.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.9" y="910.0">ru/mail/polis/dao/boriskin/Sor..</text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findNext (3,974 samples, 19.06%)</title><rect x="764.9" y="883.0" width="224.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.9" y="894.0">ru/mail/polis/dao/boriskin/Sor..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (51 samples, 0.24%)</title><rect x="765.0" y="867.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.0" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (48 samples, 0.23%)</title><rect x="765.2" y="851.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findK (3,921 samples, 18.80%)</title><rect x="767.9" y="867.0" width="221.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.9" y="878.0">ru/mail/polis/dao/boriskin/So..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.03%)</title><rect x="767.9" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/boriskin/SortedStringTable.findOffset (1,356 samples, 6.50%)</title><rect x="768.4" y="851.0" width="76.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.4" y="862.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.04%)</title><rect x="768.4" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.4" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="768.5" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="771.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="768.5" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="771.5" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="768.5" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="771.5" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="768.5" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="771.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,347 samples, 6.46%)</title><rect x="768.9" y="835.0" width="76.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.9" y="846.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,347 samples, 6.46%)</title><rect x="768.9" y="819.0" width="76.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.9" y="830.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.03%)</title><rect x="768.9" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.9" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.03%)</title><rect x="768.9" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.9" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.03%)</title><rect x="768.9" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.9" y="782.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.03%)</title><rect x="768.9" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.03%)</title><rect x="768.9" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (18 samples, 0.09%)</title><rect x="769.3" y="803.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.3" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (18 samples, 0.09%)</title><rect x="769.3" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.3" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (18 samples, 0.09%)</title><rect x="769.3" y="771.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.3" y="782.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (15 samples, 0.07%)</title><rect x="769.5" y="755.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (15 samples, 0.07%)</title><rect x="769.5" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,156 samples, 5.54%)</title><rect x="770.3" y="803.0" width="65.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.3" y="814.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (35 samples, 0.17%)</title><rect x="770.4" y="787.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (17 samples, 0.08%)</title><rect x="770.4" y="771.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (17 samples, 0.08%)</title><rect x="770.4" y="755.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.4" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (18 samples, 0.09%)</title><rect x="771.4" y="771.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (18 samples, 0.09%)</title><rect x="771.4" y="755.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.4" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.04%)</title><rect x="772.0" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.0" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (8 samples, 0.04%)</title><rect x="772.0" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.02%)</title><rect x="772.4" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,102 samples, 5.28%)</title><rect x="772.7" y="787.0" width="62.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.7" y="798.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,026 samples, 4.92%)</title><rect x="776.9" y="771.0" width="58.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.9" y="782.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,023 samples, 4.91%)</title><rect x="777.1" y="755.0" width="57.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.1" y="766.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (6 samples, 0.03%)</title><rect x="778.6" y="739.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="781.6" y="750.0"></text>
</g>
<g>
<title>__libc_pread64 (963 samples, 4.62%)</title><rect x="778.9" y="739.0" width="54.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="781.9" y="750.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (559 samples, 2.68%)</title><rect x="801.7" y="723.0" width="31.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="804.7" y="734.0">en..</text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.04%)</title><rect x="801.7" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (550 samples, 2.64%)</title><rect x="802.2" y="707.0" width="31.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.2" y="718.0">do..</text>
</g>
<g>
<title>__x64_sys_pread64 (431 samples, 2.07%)</title><rect x="808.9" y="691.0" width="24.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="811.9" y="702.0">_..</text>
</g>
<g>
<title>ksys_pread64 (430 samples, 2.06%)</title><rect x="808.9" y="675.0" width="24.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="811.9" y="686.0">k..</text>
</g>
<g>
<title>__fdget (45 samples, 0.22%)</title><rect x="809.4" y="659.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="812.4" y="670.0"></text>
</g>
<g>
<title>__fget_light (45 samples, 0.22%)</title><rect x="809.4" y="643.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.4" y="654.0"></text>
</g>
<g>
<title>__fget (44 samples, 0.21%)</title><rect x="809.4" y="627.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="812.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (20 samples, 0.10%)</title><rect x="811.9" y="659.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.9" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.02%)</title><rect x="813.0" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="816.0" y="670.0"></text>
</g>
<g>
<title>fput_many (11 samples, 0.05%)</title><rect x="813.5" y="659.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="816.5" y="670.0"></text>
</g>
<g>
<title>vfs_read (336 samples, 1.61%)</title><rect x="814.2" y="659.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="817.2" y="670.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.03%)</title><rect x="815.1" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.1" y="654.0"></text>
</g>
<g>
<title>__vfs_read (228 samples, 1.09%)</title><rect x="815.4" y="643.0" width="12.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.4" y="654.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.06%)</title><rect x="815.6" y="627.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.6" y="638.0"></text>
</g>
<g>
<title>iov_iter_init (5 samples, 0.02%)</title><rect x="816.3" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="819.3" y="638.0"></text>
</g>
<g>
<title>new_sync_read (207 samples, 0.99%)</title><rect x="816.6" y="627.0" width="11.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="819.6" y="638.0"></text>
</g>
<g>
<title>ext4_file_read_iter (187 samples, 0.90%)</title><rect x="817.7" y="611.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="820.7" y="622.0"></text>
</g>
<g>
<title>generic_file_read_iter (180 samples, 0.86%)</title><rect x="818.1" y="595.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.1" y="606.0"></text>
</g>
<g>
<title>generic_file_buffered_read (169 samples, 0.81%)</title><rect x="818.6" y="579.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="821.6" y="590.0"></text>
</g>
<g>
<title>copy_page_to_iter (42 samples, 0.20%)</title><rect x="821.1" y="563.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.1" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.04%)</title><rect x="821.6" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="824.6" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (21 samples, 0.10%)</title><rect x="822.1" y="547.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="825.1" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (50 samples, 0.24%)</title><rect x="823.8" y="563.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="826.8" y="574.0"></text>
</g>
<g>
<title>find_get_entry (45 samples, 0.22%)</title><rect x="824.1" y="547.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="827.1" y="558.0"></text>
</g>
<g>
<title>xas_start (8 samples, 0.04%)</title><rect x="826.2" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="829.2" y="542.0"></text>
</g>
<g>
<title>touch_atime (26 samples, 0.12%)</title><rect x="826.7" y="563.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="829.7" y="574.0"></text>
</g>
<g>
<title>atime_needs_update (19 samples, 0.09%)</title><rect x="827.0" y="547.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="830.0" y="558.0"></text>
</g>
<g>
<title>current_time (12 samples, 0.06%)</title><rect x="827.4" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="830.4" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (6 samples, 0.03%)</title><rect x="827.5" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="830.5" y="526.0"></text>
</g>
<g>
<title>fsnotify (12 samples, 0.06%)</title><rect x="828.3" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="831.3" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (74 samples, 0.35%)</title><rect x="829.1" y="643.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.1" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.02%)</title><rect x="829.4" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.4" y="638.0"></text>
</g>
<g>
<title>security_file_permission (59 samples, 0.28%)</title><rect x="829.9" y="627.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="832.9" y="638.0"></text>
</g>
<g>
<title>__fsnotify_parent (10 samples, 0.05%)</title><rect x="830.2" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="833.2" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (24 samples, 0.12%)</title><rect x="830.7" y="611.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="833.7" y="622.0"></text>
</g>
<g>
<title>common_file_perm (23 samples, 0.11%)</title><rect x="830.8" y="595.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="833.8" y="606.0"></text>
</g>
<g>
<title>aa_file_perm (9 samples, 0.04%)</title><rect x="831.6" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="834.6" y="590.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.02%)</title><rect x="832.1" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.1" y="622.0"></text>
</g>
<g>
<title>fsnotify (15 samples, 0.07%)</title><rect x="832.4" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="835.4" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (13 samples, 0.06%)</title><rect x="833.4" y="739.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="836.4" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (10 samples, 0.05%)</title><rect x="834.1" y="739.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="837.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (12 samples, 0.06%)</title><rect x="835.0" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.0" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.02%)</title><rect x="835.1" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.03%)</title><rect x="835.4" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (146 samples, 0.70%)</title><rect x="835.7" y="803.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (13 samples, 0.06%)</title><rect x="843.3" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (20 samples, 0.10%)</title><rect x="844.0" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,552 samples, 12.24%)</title><rect x="845.3" y="851.0" width="144.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.3" y="862.0">sun/nio/ch/FileCha..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,552 samples, 12.24%)</title><rect x="845.3" y="835.0" width="144.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.3" y="846.0">sun/nio/ch/FileCha..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.02%)</title><rect x="847.5" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (40 samples, 0.19%)</title><rect x="847.8" y="819.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.8" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (40 samples, 0.19%)</title><rect x="847.8" y="803.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.8" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (40 samples, 0.19%)</title><rect x="847.8" y="787.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.8" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (27 samples, 0.13%)</title><rect x="848.5" y="771.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (27 samples, 0.13%)</title><rect x="848.5" y="755.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (45 samples, 0.22%)</title><rect x="850.0" y="819.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.0" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (40 samples, 0.19%)</title><rect x="850.3" y="803.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.3" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (40 samples, 0.19%)</title><rect x="850.3" y="787.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.3" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (25 samples, 0.12%)</title><rect x="851.2" y="771.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (25 samples, 0.12%)</title><rect x="851.2" y="755.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,119 samples, 10.16%)</title><rect x="852.8" y="819.0" width="119.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.8" y="830.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (43 samples, 0.21%)</title><rect x="853.0" y="803.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (21 samples, 0.10%)</title><rect x="853.0" y="787.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (21 samples, 0.10%)</title><rect x="853.0" y="771.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.0" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (22 samples, 0.11%)</title><rect x="854.2" y="787.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="857.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (22 samples, 0.11%)</title><rect x="854.2" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.03%)</title><rect x="855.1" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.1" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (6 samples, 0.03%)</title><rect x="855.1" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,053 samples, 9.84%)</title><rect x="855.7" y="803.0" width="116.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.7" y="814.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,977 samples, 9.48%)</title><rect x="860.0" y="787.0" width="111.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.0" y="798.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,976 samples, 9.48%)</title><rect x="860.1" y="771.0" width="111.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.1" y="782.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (8 samples, 0.04%)</title><rect x="862.4" y="755.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="865.4" y="766.0"></text>
</g>
<g>
<title>__libc_pread64 (1,883 samples, 9.03%)</title><rect x="862.9" y="755.0" width="106.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="865.9" y="766.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,081 samples, 5.18%)</title><rect x="908.2" y="739.0" width="61.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="911.2" y="750.0">entry_..</text>
</g>
<g>
<title>__x64_sys_pread64 (28 samples, 0.13%)</title><rect x="908.2" y="723.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="911.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1,052 samples, 5.04%)</title><rect x="909.8" y="723.0" width="59.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.8" y="734.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_pread64 (796 samples, 3.82%)</title><rect x="924.2" y="707.0" width="45.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="927.2" y="718.0">__x6..</text>
</g>
<g>
<title>ksys_pread64 (793 samples, 3.80%)</title><rect x="924.3" y="691.0" width="44.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="927.3" y="702.0">ksys..</text>
</g>
<g>
<title>__fdget (74 samples, 0.35%)</title><rect x="925.1" y="675.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.1" y="686.0"></text>
</g>
<g>
<title>__fget_light (72 samples, 0.35%)</title><rect x="925.2" y="659.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="928.2" y="670.0"></text>
</g>
<g>
<title>__fget (71 samples, 0.34%)</title><rect x="925.2" y="643.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="928.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (26 samples, 0.12%)</title><rect x="929.3" y="675.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="932.3" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.03%)</title><rect x="930.7" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.7" y="686.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.02%)</title><rect x="931.1" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="934.1" y="686.0"></text>
</g>
<g>
<title>fput_many (23 samples, 0.11%)</title><rect x="931.4" y="675.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="934.4" y="686.0"></text>
</g>
<g>
<title>vfs_read (642 samples, 3.08%)</title><rect x="932.8" y="675.0" width="36.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.8" y="686.0">vfs..</text>
</g>
<g>
<title>__fsnotify_parent (8 samples, 0.04%)</title><rect x="935.4" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.4" y="670.0"></text>
</g>
<g>
<title>__vfs_read (450 samples, 2.16%)</title><rect x="935.8" y="659.0" width="25.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="938.8" y="670.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (28 samples, 0.13%)</title><rect x="935.8" y="643.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.8" y="654.0"></text>
</g>
<g>
<title>iov_iter_init (6 samples, 0.03%)</title><rect x="937.4" y="643.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.4" y="654.0"></text>
</g>
<g>
<title>new_sync_read (416 samples, 1.99%)</title><rect x="937.7" y="643.0" width="23.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.7" y="654.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (387 samples, 1.86%)</title><rect x="939.4" y="627.0" width="21.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.4" y="638.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (359 samples, 1.72%)</title><rect x="941.0" y="611.0" width="20.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="944.0" y="622.0"></text>
</g>
<g>
<title>generic_file_buffered_read (341 samples, 1.64%)</title><rect x="941.8" y="595.0" width="19.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="944.8" y="606.0"></text>
</g>
<g>
<title>copy_page_to_iter (105 samples, 0.50%)</title><rect x="946.0" y="579.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="949.0" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.04%)</title><rect x="948.0" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="951.0" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (55 samples, 0.26%)</title><rect x="948.4" y="563.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="951.4" y="574.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.03%)</title><rect x="951.6" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="954.6" y="574.0"></text>
</g>
<g>
<title>mark_page_accessed (6 samples, 0.03%)</title><rect x="952.2" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="955.2" y="590.0"></text>
</g>
<g>
<title>pagecache_get_page (95 samples, 0.46%)</title><rect x="952.6" y="579.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="955.6" y="590.0"></text>
</g>
<g>
<title>find_get_entry (88 samples, 0.42%)</title><rect x="952.9" y="563.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="955.9" y="574.0"></text>
</g>
<g>
<title>xas_load (16 samples, 0.08%)</title><rect x="956.4" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="959.4" y="558.0"></text>
</g>
<g>
<title>xas_start (11 samples, 0.05%)</title><rect x="957.3" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="960.3" y="558.0"></text>
</g>
<g>
<title>touch_atime (52 samples, 0.25%)</title><rect x="958.1" y="579.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="961.1" y="590.0"></text>
</g>
<g>
<title>atime_needs_update (44 samples, 0.21%)</title><rect x="958.5" y="563.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="961.5" y="574.0"></text>
</g>
<g>
<title>current_time (29 samples, 0.14%)</title><rect x="959.0" y="547.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="962.0" y="558.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (14 samples, 0.07%)</title><rect x="959.3" y="531.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="962.3" y="542.0"></text>
</g>
<g>
<title>timestamp_truncate (9 samples, 0.04%)</title><rect x="960.1" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.1" y="542.0"></text>
</g>
<g>
<title>fsnotify (20 samples, 0.10%)</title><rect x="961.3" y="659.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="964.3" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (115 samples, 0.55%)</title><rect x="962.6" y="659.0" width="6.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="965.6" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (13 samples, 0.06%)</title><rect x="963.2" y="643.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="966.2" y="654.0"></text>
</g>
<g>
<title>security_file_permission (91 samples, 0.44%)</title><rect x="963.9" y="643.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.9" y="654.0"></text>
</g>
<g>
<title>__fsnotify_parent (12 samples, 0.06%)</title><rect x="964.6" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="967.6" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (39 samples, 0.19%)</title><rect x="965.2" y="627.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.2" y="638.0"></text>
</g>
<g>
<title>common_file_perm (38 samples, 0.18%)</title><rect x="965.3" y="611.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="968.3" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (11 samples, 0.05%)</title><rect x="966.8" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="969.8" y="606.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.04%)</title><rect x="967.5" y="627.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="970.5" y="638.0"></text>
</g>
<g>
<title>fsnotify (21 samples, 0.10%)</title><rect x="967.9" y="627.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="970.9" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (17 samples, 0.08%)</title><rect x="969.5" y="755.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="972.5" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (22 samples, 0.11%)</title><rect x="970.5" y="755.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="973.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (14 samples, 0.07%)</title><rect x="971.9" y="803.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.05%)</title><rect x="972.0" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="975.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (245 samples, 1.17%)</title><rect x="972.7" y="819.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.7" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.03%)</title><rect x="984.5" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (28 samples, 0.13%)</title><rect x="984.9" y="803.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (57 samples, 0.27%)</title><rect x="986.5" y="819.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.5" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="989.4" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="992.4" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.03%)</title><rect x="989.4" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="992.4" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.03%)</title><rect x="989.4" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="992.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (595 samples, 2.85%)</title><rect x="989.9" y="1059.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.9" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (307 samples, 1.47%)</title><rect x="990.3" y="1043.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.02%)</title><rect x="990.3" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$506/634718879.apply (302 samples, 1.45%)</title><rect x="990.6" y="1027.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$1 (302 samples, 1.45%)</title><rect x="990.6" y="1011.0" width="17.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="993.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getResponses (302 samples, 1.45%)</title><rect x="990.6" y="995.0" width="17.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="990.8" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="993.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/919112242.invoke (5 samples, 0.02%)</title><rect x="990.8" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.8" y="974.0"></text>
</g>
<g>
<title>java/net/URI.create (40 samples, 0.19%)</title><rect x="991.1" y="979.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.1" y="990.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (39 samples, 0.19%)</title><rect x="991.1" y="963.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.1" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (39 samples, 0.19%)</title><rect x="991.1" y="947.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.1" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (28 samples, 0.13%)</title><rect x="991.4" y="931.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.4" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.03%)</title><rect x="991.4" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.4" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.02%)</title><rect x="991.5" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.5" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (20 samples, 0.10%)</title><rect x="991.8" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (15 samples, 0.07%)</title><rect x="992.0" y="899.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.0" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (9 samples, 0.04%)</title><rect x="992.1" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.1" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.03%)</title><rect x="992.2" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.2" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.03%)</title><rect x="993.0" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="993.0" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.03%)</title><rect x="993.0" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.02%)</title><rect x="993.0" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (189 samples, 0.91%)</title><rect x="993.9" y="979.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (189 samples, 0.91%)</title><rect x="993.9" y="963.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (189 samples, 0.91%)</title><rect x="993.9" y="947.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (189 samples, 0.91%)</title><rect x="993.9" y="931.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (118 samples, 0.57%)</title><rect x="994.4" y="915.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.07%)</title><rect x="994.5" y="899.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.5" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.03%)</title><rect x="994.5" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.5" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.03%)</title><rect x="994.5" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.5" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.03%)</title><rect x="994.5" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.03%)</title><rect x="995.0" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.03%)</title><rect x="995.0" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.03%)</title><rect x="995.0" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.03%)</title><rect x="995.0" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.02%)</title><rect x="995.0" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.0" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 0.11%)</title><rect x="995.4" y="899.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="998.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 0.11%)</title><rect x="995.4" y="883.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.4" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (20 samples, 0.10%)</title><rect x="995.5" y="867.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.5" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (19 samples, 0.09%)</title><rect x="995.5" y="851.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.5" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (19 samples, 0.09%)</title><rect x="995.5" y="835.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.5" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.09%)</title><rect x="995.5" y="819.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (12 samples, 0.06%)</title><rect x="995.7" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.7" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.accept (12 samples, 0.06%)</title><rect x="995.7" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.7" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (12 samples, 0.06%)</title><rect x="995.7" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.03%)</title><rect x="995.7" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.03%)</title><rect x="995.7" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.7" y="750.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.02%)</title><rect x="995.9" y="723.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="998.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/119290689.test (5 samples, 0.02%)</title><rect x="996.1" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (5 samples, 0.02%)</title><rect x="996.1" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (74 samples, 0.35%)</title><rect x="996.8" y="899.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="999.8" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (74 samples, 0.35%)</title><rect x="996.8" y="883.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="999.8" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (67 samples, 0.32%)</title><rect x="997.2" y="867.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.2" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (46 samples, 0.22%)</title><rect x="997.3" y="851.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1000.3" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.02%)</title><rect x="998.1" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1001.1" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.04%)</title><rect x="998.5" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.5" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.02%)</title><rect x="998.7" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1001.7" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.02%)</title><rect x="998.7" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1001.7" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (15 samples, 0.07%)</title><rect x="999.0" y="835.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1002.0" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.02%)</title><rect x="999.1" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1002.1" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.04%)</title><rect x="999.4" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1002.4" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (6 samples, 0.03%)</title><rect x="999.5" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.5" y="814.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (17 samples, 0.08%)</title><rect x="1000.0" y="851.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.0" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (15 samples, 0.07%)</title><rect x="1000.1" y="835.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.03%)</title><rect x="1000.3" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.3" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.03%)</title><rect x="1000.3" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.3" y="814.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (5 samples, 0.02%)</title><rect x="1000.7" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (14 samples, 0.07%)</title><rect x="1001.1" y="915.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (14 samples, 0.07%)</title><rect x="1001.1" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1004.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (14 samples, 0.07%)</title><rect x="1001.1" y="883.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.1" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (7 samples, 0.03%)</title><rect x="1001.5" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (47 samples, 0.23%)</title><rect x="1001.9" y="915.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (40 samples, 0.19%)</title><rect x="1001.9" y="899.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 0.19%)</title><rect x="1002.0" y="883.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (39 samples, 0.19%)</title><rect x="1002.0" y="867.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (37 samples, 0.18%)</title><rect x="1002.0" y="851.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (31 samples, 0.15%)</title><rect x="1002.3" y="835.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.15%)</title><rect x="1002.3" y="819.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.15%)</title><rect x="1002.3" y="803.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.15%)</title><rect x="1002.3" y="787.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.15%)</title><rect x="1002.3" y="771.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.02%)</title><rect x="1002.4" y="755.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1005.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.12%)</title><rect x="1002.7" y="755.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1005.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.10%)</title><rect x="1002.9" y="739.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1005.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.10%)</title><rect x="1002.9" y="723.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1005.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.10%)</title><rect x="1002.9" y="707.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1005.9" y="718.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.10%)</title><rect x="1002.9" y="691.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1005.9" y="702.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 0.10%)</title><rect x="1002.9" y="675.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1005.9" y="686.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.10%)</title><rect x="1002.9" y="659.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1005.9" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.10%)</title><rect x="1002.9" y="643.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.10%)</title><rect x="1002.9" y="627.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (7 samples, 0.03%)</title><rect x="1004.2" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (22 samples, 0.11%)</title><rect x="1004.6" y="979.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1007.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (21 samples, 0.10%)</title><rect x="1004.7" y="963.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.7" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (21 samples, 0.10%)</title><rect x="1004.7" y="947.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.7" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (21 samples, 0.10%)</title><rect x="1004.7" y="931.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.7" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.08%)</title><rect x="1005.0" y="915.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.0" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/345386548.accept (13 samples, 0.06%)</title><rect x="1005.1" y="899.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.1" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.06%)</title><rect x="1005.1" y="883.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1008.1" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.05%)</title><rect x="1005.3" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$146/87870112.accept (9 samples, 0.04%)</title><rect x="1005.3" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.3" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.04%)</title><rect x="1005.3" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.trim (8 samples, 0.04%)</title><rect x="1005.3" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8 samples, 0.04%)</title><rect x="1005.3" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1008.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.03%)</title><rect x="1005.9" y="979.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.03%)</title><rect x="1005.9" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1008.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (6 samples, 0.03%)</title><rect x="1005.9" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.getListOfReceivedResponses (20 samples, 0.10%)</title><rect x="1006.3" y="979.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.3" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (19 samples, 0.09%)</title><rect x="1006.3" y="963.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$235/1399149317.accept (17 samples, 0.08%)</title><rect x="1006.4" y="947.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker.lambda$getListOfReceivedResponses$2 (17 samples, 0.08%)</title><rect x="1006.4" y="931.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (12 samples, 0.06%)</title><rect x="1006.5" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (8 samples, 0.04%)</title><rect x="1006.5" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (8 samples, 0.04%)</title><rect x="1006.5" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (5 samples, 0.02%)</title><rect x="1006.7" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (280 samples, 1.34%)</title><rect x="1007.7" y="1043.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (25 samples, 0.12%)</title><rect x="1007.7" y="1027.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25 samples, 0.12%)</title><rect x="1007.7" y="1011.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (21 samples, 0.10%)</title><rect x="1008.0" y="995.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1011.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (21 samples, 0.10%)</title><rect x="1008.0" y="979.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (10 samples, 0.05%)</title><rect x="1008.1" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (10 samples, 0.05%)</title><rect x="1008.1" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (9 samples, 0.04%)</title><rect x="1008.2" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (9 samples, 0.04%)</title><rect x="1008.2" y="915.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (8 samples, 0.04%)</title><rect x="1008.3" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.04%)</title><rect x="1008.7" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.04%)</title><rect x="1008.7" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.04%)</title><rect x="1008.7" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (8 samples, 0.04%)</title><rect x="1008.7" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1011.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.04%)</title><rect x="1008.7" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1011.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.04%)</title><rect x="1008.7" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (254 samples, 1.22%)</title><rect x="1009.2" y="1027.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.05%)</title><rect x="1009.4" y="1011.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.05%)</title><rect x="1009.4" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.05%)</title><rect x="1009.4" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.05%)</title><rect x="1009.4" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.05%)</title><rect x="1009.4" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.05%)</title><rect x="1009.4" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.4" y="942.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="1009.5" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1012.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/FuturesWorker$$Lambda$226/1731537133.accept (7 samples, 0.03%)</title><rect x="1010.0" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$509/29176825.accept (233 samples, 1.12%)</title><rect x="1010.3" y="1011.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$3 (233 samples, 1.12%)</title><rect x="1010.3" y="995.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.getNumberOfSuccessfulResponses (12 samples, 0.06%)</title><rect x="1010.5" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker$$Lambda$536/1241806593.test (12 samples, 0.06%)</title><rect x="1010.5" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.lambda$getting$2 (12 samples, 0.06%)</title><rect x="1010.5" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.from (12 samples, 0.06%)</title><rect x="1010.5" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.04%)</title><rect x="1010.7" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/ReplicaWorker.sendResponseIfExpectedAcksReached (205 samples, 0.98%)</title><rect x="1011.2" y="979.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.resp (205 samples, 0.98%)</title><rect x="1011.2" y="963.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (205 samples, 0.98%)</title><rect x="1011.2" y="947.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (196 samples, 0.94%)</title><rect x="1011.5" y="931.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (192 samples, 0.92%)</title><rect x="1011.7" y="915.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (192 samples, 0.92%)</title><rect x="1011.7" y="899.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (184 samples, 0.88%)</title><rect x="1012.2" y="883.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (184 samples, 0.88%)</title><rect x="1012.2" y="867.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.04%)</title><rect x="1012.2" y="851.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1015.2" y="862.0"></text>
</g>
<g>
<title>__send (171 samples, 0.82%)</title><rect x="1012.8" y="851.0" width="9.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1015.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (156 samples, 0.75%)</title><rect x="1013.7" y="835.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (156 samples, 0.75%)</title><rect x="1013.7" y="819.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1016.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_sendto (150 samples, 0.72%)</title><rect x="1014.0" y="803.0" width="8.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1017.0" y="814.0"></text>
</g>
<g>
<title>__sys_sendto (150 samples, 0.72%)</title><rect x="1014.0" y="787.0" width="8.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1017.0" y="798.0"></text>
</g>
<g>
<title>sock_sendmsg (142 samples, 0.68%)</title><rect x="1014.2" y="771.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1017.2" y="782.0"></text>
</g>
<g>
<title>inet6_sendmsg (141 samples, 0.68%)</title><rect x="1014.3" y="755.0" width="7.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1017.3" y="766.0"></text>
</g>
<g>
<title>tcp_sendmsg (140 samples, 0.67%)</title><rect x="1014.3" y="739.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1017.3" y="750.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (134 samples, 0.64%)</title><rect x="1014.6" y="723.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1017.6" y="734.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="1014.9" y="707.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1017.9" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.02%)</title><rect x="1014.9" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1017.9" y="702.0"></text>
</g>
<g>
<title>tcp_push (121 samples, 0.58%)</title><rect x="1015.3" y="707.0" width="6.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1018.3" y="718.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (121 samples, 0.58%)</title><rect x="1015.3" y="691.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.3" y="702.0"></text>
</g>
<g>
<title>tcp_write_xmit (120 samples, 0.58%)</title><rect x="1015.3" y="675.0" width="6.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1018.3" y="686.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (112 samples, 0.54%)</title><rect x="1015.4" y="659.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.4" y="670.0"></text>
</g>
<g>
<title>ip_queue_xmit (105 samples, 0.50%)</title><rect x="1015.7" y="643.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1018.7" y="654.0"></text>
</g>
<g>
<title>__ip_queue_xmit (103 samples, 0.49%)</title><rect x="1015.7" y="627.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1018.7" y="638.0"></text>
</g>
<g>
<title>ip_local_out (100 samples, 0.48%)</title><rect x="1015.8" y="611.0" width="5.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1018.8" y="622.0"></text>
</g>
<g>
<title>ip_output (99 samples, 0.47%)</title><rect x="1015.8" y="595.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1018.8" y="606.0"></text>
</g>
<g>
<title>ip_finish_output (98 samples, 0.47%)</title><rect x="1015.9" y="579.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1018.9" y="590.0"></text>
</g>
<g>
<title>__ip_finish_output (97 samples, 0.47%)</title><rect x="1015.9" y="563.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1018.9" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (96 samples, 0.46%)</title><rect x="1015.9" y="547.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.9" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (94 samples, 0.45%)</title><rect x="1016.1" y="531.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1019.1" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.0 (94 samples, 0.45%)</title><rect x="1016.1" y="515.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1019.1" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (93 samples, 0.45%)</title><rect x="1016.1" y="499.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1019.1" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (93 samples, 0.45%)</title><rect x="1016.1" y="483.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1019.1" y="494.0"></text>
</g>
<g>
<title>net_rx_action (90 samples, 0.43%)</title><rect x="1016.3" y="467.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1019.3" y="478.0"></text>
</g>
<g>
<title>process_backlog (88 samples, 0.42%)</title><rect x="1016.4" y="451.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.4" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (87 samples, 0.42%)</title><rect x="1016.5" y="435.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.5" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (87 samples, 0.42%)</title><rect x="1016.5" y="419.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.5" y="430.0"></text>
</g>
<g>
<title>ip_rcv (86 samples, 0.41%)</title><rect x="1016.5" y="403.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1019.5" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (84 samples, 0.40%)</title><rect x="1016.6" y="387.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1019.6" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (84 samples, 0.40%)</title><rect x="1016.6" y="371.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1019.6" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (84 samples, 0.40%)</title><rect x="1016.6" y="355.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.6" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (84 samples, 0.40%)</title><rect x="1016.6" y="339.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1019.6" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (84 samples, 0.40%)</title><rect x="1016.6" y="323.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1019.6" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (77 samples, 0.37%)</title><rect x="1017.0" y="307.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1020.0" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (76 samples, 0.36%)</title><rect x="1017.1" y="291.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1020.1" y="302.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.03%)</title><rect x="1017.2" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.2" y="286.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.02%)</title><rect x="1017.4" y="259.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1020.4" y="270.0"></text>
</g>
<g>
<title>tcp_data_ready (64 samples, 0.31%)</title><rect x="1017.6" y="275.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1020.6" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (63 samples, 0.30%)</title><rect x="1017.7" y="259.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.7" y="270.0"></text>
</g>
<g>
<title>__wake_up_sync_key (63 samples, 0.30%)</title><rect x="1017.7" y="243.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1020.7" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (63 samples, 0.30%)</title><rect x="1017.7" y="227.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1020.7" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 0.30%)</title><rect x="1017.8" y="211.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1020.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/Value.merge (10 samples, 0.05%)</title><rect x="1022.9" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1025.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (6 samples, 0.03%)</title><rect x="1023.1" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.1" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (6 samples, 0.03%)</title><rect x="1023.1" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.1" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.02%)</title><rect x="1023.1" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.1" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (5 samples, 0.02%)</title><rect x="1023.1" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.1" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.02%)</title><rect x="1023.1" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.1" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.02%)</title><rect x="1023.1" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (886 samples, 4.25%)</title><rect x="1023.9" y="1139.0" width="50.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.9" y="1150.0">jdk/i..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (395 samples, 1.89%)</title><rect x="1025.5" y="1123.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.5" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$359/1867646888.accept (381 samples, 1.83%)</title><rect x="1025.6" y="1107.0" width="21.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.6" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (381 samples, 1.83%)</title><rect x="1025.6" y="1091.0" width="21.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.6" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (381 samples, 1.83%)</title><rect x="1025.6" y="1075.0" width="21.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.6" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (379 samples, 1.82%)</title><rect x="1025.7" y="1059.0" width="21.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.7" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (379 samples, 1.82%)</title><rect x="1025.7" y="1043.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.7" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (12 samples, 0.06%)</title><rect x="1025.7" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1028.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (9 samples, 0.04%)</title><rect x="1025.9" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.03%)</title><rect x="1026.0" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.02%)</title><rect x="1026.1" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.02%)</title><rect x="1026.1" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1029.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.02%)</title><rect x="1026.1" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (367 samples, 1.76%)</title><rect x="1026.4" y="1027.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (367 samples, 1.76%)</title><rect x="1026.4" y="1011.0" width="20.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (366 samples, 1.76%)</title><rect x="1026.4" y="995.0" width="20.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1029.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (366 samples, 1.76%)</title><rect x="1026.4" y="979.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1029.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (365 samples, 1.75%)</title><rect x="1026.5" y="963.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/1939355275.run (363 samples, 1.74%)</title><rect x="1026.5" y="947.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (363 samples, 1.74%)</title><rect x="1026.5" y="931.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (78 samples, 0.37%)</title><rect x="1027.0" y="915.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (78 samples, 0.37%)</title><rect x="1027.0" y="899.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (78 samples, 0.37%)</title><rect x="1027.0" y="883.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (78 samples, 0.37%)</title><rect x="1027.0" y="867.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (66 samples, 0.32%)</title><rect x="1027.7" y="851.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (65 samples, 0.31%)</title><rect x="1027.7" y="835.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 0.31%)</title><rect x="1027.7" y="819.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (65 samples, 0.31%)</title><rect x="1027.7" y="803.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (63 samples, 0.30%)</title><rect x="1027.7" y="787.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (59 samples, 0.28%)</title><rect x="1027.9" y="771.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1030.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (59 samples, 0.28%)</title><rect x="1027.9" y="755.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (59 samples, 0.28%)</title><rect x="1027.9" y="739.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 0.28%)</title><rect x="1027.9" y="723.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 0.28%)</title><rect x="1027.9" y="707.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.9" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.04%)</title><rect x="1028.0" y="691.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1031.0" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (43 samples, 0.21%)</title><rect x="1028.5" y="691.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1031.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.15%)</title><rect x="1029.2" y="675.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1032.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.15%)</title><rect x="1029.2" y="659.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.15%)</title><rect x="1029.2" y="643.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1032.2" y="654.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.15%)</title><rect x="1029.2" y="627.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (29 samples, 0.14%)</title><rect x="1029.3" y="611.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1032.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.13%)</title><rect x="1029.4" y="595.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1032.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.13%)</title><rect x="1029.4" y="579.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1032.4" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.13%)</title><rect x="1029.4" y="563.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1032.4" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.02%)</title><rect x="1030.9" y="691.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1033.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (267 samples, 1.28%)</title><rect x="1031.8" y="915.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1034.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (255 samples, 1.22%)</title><rect x="1032.5" y="899.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (252 samples, 1.21%)</title><rect x="1032.7" y="883.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (252 samples, 1.21%)</title><rect x="1032.7" y="867.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.02%)</title><rect x="1032.7" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.02%)</title><rect x="1032.7" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.7" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.02%)</title><rect x="1032.7" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (237 samples, 1.14%)</title><rect x="1033.0" y="851.0" width="13.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (237 samples, 1.14%)</title><rect x="1033.0" y="835.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (237 samples, 1.14%)</title><rect x="1033.0" y="819.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.0" y="830.0"></text>
</g>
<g>
<title>__read (227 samples, 1.09%)</title><rect x="1033.5" y="803.0" width="12.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1036.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (202 samples, 0.97%)</title><rect x="1034.9" y="787.0" width="11.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (201 samples, 0.96%)</title><rect x="1035.0" y="771.0" width="11.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1038.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_read (193 samples, 0.93%)</title><rect x="1035.4" y="755.0" width="10.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1038.4" y="766.0"></text>
</g>
<g>
<title>ksys_read (193 samples, 0.93%)</title><rect x="1035.4" y="739.0" width="10.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1038.4" y="750.0"></text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.04%)</title><rect x="1035.4" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1038.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.04%)</title><rect x="1035.4" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.4" y="718.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.04%)</title><rect x="1035.4" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.4" y="702.0"></text>
</g>
<g>
<title>vfs_read (183 samples, 0.88%)</title><rect x="1035.9" y="723.0" width="10.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.9" y="734.0"></text>
</g>
<g>
<title>__vfs_read (165 samples, 0.79%)</title><rect x="1036.0" y="707.0" width="9.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1039.0" y="718.0"></text>
</g>
<g>
<title>new_sync_read (164 samples, 0.79%)</title><rect x="1036.1" y="691.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1039.1" y="702.0"></text>
</g>
<g>
<title>sock_read_iter (159 samples, 0.76%)</title><rect x="1036.4" y="675.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1039.4" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (159 samples, 0.76%)</title><rect x="1036.4" y="659.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1039.4" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (157 samples, 0.75%)</title><rect x="1036.4" y="643.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1039.4" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (156 samples, 0.75%)</title><rect x="1036.5" y="627.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1039.5" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.05%)</title><rect x="1037.2" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1040.2" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.05%)</title><rect x="1037.2" y="595.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1040.2" y="606.0"></text>
</g>
<g>
<title>simple_copy_to_iter (10 samples, 0.05%)</title><rect x="1037.2" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1040.2" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.04%)</title><rect x="1037.3" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1040.3" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.02%)</title><rect x="1037.5" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1040.5" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (130 samples, 0.62%)</title><rect x="1037.8" y="611.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1040.8" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (126 samples, 0.60%)</title><rect x="1038.0" y="595.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1041.0" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (125 samples, 0.60%)</title><rect x="1038.0" y="579.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1041.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.05%)</title><rect x="1038.1" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1041.1" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (112 samples, 0.54%)</title><rect x="1038.7" y="563.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1041.7" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (105 samples, 0.50%)</title><rect x="1039.0" y="547.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1042.0" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (102 samples, 0.49%)</title><rect x="1039.1" y="531.0" width="5.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1042.1" y="542.0"></text>
</g>
<g>
<title>ip_local_out (95 samples, 0.46%)</title><rect x="1039.3" y="515.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1042.3" y="526.0"></text>
</g>
<g>
<title>ip_output (93 samples, 0.45%)</title><rect x="1039.4" y="499.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.4" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (93 samples, 0.45%)</title><rect x="1039.4" y="483.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.4" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (91 samples, 0.44%)</title><rect x="1039.5" y="467.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1042.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (89 samples, 0.43%)</title><rect x="1039.6" y="451.0" width="5.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1042.6" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (76 samples, 0.36%)</title><rect x="1039.8" y="435.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1042.8" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (76 samples, 0.36%)</title><rect x="1039.8" y="419.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.8" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (76 samples, 0.36%)</title><rect x="1039.8" y="403.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1042.8" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (76 samples, 0.36%)</title><rect x="1039.8" y="387.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1042.8" y="398.0"></text>
</g>
<g>
<title>net_rx_action (71 samples, 0.34%)</title><rect x="1039.9" y="371.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1042.9" y="382.0"></text>
</g>
<g>
<title>process_backlog (71 samples, 0.34%)</title><rect x="1039.9" y="355.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1042.9" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (69 samples, 0.33%)</title><rect x="1039.9" y="339.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1042.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (69 samples, 0.33%)</title><rect x="1039.9" y="323.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1042.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv (63 samples, 0.30%)</title><rect x="1040.3" y="307.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (63 samples, 0.30%)</title><rect x="1040.3" y="291.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1043.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (62 samples, 0.30%)</title><rect x="1040.3" y="275.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1043.3" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (62 samples, 0.30%)</title><rect x="1040.3" y="259.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1043.3" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (61 samples, 0.29%)</title><rect x="1040.3" y="243.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (56 samples, 0.27%)</title><rect x="1040.6" y="227.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1043.6" y="238.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.02%)</title><rect x="1040.9" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (41 samples, 0.20%)</title><rect x="1041.4" y="211.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1044.4" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (36 samples, 0.17%)</title><rect x="1041.7" y="195.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1044.7" y="206.0"></text>
</g>
<g>
<title>tcp_ack (27 samples, 0.13%)</title><rect x="1042.0" y="179.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.0" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.08%)</title><rect x="1042.5" y="163.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1045.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.05%)</title><rect x="1042.7" y="147.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1045.7" y="158.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.04%)</title><rect x="1042.8" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.8" y="142.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.04%)</title><rect x="1042.8" y="115.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1045.8" y="126.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.03%)</title><rect x="1042.9" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1045.9" y="110.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.03%)</title><rect x="1042.9" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1045.9" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.05%)</title><rect x="1044.1" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.1" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.04%)</title><rect x="1044.1" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.1" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (15 samples, 0.07%)</title><rect x="1045.4" y="707.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1048.4" y="718.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.05%)</title><rect x="1045.7" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.7" y="702.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.02%)</title><rect x="1045.7" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1048.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.05%)</title><rect x="1046.4" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$362/539728284.accept (13 samples, 0.06%)</title><rect x="1047.1" y="1107.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.06%)</title><rect x="1047.2" y="1091.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/1080786945.run (12 samples, 0.06%)</title><rect x="1047.2" y="1075.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.06%)</title><rect x="1047.2" y="1059.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.06%)</title><rect x="1047.2" y="1043.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (5 samples, 0.02%)</title><rect x="1047.4" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancel (5 samples, 0.02%)</title><rect x="1047.4" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (29 samples, 0.14%)</title><rect x="1048.2" y="1123.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.08%)</title><rect x="1048.9" y="1107.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.9" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.05%)</title><rect x="1049.2" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.05%)</title><rect x="1049.2" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.05%)</title><rect x="1049.2" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (9 samples, 0.04%)</title><rect x="1049.2" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1052.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.03%)</title><rect x="1049.3" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.3" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.02%)</title><rect x="1049.3" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (113 samples, 0.54%)</title><rect x="1049.8" y="1123.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$268/2056775355.run (67 samples, 0.32%)</title><rect x="1049.8" y="1107.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (67 samples, 0.32%)</title><rect x="1049.8" y="1091.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.31%)</title><rect x="1050.0" y="1075.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (64 samples, 0.31%)</title><rect x="1050.0" y="1059.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (62 samples, 0.30%)</title><rect x="1050.1" y="1043.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (62 samples, 0.30%)</title><rect x="1050.1" y="1027.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$265/1939355275.run (60 samples, 0.29%)</title><rect x="1050.2" y="1011.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (59 samples, 0.28%)</title><rect x="1050.2" y="995.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (47 samples, 0.23%)</title><rect x="1050.3" y="979.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (34 samples, 0.16%)</title><rect x="1051.0" y="963.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (12 samples, 0.06%)</title><rect x="1051.0" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (12 samples, 0.06%)</title><rect x="1051.0" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (12 samples, 0.06%)</title><rect x="1051.0" y="915.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.04%)</title><rect x="1051.2" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9 samples, 0.04%)</title><rect x="1051.2" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (9 samples, 0.04%)</title><rect x="1051.2" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (9 samples, 0.04%)</title><rect x="1051.2" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.03%)</title><rect x="1051.3" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (22 samples, 0.11%)</title><rect x="1051.7" y="947.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.11%)</title><rect x="1051.7" y="931.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.10%)</title><rect x="1051.8" y="915.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.10%)</title><rect x="1051.8" y="899.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.10%)</title><rect x="1051.8" y="883.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.10%)</title><rect x="1051.8" y="867.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (17 samples, 0.08%)</title><rect x="1052.0" y="851.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.05%)</title><rect x="1052.3" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.05%)</title><rect x="1052.3" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.05%)</title><rect x="1052.3" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.05%)</title><rect x="1052.3" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.05%)</title><rect x="1052.3" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.05%)</title><rect x="1052.4" y="755.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1055.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="1052.6" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="1052.6" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1055.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.03%)</title><rect x="1052.6" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1055.6" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.03%)</title><rect x="1052.6" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1055.6" y="702.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.03%)</title><rect x="1052.6" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.6" y="686.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.03%)</title><rect x="1052.6" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1055.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.03%)</title><rect x="1052.6" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.03%)</title><rect x="1052.6" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1055.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (11 samples, 0.05%)</title><rect x="1053.0" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1056.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (11 samples, 0.05%)</title><rect x="1053.0" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.05%)</title><rect x="1053.0" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.05%)</title><rect x="1053.0" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.05%)</title><rect x="1053.0" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (11 samples, 0.05%)</title><rect x="1053.0" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (11 samples, 0.05%)</title><rect x="1053.0" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.0" y="894.0"></text>
</g>
<g>
<title>__read (10 samples, 0.05%)</title><rect x="1053.0" y="867.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1056.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1053.2" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1056.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1053.2" y="835.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1056.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_read (5 samples, 0.02%)</title><rect x="1053.3" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1056.3" y="830.0"></text>
</g>
<g>
<title>ksys_read (5 samples, 0.02%)</title><rect x="1053.3" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1056.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$275/596181081.run (46 samples, 0.22%)</title><rect x="1053.6" y="1107.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (46 samples, 0.22%)</title><rect x="1053.6" y="1091.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 0.20%)</title><rect x="1053.7" y="1075.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.20%)</title><rect x="1053.7" y="1059.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.20%)</title><rect x="1053.7" y="1043.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (35 samples, 0.17%)</title><rect x="1054.0" y="1027.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (32 samples, 0.15%)</title><rect x="1054.1" y="1011.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (32 samples, 0.15%)</title><rect x="1054.1" y="995.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (32 samples, 0.15%)</title><rect x="1054.1" y="979.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.15%)</title><rect x="1054.1" y="963.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1057.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.15%)</title><rect x="1054.1" y="947.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.12%)</title><rect x="1054.5" y="931.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1057.5" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.10%)</title><rect x="1054.7" y="915.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1057.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.10%)</title><rect x="1054.7" y="899.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1057.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.10%)</title><rect x="1054.8" y="883.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1057.8" y="894.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.10%)</title><rect x="1054.8" y="867.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1057.8" y="878.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.09%)</title><rect x="1054.8" y="851.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1057.8" y="862.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.08%)</title><rect x="1054.9" y="835.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1057.9" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.08%)</title><rect x="1054.9" y="819.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1057.9" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 0.08%)</title><rect x="1054.9" y="803.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1057.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (43 samples, 0.21%)</title><rect x="1056.2" y="1123.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1059.2" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.04%)</title><rect x="1056.2" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.2" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.04%)</title><rect x="1056.2" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (35 samples, 0.17%)</title><rect x="1056.7" y="1107.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.7" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.04%)</title><rect x="1057.7" y="1091.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1060.7" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.03%)</title><rect x="1057.8" y="1075.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1060.8" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.03%)</title><rect x="1057.8" y="1059.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.8" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.03%)</title><rect x="1057.8" y="1043.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (6 samples, 0.03%)</title><rect x="1058.8" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.8" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (6 samples, 0.03%)</title><rect x="1058.8" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (200 samples, 0.96%)</title><rect x="1059.2" y="1123.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.2" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (200 samples, 0.96%)</title><rect x="1059.2" y="1107.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (198 samples, 0.95%)</title><rect x="1059.2" y="1091.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.2" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (103 samples, 0.49%)</title><rect x="1059.3" y="1075.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.3" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (99 samples, 0.47%)</title><rect x="1059.5" y="1059.0" width="5.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1062.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 0.32%)</title><rect x="1061.3" y="1043.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1064.3" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.31%)</title><rect x="1061.4" y="1027.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1064.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 0.28%)</title><rect x="1061.8" y="1011.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.8" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (58 samples, 0.28%)</title><rect x="1061.8" y="995.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.8" y="1006.0"></text>
</g>
<g>
<title>ep_poll (52 samples, 0.25%)</title><rect x="1062.0" y="979.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.0" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (39 samples, 0.19%)</title><rect x="1062.1" y="963.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.1" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (37 samples, 0.18%)</title><rect x="1062.2" y="947.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1065.2" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (30 samples, 0.14%)</title><rect x="1062.5" y="931.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.5" y="942.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.09%)</title><rect x="1063.1" y="915.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.1" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.04%)</title><rect x="1064.3" y="963.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1067.3" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.03%)</title><rect x="1064.4" y="947.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1067.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (78 samples, 0.37%)</title><rect x="1065.1" y="1075.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1068.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.05%)</title><rect x="1065.1" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.05%)</title><rect x="1065.1" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (62 samples, 0.30%)</title><rect x="1065.7" y="1059.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (58 samples, 0.28%)</title><rect x="1065.9" y="1043.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.9" y="1054.0"></text>
</g>
<g>
<title>__read (53 samples, 0.25%)</title><rect x="1066.2" y="1027.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1069.2" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.17%)</title><rect x="1067.2" y="1011.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1070.2" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.17%)</title><rect x="1067.2" y="995.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.2" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (31 samples, 0.15%)</title><rect x="1067.4" y="979.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.4" y="990.0"></text>
</g>
<g>
<title>ksys_read (31 samples, 0.15%)</title><rect x="1067.4" y="963.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.4" y="974.0"></text>
</g>
<g>
<title>vfs_read (29 samples, 0.14%)</title><rect x="1067.5" y="947.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.5" y="958.0"></text>
</g>
<g>
<title>__vfs_read (26 samples, 0.12%)</title><rect x="1067.6" y="931.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1070.6" y="942.0"></text>
</g>
<g>
<title>new_sync_read (25 samples, 0.12%)</title><rect x="1067.6" y="915.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1070.6" y="926.0"></text>
</g>
<g>
<title>pipe_read (22 samples, 0.11%)</title><rect x="1067.7" y="899.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.7" y="910.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.05%)</title><rect x="1067.9" y="883.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1070.9" y="894.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.05%)</title><rect x="1067.9" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.9" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.04%)</title><rect x="1067.9" y="851.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.03%)</title><rect x="1069.2" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (7 samples, 0.03%)</title><rect x="1069.5" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.02%)</title><rect x="1070.0" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.02%)</title><rect x="1070.0" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.02%)</title><rect x="1070.0" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.02%)</title><rect x="1070.0" y="1027.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.02%)</title><rect x="1070.0" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (34 samples, 0.16%)</title><rect x="1070.6" y="1123.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.6" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (32 samples, 0.15%)</title><rect x="1070.7" y="1107.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.7" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (30 samples, 0.14%)</title><rect x="1070.7" y="1091.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1073.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (21 samples, 0.10%)</title><rect x="1070.7" y="1075.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.7" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (20 samples, 0.10%)</title><rect x="1070.8" y="1059.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1073.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="1071.2" y="1043.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1074.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="1071.2" y="1027.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1074.2" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.04%)</title><rect x="1071.4" y="1011.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1074.4" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 0.04%)</title><rect x="1071.4" y="995.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1074.4" y="1006.0"></text>
</g>
<g>
<title>ep_poll (8 samples, 0.04%)</title><rect x="1071.5" y="979.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1074.5" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.04%)</title><rect x="1071.5" y="963.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1074.5" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.03%)</title><rect x="1071.6" y="947.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.6" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (7 samples, 0.03%)</title><rect x="1071.9" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1074.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (5 samples, 0.02%)</title><rect x="1072.0" y="1059.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (13 samples, 0.06%)</title><rect x="1072.5" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (10 samples, 0.05%)</title><rect x="1072.6" y="1107.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (10 samples, 0.05%)</title><rect x="1072.6" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (15 samples, 0.07%)</title><rect x="1073.2" y="1123.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (14 samples, 0.07%)</title><rect x="1073.3" y="1107.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (14 samples, 0.07%)</title><rect x="1073.3" y="1091.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (690 samples, 3.31%)</title><rect x="1074.1" y="1139.0" width="39.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.1" y="1150.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.04%)</title><rect x="1074.6" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1077.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.04%)</title><rect x="1074.6" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.04%)</title><rect x="1074.6" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (155 samples, 0.74%)</title><rect x="1075.1" y="1123.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (151 samples, 0.72%)</title><rect x="1075.3" y="1107.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.3" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.02%)</title><rect x="1075.8" y="1091.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1078.8" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (137 samples, 0.66%)</title><rect x="1076.1" y="1091.0" width="7.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1079.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (107 samples, 0.51%)</title><rect x="1077.8" y="1075.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1080.8" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (106 samples, 0.51%)</title><rect x="1077.9" y="1059.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1080.9" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (101 samples, 0.48%)</title><rect x="1078.1" y="1043.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1081.1" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (101 samples, 0.48%)</title><rect x="1078.1" y="1027.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1081.1" y="1038.0"></text>
</g>
<g>
<title>ep_poll (88 samples, 0.42%)</title><rect x="1078.5" y="1011.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1081.5" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (68 samples, 0.33%)</title><rect x="1079.0" y="995.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1082.0" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (53 samples, 0.25%)</title><rect x="1079.7" y="979.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1082.7" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (38 samples, 0.18%)</title><rect x="1080.3" y="963.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.3" y="974.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.12%)</title><rect x="1080.9" y="947.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1083.9" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.03%)</title><rect x="1083.1" y="995.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1086.1" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.03%)</title><rect x="1083.1" y="979.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1086.1" y="990.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.03%)</title><rect x="1083.1" y="963.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1086.1" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.02%)</title><rect x="1083.2" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1086.2" y="958.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.03%)</title><rect x="1083.5" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1086.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (516 samples, 2.47%)</title><rect x="1083.8" y="1123.0" width="29.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.8" y="1134.0">on..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.05%)</title><rect x="1084.0" y="1107.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1087.0" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (9 samples, 0.04%)</title><rect x="1084.0" y="1091.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1087.0" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="1084.0" y="1075.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1087.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (503 samples, 2.41%)</title><rect x="1084.6" y="1107.0" width="28.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.6" y="1118.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (361 samples, 1.73%)</title><rect x="1084.6" y="1091.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (276 samples, 1.32%)</title><rect x="1087.2" y="1075.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (276 samples, 1.32%)</title><rect x="1087.2" y="1059.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.2" y="1070.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (260 samples, 1.25%)</title><rect x="1087.2" y="1043.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.08%)</title><rect x="1087.3" y="1027.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.02%)</title><rect x="1087.5" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.02%)</title><rect x="1087.5" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.entity (243 samples, 1.17%)</title><rect x="1088.2" y="1027.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewService.runExecutorService (178 samples, 0.85%)</title><rect x="1088.3" y="1011.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (173 samples, 0.83%)</title><rect x="1088.6" y="995.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (173 samples, 0.83%)</title><rect x="1088.6" y="979.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1091.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (162 samples, 0.78%)</title><rect x="1088.8" y="963.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.03%)</title><rect x="1088.9" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.03%)</title><rect x="1088.9" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.03%)</title><rect x="1088.9" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (152 samples, 0.73%)</title><rect x="1089.3" y="947.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (152 samples, 0.73%)</title><rect x="1089.3" y="931.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (152 samples, 0.73%)</title><rect x="1089.3" y="915.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (152 samples, 0.73%)</title><rect x="1089.3" y="899.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (152 samples, 0.73%)</title><rect x="1089.3" y="883.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.3" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.10%)</title><rect x="1089.5" y="867.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1092.5" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.03%)</title><rect x="1090.4" y="851.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1093.4" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (126 samples, 0.60%)</title><rect x="1090.8" y="867.0" width="7.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1093.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 0.51%)</title><rect x="1091.9" y="851.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 0.50%)</title><rect x="1092.0" y="835.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1095.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (97 samples, 0.47%)</title><rect x="1092.4" y="819.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1095.4" y="830.0"></text>
</g>
<g>
<title>do_futex (96 samples, 0.46%)</title><rect x="1092.4" y="803.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.4" y="814.0"></text>
</g>
<g>
<title>futex_wake (93 samples, 0.45%)</title><rect x="1092.4" y="787.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1095.4" y="798.0"></text>
</g>
<g>
<title>wake_up_q (77 samples, 0.37%)</title><rect x="1093.4" y="771.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1096.4" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (77 samples, 0.37%)</title><rect x="1093.4" y="755.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1096.4" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (76 samples, 0.36%)</title><rect x="1093.4" y="739.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1096.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.04%)</title><rect x="1097.9" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.04%)</title><rect x="1097.9" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/boriskin/NewTopology.all (63 samples, 0.30%)</title><rect x="1098.4" y="1011.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.4" y="1022.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (63 samples, 0.30%)</title><rect x="1098.4" y="995.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.4" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.04%)</title><rect x="1098.4" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (46 samples, 0.22%)</title><rect x="1098.9" y="979.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.9" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (42 samples, 0.20%)</title><rect x="1099.1" y="963.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.add (28 samples, 0.13%)</title><rect x="1099.2" y="947.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.put (26 samples, 0.12%)</title><rect x="1099.3" y="931.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (25 samples, 0.12%)</title><rect x="1099.4" y="915.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.03%)</title><rect x="1099.6" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (7 samples, 0.03%)</title><rect x="1100.4" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1103.4" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (7 samples, 0.03%)</title><rect x="1100.8" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.8" y="958.0"></text>
</g>
<g>
<title>java/util/Set.of (8 samples, 0.04%)</title><rect x="1101.5" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (14 samples, 0.07%)</title><rect x="1102.0" y="1043.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.07%)</title><rect x="1102.0" y="1027.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (13 samples, 0.06%)</title><rect x="1102.0" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1105.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (13 samples, 0.06%)</title><rect x="1102.0" y="995.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (13 samples, 0.06%)</title><rect x="1102.0" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.0" y="990.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (6 samples, 0.03%)</title><rect x="1102.4" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.4" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.06%)</title><rect x="1102.9" y="1075.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1103.0" y="1059.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.04%)</title><rect x="1103.0" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.04%)</title><rect x="1103.0" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.04%)</title><rect x="1103.0" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.05%)</title><rect x="1103.6" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.03%)</title><rect x="1103.8" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.03%)</title><rect x="1103.8" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.07%)</title><rect x="1104.2" y="1075.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.07%)</title><rect x="1104.2" y="1059.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1104.7" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1104.7" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.03%)</title><rect x="1104.7" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.7" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.02%)</title><rect x="1104.7" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.7" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.02%)</title><rect x="1104.7" y="979.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1107.7" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.02%)</title><rect x="1104.7" y="963.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (140 samples, 0.67%)</title><rect x="1105.1" y="1091.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (138 samples, 0.66%)</title><rect x="1105.2" y="1075.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.2" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (25 samples, 0.12%)</title><rect x="1105.3" y="1059.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1108.3" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.06%)</title><rect x="1105.7" y="1043.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1108.7" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.04%)</title><rect x="1106.0" y="1027.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1109.0" y="1038.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (5 samples, 0.02%)</title><rect x="1106.4" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1109.4" y="1054.0"></text>
</g>
<g>
<title>recv (108 samples, 0.52%)</title><rect x="1106.9" y="1059.0" width="6.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1109.9" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 0.42%)</title><rect x="1108.1" y="1043.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 0.42%)</title><rect x="1108.1" y="1027.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (82 samples, 0.39%)</title><rect x="1108.4" y="1011.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.4" y="1022.0"></text>
</g>
<g>
<title>__sys_recvfrom (80 samples, 0.38%)</title><rect x="1108.4" y="995.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1111.4" y="1006.0"></text>
</g>
<g>
<title>sock_recvmsg (72 samples, 0.35%)</title><rect x="1108.5" y="979.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1111.5" y="990.0"></text>
</g>
<g>
<title>inet6_recvmsg (67 samples, 0.32%)</title><rect x="1108.6" y="963.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1111.6" y="974.0"></text>
</g>
<g>
<title>tcp_recvmsg (62 samples, 0.30%)</title><rect x="1108.9" y="947.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1111.9" y="958.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.03%)</title><rect x="1109.1" y="931.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1112.1" y="942.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.03%)</title><rect x="1109.2" y="915.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.2" y="926.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.05%)</title><rect x="1109.7" y="931.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1112.7" y="942.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.05%)</title><rect x="1109.8" y="915.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1112.8" y="926.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.04%)</title><rect x="1109.8" y="899.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1112.8" y="910.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.04%)</title><rect x="1109.9" y="883.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.9" y="894.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.03%)</title><rect x="1109.9" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.9" y="878.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (35 samples, 0.17%)</title><rect x="1110.3" y="931.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1113.3" y="942.0"></text>
</g>
<g>
<title>tcp_send_ack (34 samples, 0.16%)</title><rect x="1110.4" y="915.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1113.4" y="926.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (34 samples, 0.16%)</title><rect x="1110.4" y="899.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1113.4" y="910.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (31 samples, 0.15%)</title><rect x="1110.6" y="883.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1113.6" y="894.0"></text>
</g>
<g>
<title>ip_queue_xmit (30 samples, 0.14%)</title><rect x="1110.6" y="867.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1113.6" y="878.0"></text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 0.14%)</title><rect x="1110.6" y="851.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1113.6" y="862.0"></text>
</g>
<g>
<title>ip_local_out (29 samples, 0.14%)</title><rect x="1110.7" y="835.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.7" y="846.0"></text>
</g>
<g>
<title>ip_output (29 samples, 0.14%)</title><rect x="1110.7" y="819.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1113.7" y="830.0"></text>
</g>
<g>
<title>ip_finish_output (29 samples, 0.14%)</title><rect x="1110.7" y="803.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1113.7" y="814.0"></text>
</g>
<g>
<title>__ip_finish_output (28 samples, 0.13%)</title><rect x="1110.7" y="787.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1113.7" y="798.0"></text>
</g>
<g>
<title>ip_finish_output2 (28 samples, 0.13%)</title><rect x="1110.7" y="771.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1113.7" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 0.11%)</title><rect x="1110.7" y="755.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1113.7" y="766.0"></text>
</g>
<g>
<title>do_softirq.part.0 (22 samples, 0.11%)</title><rect x="1110.7" y="739.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.7" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (22 samples, 0.11%)</title><rect x="1110.7" y="723.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1113.7" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (22 samples, 0.11%)</title><rect x="1110.7" y="707.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1113.7" y="718.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 0.11%)</title><rect x="1110.7" y="691.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1113.7" y="702.0"></text>
</g>
<g>
<title>process_backlog (21 samples, 0.10%)</title><rect x="1110.8" y="675.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1113.8" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (21 samples, 0.10%)</title><rect x="1110.8" y="659.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1113.8" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (21 samples, 0.10%)</title><rect x="1110.8" y="643.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1113.8" y="654.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 0.10%)</title><rect x="1110.8" y="627.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.8" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (17 samples, 0.08%)</title><rect x="1111.0" y="611.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1114.0" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (17 samples, 0.08%)</title><rect x="1111.0" y="595.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1114.0" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 0.08%)</title><rect x="1111.0" y="579.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1114.0" y="590.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 0.08%)</title><rect x="1111.0" y="563.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1114.0" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 0.08%)</title><rect x="1111.0" y="547.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1114.0" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (15 samples, 0.07%)</title><rect x="1111.1" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.1" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.06%)</title><rect x="1111.2" y="515.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1114.2" y="526.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.02%)</title><rect x="1111.3" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1114.3" y="510.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.02%)</title><rect x="1112.0" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.0" y="766.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.02%)</title><rect x="1112.0" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1115.0" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="1112.6" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.6" y="990.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.02%)</title><rect x="1112.6" y="963.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1115.6" y="974.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.02%)</title><rect x="1112.6" y="947.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.6" y="958.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.02%)</title><rect x="1112.6" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1115.6" y="942.0"></text>
</g>
<g>
<title>start_thread (1,359 samples, 6.52%)</title><rect x="1113.1" y="1139.0" width="76.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1116.1" y="1150.0">start_th..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,359 samples, 6.52%)</title><rect x="1113.1" y="1123.0" width="76.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1116.1" y="1134.0">thread_n..</text>
</g>
<g>
<title>Thread::call_run() (1,359 samples, 6.52%)</title><rect x="1113.1" y="1107.0" width="76.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1116.1" y="1118.0">Thread::..</text>
</g>
<g>
<title>GangWorker::loop() (1,046 samples, 5.02%)</title><rect x="1113.1" y="1091.0" width="59.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1116.1" y="1102.0">GangWo..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1,018 samples, 4.88%)</title><rect x="1113.3" y="1075.0" width="57.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.3" y="1086.0">G1ParT..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (465 samples, 2.23%)</title><rect x="1113.4" y="1059.0" width="26.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.4" y="1070.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.02%)</title><rect x="1114.1" y="1043.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.1" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (133 samples, 0.64%)</title><rect x="1114.4" y="1043.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1117.4" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.02%)</title><rect x="1117.1" y="1027.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1120.1" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (77 samples, 0.37%)</title><rect x="1117.4" y="1027.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.4" y="1038.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (30 samples, 0.14%)</title><rect x="1120.0" y="1011.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.0" y="1022.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (17 samples, 0.08%)</title><rect x="1121.9" y="1043.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.9" y="1054.0"></text>
</g>
<g>
<title>SpinPause (297 samples, 1.42%)</title><rect x="1122.9" y="1043.0" width="16.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1125.9" y="1054.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (472 samples, 2.26%)</title><rect x="1139.8" y="1059.0" width="26.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1142.8" y="1070.0">G..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (472 samples, 2.26%)</title><rect x="1139.8" y="1043.0" width="26.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.8" y="1054.0">G..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (470 samples, 2.25%)</title><rect x="1139.8" y="1027.0" width="26.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.8" y="1038.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (470 samples, 2.25%)</title><rect x="1139.8" y="1011.0" width="26.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.8" y="1022.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (463 samples, 2.22%)</title><rect x="1140.1" y="995.0" width="26.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.1" y="1006.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (212 samples, 1.02%)</title><rect x="1140.6" y="979.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.6" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (131 samples, 0.63%)</title><rect x="1145.0" y="963.0" width="7.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.0" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (61 samples, 0.29%)</title><rect x="1148.7" y="947.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.7" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.02%)</title><rect x="1152.1" y="947.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.1" y="958.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (243 samples, 1.17%)</title><rect x="1152.6" y="979.0" width="13.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.6" y="990.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (224 samples, 1.07%)</title><rect x="1152.7" y="963.0" width="12.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.7" y="974.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (27 samples, 0.13%)</title><rect x="1156.3" y="947.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.3" y="958.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (15 samples, 0.07%)</title><rect x="1157.0" y="931.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.0" y="942.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (8 samples, 0.04%)</title><rect x="1158.0" y="947.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.0" y="958.0"></text>
</g>
<g>
<title>oopDesc::size() (8 samples, 0.04%)</title><rect x="1158.8" y="947.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.8" y="958.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (56 samples, 0.27%)</title><rect x="1159.4" y="947.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.4" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (6 samples, 0.03%)</title><rect x="1162.6" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.6" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (41 samples, 0.20%)</title><rect x="1162.9" y="947.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.9" y="958.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (8 samples, 0.04%)</title><rect x="1165.5" y="963.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.5" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (7 samples, 0.03%)</title><rect x="1166.0" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.0" y="974.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.02%)</title><rect x="1166.5" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.5" y="1070.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (70 samples, 0.34%)</title><rect x="1166.8" y="1059.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.8" y="1070.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (7 samples, 0.03%)</title><rect x="1166.8" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.8" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (55 samples, 0.26%)</title><rect x="1167.3" y="1043.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.3" y="1054.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (5 samples, 0.02%)</title><rect x="1167.3" y="1027.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.3" y="1038.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (50 samples, 0.24%)</title><rect x="1167.6" y="1027.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.6" y="1038.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (44 samples, 0.21%)</title><rect x="1167.9" y="1011.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.9" y="1022.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (7 samples, 0.03%)</title><rect x="1167.9" y="995.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.9" y="1006.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (7 samples, 0.03%)</title><rect x="1167.9" y="979.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.9" y="990.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (15 samples, 0.07%)</title><rect x="1168.3" y="995.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.3" y="1006.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (12 samples, 0.06%)</title><rect x="1168.4" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.4" y="990.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (5 samples, 0.02%)</title><rect x="1168.4" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.4" y="974.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (5 samples, 0.02%)</title><rect x="1169.3" y="995.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.3" y="1006.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.03%)</title><rect x="1169.6" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.6" y="1006.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (9 samples, 0.04%)</title><rect x="1169.9" y="995.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.9" y="1006.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (5 samples, 0.02%)</title><rect x="1170.5" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.5" y="1054.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (19 samples, 0.09%)</title><rect x="1171.1" y="1075.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.1" y="1086.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (18 samples, 0.09%)</title><rect x="1171.2" y="1059.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.2" y="1070.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (13 samples, 0.06%)</title><rect x="1171.2" y="1043.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.2" y="1054.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (13 samples, 0.06%)</title><rect x="1171.2" y="1027.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.2" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (248 samples, 1.19%)</title><rect x="1172.3" y="1091.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.3" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (244 samples, 1.17%)</title><rect x="1172.3" y="1075.0" width="13.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (244 samples, 1.17%)</title><rect x="1172.3" y="1059.0" width="13.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.3" y="1070.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (240 samples, 1.15%)</title><rect x="1172.3" y="1043.0" width="13.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="1054.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (240 samples, 1.15%)</title><rect x="1172.3" y="1027.0" width="13.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.3" y="1038.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (158 samples, 0.76%)</title><rect x="1172.3" y="1011.0" width="8.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.3" y="1022.0"></text>
</g>
<g>
<title>Compile::Output() (7 samples, 0.03%)</title><rect x="1172.3" y="995.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="1006.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (5 samples, 0.02%)</title><rect x="1172.3" y="979.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.3" y="990.0"></text>
</g>
<g>
<title>Matcher::match() (8 samples, 0.04%)</title><rect x="1173.0" y="995.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.0" y="1006.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.02%)</title><rect x="1173.1" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.1" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (18 samples, 0.09%)</title><rect x="1173.4" y="995.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.4" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (18 samples, 0.09%)</title><rect x="1173.4" y="979.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.4" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (5 samples, 0.02%)</title><rect x="1173.4" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.4" y="974.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.02%)</title><rect x="1174.1" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.1" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (119 samples, 0.57%)</title><rect x="1174.5" y="995.0" width="6.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.5" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (6 samples, 0.03%)</title><rect x="1175.1" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.1" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (10 samples, 0.05%)</title><rect x="1175.4" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.4" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (34 samples, 0.16%)</title><rect x="1176.0" y="979.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.0" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (13 samples, 0.06%)</title><rect x="1176.7" y="963.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.7" y="974.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.03%)</title><rect x="1177.1" y="947.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.1" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (8 samples, 0.04%)</title><rect x="1177.4" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.4" y="974.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (5 samples, 0.02%)</title><rect x="1177.6" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.6" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (10 samples, 0.05%)</title><rect x="1178.0" y="979.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.0" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (19 samples, 0.09%)</title><rect x="1178.9" y="979.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.9" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (9 samples, 0.04%)</title><rect x="1179.4" y="963.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.4" y="974.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (5 samples, 0.02%)</title><rect x="1180.0" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.0" y="990.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (7 samples, 0.03%)</title><rect x="1180.7" y="979.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.7" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (57 samples, 0.27%)</title><rect x="1181.2" y="1011.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="1022.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (14 samples, 0.07%)</title><rect x="1181.2" y="995.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (13 samples, 0.06%)</title><rect x="1181.3" y="979.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.3" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (24 samples, 0.12%)</title><rect x="1182.1" y="995.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.02%)</title><rect x="1182.8" y="979.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.8" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.03%)</title><rect x="1183.0" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.0" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.02%)</title><rect x="1183.2" y="963.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.2" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (11 samples, 0.05%)</title><rect x="1183.5" y="995.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.5" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (11 samples, 0.05%)</title><rect x="1183.5" y="979.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.5" y="990.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (5 samples, 0.02%)</title><rect x="1184.1" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.02%)</title><rect x="1184.1" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.1" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.02%)</title><rect x="1184.1" y="963.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.1" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (22 samples, 0.11%)</title><rect x="1184.5" y="1011.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.5" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (22 samples, 0.11%)</title><rect x="1184.5" y="995.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (22 samples, 0.11%)</title><rect x="1184.5" y="979.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (22 samples, 0.11%)</title><rect x="1184.5" y="963.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.11%)</title><rect x="1184.5" y="947.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (21 samples, 0.10%)</title><rect x="1184.5" y="931.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.5" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.09%)</title><rect x="1184.6" y="915.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.09%)</title><rect x="1184.6" y="899.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 0.09%)</title><rect x="1184.6" y="883.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 0.09%)</title><rect x="1184.6" y="867.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 0.09%)</title><rect x="1184.6" y="851.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.09%)</title><rect x="1184.6" y="835.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.6" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.07%)</title><rect x="1184.6" y="819.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.07%)</title><rect x="1184.6" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.06%)</title><rect x="1184.7" y="787.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.06%)</title><rect x="1184.7" y="771.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.06%)</title><rect x="1184.7" y="755.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.06%)</title><rect x="1184.7" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.7" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.04%)</title><rect x="1184.7" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.7" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.04%)</title><rect x="1184.7" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.04%)</title><rect x="1184.7" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.04%)</title><rect x="1184.7" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.04%)</title><rect x="1184.7" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.04%)</title><rect x="1184.7" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.7" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.03%)</title><rect x="1184.7" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.03%)</title><rect x="1184.7" y="611.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.03%)</title><rect x="1184.7" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.03%)</title><rect x="1184.7" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.03%)</title><rect x="1184.7" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.02%)</title><rect x="1184.7" y="547.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.7" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.02%)</title><rect x="1184.7" y="531.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.7" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.02%)</title><rect x="1184.7" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.02%)</title><rect x="1184.7" y="499.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.02%)</title><rect x="1184.7" y="483.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.7" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.02%)</title><rect x="1184.7" y="467.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.7" y="478.0"></text>
</g>
<g>
<title>VMThread::run() (65 samples, 0.31%)</title><rect x="1186.3" y="1091.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.3" y="1102.0"></text>
</g>
<g>
<title>VMThread::loop() (65 samples, 0.31%)</title><rect x="1186.3" y="1075.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.3" y="1086.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (24 samples, 0.12%)</title><rect x="1186.4" y="1059.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="1070.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (21 samples, 0.10%)</title><rect x="1187.8" y="1059.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="1070.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (21 samples, 0.10%)</title><rect x="1187.8" y="1043.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="1054.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (20 samples, 0.10%)</title><rect x="1187.9" y="1027.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (18 samples, 0.09%)</title><rect x="1187.9" y="1011.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (7 samples, 0.03%)</title><rect x="1188.2" y="995.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.2" y="1006.0"></text>
</g>
<g>
<title>__sched_yield (17 samples, 0.08%)</title><rect x="1189.0" y="1059.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="1189.5" y="1043.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="1189.5" y="1027.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.5" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (5 samples, 0.02%)</title><rect x="1189.7" y="1011.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.7" y="1022.0"></text>
</g>
<g>
<title>do_sched_yield (5 samples, 0.02%)</title><rect x="1189.7" y="995.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.7" y="1006.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.02%)</title><rect x="1189.7" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1192.7" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.02%)</title><rect x="1189.7" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.7" y="974.0"></text>
</g>
</g>
</svg>
